Search.setIndex({"alltitles": {"1. Resample to a new cellsize": [[413, "resample-to-a-new-cellsize"]], "1D Solute Transport Benchmarks": [[401, null]], "2. Only reproject": [[413, "only-reproject"]], "3. Reproject and resample to a specific domain": [[413, "reproject-and-resample-to-a-specific-domain"]], "A bit of background": [[429, "a-bit-of-background"]], "A note on regridding conductivity": [[439, "a-note-on-regridding-conductivity"]], "A note on regridding transport": [[439, "a-note-on-regridding-transport"]], "API Reference": [[361, null]], "Add flow model to simulation": [[398, "add-flow-model-to-simulation"]], "Add transport model to simulation": [[398, "add-transport-model-to-simulation"]], "Added": [[0, "added"], [0, "id2"], [0, "id8"], [0, "id11"], [0, "id15"], [0, "id19"], [0, "id23"], [0, "id28"], [0, "id36"], [0, "id41"], [0, "id48"], [0, "id52"], [0, "id54"], [0, "id57"], [0, "id60"], [0, "id64"], [0, "id69"], [0, "id73"], [0, "id78"], [0, "id83"], [0, "id87"], [0, "id90"], [0, "id94"], [0, "id97"], [0, "id100"], [0, "id104"], [0, "id115"]], "Adding information to the CHD package": [[403, "adding-information-to-the-chd-package"]], "Adding information to the DIS package": [[403, "adding-information-to-the-dis-package"]], "Adding information to the DRN package": [[403, "adding-information-to-the-drn-package"]], "Adding information to the IC package": [[403, "adding-information-to-the-ic-package"]], "Adding information to the NPF package": [[403, "adding-information-to-the-npf-package"]], "Adding information to the OC package": [[403, "adding-information-to-the-oc-package"]], "Adding information to the RCH package": [[403, "adding-information-to-the-rch-package"]], "Adding information to the RIV package": [[403, "adding-information-to-the-riv-package"]], "Adding information to the STO package": [[403, "adding-information-to-the-sto-package"]], "Allocate river cells": [[440, "allocate-river-cells"]], "Anaconda, Miniconda, Miniforge": [[429, "anaconda-miniconda-miniforge"]], "Arithmetic": [[421, "arithmetic"], [422, "arithmetic"]], "Assign coordinates to output": [[398, "assign-coordinates-to-output"]], "Assign dates to head": [[403, "assign-dates-to-head"]], "Assign time discretization": [[403, "assign-time-discretization"]], "Attach the model information to a simulation": [[403, "attach-the-model-information-to-a-simulation"]], "Automated testing": [[373, "automated-testing"]], "Basics": [[438, "basics"]], "Boundary Conditions": [[379, "boundary-conditions"], [380, "boundary-conditions"], [382, "boundary-conditions"], [383, "boundary-conditions"], [384, "boundary-conditions"], [438, "boundary-conditions"]], "Boundary conditions": [[387, "boundary-conditions"]], "Build": [[379, "build"], [380, "build"], [381, "build"], [382, "build"], [383, "build"], [384, "build"], [387, "build"]], "Building documentation and examples": [[375, null]], "Buoyancy": [[398, "buoyancy"]], "Calculating flow velocity": [[415, "calculating-flow-velocity"]], "Change cellsize (and extent)": [[421, "change-cellsize-and-extent"], [422, "change-cellsize-and-extent"]], "Change time resolution": [[421, "change-time-resolution"], [422, "change-time-resolution"]], "Changed": [[0, "changed"], [0, "id4"], [0, "id7"], [0, "id12"], [0, "id16"], [0, "id21"], [0, "id24"], [0, "id31"], [0, "id35"], [0, "id37"], [0, "id40"], [0, "id44"], [0, "id47"], [0, "id50"], [0, "id62"], [0, "id68"], [0, "id72"], [0, "id79"], [0, "id82"], [0, "id86"], [0, "id91"], [0, "id95"], [0, "id101"], [0, "id109"], [0, "id114"]], "Changelog": [[0, null]], "Chunk size and memory layout": [[437, "chunk-size-and-memory-layout"]], "Circle": [[396, null]], "Circle partitioned": [[397, null]], "Cleaning data without a MODFLOW6 simulation": [[441, "cleaning-data-without-a-modflow6-simulation"]], "Code review": [[373, "code-review"]], "Code style": [[373, "code-style"]], "Comparison with histograms": [[439, "comparison-with-histograms"]], "Computation times": [[386, null], [389, null], [394, null], [407, null], [414, null], [418, null], [432, null], [443, null]], "Conditional evaluation": [[421, "conditional-evaluation"], [422, "conditional-evaluation"]], "Constant head edge": [[403, "constant-head-edge"]], "Constant head package - CHD": [[403, "constant-head-package-chd"]], "Contributing Code": [[373, null]], "Conversion to raster": [[434, "conversion-to-raster"]], "Convert structured data to UGRID netCDF": [[420, "convert-structured-data-to-ugrid-netcdf"], [421, "convert-structured-data-to-ugrid-netcdf"]], "Coordinate reference systems (CRS)": [[433, "coordinate-reference-systems-crs"]], "Coupled MetaSWAP - Modflow6 model": [[392, null]], "Create DataArrays": [[400, "create-dataarrays"], [406, "create-dataarrays"]], "Create UgridDataArray": [[396, "create-ugriddataarray"]], "Create a mesh": [[396, "create-a-mesh"], [398, "create-a-mesh"]], "Create an empty raster": [[421, "create-an-empty-raster"], [422, "create-an-empty-raster"]], "Create grid coordinates": [[400, "create-grid-coordinates"], [406, "create-grid-coordinates"]], "Create the container": [[372, "create-the-container"]], "Creating an example file": [[393, "creating-an-example-file"]], "Data In/Out": [[420, null], [421, "data-in-out"]], "Data cleanup": [[441, null]], "Data modification": [[421, "data-modification"], [422, null]], "Data structures": [[419, "data-structures"]], "Debugging Continuous Integration": [[372, null]], "Delayed computation and (i)MODFLOW files": [[437, "delayed-computation-and-i-modflow-files"]], "Dependencies": [[419, "dependencies"], [431, "dependencies"]], "Dependency conflicts": [[429, "dependency-conflicts"]], "Deprecated": [[0, "deprecated"], [0, "id108"], [0, "id113"]], "Developing": [[377, null]], "Developing examples": [[376, null]], "Different ways to regrid models": [[399, null]], "Discretization": [[365, "discretization"], [379, "discretization"], [380, "discretization"], [381, "discretization"], [382, "discretization"], [384, "discretization"], [387, "discretization"]], "Distribute conductance": [[440, "distribute-conductance"]], "Docker build image": [[374, null]], "Dockerfile": [[374, "dockerfile"]], "Drainage package - DRN": [[403, "drainage-package-drn"]], "Elder": [[379, null]], "Evaluate model output": [[1, null]], "Example data": [[440, "example-data"]], "Example models": [[402, null]], "Examples": [[390, null]], "Experienced": [[431, "experienced"]], "Extract head at points": [[403, "extract-head-at-points"]], "FAQ": [[426, null]], "Files": [[425, "files"]], "Fill/Interpolate nodata": [[421, "fill-interpolate-nodata"], [421, "id3"], [422, "fill-interpolate-nodata"], [424, "fill-interpolate-nodata"]], "Fixed": [[0, "fixed"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id13"], [0, "id17"], [0, "id20"], [0, "id25"], [0, "id27"], [0, "id30"], [0, "id34"], [0, "id39"], [0, "id45"], [0, "id51"], [0, "id55"], [0, "id58"], [0, "id61"], [0, "id65"], [0, "id67"], [0, "id71"], [0, "id75"], [0, "id77"], [0, "id84"], [0, "id88"], [0, "id92"], [0, "id98"], [0, "id105"], [0, "id110"], [0, "id116"]], "Flow": [[371, "flow"]], "Flow Packages": [[365, "flow-packages"]], "Flow velocities and streamlines": [[415, null]], "Force loading into memory / dask array to numpy array": [[421, "force-loading-into-memory-dask-array-to-numpy-array"], [422, "force-loading-into-memory-dask-array-to-numpy-array"]], "Freshwater Lens": [[380, null]], "Freshwater lens (circle)": [[398, null]], "General": [[428, "general"]], "General Questions": [[419, null]], "Generate a mesh": [[421, "generate-a-mesh"], [424, "generate-a-mesh"]], "Get a single value (e.g. a summary statistic)": [[421, "get-a-single-value-e-g-a-summary-statistic"], [422, "get-a-single-value-e-g-a-summary-statistic"]], "Grid": [[2, "grid"]], "Groundwater Modeling with iMOD": [[428, null]], "Head point interpolation": [[410, null]], "Henry": [[381, null], [395, null]], "Horizontal Flow Barrier": [[387, "horizontal-flow-barrier"]], "How do I \u2026": [[421, null]], "How is imod-python different from FloPy?": [[419, "how-is-imod-python-different-from-flopy"]], "How to build": [[374, "how-to-build"]], "How to release a new version": [[378, null]], "Hydraulic conductivity": [[403, "hydraulic-conductivity"]], "Hydrocoin": [[382, null]], "Hydrogeology": [[382, "hydrogeology"], [387, "hydrogeology"]], "If-then-else": [[421, "if-then-else"], [422, "if-then-else"]], "Import IDF file": [[420, "import-idf-file"], [421, "import-idf-file"]], "Import IPF file": [[420, "import-ipf-file"], [421, "import-ipf-file"]], "Import a single netCDF variable as DataArray": [[420, "import-a-single-netcdf-variable-as-dataarray"], [421, "import-a-single-netcdf-variable-as-dataarray"]], "Import drainage information": [[403, "import-drainage-information"]], "Import heads results": [[403, "import-heads-results"]], "Import multiple IDF files": [[420, "import-multiple-idf-files"], [421, "import-multiple-idf-files"]], "Import netCDF file as Dataset": [[420, "import-netcdf-file-as-dataset"], [421, "import-netcdf-file-as-dataset"]], "Import river information": [[403, "import-river-information"]], "Increase the extent of a raster": [[421, "increase-the-extent-of-a-raster"], [422, "increase-the-extent-of-a-raster"]], "Initial Conditions": [[379, "initial-conditions"], [380, "initial-conditions"], [383, "initial-conditions"], [384, "initial-conditions"]], "Initial conditions": [[382, "initial-conditions"], [387, "initial-conditions"]], "Initial conditions package - IC": [[403, "initial-conditions-package-ic"]], "Input and output": [[433, "input-and-output"], [434, "input-and-output"]], "Input/output": [[362, null]], "Install beta release": [[431, "install-beta-release"]], "Installing": [[431, null]], "Installing Python and packages": [[429, null]], "Installing Python packages \u2013 without the agonizing pain": [[429, "installing-python-packages-without-the-agonizing-pain"]], "Installing a development version of iMOD Python": [[429, "installing-a-development-version-of-imod-python"]], "Installing the latest development version": [[431, "installing-the-latest-development-version"]], "Installing with Deltaforge": [[431, "installing-with-deltaforge"]], "Installing with conda": [[431, "installing-with-conda"]], "Installing with pip": [[431, "installing-with-pip"]], "Installing with pixi": [[431, "installing-with-pixi"]], "Known Issues": [[427, null]], "Known issues": [[425, "known-issues"]], "Lake package example": [[406, null]], "Large data": [[419, "large-data"]], "Lazy evaluation": [[437, null]], "Load data": [[403, "load-data"]], "Logging": [[363, null]], "MODFLOW6": [[365, null], [405, null], [425, "modflow6"], [428, "modflow6"]], "MODFLOW6 package": [[440, "modflow6-package"]], "Make data readable by QGIS": [[420, "make-data-readable-by-qgis"], [421, "make-data-readable-by-qgis"]], "MetaMod": [[364, null]], "MetaSWAP": [[366, null], [391, null], [425, "metaswap"]], "Model": [[2, "model"], [371, "model"]], "Model Creation": [[387, null]], "Model objects & methods": [[365, "model-objects-methods"]], "Model settings": [[365, "model-settings"]], "Model simulation": [[403, "model-simulation"]], "Model time discretization": [[438, null]], "Modflow 6 versions": [[427, "modflow-6-versions"]], "More dimensions": [[433, "more-dimensions"]], "New": [[431, "new"]], "Node property flow package - NPF": [[403, "node-property-flow-package-npf"]], "Notes": [[425, "notes"]], "Obtain the image": [[372, "obtain-the-image"]], "Obtaining the final (i)domain": [[439, "obtaining-the-final-i-domain"]], "Open the results": [[395, "open-the-results"], [396, "open-the-results"], [398, "open-the-results"], [400, "open-the-results"], [406, "open-the-results"]], "Other raster formats": [[433, "other-raster-formats"]], "Output Control package - OC": [[403, "output-control-package-oc"]], "Overview allocation options": [[440, "overview-allocation-options"]], "Packages": [[2, "packages"]], "Parameters": [[398, "parameters"]], "Partitioning a regional model": [[404, null]], "Periodic central ditch": [[387, "periodic-central-ditch"]], "Pitfalls": [[437, "pitfalls"]], "Plot a timeseries for a single cell": [[421, "plot-a-timeseries-for-a-single-cell"], [421, "id1"], [423, null], [424, "plot-a-timeseries-for-a-single-cell"]], "Plot head of one layer at one time": [[421, "plot-head-of-one-layer-at-one-time"], [421, "id2"], [423, "plot-head-of-one-layer-at-one-time"], [424, "plot-head-of-one-layer-at-one-time"]], "Plot maps": [[417, null]], "Polygonize raster": [[411, null]], "Postprocessing": [[425, "postprocessing"]], "Prepare": [[409, null]], "Prepare model input": [[367, null]], "Pushing the image": [[374, "pushing-the-image"]], "Python versions": [[427, "python-versions"]], "Quiver plot": [[415, "quiver-plot"]], "Raster data and xarray": [[433, null]], "Rasterize polygon data": [[421, "rasterize-polygon-data"], [422, "rasterize-polygon-data"]], "Rasterize shapefiles": [[412, null]], "Read Output": [[365, "read-output"]], "Reading existing MetaSWAP input": [[393, null]], "Reading the .inp file": [[393, "reading-the-inp-file"]], "Recharge": [[398, "recharge"], [403, "recharge"]], "Recharge - Steady state": [[403, "recharge-steady-state"]], "Recharge - Transient": [[403, "recharge-transient"]], "Regional model": [[403, null]], "Regrid": [[365, "regrid"]], "Regrid Method Settings": [[365, "regrid-method-settings"]], "Regridding": [[439, null]], "Regridding boundary conditions": [[439, "regridding-boundary-conditions"]], "Regridding using default methods": [[439, "regridding-using-default-methods"]], "Regridding using non-default methods": [[439, "regridding-using-non-default-methods"]], "Regular install": [[431, "regular-install"]], "Removed": [[0, "removed"], [0, "id42"], [0, "id80"], [0, "id102"], [0, "id107"], [0, "id112"]], "Reporting bugs": [[377, "reporting-bugs"]], "Reproject data": [[413, null]], "Reproject points": [[413, "reproject-points"]], "Reproject raster dataset": [[413, "reproject-raster-dataset"]], "Reproject vector dataset": [[413, "reproject-vector-dataset"]], "Results visualization": [[403, "results-visualization"]], "Rising outer ditches": [[387, "rising-outer-ditches"]], "River package - RIV": [[403, "river-package-riv"]], "Run": [[379, "run"], [380, "run"], [381, "run"], [382, "run"], [383, "run"], [384, "run"], [387, "run"]], "Run the model": [[395, "run-the-model"], [396, "run-the-model"], [398, "run-the-model"], [400, "run-the-model"], [403, "run-the-model"], [406, "run-the-model"]], "Running the pipeline steps inside the docker build container": [[372, "running-the-pipeline-steps-inside-the-docker-build-container"]], "Running the pipeline steps locally": [[372, "running-the-pipeline-steps-locally"]], "Saltwater Pocket": [[383, null]], "Select a single variable from a dataset": [[421, "select-a-single-variable-from-a-dataset"], [422, "select-a-single-variable-from-a-dataset"]], "Select along a single layer": [[421, "select-along-a-single-layer"], [422, "select-along-a-single-layer"]], "Select part of the data": [[421, "select-part-of-the-data"], [422, "select-part-of-the-data"]], "Select points (from a vector dataset)": [[421, "select-points-from-a-vector-dataset"], [421, "id4"], [422, "select-points-from-a-vector-dataset"], [424, "select-points-from-a-vector-dataset"]], "Select points and cross sections": [[368, null]], "Setting up an environment": [[429, "setting-up-an-environment"]], "Settings": [[371, "settings"]], "Slice the model domain": [[396, "slice-the-model-domain"]], "Smooth data": [[421, "smooth-data"], [422, "smooth-data"]], "Solver": [[2, "solver"]], "Solver settings": [[403, "solver-settings"]], "Specifying extra settings": [[438, "specifying-extra-settings"]], "Starting heads interpolation": [[403, "starting-heads-interpolation"]], "Storage package - STO": [[403, "storage-package-sto"]], "Streamline function": [[415, "streamline-function"]], "Sum properties over layers": [[421, "sum-properties-over-layers"], [422, "sum-properties-over-layers"]], "Supported models": [[419, "supported-models"]], "TL;DR": [[431, "tl-dr"]], "TWRI": [[400, null]], "The cleanup method": [[441, "the-cleanup-method"]], "Time series data and Pandas": [[435, null]], "Timeseries at point locations": [[435, "timeseries-at-point-locations"]], "Topsystem: from 2D map to 3D model": [[440, null]], "Transport": [[371, "transport"]], "Transport 2d example": [[408, null]], "Transport Packages": [[365, "transport-packages"]], "Two dimensions: x, y": [[433, "two-dimensions-x-y"]], "Unstructured": [[421, "unstructured"], [424, null]], "Unstructured Grids": [[436, null]], "Unsupported packages": [[439, "unsupported-packages"]], "Update existing model with new data": [[441, "update-existing-model-with-new-data"]], "Updating the Pixi version": [[374, "updating-the-pixi-version"]], "Use a river infiltration factor in MODFLOW6": [[428, "use-a-river-infiltration-factor-in-modflow6"]], "User Guide": [[442, null]], "Utilities": [[369, null]], "Vector data and Geopandas": [[434, null]], "Version control": [[373, "version-control"]], "Vertical Interface": [[384, null]], "Visualise results": [[379, "visualise-results"], [380, "visualise-results"], [383, "visualise-results"]], "Visualization": [[416, null], [425, "visualization"]], "Visualize": [[370, null]], "Visualize the results": [[395, "visualize-the-results"], [396, "visualize-the-results"], [398, "visualize-the-results"], [400, "visualize-the-results"], [406, "visualize-the-results"]], "Ways to install iMOD Python": [[431, "ways-to-install-imod-python"]], "Wells": [[387, "wells"]], "What are specific yield, specific storage, storage coefficient (storativity)?": [[428, "what-are-specific-yield-specific-storage-storage-coefficient-storativity"]], "Which Python?": [[431, "which-python"]], "Write the model": [[396, "write-the-model"], [400, "write-the-model"]], "Writing the cleaned model": [[441, "writing-the-cleaned-model"]], "Zonal statistics": [[421, "zonal-statistics"], [422, "zonal-statistics"]], "[0.10.0] - 2020-05-23": [[0, "id85"]], "[0.10.1] - 2020-10-19": [[0, "id81"]], "[0.11.0] - 2021-12-21": [[0, "id76"]], "[0.11.1] - 2021-12-23": [[0, "id74"]], "[0.11.4] - 2022-09-05": [[0, "id70"]], "[0.11.5] - 2022-12-15": [[0, "id66"]], "[0.11.6] - 2023-02-01": [[0, "id63"]], "[0.12.0] - 2023-03-17": [[0, "id59"]], "[0.13.0] - 2023-05-02": [[0, "id56"]], "[0.13.1] - 2023-05-05": [[0, "id53"]], "[0.13.2] - 2023-07-26": [[0, "id49"]], "[0.14.0] - 2023-09-06": [[0, "id46"]], "[0.14.1] - 2023-09-07": [[0, "id43"]], "[0.15.0] - 2023-11-25": [[0, "id38"]], "[0.15.1] - 2023-12-22": [[0, "id33"]], "[0.15.2] - 2024-02-16": [[0, "id29"]], "[0.15.3] - 2024-02-22": [[0, "id26"]], "[0.16.0] - 2024-03-29": [[0, "id22"]], "[0.17.0] - 2024-05-13": [[0, "id18"]], "[0.17.1] - 2024-05-16": [[0, "id14"]], "[0.17.2] - 2024-09-17": [[0, "id9"]], "[0.18.0] - 2024-11-11": [[0, "id5"]], "[0.18.1] - 2024-11-20": [[0, "id1"]], "[0.5.0] - 2019-02-26": [[0, "id111"]], "[0.6.0] - 2019-03-15": [[0, "id106"]], "[0.6.1] - 2019-04-17": [[0, "id103"]], "[0.7.0] - 2019-07-23": [[0, "id99"]], "[0.7.1] - 2019-08-07": [[0, "id96"]], "[0.8.0] - 2019-10-14": [[0, "id93"]], "[0.9.0] - 2020-01-19": [[0, "id89"]], "[1.0.0rc0] - 2024-12-20": [[0, "rc0-2024-12-20"]], "iMOD Python: make massive MODFLOW models": [[430, null]], "iMOD-WQ": [[371, null], [385, null]], "iMOD5 Backwards compatibility": [[427, "imod5-backwards-compatibility"]], "iMOD5 backwards compatibility": [[425, null]], "iMODFLOW": [[2, null], [388, null]], "icelltype": [[403, "icelltype"]], "imod.couplers.metamod.MetaMod": [[73, null]], "imod.evaluate.calculate_gxg": [[3, null]], "imod.evaluate.convert_pointwaterhead_freshwaterhead": [[4, null]], "imod.evaluate.facebudget": [[5, null]], "imod.evaluate.flow_velocity": [[6, null]], "imod.evaluate.interpolate_value_boundaries": [[7, null]], "imod.evaluate.intra_cell_boundary_conditions": [[8, null]], "imod.evaluate.quiver_line": [[9, null]], "imod.evaluate.quiver_linestring": [[10, null]], "imod.evaluate.stability_constraint_advection": [[11, null]], "imod.evaluate.stability_constraint_wel": [[12, null]], "imod.evaluate.streamfunction_line": [[13, null]], "imod.evaluate.streamfunction_linestring": [[14, null]], "imod.flow.Bottom": [[15, null]], "imod.flow.Boundary": [[16, null]], "imod.flow.ConstantHead": [[17, null]], "imod.flow.Drain": [[18, null]], "imod.flow.EvapoTranspiration": [[19, null]], "imod.flow.GeneralHeadBoundary": [[20, null]], "imod.flow.HorizontalAnisotropy": [[21, null]], "imod.flow.HorizontalFlowBarrier": [[22, null]], "imod.flow.HorizontalHydraulicConductivity": [[23, null]], "imod.flow.ImodflowModel": [[24, null]], "imod.flow.ImodflowModel.create_time_discretization": [[25, null]], "imod.flow.MetaSwap": [[26, null]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, null]], "imod.flow.Recharge": [[28, null]], "imod.flow.River": [[29, null]], "imod.flow.SpecificStorage": [[30, null]], "imod.flow.StartingHead": [[31, null]], "imod.flow.StorageCoefficient": [[32, null]], "imod.flow.Top": [[33, null]], "imod.flow.VerticalAnisotropy": [[34, null]], "imod.flow.VerticalHydraulicConductivity": [[35, null]], "imod.flow.Well": [[36, null]], "imod.formats.gen.read": [[37, null]], "imod.formats.gen.read_ascii": [[38, null]], "imod.formats.gen.write": [[39, null]], "imod.formats.idf.header": [[40, null]], "imod.formats.idf.open": [[41, null]], "imod.formats.idf.open_dataset": [[42, null]], "imod.formats.idf.open_subdomains": [[43, null]], "imod.formats.idf.save": [[44, null]], "imod.formats.ipf.read": [[45, null]], "imod.formats.ipf.read_associated": [[46, null]], "imod.formats.ipf.save": [[47, null]], "imod.formats.ipf.write": [[48, null]], "imod.formats.ipf.write_assoc": [[49, null]], "imod.formats.prj.open_projectfile_data": [[50, null]], "imod.formats.prj.read_projectfile": [[51, null]], "imod.formats.prj.read_timfile": [[52, null]], "imod.formats.rasterio.header": [[53, null]], "imod.formats.rasterio.open": [[54, null]], "imod.formats.rasterio.save": [[55, null]], "imod.logging": [[56, null]], "imod.logging.config": [[57, null]], "imod.logging.config.LoggerType": [[58, null]], "imod.logging.config.configure": [[59, null]], "imod.logging.ilogger": [[60, null]], "imod.logging.ilogger.ILogger": [[61, null]], "imod.logging.logging_decorators": [[62, null]], "imod.logging.logging_decorators.init_log_decorator": [[63, null]], "imod.logging.logging_decorators.standard_log_decorator": [[64, null]], "imod.logging.loglevel": [[65, null]], "imod.logging.loglevel.LogLevel": [[66, null]], "imod.logging.logurulogger": [[67, null]], "imod.logging.logurulogger.LoguruLogger": [[68, null]], "imod.logging.nulllogger": [[69, null]], "imod.logging.nulllogger.NullLogger": [[70, null]], "imod.logging.pythonlogger": [[71, null]], "imod.logging.pythonlogger.PythonLogger": [[72, null]], "imod.mf6.AdvectionCentral": [[74, null]], "imod.mf6.AdvectionTVD": [[75, null]], "imod.mf6.AdvectionUpstream": [[76, null]], "imod.mf6.ApiPackage": [[77, null]], "imod.mf6.Buoyancy": [[78, null]], "imod.mf6.ConstantConcentration": [[79, null]], "imod.mf6.ConstantHead": [[80, null]], "imod.mf6.ConstantHead.clip_box": [[81, null]], "imod.mf6.ConstantHead.from_imod5_data": [[82, null]], "imod.mf6.ConstantHead.from_imod5_shd_data": [[83, null]], "imod.mf6.ConstantHead.mask": [[84, null]], "imod.mf6.ConstantHead.regrid_like": [[85, null]], "imod.mf6.Dispersion": [[86, null]], "imod.mf6.Drainage": [[87, null]], "imod.mf6.Drainage.cleanup": [[88, null]], "imod.mf6.Drainage.clip_box": [[89, null]], "imod.mf6.Drainage.from_imod5_data": [[90, null]], "imod.mf6.Drainage.mask": [[91, null]], "imod.mf6.Drainage.regrid_like": [[92, null]], "imod.mf6.Evapotranspiration": [[93, null]], "imod.mf6.Evapotranspiration.clip_box": [[94, null]], "imod.mf6.Evapotranspiration.mask": [[95, null]], "imod.mf6.Evapotranspiration.regrid_like": [[96, null]], "imod.mf6.GeneralHeadBoundary": [[97, null]], "imod.mf6.GeneralHeadBoundary.cleanup": [[98, null]], "imod.mf6.GeneralHeadBoundary.clip_box": [[99, null]], "imod.mf6.GeneralHeadBoundary.from_imod5_data": [[100, null]], "imod.mf6.GeneralHeadBoundary.mask": [[101, null]], "imod.mf6.GeneralHeadBoundary.regrid_like": [[102, null]], "imod.mf6.GroundwaterFlowModel": [[103, null]], "imod.mf6.GroundwaterFlowModel.dump": [[104, null]], "imod.mf6.GroundwaterFlowModel.from_imod5_data": [[105, null]], "imod.mf6.GroundwaterFlowModel.mask_all_packages": [[106, null]], "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6": [[107, null]], "imod.mf6.GroundwaterTransportModel": [[108, null]], "imod.mf6.GroundwaterTransportModel.dump": [[109, null]], "imod.mf6.GroundwaterTransportModel.mask_all_packages": [[110, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[111, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[112, null]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[113, null]], "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg": [[114, null]], "imod.mf6.HorizontalFlowBarrierResistance": [[115, null]], "imod.mf6.HorizontalFlowBarrierResistance.clip_box": [[116, null]], "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg": [[117, null]], "imod.mf6.ImmobileStorageTransfer": [[118, null]], "imod.mf6.InitialConditions": [[119, null]], "imod.mf6.InitialConditions.clip_box": [[120, null]], "imod.mf6.InitialConditions.from_imod5_data": [[121, null]], "imod.mf6.InitialConditions.mask": [[122, null]], "imod.mf6.InitialConditions.regrid_like": [[123, null]], "imod.mf6.LayeredWell": [[124, null]], "imod.mf6.LayeredWell.clip_box": [[125, null]], "imod.mf6.LayeredWell.from_imod5_cap_data": [[126, null]], "imod.mf6.LayeredWell.from_imod5_data": [[127, null]], "imod.mf6.LayeredWell.mask": [[128, null]], "imod.mf6.LayeredWell.regrid_like": [[129, null]], "imod.mf6.LayeredWell.to_mf6_pkg": [[130, null]], "imod.mf6.MassSourceLoading": [[131, null]], "imod.mf6.MobileStorageTransfer": [[132, null]], "imod.mf6.Modflow6Simulation": [[133, null]], "imod.mf6.Modflow6Simulation.clip_box": [[134, null]], "imod.mf6.Modflow6Simulation.create_time_discretization": [[135, null]], "imod.mf6.Modflow6Simulation.dump": [[136, null]], "imod.mf6.Modflow6Simulation.from_imod5_data": [[137, null]], "imod.mf6.Modflow6Simulation.open_concentration": [[138, null]], "imod.mf6.Modflow6Simulation.open_flow_budget": [[139, null]], "imod.mf6.Modflow6Simulation.open_head": [[140, null]], "imod.mf6.Modflow6Simulation.open_transport_budget": [[141, null]], "imod.mf6.Modflow6Simulation.regrid_like": [[142, null]], "imod.mf6.Modflow6Simulation.run": [[143, null]], "imod.mf6.Modflow6Simulation.split": [[144, null]], "imod.mf6.Modflow6Simulation.write": [[145, null]], "imod.mf6.NodePropertyFlow": [[146, null]], "imod.mf6.NodePropertyFlow.clip_box": [[147, null]], "imod.mf6.NodePropertyFlow.from_imod5_data": [[148, null]], "imod.mf6.NodePropertyFlow.mask": [[149, null]], "imod.mf6.NodePropertyFlow.regrid_like": [[150, null]], "imod.mf6.OutputControl": [[151, null]], "imod.mf6.Recharge": [[152, null]], "imod.mf6.Recharge.clip_box": [[153, null]], "imod.mf6.Recharge.from_imod5_cap_data": [[154, null]], "imod.mf6.Recharge.from_imod5_data": [[155, null]], "imod.mf6.Recharge.mask": [[156, null]], "imod.mf6.Recharge.regrid_like": [[157, null]], "imod.mf6.River": [[158, null]], "imod.mf6.River.cleanup": [[159, null]], "imod.mf6.River.clip_box": [[160, null]], "imod.mf6.River.from_imod5_data": [[161, null]], "imod.mf6.River.mask": [[162, null]], "imod.mf6.River.regrid_like": [[163, null]], "imod.mf6.River.split_conductance": [[164, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[165, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box": [[166, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[167, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[168, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box": [[169, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg": [[170, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[171, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box": [[172, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data": [[173, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg": [[174, null]], "imod.mf6.Solution": [[175, null]], "imod.mf6.SolutionPresetComplex": [[176, null]], "imod.mf6.SolutionPresetModerate": [[177, null]], "imod.mf6.SolutionPresetSimple": [[178, null]], "imod.mf6.SourceSinkMixing": [[179, null]], "imod.mf6.SourceSinkMixing.from_flow_model": [[180, null]], "imod.mf6.SpecificStorage": [[181, null]], "imod.mf6.SpecificStorage.clip_box": [[182, null]], "imod.mf6.SpecificStorage.mask": [[183, null]], "imod.mf6.SpecificStorage.regrid_like": [[184, null]], "imod.mf6.StorageCoefficient": [[185, null]], "imod.mf6.StorageCoefficient.clip_box": [[186, null]], "imod.mf6.StorageCoefficient.from_imod5_data": [[187, null]], "imod.mf6.StorageCoefficient.mask": [[188, null]], "imod.mf6.StorageCoefficient.regrid_like": [[189, null]], "imod.mf6.StructuredDiscretization": [[190, null]], "imod.mf6.StructuredDiscretization.clip_box": [[191, null]], "imod.mf6.StructuredDiscretization.from_imod5_data": [[192, null]], "imod.mf6.StructuredDiscretization.regrid_like": [[193, null]], "imod.mf6.TimeDiscretization": [[194, null]], "imod.mf6.UnsaturatedZoneFlow": [[195, null]], "imod.mf6.VerticesDiscretization": [[196, null]], "imod.mf6.VerticesDiscretization.clip_box": [[197, null]], "imod.mf6.VerticesDiscretization.regrid_like": [[198, null]], "imod.mf6.Well": [[199, null]], "imod.mf6.Well.cleanup": [[200, null]], "imod.mf6.Well.clip_box": [[201, null]], "imod.mf6.Well.from_imod5_data": [[202, null]], "imod.mf6.Well.mask": [[203, null]], "imod.mf6.Well.regrid_like": [[204, null]], "imod.mf6.Well.to_mf6_pkg": [[205, null]], "imod.mf6.WellDisStructured": [[206, null]], "imod.mf6.WellDisVertices": [[207, null]], "imod.mf6.open_cbc": [[208, null]], "imod.mf6.open_dvs": [[209, null]], "imod.mf6.open_hds": [[210, null]], "imod.mf6.read_cbc_headers": [[211, null]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[212, null]], "imod.mf6.regrid.DiscretizationRegridMethod": [[213, null]], "imod.mf6.regrid.DispersionRegridMethod": [[214, null]], "imod.mf6.regrid.DrainageRegridMethod": [[215, null]], "imod.mf6.regrid.EmptyRegridMethod": [[216, null]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[217, null]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[218, null]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[219, null]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[220, null]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[221, null]], "imod.mf6.regrid.RechargeRegridMethod": [[222, null]], "imod.mf6.regrid.RiverRegridMethod": [[223, null]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[224, null]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[225, null]], "imod.msw.AnnualCropFactors": [[226, null]], "imod.msw.CouplerMapping": [[227, null]], "imod.msw.EvapotranspirationMapping": [[228, null]], "imod.msw.EvapotranspirationMapping.from_imod5_data": [[229, null]], "imod.msw.GridData": [[230, null]], "imod.msw.GridData.from_imod5_data": [[231, null]], "imod.msw.IdfMapping": [[232, null]], "imod.msw.Infiltration": [[233, null]], "imod.msw.Infiltration.from_imod5_data": [[234, null]], "imod.msw.InitialConditionsEquilibrium": [[235, null]], "imod.msw.InitialConditionsPercolation": [[236, null]], "imod.msw.InitialConditionsRootzonePressureHead": [[237, null]], "imod.msw.InitialConditionsSavedState": [[238, null]], "imod.msw.LanduseOptions": [[239, null]], "imod.msw.MetaSwapModel": [[240, null]], "imod.msw.MetaSwapModel.from_imod5_data": [[241, null]], "imod.msw.MetaSwapModel.regrid_like": [[242, null]], "imod.msw.MetaSwapModel.write": [[243, null]], "imod.msw.MeteoGrid": [[244, null]], "imod.msw.MeteoGridCopy": [[245, null]], "imod.msw.MeteoGridCopy.from_imod5_data": [[246, null]], "imod.msw.Ponding": [[247, null]], "imod.msw.Ponding.from_imod5_data": [[248, null]], "imod.msw.PrecipitationMapping": [[249, null]], "imod.msw.PrecipitationMapping.from_imod5_data": [[250, null]], "imod.msw.ScalingFactors": [[251, null]], "imod.msw.ScalingFactors.from_imod5_data": [[252, null]], "imod.msw.Sprinkling": [[253, null]], "imod.msw.Sprinkling.from_imod5_data": [[254, null]], "imod.msw.TimeOutputControl": [[255, null]], "imod.msw.VariableOutputControl": [[256, null]], "imod.prepare.ALLOCATION_OPTION": [[257, null]], "imod.prepare.DISTRIBUTING_OPTION": [[258, null]], "imod.prepare.LayerRegridder": [[259, null]], "imod.prepare.Regridder": [[260, null]], "imod.prepare.SimulationAllocationOptions": [[261, null]], "imod.prepare.SimulationDistributingOptions": [[262, null]], "imod.prepare.Voxelizer": [[263, null]], "imod.prepare.allocate_drn_cells": [[264, null]], "imod.prepare.allocate_ghb_cells": [[265, null]], "imod.prepare.allocate_rch_cells": [[266, null]], "imod.prepare.allocate_riv_cells": [[267, null]], "imod.prepare.assign_wells": [[268, null]], "imod.prepare.c_leakage": [[269, null]], "imod.prepare.c_radial": [[270, null]], "imod.prepare.celltable": [[271, null]], "imod.prepare.cleanup_drn": [[272, null]], "imod.prepare.cleanup_ghb": [[273, null]], "imod.prepare.cleanup_riv": [[274, null]], "imod.prepare.cleanup_wel": [[275, null]], "imod.prepare.create_layered_top": [[276, null]], "imod.prepare.distribute_drn_conductance": [[277, null]], "imod.prepare.distribute_ghb_conductance": [[278, null]], "imod.prepare.distribute_riv_conductance": [[279, null]], "imod.prepare.fill": [[280, null]], "imod.prepare.gdal_rasterize": [[281, null]], "imod.prepare.get_lower_active_grid_cells": [[282, null]], "imod.prepare.get_lower_active_layer_number": [[283, null]], "imod.prepare.get_upper_active_grid_cells": [[284, null]], "imod.prepare.get_upper_active_layer_number": [[285, null]], "imod.prepare.laplace_interpolate": [[286, null]], "imod.prepare.linestring_to_square_zpolygons": [[287, null]], "imod.prepare.linestring_to_trapezoid_zpolygons": [[288, null]], "imod.prepare.polygonize": [[289, null]], "imod.prepare.rasterize": [[290, null]], "imod.prepare.rasterize_celltable": [[291, null]], "imod.prepare.reproject": [[292, null]], "imod.prepare.zonal_aggregate_polygons": [[293, null]], "imod.prepare.zonal_aggregate_raster": [[294, null]], "imod.select.active_grid_boundary_xy": [[295, null]], "imod.select.cross_section_line": [[296, null]], "imod.select.cross_section_linestring": [[297, null]], "imod.select.grid_boundary_xy": [[298, null]], "imod.select.points_in_bounds": [[299, null]], "imod.select.points_indices": [[300, null]], "imod.select.points_set_values": [[301, null]], "imod.select.points_values": [[302, null]], "imod.select.upper_active_layer": [[303, null]], "imod.util.cd": [[304, null]], "imod.util.coord_reference": [[305, null]], "imod.util.empty_2d": [[306, null]], "imod.util.empty_2d_transient": [[307, null]], "imod.util.empty_3d": [[308, null]], "imod.util.empty_3d_transient": [[309, null]], "imod.util.from_mdal_compliant_ugrid2d": [[310, null]], "imod.util.ignore_warnings": [[311, null]], "imod.util.mdal_compliant_ugrid2d": [[312, null]], "imod.util.print_if_error": [[313, null]], "imod.util.spatial_reference": [[314, null]], "imod.util.to_datetime": [[315, null]], "imod.util.to_ugrid2d": [[316, null]], "imod.util.transform": [[317, null]], "imod.util.where": [[318, null]], "imod.visualize.GridAnimation3D": [[319, null]], "imod.visualize.StaticGridAnimation3D": [[320, null]], "imod.visualize.cross_section": [[321, null]], "imod.visualize.grid_3d": [[322, null]], "imod.visualize.imshow_topview": [[323, null]], "imod.visualize.line_3d": [[324, null]], "imod.visualize.plot_map": [[325, null]], "imod.visualize.quiver": [[326, null]], "imod.visualize.read_imod_legend": [[327, null]], "imod.visualize.streamfunction": [[328, null]], "imod.visualize.waterbalance_barchart": [[329, null]], "imod.wq.AdvectionFiniteDifference": [[330, null]], "imod.wq.AdvectionHybridMOC": [[331, null]], "imod.wq.AdvectionMOC": [[332, null]], "imod.wq.AdvectionModifiedMOC": [[333, null]], "imod.wq.AdvectionTVD": [[334, null]], "imod.wq.BasicFlow": [[335, null]], "imod.wq.BasicTransport": [[336, null]], "imod.wq.ConstantHead": [[337, null]], "imod.wq.Dispersion": [[338, null]], "imod.wq.Drainage": [[339, null]], "imod.wq.EvapotranspirationHighestActive": [[340, null]], "imod.wq.EvapotranspirationLayers": [[341, null]], "imod.wq.EvapotranspirationTopLayer": [[342, null]], "imod.wq.GeneralHeadBoundary": [[343, null]], "imod.wq.GeneralizedConjugateGradientSolver": [[344, null]], "imod.wq.LayerPropertyFlow": [[345, null]], "imod.wq.MassLoading": [[346, null]], "imod.wq.OutputControl": [[347, null]], "imod.wq.ParallelKrylovFlowSolver": [[348, null]], "imod.wq.ParallelKrylovTransportSolver": [[349, null]], "imod.wq.PreconditionedConjugateGradientSolver": [[350, null]], "imod.wq.RechargeHighestActive": [[351, null]], "imod.wq.RechargeLayers": [[352, null]], "imod.wq.RechargeTopLayer": [[353, null]], "imod.wq.River": [[354, null]], "imod.wq.SeawatModel": [[355, null]], "imod.wq.SeawatModel.create_time_discretization": [[356, null]], "imod.wq.TimeDiscretization": [[357, null]], "imod.wq.TimeVaryingConstantConcentration": [[358, null]], "imod.wq.VariableDensityFlow": [[359, null]], "imod.wq.Well": [[360, null]], "netCDF": [[433, "netcdf"]]}, "docnames": ["api/changelog", "api/evaluate", "api/flow", "api/generated/evaluate/imod.evaluate.calculate_gxg", "api/generated/evaluate/imod.evaluate.convert_pointwaterhead_freshwaterhead", "api/generated/evaluate/imod.evaluate.facebudget", "api/generated/evaluate/imod.evaluate.flow_velocity", "api/generated/evaluate/imod.evaluate.interpolate_value_boundaries", "api/generated/evaluate/imod.evaluate.intra_cell_boundary_conditions", "api/generated/evaluate/imod.evaluate.quiver_line", "api/generated/evaluate/imod.evaluate.quiver_linestring", "api/generated/evaluate/imod.evaluate.stability_constraint_advection", "api/generated/evaluate/imod.evaluate.stability_constraint_wel", "api/generated/evaluate/imod.evaluate.streamfunction_line", "api/generated/evaluate/imod.evaluate.streamfunction_linestring", "api/generated/flow/imod.flow.Bottom", "api/generated/flow/imod.flow.Boundary", "api/generated/flow/imod.flow.ConstantHead", "api/generated/flow/imod.flow.Drain", "api/generated/flow/imod.flow.EvapoTranspiration", "api/generated/flow/imod.flow.GeneralHeadBoundary", "api/generated/flow/imod.flow.HorizontalAnisotropy", "api/generated/flow/imod.flow.HorizontalFlowBarrier", "api/generated/flow/imod.flow.HorizontalHydraulicConductivity", "api/generated/flow/imod.flow.ImodflowModel", "api/generated/flow/imod.flow.ImodflowModel.create_time_discretization", "api/generated/flow/imod.flow.MetaSwap", "api/generated/flow/imod.flow.PreconditionedConjugateGradientSolver", "api/generated/flow/imod.flow.Recharge", "api/generated/flow/imod.flow.River", "api/generated/flow/imod.flow.SpecificStorage", "api/generated/flow/imod.flow.StartingHead", "api/generated/flow/imod.flow.StorageCoefficient", "api/generated/flow/imod.flow.Top", "api/generated/flow/imod.flow.VerticalAnisotropy", "api/generated/flow/imod.flow.VerticalHydraulicConductivity", "api/generated/flow/imod.flow.Well", "api/generated/io/imod.formats.gen.read", "api/generated/io/imod.formats.gen.read_ascii", "api/generated/io/imod.formats.gen.write", "api/generated/io/imod.formats.idf.header", "api/generated/io/imod.formats.idf.open", "api/generated/io/imod.formats.idf.open_dataset", "api/generated/io/imod.formats.idf.open_subdomains", "api/generated/io/imod.formats.idf.save", "api/generated/io/imod.formats.ipf.read", "api/generated/io/imod.formats.ipf.read_associated", "api/generated/io/imod.formats.ipf.save", "api/generated/io/imod.formats.ipf.write", "api/generated/io/imod.formats.ipf.write_assoc", "api/generated/io/imod.formats.prj.open_projectfile_data", "api/generated/io/imod.formats.prj.read_projectfile", "api/generated/io/imod.formats.prj.read_timfile", "api/generated/io/imod.formats.rasterio.header", "api/generated/io/imod.formats.rasterio.open", "api/generated/io/imod.formats.rasterio.save", "api/generated/logging/imod.logging", "api/generated/logging/imod.logging.config", "api/generated/logging/imod.logging.config.LoggerType", "api/generated/logging/imod.logging.config.configure", "api/generated/logging/imod.logging.ilogger", "api/generated/logging/imod.logging.ilogger.ILogger", "api/generated/logging/imod.logging.logging_decorators", "api/generated/logging/imod.logging.logging_decorators.init_log_decorator", "api/generated/logging/imod.logging.logging_decorators.standard_log_decorator", "api/generated/logging/imod.logging.loglevel", "api/generated/logging/imod.logging.loglevel.LogLevel", "api/generated/logging/imod.logging.logurulogger", "api/generated/logging/imod.logging.logurulogger.LoguruLogger", "api/generated/logging/imod.logging.nulllogger", "api/generated/logging/imod.logging.nulllogger.NullLogger", "api/generated/logging/imod.logging.pythonlogger", "api/generated/logging/imod.logging.pythonlogger.PythonLogger", "api/generated/metamod/imod.couplers.metamod.MetaMod", "api/generated/mf6/imod.mf6.AdvectionCentral", "api/generated/mf6/imod.mf6.AdvectionTVD", "api/generated/mf6/imod.mf6.AdvectionUpstream", "api/generated/mf6/imod.mf6.ApiPackage", "api/generated/mf6/imod.mf6.Buoyancy", "api/generated/mf6/imod.mf6.ConstantConcentration", "api/generated/mf6/imod.mf6.ConstantHead", "api/generated/mf6/imod.mf6.ConstantHead.clip_box", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_data", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_shd_data", "api/generated/mf6/imod.mf6.ConstantHead.mask", "api/generated/mf6/imod.mf6.ConstantHead.regrid_like", "api/generated/mf6/imod.mf6.Dispersion", "api/generated/mf6/imod.mf6.Drainage", "api/generated/mf6/imod.mf6.Drainage.cleanup", "api/generated/mf6/imod.mf6.Drainage.clip_box", "api/generated/mf6/imod.mf6.Drainage.from_imod5_data", "api/generated/mf6/imod.mf6.Drainage.mask", "api/generated/mf6/imod.mf6.Drainage.regrid_like", "api/generated/mf6/imod.mf6.Evapotranspiration", "api/generated/mf6/imod.mf6.Evapotranspiration.clip_box", "api/generated/mf6/imod.mf6.Evapotranspiration.mask", "api/generated/mf6/imod.mf6.Evapotranspiration.regrid_like", "api/generated/mf6/imod.mf6.GeneralHeadBoundary", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.cleanup", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.clip_box", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.from_imod5_data", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.mask", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.regrid_like", "api/generated/mf6/imod.mf6.GroundwaterFlowModel", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.dump", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.from_imod5_data", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.mask_all_packages", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "api/generated/mf6/imod.mf6.GroundwaterTransportModel", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.dump", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.mask_all_packages", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance.clip_box", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.ImmobileStorageTransfer", "api/generated/mf6/imod.mf6.InitialConditions", "api/generated/mf6/imod.mf6.InitialConditions.clip_box", "api/generated/mf6/imod.mf6.InitialConditions.from_imod5_data", "api/generated/mf6/imod.mf6.InitialConditions.mask", "api/generated/mf6/imod.mf6.InitialConditions.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell", "api/generated/mf6/imod.mf6.LayeredWell.clip_box", "api/generated/mf6/imod.mf6.LayeredWell.from_imod5_cap_data", "api/generated/mf6/imod.mf6.LayeredWell.from_imod5_data", "api/generated/mf6/imod.mf6.LayeredWell.mask", "api/generated/mf6/imod.mf6.LayeredWell.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell.to_mf6_pkg", "api/generated/mf6/imod.mf6.MassSourceLoading", "api/generated/mf6/imod.mf6.MobileStorageTransfer", "api/generated/mf6/imod.mf6.Modflow6Simulation", "api/generated/mf6/imod.mf6.Modflow6Simulation.clip_box", "api/generated/mf6/imod.mf6.Modflow6Simulation.create_time_discretization", "api/generated/mf6/imod.mf6.Modflow6Simulation.dump", "api/generated/mf6/imod.mf6.Modflow6Simulation.from_imod5_data", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_concentration", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_flow_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_head", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_transport_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.regrid_like", "api/generated/mf6/imod.mf6.Modflow6Simulation.run", "api/generated/mf6/imod.mf6.Modflow6Simulation.split", "api/generated/mf6/imod.mf6.Modflow6Simulation.write", "api/generated/mf6/imod.mf6.NodePropertyFlow", "api/generated/mf6/imod.mf6.NodePropertyFlow.clip_box", "api/generated/mf6/imod.mf6.NodePropertyFlow.from_imod5_data", "api/generated/mf6/imod.mf6.NodePropertyFlow.mask", "api/generated/mf6/imod.mf6.NodePropertyFlow.regrid_like", "api/generated/mf6/imod.mf6.OutputControl", "api/generated/mf6/imod.mf6.Recharge", "api/generated/mf6/imod.mf6.Recharge.clip_box", "api/generated/mf6/imod.mf6.Recharge.from_imod5_cap_data", "api/generated/mf6/imod.mf6.Recharge.from_imod5_data", "api/generated/mf6/imod.mf6.Recharge.mask", "api/generated/mf6/imod.mf6.Recharge.regrid_like", "api/generated/mf6/imod.mf6.River", "api/generated/mf6/imod.mf6.River.cleanup", "api/generated/mf6/imod.mf6.River.clip_box", "api/generated/mf6/imod.mf6.River.from_imod5_data", "api/generated/mf6/imod.mf6.River.mask", "api/generated/mf6/imod.mf6.River.regrid_like", "api/generated/mf6/imod.mf6.River.split_conductance", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.Solution", "api/generated/mf6/imod.mf6.SolutionPresetComplex", "api/generated/mf6/imod.mf6.SolutionPresetModerate", "api/generated/mf6/imod.mf6.SolutionPresetSimple", "api/generated/mf6/imod.mf6.SourceSinkMixing", "api/generated/mf6/imod.mf6.SourceSinkMixing.from_flow_model", "api/generated/mf6/imod.mf6.SpecificStorage", "api/generated/mf6/imod.mf6.SpecificStorage.clip_box", "api/generated/mf6/imod.mf6.SpecificStorage.mask", "api/generated/mf6/imod.mf6.SpecificStorage.regrid_like", "api/generated/mf6/imod.mf6.StorageCoefficient", "api/generated/mf6/imod.mf6.StorageCoefficient.clip_box", "api/generated/mf6/imod.mf6.StorageCoefficient.from_imod5_data", "api/generated/mf6/imod.mf6.StorageCoefficient.mask", "api/generated/mf6/imod.mf6.StorageCoefficient.regrid_like", "api/generated/mf6/imod.mf6.StructuredDiscretization", "api/generated/mf6/imod.mf6.StructuredDiscretization.clip_box", "api/generated/mf6/imod.mf6.StructuredDiscretization.from_imod5_data", "api/generated/mf6/imod.mf6.StructuredDiscretization.regrid_like", "api/generated/mf6/imod.mf6.TimeDiscretization", "api/generated/mf6/imod.mf6.UnsaturatedZoneFlow", "api/generated/mf6/imod.mf6.VerticesDiscretization", "api/generated/mf6/imod.mf6.VerticesDiscretization.clip_box", "api/generated/mf6/imod.mf6.VerticesDiscretization.regrid_like", "api/generated/mf6/imod.mf6.Well", "api/generated/mf6/imod.mf6.Well.cleanup", "api/generated/mf6/imod.mf6.Well.clip_box", "api/generated/mf6/imod.mf6.Well.from_imod5_data", "api/generated/mf6/imod.mf6.Well.mask", "api/generated/mf6/imod.mf6.Well.regrid_like", "api/generated/mf6/imod.mf6.Well.to_mf6_pkg", "api/generated/mf6/imod.mf6.WellDisStructured", "api/generated/mf6/imod.mf6.WellDisVertices", "api/generated/mf6/imod.mf6.open_cbc", "api/generated/mf6/imod.mf6.open_dvs", "api/generated/mf6/imod.mf6.open_hds", "api/generated/mf6/imod.mf6.read_cbc_headers", "api/generated/mf6/regrid/imod.mf6.regrid.ConstantHeadRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DiscretizationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DispersionRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DrainageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EmptyRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EvapotranspirationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.InitialConditionsRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.MobileStorageTransferRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.NodePropertyFlowRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RechargeRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RiverRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.SpecificStorageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.StorageCoefficientRegridMethod", "api/generated/msw/imod.msw.AnnualCropFactors", "api/generated/msw/imod.msw.CouplerMapping", "api/generated/msw/imod.msw.EvapotranspirationMapping", "api/generated/msw/imod.msw.EvapotranspirationMapping.from_imod5_data", "api/generated/msw/imod.msw.GridData", "api/generated/msw/imod.msw.GridData.from_imod5_data", "api/generated/msw/imod.msw.IdfMapping", "api/generated/msw/imod.msw.Infiltration", "api/generated/msw/imod.msw.Infiltration.from_imod5_data", "api/generated/msw/imod.msw.InitialConditionsEquilibrium", "api/generated/msw/imod.msw.InitialConditionsPercolation", "api/generated/msw/imod.msw.InitialConditionsRootzonePressureHead", "api/generated/msw/imod.msw.InitialConditionsSavedState", "api/generated/msw/imod.msw.LanduseOptions", "api/generated/msw/imod.msw.MetaSwapModel", "api/generated/msw/imod.msw.MetaSwapModel.from_imod5_data", "api/generated/msw/imod.msw.MetaSwapModel.regrid_like", "api/generated/msw/imod.msw.MetaSwapModel.write", "api/generated/msw/imod.msw.MeteoGrid", "api/generated/msw/imod.msw.MeteoGridCopy", "api/generated/msw/imod.msw.MeteoGridCopy.from_imod5_data", "api/generated/msw/imod.msw.Ponding", "api/generated/msw/imod.msw.Ponding.from_imod5_data", "api/generated/msw/imod.msw.PrecipitationMapping", "api/generated/msw/imod.msw.PrecipitationMapping.from_imod5_data", "api/generated/msw/imod.msw.ScalingFactors", "api/generated/msw/imod.msw.ScalingFactors.from_imod5_data", "api/generated/msw/imod.msw.Sprinkling", "api/generated/msw/imod.msw.Sprinkling.from_imod5_data", "api/generated/msw/imod.msw.TimeOutputControl", "api/generated/msw/imod.msw.VariableOutputControl", "api/generated/prepare/imod.prepare.ALLOCATION_OPTION", "api/generated/prepare/imod.prepare.DISTRIBUTING_OPTION", "api/generated/prepare/imod.prepare.LayerRegridder", "api/generated/prepare/imod.prepare.Regridder", "api/generated/prepare/imod.prepare.SimulationAllocationOptions", "api/generated/prepare/imod.prepare.SimulationDistributingOptions", "api/generated/prepare/imod.prepare.Voxelizer", "api/generated/prepare/imod.prepare.allocate_drn_cells", "api/generated/prepare/imod.prepare.allocate_ghb_cells", "api/generated/prepare/imod.prepare.allocate_rch_cells", "api/generated/prepare/imod.prepare.allocate_riv_cells", "api/generated/prepare/imod.prepare.assign_wells", "api/generated/prepare/imod.prepare.c_leakage", "api/generated/prepare/imod.prepare.c_radial", "api/generated/prepare/imod.prepare.celltable", "api/generated/prepare/imod.prepare.cleanup_drn", "api/generated/prepare/imod.prepare.cleanup_ghb", "api/generated/prepare/imod.prepare.cleanup_riv", "api/generated/prepare/imod.prepare.cleanup_wel", "api/generated/prepare/imod.prepare.create_layered_top", "api/generated/prepare/imod.prepare.distribute_drn_conductance", "api/generated/prepare/imod.prepare.distribute_ghb_conductance", "api/generated/prepare/imod.prepare.distribute_riv_conductance", "api/generated/prepare/imod.prepare.fill", "api/generated/prepare/imod.prepare.gdal_rasterize", "api/generated/prepare/imod.prepare.get_lower_active_grid_cells", "api/generated/prepare/imod.prepare.get_lower_active_layer_number", "api/generated/prepare/imod.prepare.get_upper_active_grid_cells", "api/generated/prepare/imod.prepare.get_upper_active_layer_number", "api/generated/prepare/imod.prepare.laplace_interpolate", "api/generated/prepare/imod.prepare.linestring_to_square_zpolygons", "api/generated/prepare/imod.prepare.linestring_to_trapezoid_zpolygons", "api/generated/prepare/imod.prepare.polygonize", "api/generated/prepare/imod.prepare.rasterize", "api/generated/prepare/imod.prepare.rasterize_celltable", "api/generated/prepare/imod.prepare.reproject", "api/generated/prepare/imod.prepare.zonal_aggregate_polygons", "api/generated/prepare/imod.prepare.zonal_aggregate_raster", "api/generated/select/imod.select.active_grid_boundary_xy", "api/generated/select/imod.select.cross_section_line", "api/generated/select/imod.select.cross_section_linestring", "api/generated/select/imod.select.grid_boundary_xy", "api/generated/select/imod.select.points_in_bounds", "api/generated/select/imod.select.points_indices", "api/generated/select/imod.select.points_set_values", "api/generated/select/imod.select.points_values", "api/generated/select/imod.select.upper_active_layer", "api/generated/util/imod.util.cd", "api/generated/util/imod.util.coord_reference", "api/generated/util/imod.util.empty_2d", "api/generated/util/imod.util.empty_2d_transient", "api/generated/util/imod.util.empty_3d", "api/generated/util/imod.util.empty_3d_transient", "api/generated/util/imod.util.from_mdal_compliant_ugrid2d", "api/generated/util/imod.util.ignore_warnings", "api/generated/util/imod.util.mdal_compliant_ugrid2d", "api/generated/util/imod.util.print_if_error", "api/generated/util/imod.util.spatial_reference", "api/generated/util/imod.util.to_datetime", "api/generated/util/imod.util.to_ugrid2d", "api/generated/util/imod.util.transform", "api/generated/util/imod.util.where", "api/generated/visualize/imod.visualize.GridAnimation3D", "api/generated/visualize/imod.visualize.StaticGridAnimation3D", "api/generated/visualize/imod.visualize.cross_section", "api/generated/visualize/imod.visualize.grid_3d", "api/generated/visualize/imod.visualize.imshow_topview", "api/generated/visualize/imod.visualize.line_3d", "api/generated/visualize/imod.visualize.plot_map", "api/generated/visualize/imod.visualize.quiver", "api/generated/visualize/imod.visualize.read_imod_legend", "api/generated/visualize/imod.visualize.streamfunction", "api/generated/visualize/imod.visualize.waterbalance_barchart", "api/generated/wq/imod.wq.AdvectionFiniteDifference", "api/generated/wq/imod.wq.AdvectionHybridMOC", "api/generated/wq/imod.wq.AdvectionMOC", "api/generated/wq/imod.wq.AdvectionModifiedMOC", "api/generated/wq/imod.wq.AdvectionTVD", "api/generated/wq/imod.wq.BasicFlow", "api/generated/wq/imod.wq.BasicTransport", "api/generated/wq/imod.wq.ConstantHead", "api/generated/wq/imod.wq.Dispersion", "api/generated/wq/imod.wq.Drainage", "api/generated/wq/imod.wq.EvapotranspirationHighestActive", "api/generated/wq/imod.wq.EvapotranspirationLayers", "api/generated/wq/imod.wq.EvapotranspirationTopLayer", "api/generated/wq/imod.wq.GeneralHeadBoundary", "api/generated/wq/imod.wq.GeneralizedConjugateGradientSolver", "api/generated/wq/imod.wq.LayerPropertyFlow", "api/generated/wq/imod.wq.MassLoading", "api/generated/wq/imod.wq.OutputControl", "api/generated/wq/imod.wq.ParallelKrylovFlowSolver", "api/generated/wq/imod.wq.ParallelKrylovTransportSolver", "api/generated/wq/imod.wq.PreconditionedConjugateGradientSolver", "api/generated/wq/imod.wq.RechargeHighestActive", "api/generated/wq/imod.wq.RechargeLayers", "api/generated/wq/imod.wq.RechargeTopLayer", "api/generated/wq/imod.wq.River", "api/generated/wq/imod.wq.SeawatModel", "api/generated/wq/imod.wq.SeawatModel.create_time_discretization", "api/generated/wq/imod.wq.TimeDiscretization", "api/generated/wq/imod.wq.TimeVaryingConstantConcentration", "api/generated/wq/imod.wq.VariableDensityFlow", "api/generated/wq/imod.wq.Well", "api/index", "api/io", "api/logging", "api/metamod", "api/mf6", "api/msw", "api/prepare", "api/select", "api/util", "api/visualize", "api/wq", "developing/ci", "developing/contributing", "developing/docker", "developing/documentation", "developing/examples", "developing/index", "developing/releasing", "examples/imod-wq/Elder", "examples/imod-wq/FreshwaterLens", "examples/imod-wq/Henry-wq", "examples/imod-wq/Hydrocoin", "examples/imod-wq/SaltwaterPocket", "examples/imod-wq/VerticalInterface", "examples/imod-wq/index", "examples/imod-wq/sg_execution_times", "examples/imodflow/ImodflowProjectfile", "examples/imodflow/index", "examples/imodflow/sg_execution_times", "examples/index", "examples/metaswap/index", "examples/metaswap/metaswap_example", "examples/metaswap/read_metaswap_file", "examples/metaswap/sg_execution_times", "examples/mf6/Henry", "examples/mf6/circle", "examples/mf6/circle_partitioned", "examples/mf6/circle_transport", "examples/mf6/different_ways_to_regrid_models", "examples/mf6/ex01_twri", "examples/mf6/example_1d_transport", "examples/mf6/example_models", "examples/mf6/hondsrug", "examples/mf6/hondsrug_partitioning", "examples/mf6/index", "examples/mf6/lake", "examples/mf6/sg_execution_times", "examples/mf6/transport_2d", "examples/prepare/index", "examples/prepare/point_interpolation", "examples/prepare/polygonize_raster", "examples/prepare/rasterize_shp", "examples/prepare/reproject", "examples/prepare/sg_execution_times", "examples/visualize/flowvel_streamlines", "examples/visualize/index", "examples/visualize/plot_map", "examples/visualize/sg_execution_times", "faq/general", "faq/how-do-i/in-out", "faq/how-do-i/index", "faq/how-do-i/modification", "faq/how-do-i/plot", "faq/how-do-i/unstructured", "faq/imod5_backwards_compatibility", "faq/index", "faq/known-issues", "faq/modeling", "faq/python", "index", "installation", "sg_execution_times", "user-guide/01-raster-data", "user-guide/02-vector-data", "user-guide/03-timeseries-data", "user-guide/05-unstructured-grids", "user-guide/06-lazy-evaluation", "user-guide/07-time-discretization", "user-guide/08-regridding", "user-guide/09-topsystem", "user-guide/10-cleanup", "user-guide/index", "user-guide/sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api\\changelog.rst", "api\\evaluate.rst", "api\\flow.rst", "api\\generated\\evaluate\\imod.evaluate.calculate_gxg.rst", "api\\generated\\evaluate\\imod.evaluate.convert_pointwaterhead_freshwaterhead.rst", "api\\generated\\evaluate\\imod.evaluate.facebudget.rst", "api\\generated\\evaluate\\imod.evaluate.flow_velocity.rst", "api\\generated\\evaluate\\imod.evaluate.interpolate_value_boundaries.rst", "api\\generated\\evaluate\\imod.evaluate.intra_cell_boundary_conditions.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_line.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_linestring.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_advection.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_wel.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_line.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_linestring.rst", "api\\generated\\flow\\imod.flow.Bottom.rst", "api\\generated\\flow\\imod.flow.Boundary.rst", "api\\generated\\flow\\imod.flow.ConstantHead.rst", "api\\generated\\flow\\imod.flow.Drain.rst", "api\\generated\\flow\\imod.flow.EvapoTranspiration.rst", "api\\generated\\flow\\imod.flow.GeneralHeadBoundary.rst", "api\\generated\\flow\\imod.flow.HorizontalAnisotropy.rst", "api\\generated\\flow\\imod.flow.HorizontalFlowBarrier.rst", "api\\generated\\flow\\imod.flow.HorizontalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.create_time_discretization.rst", "api\\generated\\flow\\imod.flow.MetaSwap.rst", "api\\generated\\flow\\imod.flow.PreconditionedConjugateGradientSolver.rst", "api\\generated\\flow\\imod.flow.Recharge.rst", "api\\generated\\flow\\imod.flow.River.rst", "api\\generated\\flow\\imod.flow.SpecificStorage.rst", "api\\generated\\flow\\imod.flow.StartingHead.rst", "api\\generated\\flow\\imod.flow.StorageCoefficient.rst", "api\\generated\\flow\\imod.flow.Top.rst", "api\\generated\\flow\\imod.flow.VerticalAnisotropy.rst", "api\\generated\\flow\\imod.flow.VerticalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.Well.rst", "api\\generated\\io\\imod.formats.gen.read.rst", "api\\generated\\io\\imod.formats.gen.read_ascii.rst", "api\\generated\\io\\imod.formats.gen.write.rst", "api\\generated\\io\\imod.formats.idf.header.rst", "api\\generated\\io\\imod.formats.idf.open.rst", "api\\generated\\io\\imod.formats.idf.open_dataset.rst", "api\\generated\\io\\imod.formats.idf.open_subdomains.rst", "api\\generated\\io\\imod.formats.idf.save.rst", "api\\generated\\io\\imod.formats.ipf.read.rst", "api\\generated\\io\\imod.formats.ipf.read_associated.rst", "api\\generated\\io\\imod.formats.ipf.save.rst", "api\\generated\\io\\imod.formats.ipf.write.rst", "api\\generated\\io\\imod.formats.ipf.write_assoc.rst", "api\\generated\\io\\imod.formats.prj.open_projectfile_data.rst", "api\\generated\\io\\imod.formats.prj.read_projectfile.rst", "api\\generated\\io\\imod.formats.prj.read_timfile.rst", "api\\generated\\io\\imod.formats.rasterio.header.rst", "api\\generated\\io\\imod.formats.rasterio.open.rst", "api\\generated\\io\\imod.formats.rasterio.save.rst", "api\\generated\\logging\\imod.logging.rst", "api\\generated\\logging\\imod.logging.config.rst", "api\\generated\\logging\\imod.logging.config.LoggerType.rst", "api\\generated\\logging\\imod.logging.config.configure.rst", "api\\generated\\logging\\imod.logging.ilogger.rst", "api\\generated\\logging\\imod.logging.ilogger.ILogger.rst", "api\\generated\\logging\\imod.logging.logging_decorators.rst", "api\\generated\\logging\\imod.logging.logging_decorators.init_log_decorator.rst", "api\\generated\\logging\\imod.logging.logging_decorators.standard_log_decorator.rst", "api\\generated\\logging\\imod.logging.loglevel.rst", "api\\generated\\logging\\imod.logging.loglevel.LogLevel.rst", "api\\generated\\logging\\imod.logging.logurulogger.rst", "api\\generated\\logging\\imod.logging.logurulogger.LoguruLogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.NullLogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.PythonLogger.rst", "api\\generated\\metamod\\imod.couplers.metamod.MetaMod.rst", "api\\generated\\mf6\\imod.mf6.AdvectionCentral.rst", "api\\generated\\mf6\\imod.mf6.AdvectionTVD.rst", "api\\generated\\mf6\\imod.mf6.AdvectionUpstream.rst", "api\\generated\\mf6\\imod.mf6.ApiPackage.rst", "api\\generated\\mf6\\imod.mf6.Buoyancy.rst", "api\\generated\\mf6\\imod.mf6.ConstantConcentration.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.clip_box.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_shd_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.mask.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Dispersion.rst", "api\\generated\\mf6\\imod.mf6.Drainage.rst", "api\\generated\\mf6\\imod.mf6.Drainage.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Drainage.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Drainage.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Drainage.mask.rst", "api\\generated\\mf6\\imod.mf6.Drainage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.mask.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.cleanup.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.clip_box.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.mask.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.clip_box.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.ImmobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.clip_box.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.mask.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.clip_box.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.from_imod5_cap_data.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.mask.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.MassSourceLoading.rst", "api\\generated\\mf6\\imod.mf6.MobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.create_time_discretization.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.dump.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_concentration.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_flow_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_head.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_transport_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.run.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.split.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.write.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.clip_box.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.mask.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.OutputControl.rst", "api\\generated\\mf6\\imod.mf6.Recharge.rst", "api\\generated\\mf6\\imod.mf6.Recharge.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Recharge.from_imod5_cap_data.rst", "api\\generated\\mf6\\imod.mf6.Recharge.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Recharge.mask.rst", "api\\generated\\mf6\\imod.mf6.Recharge.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.River.rst", "api\\generated\\mf6\\imod.mf6.River.cleanup.rst", "api\\generated\\mf6\\imod.mf6.River.clip_box.rst", "api\\generated\\mf6\\imod.mf6.River.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.River.mask.rst", "api\\generated\\mf6\\imod.mf6.River.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.River.split_conductance.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.Solution.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetComplex.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetModerate.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetSimple.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.from_flow_model.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.mask.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.clip_box.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.mask.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.clip_box.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.TimeDiscretization.rst", "api\\generated\\mf6\\imod.mf6.UnsaturatedZoneFlow.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.clip_box.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Well.rst", "api\\generated\\mf6\\imod.mf6.Well.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Well.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Well.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Well.mask.rst", "api\\generated\\mf6\\imod.mf6.Well.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Well.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.WellDisStructured.rst", "api\\generated\\mf6\\imod.mf6.WellDisVertices.rst", "api\\generated\\mf6\\imod.mf6.open_cbc.rst", "api\\generated\\mf6\\imod.mf6.open_dvs.rst", "api\\generated\\mf6\\imod.mf6.open_hds.rst", "api\\generated\\mf6\\imod.mf6.read_cbc_headers.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.ConstantHeadRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DiscretizationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DispersionRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DrainageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EmptyRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EvapotranspirationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.InitialConditionsRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.MobileStorageTransferRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.NodePropertyFlowRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RechargeRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RiverRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.SpecificStorageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.StorageCoefficientRegridMethod.rst", "api\\generated\\msw\\imod.msw.AnnualCropFactors.rst", "api\\generated\\msw\\imod.msw.CouplerMapping.rst", "api\\generated\\msw\\imod.msw.EvapotranspirationMapping.rst", "api\\generated\\msw\\imod.msw.EvapotranspirationMapping.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.GridData.rst", "api\\generated\\msw\\imod.msw.GridData.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.IdfMapping.rst", "api\\generated\\msw\\imod.msw.Infiltration.rst", "api\\generated\\msw\\imod.msw.Infiltration.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.InitialConditionsEquilibrium.rst", "api\\generated\\msw\\imod.msw.InitialConditionsPercolation.rst", "api\\generated\\msw\\imod.msw.InitialConditionsRootzonePressureHead.rst", "api\\generated\\msw\\imod.msw.InitialConditionsSavedState.rst", "api\\generated\\msw\\imod.msw.LanduseOptions.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.regrid_like.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.write.rst", "api\\generated\\msw\\imod.msw.MeteoGrid.rst", "api\\generated\\msw\\imod.msw.MeteoGridCopy.rst", "api\\generated\\msw\\imod.msw.MeteoGridCopy.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.Ponding.rst", "api\\generated\\msw\\imod.msw.Ponding.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.PrecipitationMapping.rst", "api\\generated\\msw\\imod.msw.PrecipitationMapping.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.ScalingFactors.rst", "api\\generated\\msw\\imod.msw.ScalingFactors.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.Sprinkling.rst", "api\\generated\\msw\\imod.msw.Sprinkling.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.TimeOutputControl.rst", "api\\generated\\msw\\imod.msw.VariableOutputControl.rst", "api\\generated\\prepare\\imod.prepare.ALLOCATION_OPTION.rst", "api\\generated\\prepare\\imod.prepare.DISTRIBUTING_OPTION.rst", "api\\generated\\prepare\\imod.prepare.LayerRegridder.rst", "api\\generated\\prepare\\imod.prepare.Regridder.rst", "api\\generated\\prepare\\imod.prepare.SimulationAllocationOptions.rst", "api\\generated\\prepare\\imod.prepare.SimulationDistributingOptions.rst", "api\\generated\\prepare\\imod.prepare.Voxelizer.rst", "api\\generated\\prepare\\imod.prepare.allocate_drn_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_ghb_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_rch_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_riv_cells.rst", "api\\generated\\prepare\\imod.prepare.assign_wells.rst", "api\\generated\\prepare\\imod.prepare.c_leakage.rst", "api\\generated\\prepare\\imod.prepare.c_radial.rst", "api\\generated\\prepare\\imod.prepare.celltable.rst", "api\\generated\\prepare\\imod.prepare.cleanup_drn.rst", "api\\generated\\prepare\\imod.prepare.cleanup_ghb.rst", "api\\generated\\prepare\\imod.prepare.cleanup_riv.rst", "api\\generated\\prepare\\imod.prepare.cleanup_wel.rst", "api\\generated\\prepare\\imod.prepare.create_layered_top.rst", "api\\generated\\prepare\\imod.prepare.distribute_drn_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_ghb_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_riv_conductance.rst", "api\\generated\\prepare\\imod.prepare.fill.rst", "api\\generated\\prepare\\imod.prepare.gdal_rasterize.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.laplace_interpolate.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_square_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_trapezoid_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.polygonize.rst", "api\\generated\\prepare\\imod.prepare.rasterize.rst", "api\\generated\\prepare\\imod.prepare.rasterize_celltable.rst", "api\\generated\\prepare\\imod.prepare.reproject.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_polygons.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_raster.rst", "api\\generated\\select\\imod.select.active_grid_boundary_xy.rst", "api\\generated\\select\\imod.select.cross_section_line.rst", "api\\generated\\select\\imod.select.cross_section_linestring.rst", "api\\generated\\select\\imod.select.grid_boundary_xy.rst", "api\\generated\\select\\imod.select.points_in_bounds.rst", "api\\generated\\select\\imod.select.points_indices.rst", "api\\generated\\select\\imod.select.points_set_values.rst", "api\\generated\\select\\imod.select.points_values.rst", "api\\generated\\select\\imod.select.upper_active_layer.rst", "api\\generated\\util\\imod.util.cd.rst", "api\\generated\\util\\imod.util.coord_reference.rst", "api\\generated\\util\\imod.util.empty_2d.rst", "api\\generated\\util\\imod.util.empty_2d_transient.rst", "api\\generated\\util\\imod.util.empty_3d.rst", "api\\generated\\util\\imod.util.empty_3d_transient.rst", "api\\generated\\util\\imod.util.from_mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.ignore_warnings.rst", "api\\generated\\util\\imod.util.mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.print_if_error.rst", "api\\generated\\util\\imod.util.spatial_reference.rst", "api\\generated\\util\\imod.util.to_datetime.rst", "api\\generated\\util\\imod.util.to_ugrid2d.rst", "api\\generated\\util\\imod.util.transform.rst", "api\\generated\\util\\imod.util.where.rst", "api\\generated\\visualize\\imod.visualize.GridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.StaticGridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.cross_section.rst", "api\\generated\\visualize\\imod.visualize.grid_3d.rst", "api\\generated\\visualize\\imod.visualize.imshow_topview.rst", "api\\generated\\visualize\\imod.visualize.line_3d.rst", "api\\generated\\visualize\\imod.visualize.plot_map.rst", "api\\generated\\visualize\\imod.visualize.quiver.rst", "api\\generated\\visualize\\imod.visualize.read_imod_legend.rst", "api\\generated\\visualize\\imod.visualize.streamfunction.rst", "api\\generated\\visualize\\imod.visualize.waterbalance_barchart.rst", "api\\generated\\wq\\imod.wq.AdvectionFiniteDifference.rst", "api\\generated\\wq\\imod.wq.AdvectionHybridMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionModifiedMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionTVD.rst", "api\\generated\\wq\\imod.wq.BasicFlow.rst", "api\\generated\\wq\\imod.wq.BasicTransport.rst", "api\\generated\\wq\\imod.wq.ConstantHead.rst", "api\\generated\\wq\\imod.wq.Dispersion.rst", "api\\generated\\wq\\imod.wq.Drainage.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationHighestActive.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationLayers.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationTopLayer.rst", "api\\generated\\wq\\imod.wq.GeneralHeadBoundary.rst", "api\\generated\\wq\\imod.wq.GeneralizedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.LayerPropertyFlow.rst", "api\\generated\\wq\\imod.wq.MassLoading.rst", "api\\generated\\wq\\imod.wq.OutputControl.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovFlowSolver.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovTransportSolver.rst", "api\\generated\\wq\\imod.wq.PreconditionedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.RechargeHighestActive.rst", "api\\generated\\wq\\imod.wq.RechargeLayers.rst", "api\\generated\\wq\\imod.wq.RechargeTopLayer.rst", "api\\generated\\wq\\imod.wq.River.rst", "api\\generated\\wq\\imod.wq.SeawatModel.rst", "api\\generated\\wq\\imod.wq.SeawatModel.create_time_discretization.rst", "api\\generated\\wq\\imod.wq.TimeDiscretization.rst", "api\\generated\\wq\\imod.wq.TimeVaryingConstantConcentration.rst", "api\\generated\\wq\\imod.wq.VariableDensityFlow.rst", "api\\generated\\wq\\imod.wq.Well.rst", "api\\index.rst", "api\\io.rst", "api\\logging.rst", "api\\metamod.rst", "api\\mf6.rst", "api\\msw.rst", "api\\prepare.rst", "api\\select.rst", "api\\util.rst", "api\\visualize.rst", "api\\wq.rst", "developing\\ci.rst", "developing\\contributing.rst", "developing\\docker.rst", "developing\\documentation.rst", "developing\\examples.rst", "developing\\index.rst", "developing\\releasing.rst", "examples\\imod-wq\\Elder.rst", "examples\\imod-wq\\FreshwaterLens.rst", "examples\\imod-wq\\Henry-wq.rst", "examples\\imod-wq\\Hydrocoin.rst", "examples\\imod-wq\\SaltwaterPocket.rst", "examples\\imod-wq\\VerticalInterface.rst", "examples\\imod-wq\\index.rst", "examples\\imod-wq\\sg_execution_times.rst", "examples\\imodflow\\ImodflowProjectfile.rst", "examples\\imodflow\\index.rst", "examples\\imodflow\\sg_execution_times.rst", "examples\\index.rst", "examples\\metaswap\\index.rst", "examples\\metaswap\\metaswap_example.rst", "examples\\metaswap\\read_metaswap_file.rst", "examples\\metaswap\\sg_execution_times.rst", "examples\\mf6\\Henry.rst", "examples\\mf6\\circle.rst", "examples\\mf6\\circle_partitioned.rst", "examples\\mf6\\circle_transport.rst", "examples\\mf6\\different_ways_to_regrid_models.rst", "examples\\mf6\\ex01_twri.rst", "examples\\mf6\\example_1d_transport.rst", "examples\\mf6\\example_models.rst", "examples\\mf6\\hondsrug.rst", "examples\\mf6\\hondsrug_partitioning.rst", "examples\\mf6\\index.rst", "examples\\mf6\\lake.rst", "examples\\mf6\\sg_execution_times.rst", "examples\\mf6\\transport_2d.rst", "examples\\prepare\\index.rst", "examples\\prepare\\point_interpolation.rst", "examples\\prepare\\polygonize_raster.rst", "examples\\prepare\\rasterize_shp.rst", "examples\\prepare\\reproject.rst", "examples\\prepare\\sg_execution_times.rst", "examples\\visualize\\flowvel_streamlines.rst", "examples\\visualize\\index.rst", "examples\\visualize\\plot_map.rst", "examples\\visualize\\sg_execution_times.rst", "faq\\general.rst", "faq\\how-do-i\\in-out.rst", "faq\\how-do-i\\index.rst", "faq\\how-do-i\\modification.rst", "faq\\how-do-i\\plot.rst", "faq\\how-do-i\\unstructured.rst", "faq\\imod5_backwards_compatibility.rst", "faq\\index.rst", "faq\\known-issues.rst", "faq\\modeling.rst", "faq\\python.rst", "index.rst", "installation.rst", "sg_execution_times.rst", "user-guide\\01-raster-data.rst", "user-guide\\02-vector-data.rst", "user-guide\\03-timeseries-data.rst", "user-guide\\05-unstructured-grids.rst", "user-guide\\06-lazy-evaluation.rst", "user-guide\\07-time-discretization.rst", "user-guide\\08-regridding.rst", "user-guide\\09-topsystem.rst", "user-guide\\10-cleanup.rst", "user-guide\\index.rst", "user-guide\\sg_execution_times.rst"], "indexentries": {"__init__() (imod.couplers.metamod.metamod method)": [[73, "imod.couplers.metamod.MetaMod.__init__", false]], "__init__() (imod.flow.bottom method)": [[15, "imod.flow.Bottom.__init__", false]], "__init__() (imod.flow.boundary method)": [[16, "imod.flow.Boundary.__init__", false]], "__init__() (imod.flow.constanthead method)": [[17, "imod.flow.ConstantHead.__init__", false]], "__init__() (imod.flow.drain method)": [[18, "imod.flow.Drain.__init__", false]], "__init__() (imod.flow.evapotranspiration method)": [[19, "imod.flow.EvapoTranspiration.__init__", false]], "__init__() (imod.flow.generalheadboundary method)": [[20, "imod.flow.GeneralHeadBoundary.__init__", false]], "__init__() (imod.flow.horizontalanisotropy method)": [[21, "imod.flow.HorizontalAnisotropy.__init__", false]], "__init__() (imod.flow.horizontalflowbarrier method)": [[22, "imod.flow.HorizontalFlowBarrier.__init__", false]], "__init__() (imod.flow.horizontalhydraulicconductivity method)": [[23, "imod.flow.HorizontalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.imodflowmodel method)": [[24, "imod.flow.ImodflowModel.__init__", false]], "__init__() (imod.flow.metaswap method)": [[26, "imod.flow.MetaSwap.__init__", false]], "__init__() (imod.flow.preconditionedconjugategradientsolver method)": [[27, "imod.flow.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.flow.recharge method)": [[28, "imod.flow.Recharge.__init__", false]], "__init__() (imod.flow.river method)": [[29, "imod.flow.River.__init__", false]], "__init__() (imod.flow.specificstorage method)": [[30, "imod.flow.SpecificStorage.__init__", false]], "__init__() (imod.flow.startinghead method)": [[31, "imod.flow.StartingHead.__init__", false]], "__init__() (imod.flow.storagecoefficient method)": [[32, "imod.flow.StorageCoefficient.__init__", false]], "__init__() (imod.flow.top method)": [[33, "imod.flow.Top.__init__", false]], "__init__() (imod.flow.verticalanisotropy method)": [[34, "imod.flow.VerticalAnisotropy.__init__", false]], "__init__() (imod.flow.verticalhydraulicconductivity method)": [[35, "imod.flow.VerticalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.well method)": [[36, "imod.flow.Well.__init__", false]], "__init__() (imod.logging.config.loggertype method)": [[58, "imod.logging.config.LoggerType.__init__", false]], "__init__() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.__init__", false]], "__init__() (imod.logging.loglevel.loglevel method)": [[66, "imod.logging.loglevel.LogLevel.__init__", false]], "__init__() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.__init__", false]], "__init__() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.__init__", false]], "__init__() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.__init__", false]], "__init__() (imod.mf6.advectioncentral method)": [[74, "imod.mf6.AdvectionCentral.__init__", false]], "__init__() (imod.mf6.advectiontvd method)": [[75, "imod.mf6.AdvectionTVD.__init__", false]], "__init__() (imod.mf6.advectionupstream method)": [[76, "imod.mf6.AdvectionUpstream.__init__", false]], "__init__() (imod.mf6.apipackage method)": [[77, "imod.mf6.ApiPackage.__init__", false]], "__init__() (imod.mf6.buoyancy method)": [[78, "imod.mf6.Buoyancy.__init__", false]], "__init__() (imod.mf6.constantconcentration method)": [[79, "imod.mf6.ConstantConcentration.__init__", false]], "__init__() (imod.mf6.constanthead method)": [[80, "imod.mf6.ConstantHead.__init__", false]], "__init__() (imod.mf6.dispersion method)": [[86, "imod.mf6.Dispersion.__init__", false]], "__init__() (imod.mf6.drainage method)": [[87, "imod.mf6.Drainage.__init__", false]], "__init__() (imod.mf6.evapotranspiration method)": [[93, "imod.mf6.Evapotranspiration.__init__", false]], "__init__() (imod.mf6.generalheadboundary method)": [[97, "imod.mf6.GeneralHeadBoundary.__init__", false]], "__init__() (imod.mf6.groundwaterflowmodel method)": [[103, "imod.mf6.GroundwaterFlowModel.__init__", false]], "__init__() (imod.mf6.groundwatertransportmodel method)": [[108, "imod.mf6.GroundwaterTransportModel.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[111, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.horizontalflowbarriermultiplier method)": [[113, "imod.mf6.HorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierresistance method)": [[115, "imod.mf6.HorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.immobilestoragetransfer method)": [[118, "imod.mf6.ImmobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.initialconditions method)": [[119, "imod.mf6.InitialConditions.__init__", false]], "__init__() (imod.mf6.layeredwell method)": [[124, "imod.mf6.LayeredWell.__init__", false]], "__init__() (imod.mf6.masssourceloading method)": [[131, "imod.mf6.MassSourceLoading.__init__", false]], "__init__() (imod.mf6.mobilestoragetransfer method)": [[132, "imod.mf6.MobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.modflow6simulation method)": [[133, "imod.mf6.Modflow6Simulation.__init__", false]], "__init__() (imod.mf6.nodepropertyflow method)": [[146, "imod.mf6.NodePropertyFlow.__init__", false]], "__init__() (imod.mf6.outputcontrol method)": [[151, "imod.mf6.OutputControl.__init__", false]], "__init__() (imod.mf6.recharge method)": [[152, "imod.mf6.Recharge.__init__", false]], "__init__() (imod.mf6.regrid.constantheadregridmethod method)": [[212, "imod.mf6.regrid.ConstantHeadRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.discretizationregridmethod method)": [[213, "imod.mf6.regrid.DiscretizationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.dispersionregridmethod method)": [[214, "imod.mf6.regrid.DispersionRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.drainageregridmethod method)": [[215, "imod.mf6.regrid.DrainageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.emptyregridmethod method)": [[216, "imod.mf6.regrid.EmptyRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.evapotranspirationregridmethod method)": [[217, "imod.mf6.regrid.EvapotranspirationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.generalheadboundaryregridmethod method)": [[218, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.initialconditionsregridmethod method)": [[219, "imod.mf6.regrid.InitialConditionsRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.mobilestoragetransferregridmethod method)": [[220, "imod.mf6.regrid.MobileStorageTransferRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.nodepropertyflowregridmethod method)": [[221, "imod.mf6.regrid.NodePropertyFlowRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.rechargeregridmethod method)": [[222, "imod.mf6.regrid.RechargeRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.riverregridmethod method)": [[223, "imod.mf6.regrid.RiverRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.specificstorageregridmethod method)": [[224, "imod.mf6.regrid.SpecificStorageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.storagecoefficientregridmethod method)": [[225, "imod.mf6.regrid.StorageCoefficientRegridMethod.__init__", false]], "__init__() (imod.mf6.river method)": [[158, "imod.mf6.River.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[165, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[168, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[171, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.solution method)": [[175, "imod.mf6.Solution.__init__", false]], "__init__() (imod.mf6.sourcesinkmixing method)": [[179, "imod.mf6.SourceSinkMixing.__init__", false]], "__init__() (imod.mf6.specificstorage method)": [[181, "imod.mf6.SpecificStorage.__init__", false]], "__init__() (imod.mf6.storagecoefficient method)": [[185, "imod.mf6.StorageCoefficient.__init__", false]], "__init__() (imod.mf6.structureddiscretization method)": [[190, "imod.mf6.StructuredDiscretization.__init__", false]], "__init__() (imod.mf6.timediscretization method)": [[194, "imod.mf6.TimeDiscretization.__init__", false]], "__init__() (imod.mf6.unsaturatedzoneflow method)": [[195, "imod.mf6.UnsaturatedZoneFlow.__init__", false]], "__init__() (imod.mf6.verticesdiscretization method)": [[196, "imod.mf6.VerticesDiscretization.__init__", false]], "__init__() (imod.mf6.well method)": [[199, "imod.mf6.Well.__init__", false]], "__init__() (imod.mf6.welldisstructured method)": [[206, "imod.mf6.WellDisStructured.__init__", false]], "__init__() (imod.mf6.welldisvertices method)": [[207, "imod.mf6.WellDisVertices.__init__", false]], "__init__() (imod.msw.annualcropfactors method)": [[226, "imod.msw.AnnualCropFactors.__init__", false]], "__init__() (imod.msw.couplermapping method)": [[227, "imod.msw.CouplerMapping.__init__", false]], "__init__() (imod.msw.evapotranspirationmapping method)": [[228, "imod.msw.EvapotranspirationMapping.__init__", false]], "__init__() (imod.msw.griddata method)": [[230, "imod.msw.GridData.__init__", false]], "__init__() (imod.msw.idfmapping method)": [[232, "imod.msw.IdfMapping.__init__", false]], "__init__() (imod.msw.infiltration method)": [[233, "imod.msw.Infiltration.__init__", false]], "__init__() (imod.msw.initialconditionsequilibrium method)": [[235, "imod.msw.InitialConditionsEquilibrium.__init__", false]], "__init__() (imod.msw.initialconditionspercolation method)": [[236, "imod.msw.InitialConditionsPercolation.__init__", false]], "__init__() (imod.msw.initialconditionsrootzonepressurehead method)": [[237, "imod.msw.InitialConditionsRootzonePressureHead.__init__", false]], "__init__() (imod.msw.initialconditionssavedstate method)": [[238, "imod.msw.InitialConditionsSavedState.__init__", false]], "__init__() (imod.msw.landuseoptions method)": [[239, "imod.msw.LanduseOptions.__init__", false]], "__init__() (imod.msw.metaswapmodel method)": [[240, "imod.msw.MetaSwapModel.__init__", false]], "__init__() (imod.msw.meteogrid method)": [[244, "imod.msw.MeteoGrid.__init__", false]], "__init__() (imod.msw.meteogridcopy method)": [[245, "imod.msw.MeteoGridCopy.__init__", false]], "__init__() (imod.msw.ponding method)": [[247, "imod.msw.Ponding.__init__", false]], "__init__() (imod.msw.precipitationmapping method)": [[249, "imod.msw.PrecipitationMapping.__init__", false]], "__init__() (imod.msw.scalingfactors method)": [[251, "imod.msw.ScalingFactors.__init__", false]], "__init__() (imod.msw.sprinkling method)": [[253, "imod.msw.Sprinkling.__init__", false]], "__init__() (imod.msw.timeoutputcontrol method)": [[255, "imod.msw.TimeOutputControl.__init__", false]], "__init__() (imod.msw.variableoutputcontrol method)": [[256, "imod.msw.VariableOutputControl.__init__", false]], "__init__() (imod.prepare.allocation_option method)": [[257, "imod.prepare.ALLOCATION_OPTION.__init__", false]], "__init__() (imod.prepare.distributing_option method)": [[258, "imod.prepare.DISTRIBUTING_OPTION.__init__", false]], "__init__() (imod.prepare.layerregridder method)": [[259, "imod.prepare.LayerRegridder.__init__", false]], "__init__() (imod.prepare.regridder method)": [[260, "imod.prepare.Regridder.__init__", false]], "__init__() (imod.prepare.simulationallocationoptions method)": [[261, "imod.prepare.SimulationAllocationOptions.__init__", false]], "__init__() (imod.prepare.simulationdistributingoptions method)": [[262, "imod.prepare.SimulationDistributingOptions.__init__", false]], "__init__() (imod.prepare.voxelizer method)": [[263, "imod.prepare.Voxelizer.__init__", false]], "__init__() (imod.visualize.gridanimation3d method)": [[319, "imod.visualize.GridAnimation3D.__init__", false]], "__init__() (imod.visualize.staticgridanimation3d method)": [[320, "imod.visualize.StaticGridAnimation3D.__init__", false]], "__init__() (imod.wq.advectionfinitedifference method)": [[330, "imod.wq.AdvectionFiniteDifference.__init__", false]], "__init__() (imod.wq.advectionhybridmoc method)": [[331, "imod.wq.AdvectionHybridMOC.__init__", false]], "__init__() (imod.wq.advectionmoc method)": [[332, "imod.wq.AdvectionMOC.__init__", false]], "__init__() (imod.wq.advectionmodifiedmoc method)": [[333, "imod.wq.AdvectionModifiedMOC.__init__", false]], "__init__() (imod.wq.advectiontvd method)": [[334, "imod.wq.AdvectionTVD.__init__", false]], "__init__() (imod.wq.basicflow method)": [[335, "imod.wq.BasicFlow.__init__", false]], "__init__() (imod.wq.basictransport method)": [[336, "imod.wq.BasicTransport.__init__", false]], "__init__() (imod.wq.constanthead method)": [[337, "imod.wq.ConstantHead.__init__", false]], "__init__() (imod.wq.dispersion method)": [[338, "imod.wq.Dispersion.__init__", false]], "__init__() (imod.wq.drainage method)": [[339, "imod.wq.Drainage.__init__", false]], "__init__() (imod.wq.evapotranspirationhighestactive method)": [[340, "imod.wq.EvapotranspirationHighestActive.__init__", false]], "__init__() (imod.wq.evapotranspirationlayers method)": [[341, "imod.wq.EvapotranspirationLayers.__init__", false]], "__init__() (imod.wq.evapotranspirationtoplayer method)": [[342, "imod.wq.EvapotranspirationTopLayer.__init__", false]], "__init__() (imod.wq.generalheadboundary method)": [[343, "imod.wq.GeneralHeadBoundary.__init__", false]], "__init__() (imod.wq.generalizedconjugategradientsolver method)": [[344, "imod.wq.GeneralizedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.layerpropertyflow method)": [[345, "imod.wq.LayerPropertyFlow.__init__", false]], "__init__() (imod.wq.massloading method)": [[346, "imod.wq.MassLoading.__init__", false]], "__init__() (imod.wq.outputcontrol method)": [[347, "imod.wq.OutputControl.__init__", false]], "__init__() (imod.wq.parallelkrylovflowsolver method)": [[348, "imod.wq.ParallelKrylovFlowSolver.__init__", false]], "__init__() (imod.wq.parallelkrylovtransportsolver method)": [[349, "imod.wq.ParallelKrylovTransportSolver.__init__", false]], "__init__() (imod.wq.preconditionedconjugategradientsolver method)": [[350, "imod.wq.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.rechargehighestactive method)": [[351, "imod.wq.RechargeHighestActive.__init__", false]], "__init__() (imod.wq.rechargelayers method)": [[352, "imod.wq.RechargeLayers.__init__", false]], "__init__() (imod.wq.rechargetoplayer method)": [[353, "imod.wq.RechargeTopLayer.__init__", false]], "__init__() (imod.wq.river method)": [[354, "imod.wq.River.__init__", false]], "__init__() (imod.wq.seawatmodel method)": [[355, "imod.wq.SeawatModel.__init__", false]], "__init__() (imod.wq.timediscretization method)": [[357, "imod.wq.TimeDiscretization.__init__", false]], "__init__() (imod.wq.timevaryingconstantconcentration method)": [[358, "imod.wq.TimeVaryingConstantConcentration.__init__", false]], "__init__() (imod.wq.variabledensityflow method)": [[359, "imod.wq.VariableDensityFlow.__init__", false]], "__init__() (imod.wq.well method)": [[360, "imod.wq.Well.__init__", false]], "active_grid_boundary_xy() (in module imod.select)": [[295, "imod.select.active_grid_boundary_xy", false]], "advectioncentral (class in imod.mf6)": [[74, "imod.mf6.AdvectionCentral", false]], "advectionfinitedifference (class in imod.wq)": [[330, "imod.wq.AdvectionFiniteDifference", false]], "advectionhybridmoc (class in imod.wq)": [[331, "imod.wq.AdvectionHybridMOC", false]], "advectionmoc (class in imod.wq)": [[332, "imod.wq.AdvectionMOC", false]], "advectionmodifiedmoc (class in imod.wq)": [[333, "imod.wq.AdvectionModifiedMOC", false]], "advectiontvd (class in imod.mf6)": [[75, "imod.mf6.AdvectionTVD", false]], "advectiontvd (class in imod.wq)": [[334, "imod.wq.AdvectionTVD", false]], "advectionupstream (class in imod.mf6)": [[76, "imod.mf6.AdvectionUpstream", false]], "allocate_drn_cells() (in module imod.prepare)": [[264, "imod.prepare.allocate_drn_cells", false]], "allocate_ghb_cells() (in module imod.prepare)": [[265, "imod.prepare.allocate_ghb_cells", false]], "allocate_rch_cells() (in module imod.prepare)": [[266, "imod.prepare.allocate_rch_cells", false]], "allocate_riv_cells() (in module imod.prepare)": [[267, "imod.prepare.allocate_riv_cells", false]], "allocation_option (class in imod.prepare)": [[257, "imod.prepare.ALLOCATION_OPTION", false]], "annualcropfactors (class in imod.msw)": [[226, "imod.msw.AnnualCropFactors", false]], "apipackage (class in imod.mf6)": [[77, "imod.mf6.ApiPackage", false]], "assign_wells() (in module imod.prepare)": [[268, "imod.prepare.assign_wells", false]], "basicflow (class in imod.wq)": [[335, "imod.wq.BasicFlow", false]], "basictransport (class in imod.wq)": [[336, "imod.wq.BasicTransport", false]], "bottom (class in imod.flow)": [[15, "imod.flow.Bottom", false]], "boundary (class in imod.flow)": [[16, "imod.flow.Boundary", false]], "buoyancy (class in imod.mf6)": [[78, "imod.mf6.Buoyancy", false]], "c_leakage() (in module imod.prepare)": [[269, "imod.prepare.c_leakage", false]], "c_radial() (in module imod.prepare)": [[270, "imod.prepare.c_radial", false]], "calculate_gxg() (in module imod.evaluate)": [[3, "imod.evaluate.calculate_gxg", false]], "cd() (in module imod.util)": [[304, "imod.util.cd", false]], "cell_max_nparticles (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.cell_max_nparticles", false]], "cell_min_nparticles (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.cell_min_nparticles", false]], "celltable() (in module imod.prepare)": [[271, "imod.prepare.celltable", false]], "check (imod.wq.seawatmodel attribute)": [[355, "imod.wq.SeawatModel.check", false]], "cleanup() (imod.mf6.drainage method)": [[88, "imod.mf6.Drainage.cleanup", false]], "cleanup() (imod.mf6.generalheadboundary method)": [[98, "imod.mf6.GeneralHeadBoundary.cleanup", false]], "cleanup() (imod.mf6.river method)": [[159, "imod.mf6.River.cleanup", false]], "cleanup() (imod.mf6.well method)": [[200, "imod.mf6.Well.cleanup", false]], "cleanup_drn() (in module imod.prepare)": [[272, "imod.prepare.cleanup_drn", false]], "cleanup_ghb() (in module imod.prepare)": [[273, "imod.prepare.cleanup_ghb", false]], "cleanup_riv() (in module imod.prepare)": [[274, "imod.prepare.cleanup_riv", false]], "cleanup_wel() (in module imod.prepare)": [[275, "imod.prepare.cleanup_wel", false]], "clip_box() (imod.mf6.constanthead method)": [[81, "imod.mf6.ConstantHead.clip_box", false]], "clip_box() (imod.mf6.drainage method)": [[89, "imod.mf6.Drainage.clip_box", false]], "clip_box() (imod.mf6.evapotranspiration method)": [[94, "imod.mf6.Evapotranspiration.clip_box", false]], "clip_box() (imod.mf6.generalheadboundary method)": [[99, "imod.mf6.GeneralHeadBoundary.clip_box", false]], "clip_box() (imod.mf6.horizontalflowbarrierresistance method)": [[116, "imod.mf6.HorizontalFlowBarrierResistance.clip_box", false]], "clip_box() (imod.mf6.initialconditions method)": [[120, "imod.mf6.InitialConditions.clip_box", false]], "clip_box() (imod.mf6.layeredwell method)": [[125, "imod.mf6.LayeredWell.clip_box", false]], "clip_box() (imod.mf6.modflow6simulation method)": [[134, "imod.mf6.Modflow6Simulation.clip_box", false]], "clip_box() (imod.mf6.nodepropertyflow method)": [[147, "imod.mf6.NodePropertyFlow.clip_box", false]], "clip_box() (imod.mf6.recharge method)": [[153, "imod.mf6.Recharge.clip_box", false]], "clip_box() (imod.mf6.river method)": [[160, "imod.mf6.River.clip_box", false]], "clip_box() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[166, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box", false]], "clip_box() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[169, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box", false]], "clip_box() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[172, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box", false]], "clip_box() (imod.mf6.specificstorage method)": [[182, "imod.mf6.SpecificStorage.clip_box", false]], "clip_box() (imod.mf6.storagecoefficient method)": [[186, "imod.mf6.StorageCoefficient.clip_box", false]], "clip_box() (imod.mf6.structureddiscretization method)": [[191, "imod.mf6.StructuredDiscretization.clip_box", false]], "clip_box() (imod.mf6.verticesdiscretization method)": [[197, "imod.mf6.VerticesDiscretization.clip_box", false]], "clip_box() (imod.mf6.well method)": [[201, "imod.mf6.Well.clip_box", false]], "configure() (in module imod.logging.config)": [[59, "imod.logging.config.configure", false]], "constantconcentration (class in imod.mf6)": [[79, "imod.mf6.ConstantConcentration", false]], "constanthead (class in imod.flow)": [[17, "imod.flow.ConstantHead", false]], "constanthead (class in imod.mf6)": [[80, "imod.mf6.ConstantHead", false]], "constanthead (class in imod.wq)": [[337, "imod.wq.ConstantHead", false]], "constantheadregridmethod (class in imod.mf6.regrid)": [[212, "imod.mf6.regrid.ConstantHeadRegridMethod", false]], "convert_pointwaterhead_freshwaterhead() (in module imod.evaluate)": [[4, "imod.evaluate.convert_pointwaterhead_freshwaterhead", false]], "coord_reference() (in module imod.util)": [[305, "imod.util.coord_reference", false]], "couplermapping (class in imod.msw)": [[227, "imod.msw.CouplerMapping", false]], "courant (imod.wq.advectionfinitedifference attribute)": [[330, "imod.wq.AdvectionFiniteDifference.courant", false]], "courant (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.courant", false]], "courant (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.courant", false]], "courant (imod.wq.advectionmodifiedmoc attribute)": [[333, "imod.wq.AdvectionModifiedMOC.courant", false]], "courant (imod.wq.advectiontvd attribute)": [[334, "imod.wq.AdvectionTVD.courant", false]], "create_layered_top() (in module imod.prepare)": [[276, "imod.prepare.create_layered_top", false]], "create_time_discretization() (imod.flow.imodflowmodel method)": [[25, "imod.flow.ImodflowModel.create_time_discretization", false]], "create_time_discretization() (imod.mf6.modflow6simulation method)": [[135, "imod.mf6.Modflow6Simulation.create_time_discretization", false]], "create_time_discretization() (imod.wq.seawatmodel method)": [[356, "imod.wq.SeawatModel.create_time_discretization", false]], "critical (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.CRITICAL", false]], "critical() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.critical", false]], "critical() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.critical", false]], "critical() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.critical", false]], "critical() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.critical", false]], "cross_section() (in module imod.visualize)": [[321, "imod.visualize.cross_section", false]], "cross_section_line() (in module imod.select)": [[296, "imod.select.cross_section_line", false]], "cross_section_linestring() (in module imod.select)": [[297, "imod.select.cross_section_linestring", false]], "dceps (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.dceps", false]], "dchmoc (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.dchmoc", false]], "dconcentration_epsilon (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.dconcentration_epsilon", false]], "dconcentration_epsilon (imod.wq.advectionmodifiedmoc attribute)": [[333, "imod.wq.AdvectionModifiedMOC.dconcentration_epsilon", false]], "debug (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.DEBUG", false]], "debug() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.debug", false]], "debug() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.debug", false]], "debug() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.debug", false]], "debug() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.debug", false]], "discretizationregridmethod (class in imod.mf6.regrid)": [[213, "imod.mf6.regrid.DiscretizationRegridMethod", false]], "dispersion (class in imod.mf6)": [[86, "imod.mf6.Dispersion", false]], "dispersion (class in imod.wq)": [[338, "imod.wq.Dispersion", false]], "dispersionregridmethod (class in imod.mf6.regrid)": [[214, "imod.mf6.regrid.DispersionRegridMethod", false]], "distribute_drn_conductance() (in module imod.prepare)": [[277, "imod.prepare.distribute_drn_conductance", false]], "distribute_ghb_conductance() (in module imod.prepare)": [[278, "imod.prepare.distribute_ghb_conductance", false]], "distribute_riv_conductance() (in module imod.prepare)": [[279, "imod.prepare.distribute_riv_conductance", false]], "distributing_option (class in imod.prepare)": [[258, "imod.prepare.DISTRIBUTING_OPTION", false]], "drain (class in imod.flow)": [[18, "imod.flow.Drain", false]], "drainage (class in imod.mf6)": [[87, "imod.mf6.Drainage", false]], "drainage (class in imod.wq)": [[339, "imod.wq.Drainage", false]], "drainageregridmethod (class in imod.mf6.regrid)": [[215, "imod.mf6.regrid.DrainageRegridMethod", false]], "dump() (imod.mf6.groundwaterflowmodel method)": [[104, "imod.mf6.GroundwaterFlowModel.dump", false]], "dump() (imod.mf6.groundwatertransportmodel method)": [[109, "imod.mf6.GroundwaterTransportModel.dump", false]], "dump() (imod.mf6.modflow6simulation method)": [[136, "imod.mf6.Modflow6Simulation.dump", false]], "empty_2d() (in module imod.util)": [[306, "imod.util.empty_2d", false]], "empty_2d_transient() (in module imod.util)": [[307, "imod.util.empty_2d_transient", false]], "empty_3d() (in module imod.util)": [[308, "imod.util.empty_3d", false]], "empty_3d_transient() (in module imod.util)": [[309, "imod.util.empty_3d_transient", false]], "emptyregridmethod (class in imod.mf6.regrid)": [[216, "imod.mf6.regrid.EmptyRegridMethod", false]], "error (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.ERROR", false]], "error() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.error", false]], "error() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.error", false]], "error() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.error", false]], "error() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.error", false]], "evapotranspiration (class in imod.flow)": [[19, "imod.flow.EvapoTranspiration", false]], "evapotranspiration (class in imod.mf6)": [[93, "imod.mf6.Evapotranspiration", false]], "evapotranspirationhighestactive (class in imod.wq)": [[340, "imod.wq.EvapotranspirationHighestActive", false]], "evapotranspirationlayers (class in imod.wq)": [[341, "imod.wq.EvapotranspirationLayers", false]], "evapotranspirationmapping (class in imod.msw)": [[228, "imod.msw.EvapotranspirationMapping", false]], "evapotranspirationregridmethod (class in imod.mf6.regrid)": [[217, "imod.mf6.regrid.EvapotranspirationRegridMethod", false]], "evapotranspirationtoplayer (class in imod.wq)": [[342, "imod.wq.EvapotranspirationTopLayer", false]], "extra_overlap (imod.prepare.regridder attribute)": [[260, "imod.prepare.Regridder.extra_overlap", false]], "facebudget() (in module imod.evaluate)": [[5, "imod.evaluate.facebudget", false]], "fill() (in module imod.prepare)": [[280, "imod.prepare.fill", false]], "flow_velocity() (in module imod.evaluate)": [[6, "imod.evaluate.flow_velocity", false]], "from_flow_model() (imod.mf6.sourcesinkmixing static method)": [[180, "imod.mf6.SourceSinkMixing.from_flow_model", false]], "from_imod5_cap_data() (imod.mf6.layeredwell class method)": [[126, "imod.mf6.LayeredWell.from_imod5_cap_data", false]], "from_imod5_cap_data() (imod.mf6.recharge class method)": [[154, "imod.mf6.Recharge.from_imod5_cap_data", false]], "from_imod5_data() (imod.mf6.constanthead class method)": [[82, "imod.mf6.ConstantHead.from_imod5_data", false]], "from_imod5_data() (imod.mf6.drainage class method)": [[90, "imod.mf6.Drainage.from_imod5_data", false]], "from_imod5_data() (imod.mf6.generalheadboundary class method)": [[100, "imod.mf6.GeneralHeadBoundary.from_imod5_data", false]], "from_imod5_data() (imod.mf6.groundwaterflowmodel class method)": [[105, "imod.mf6.GroundwaterFlowModel.from_imod5_data", false]], "from_imod5_data() (imod.mf6.initialconditions class method)": [[121, "imod.mf6.InitialConditions.from_imod5_data", false]], "from_imod5_data() (imod.mf6.layeredwell class method)": [[127, "imod.mf6.LayeredWell.from_imod5_data", false]], "from_imod5_data() (imod.mf6.modflow6simulation class method)": [[137, "imod.mf6.Modflow6Simulation.from_imod5_data", false]], "from_imod5_data() (imod.mf6.nodepropertyflow class method)": [[148, "imod.mf6.NodePropertyFlow.from_imod5_data", false]], "from_imod5_data() (imod.mf6.recharge class method)": [[155, "imod.mf6.Recharge.from_imod5_data", false]], "from_imod5_data() (imod.mf6.river class method)": [[161, "imod.mf6.River.from_imod5_data", false]], "from_imod5_data() (imod.mf6.singlelayerhorizontalflowbarrierresistance class method)": [[173, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", false]], "from_imod5_data() (imod.mf6.storagecoefficient class method)": [[187, "imod.mf6.StorageCoefficient.from_imod5_data", false]], "from_imod5_data() (imod.mf6.structureddiscretization class method)": [[192, "imod.mf6.StructuredDiscretization.from_imod5_data", false]], "from_imod5_data() (imod.mf6.well class method)": [[202, "imod.mf6.Well.from_imod5_data", false]], "from_imod5_data() (imod.msw.evapotranspirationmapping class method)": [[229, "imod.msw.EvapotranspirationMapping.from_imod5_data", false]], "from_imod5_data() (imod.msw.griddata class method)": [[231, "imod.msw.GridData.from_imod5_data", false]], "from_imod5_data() (imod.msw.infiltration class method)": [[234, "imod.msw.Infiltration.from_imod5_data", false]], "from_imod5_data() (imod.msw.metaswapmodel class method)": [[241, "imod.msw.MetaSwapModel.from_imod5_data", false]], "from_imod5_data() (imod.msw.meteogridcopy class method)": [[246, "imod.msw.MeteoGridCopy.from_imod5_data", false]], "from_imod5_data() (imod.msw.ponding class method)": [[248, "imod.msw.Ponding.from_imod5_data", false]], "from_imod5_data() (imod.msw.precipitationmapping class method)": [[250, "imod.msw.PrecipitationMapping.from_imod5_data", false]], "from_imod5_data() (imod.msw.scalingfactors class method)": [[252, "imod.msw.ScalingFactors.from_imod5_data", false]], "from_imod5_data() (imod.msw.sprinkling class method)": [[254, "imod.msw.Sprinkling.from_imod5_data", false]], "from_imod5_shd_data() (imod.mf6.constanthead class method)": [[83, "imod.mf6.ConstantHead.from_imod5_shd_data", false]], "from_mdal_compliant_ugrid2d() (in module imod.util)": [[310, "imod.util.from_mdal_compliant_ugrid2d", false]], "gdal_rasterize() (in module imod.prepare)": [[281, "imod.prepare.gdal_rasterize", false]], "generalheadboundary (class in imod.flow)": [[20, "imod.flow.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.mf6)": [[97, "imod.mf6.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.wq)": [[343, "imod.wq.GeneralHeadBoundary", false]], "generalheadboundaryregridmethod (class in imod.mf6.regrid)": [[218, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", false]], "generalizedconjugategradientsolver (class in imod.wq)": [[344, "imod.wq.GeneralizedConjugateGradientSolver", false]], "get_lower_active_grid_cells() (in module imod.prepare)": [[282, "imod.prepare.get_lower_active_grid_cells", false]], "get_lower_active_layer_number() (in module imod.prepare)": [[283, "imod.prepare.get_lower_active_layer_number", false]], "get_upper_active_grid_cells() (in module imod.prepare)": [[284, "imod.prepare.get_upper_active_grid_cells", false]], "get_upper_active_layer_number() (in module imod.prepare)": [[285, "imod.prepare.get_upper_active_layer_number", false]], "grid_3d() (in module imod.visualize)": [[322, "imod.visualize.grid_3d", false]], "grid_boundary_xy() (in module imod.select)": [[298, "imod.select.grid_boundary_xy", false]], "gridanimation3d (class in imod.visualize)": [[319, "imod.visualize.GridAnimation3D", false]], "griddata (class in imod.msw)": [[230, "imod.msw.GridData", false]], "groundwaterflowmodel (class in imod.mf6)": [[103, "imod.mf6.GroundwaterFlowModel", false]], "groundwatertransportmodel (class in imod.mf6)": [[108, "imod.mf6.GroundwaterTransportModel", false]], "header() (in module imod.formats.idf)": [[40, "imod.formats.idf.header", false]], "header() (in module imod.formats.rasterio)": [[53, "imod.formats.rasterio.header", false]], "horizontalanisotropy (class in imod.flow)": [[21, "imod.flow.HorizontalAnisotropy", false]], "horizontalflowbarrier (class in imod.flow)": [[22, "imod.flow.HorizontalFlowBarrier", false]], "horizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[111, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", false]], "horizontalflowbarriermultiplier (class in imod.mf6)": [[113, "imod.mf6.HorizontalFlowBarrierMultiplier", false]], "horizontalflowbarrierresistance (class in imod.mf6)": [[115, "imod.mf6.HorizontalFlowBarrierResistance", false]], "horizontalhydraulicconductivity (class in imod.flow)": [[23, "imod.flow.HorizontalHydraulicConductivity", false]], "idfmapping (class in imod.msw)": [[232, "imod.msw.IdfMapping", false]], "ignore_warnings() (in module imod.util)": [[311, "imod.util.ignore_warnings", false]], "ilogger (class in imod.logging.ilogger)": [[61, "imod.logging.ilogger.ILogger", false]], "immobilestoragetransfer (class in imod.mf6)": [[118, "imod.mf6.ImmobileStorageTransfer", false]], "imod.logging": [[56, "module-imod.logging", false]], "imod.logging.config": [[57, "module-imod.logging.config", false]], "imod.logging.ilogger": [[60, "module-imod.logging.ilogger", false]], "imod.logging.logging_decorators": [[62, "module-imod.logging.logging_decorators", false]], "imod.logging.loglevel": [[65, "module-imod.logging.loglevel", false]], "imod.logging.logurulogger": [[67, "module-imod.logging.logurulogger", false]], "imod.logging.nulllogger": [[69, "module-imod.logging.nulllogger", false]], "imod.logging.pythonlogger": [[71, "module-imod.logging.pythonlogger", false]], "imodflowmodel (class in imod.flow)": [[24, "imod.flow.ImodflowModel", false]], "imshow_topview() (in module imod.visualize)": [[323, "imod.visualize.imshow_topview", false]], "infiltration (class in imod.msw)": [[233, "imod.msw.Infiltration", false]], "info (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.INFO", false]], "info() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.info", false]], "info() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.info", false]], "info() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.info", false]], "info() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.info", false]], "init_log_decorator() (in module imod.logging.logging_decorators)": [[63, "imod.logging.logging_decorators.init_log_decorator", false]], "initialconditions (class in imod.mf6)": [[119, "imod.mf6.InitialConditions", false]], "initialconditionsequilibrium (class in imod.msw)": [[235, "imod.msw.InitialConditionsEquilibrium", false]], "initialconditionspercolation (class in imod.msw)": [[236, "imod.msw.InitialConditionsPercolation", false]], "initialconditionsregridmethod (class in imod.mf6.regrid)": [[219, "imod.mf6.regrid.InitialConditionsRegridMethod", false]], "initialconditionsrootzonepressurehead (class in imod.msw)": [[237, "imod.msw.InitialConditionsRootzonePressureHead", false]], "initialconditionssavedstate (class in imod.msw)": [[238, "imod.msw.InitialConditionsSavedState", false]], "interpolate_value_boundaries() (in module imod.evaluate)": [[7, "imod.evaluate.interpolate_value_boundaries", false]], "intra_cell_boundary_conditions() (in module imod.evaluate)": [[8, "imod.evaluate.intra_cell_boundary_conditions", false]], "landuseoptions (class in imod.msw)": [[239, "imod.msw.LanduseOptions", false]], "laplace_interpolate() (in module imod.prepare)": [[286, "imod.prepare.laplace_interpolate", false]], "layeredwell (class in imod.mf6)": [[124, "imod.mf6.LayeredWell", false]], "layerpropertyflow (class in imod.wq)": [[345, "imod.wq.LayerPropertyFlow", false]], "layerregridder (class in imod.prepare)": [[259, "imod.prepare.LayerRegridder", false]], "line_3d() (in module imod.visualize)": [[324, "imod.visualize.line_3d", false]], "linestring_to_square_zpolygons() (in module imod.prepare)": [[287, "imod.prepare.linestring_to_square_zpolygons", false]], "linestring_to_trapezoid_zpolygons() (in module imod.prepare)": [[288, "imod.prepare.linestring_to_trapezoid_zpolygons", false]], "log() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.log", false]], "log() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.log", false]], "log() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.log", false]], "log() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.log", false]], "loggertype (class in imod.logging.config)": [[58, "imod.logging.config.LoggerType", false]], "loglevel (class in imod.logging.loglevel)": [[66, "imod.logging.loglevel.LogLevel", false]], "loguru (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.LOGURU", false]], "logurulogger (class in imod.logging.logurulogger)": [[68, "imod.logging.logurulogger.LoguruLogger", false]], "mask() (imod.mf6.constanthead method)": [[84, "imod.mf6.ConstantHead.mask", false]], "mask() (imod.mf6.drainage method)": [[91, "imod.mf6.Drainage.mask", false]], "mask() (imod.mf6.evapotranspiration method)": [[95, "imod.mf6.Evapotranspiration.mask", false]], "mask() (imod.mf6.generalheadboundary method)": [[101, "imod.mf6.GeneralHeadBoundary.mask", false]], "mask() (imod.mf6.initialconditions method)": [[122, "imod.mf6.InitialConditions.mask", false]], "mask() (imod.mf6.layeredwell method)": [[128, "imod.mf6.LayeredWell.mask", false]], "mask() (imod.mf6.nodepropertyflow method)": [[149, "imod.mf6.NodePropertyFlow.mask", false]], "mask() (imod.mf6.recharge method)": [[156, "imod.mf6.Recharge.mask", false]], "mask() (imod.mf6.river method)": [[162, "imod.mf6.River.mask", false]], "mask() (imod.mf6.specificstorage method)": [[183, "imod.mf6.SpecificStorage.mask", false]], "mask() (imod.mf6.storagecoefficient method)": [[188, "imod.mf6.StorageCoefficient.mask", false]], "mask() (imod.mf6.well method)": [[203, "imod.mf6.Well.mask", false]], "mask_all_packages() (imod.mf6.groundwaterflowmodel method)": [[106, "imod.mf6.GroundwaterFlowModel.mask_all_packages", false]], "mask_all_packages() (imod.mf6.groundwatertransportmodel method)": [[110, "imod.mf6.GroundwaterTransportModel.mask_all_packages", false]], "massloading (class in imod.wq)": [[346, "imod.wq.MassLoading", false]], "masssourceloading (class in imod.mf6)": [[131, "imod.mf6.MassSourceLoading", false]], "max_nparticles (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.max_nparticles", false]], "max_particles (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.max_particles", false]], "mdal_compliant_ugrid2d() (in module imod.util)": [[312, "imod.util.mdal_compliant_ugrid2d", false]], "metamod (class in imod.couplers.metamod)": [[73, "imod.couplers.metamod.MetaMod", false]], "metaswap (class in imod.flow)": [[26, "imod.flow.MetaSwap", false]], "metaswapmodel (class in imod.msw)": [[240, "imod.msw.MetaSwapModel", false]], "meteogrid (class in imod.msw)": [[244, "imod.msw.MeteoGrid", false]], "meteogridcopy (class in imod.msw)": [[245, "imod.msw.MeteoGridCopy", false]], "method (imod.prepare.layerregridder attribute)": [[259, "imod.prepare.LayerRegridder.method", false]], "method (imod.prepare.regridder attribute)": [[260, "imod.prepare.Regridder.method", false]], "method (imod.prepare.voxelizer attribute)": [[263, "imod.prepare.Voxelizer.method", false]], "mobilestoragetransfer (class in imod.mf6)": [[132, "imod.mf6.MobileStorageTransfer", false]], "mobilestoragetransferregridmethod (class in imod.mf6.regrid)": [[220, "imod.mf6.regrid.MobileStorageTransferRegridMethod", false]], "modelname (imod.flow.imodflowmodel attribute)": [[24, "imod.flow.ImodflowModel.modelname", false]], "modelname (imod.wq.seawatmodel attribute)": [[355, "imod.wq.SeawatModel.modelname", false]], "modflow6simulation (class in imod.mf6)": [[133, "imod.mf6.Modflow6Simulation", false]], "module": [[56, "module-imod.logging", false], [57, "module-imod.logging.config", false], [60, "module-imod.logging.ilogger", false], [62, "module-imod.logging.logging_decorators", false], [65, "module-imod.logging.loglevel", false], [67, "module-imod.logging.logurulogger", false], [69, "module-imod.logging.nulllogger", false], [71, "module-imod.logging.pythonlogger", false]], "ndim_regrid (imod.prepare.regridder attribute)": [[260, "imod.prepare.Regridder.ndim_regrid", false]], "nodepropertyflow (class in imod.mf6)": [[146, "imod.mf6.NodePropertyFlow", false]], "nodepropertyflowregridmethod (class in imod.mf6.regrid)": [[221, "imod.mf6.regrid.NodePropertyFlowRegridMethod", false]], "nparticles_advection (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.nparticles_advection", false]], "nparticles_no_advection (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.nparticles_no_advection", false]], "nph (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.nph", false]], "npl (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.npl", false]], "nplane (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.nplane", false]], "nplane (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.nplane", false]], "npmax (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.npmax", false]], "npmin (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.npmin", false]], "null (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.NULL", false]], "nulllogger (class in imod.logging.nulllogger)": [[70, "imod.logging.nulllogger.NullLogger", false]], "open() (in module imod.formats.idf)": [[41, "imod.formats.idf.open", false]], "open() (in module imod.formats.rasterio)": [[54, "imod.formats.rasterio.open", false]], "open_cbc() (in module imod.mf6)": [[208, "imod.mf6.open_cbc", false]], "open_concentration() (imod.mf6.modflow6simulation method)": [[138, "imod.mf6.Modflow6Simulation.open_concentration", false]], "open_dataset() (in module imod.formats.idf)": [[42, "imod.formats.idf.open_dataset", false]], "open_dvs() (in module imod.mf6)": [[209, "imod.mf6.open_dvs", false]], "open_flow_budget() (imod.mf6.modflow6simulation method)": [[139, "imod.mf6.Modflow6Simulation.open_flow_budget", false]], "open_hds() (in module imod.mf6)": [[210, "imod.mf6.open_hds", false]], "open_head() (imod.mf6.modflow6simulation method)": [[140, "imod.mf6.Modflow6Simulation.open_head", false]], "open_projectfile_data() (in module imod.formats.prj)": [[50, "imod.formats.prj.open_projectfile_data", false]], "open_subdomains() (in module imod.formats.idf)": [[43, "imod.formats.idf.open_subdomains", false]], "open_transport_budget() (imod.mf6.modflow6simulation method)": [[141, "imod.mf6.Modflow6Simulation.open_transport_budget", false]], "outputcontrol (class in imod.mf6)": [[151, "imod.mf6.OutputControl", false]], "outputcontrol (class in imod.wq)": [[347, "imod.wq.OutputControl", false]], "parallelkrylovflowsolver (class in imod.wq)": [[348, "imod.wq.ParallelKrylovFlowSolver", false]], "parallelkrylovtransportsolver (class in imod.wq)": [[349, "imod.wq.ParallelKrylovTransportSolver", false]], "plot_map() (in module imod.visualize)": [[325, "imod.visualize.plot_map", false]], "points_in_bounds() (in module imod.select)": [[299, "imod.select.points_in_bounds", false]], "points_indices() (in module imod.select)": [[300, "imod.select.points_indices", false]], "points_set_values() (in module imod.select)": [[301, "imod.select.points_set_values", false]], "points_values() (in module imod.select)": [[302, "imod.select.points_values", false]], "polygonize() (in module imod.prepare)": [[289, "imod.prepare.polygonize", false]], "ponding (class in imod.msw)": [[247, "imod.msw.Ponding", false]], "precipitationmapping (class in imod.msw)": [[249, "imod.msw.PrecipitationMapping", false]], "preconditionedconjugategradientsolver (class in imod.flow)": [[27, "imod.flow.PreconditionedConjugateGradientSolver", false]], "preconditionedconjugategradientsolver (class in imod.wq)": [[350, "imod.wq.PreconditionedConjugateGradientSolver", false]], "prepare_wel_for_mf6() (imod.mf6.groundwaterflowmodel method)": [[107, "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", false]], "print_if_error() (in module imod.util)": [[313, "imod.util.print_if_error", false]], "python (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.PYTHON", false]], "pythonlogger (class in imod.logging.pythonlogger)": [[72, "imod.logging.pythonlogger.PythonLogger", false]], "quiver() (in module imod.visualize)": [[326, "imod.visualize.quiver", false]], "quiver_line() (in module imod.evaluate)": [[9, "imod.evaluate.quiver_line", false]], "quiver_linestring() (in module imod.evaluate)": [[10, "imod.evaluate.quiver_linestring", false]], "rasterize() (in module imod.prepare)": [[290, "imod.prepare.rasterize", false]], "rasterize_celltable() (in module imod.prepare)": [[291, "imod.prepare.rasterize_celltable", false]], "read() (in module imod.formats.gen)": [[37, "imod.formats.gen.read", false]], "read() (in module imod.formats.ipf)": [[45, "imod.formats.ipf.read", false]], "read_ascii() (in module imod.formats.gen)": [[38, "imod.formats.gen.read_ascii", false]], "read_associated() (in module imod.formats.ipf)": [[46, "imod.formats.ipf.read_associated", false]], "read_cbc_headers() (in module imod.mf6)": [[211, "imod.mf6.read_cbc_headers", false]], "read_imod_legend() (in module imod.visualize)": [[327, "imod.visualize.read_imod_legend", false]], "read_projectfile() (in module imod.formats.prj)": [[51, "imod.formats.prj.read_projectfile", false]], "read_timfile() (in module imod.formats.prj)": [[52, "imod.formats.prj.read_timfile", false]], "recharge (class in imod.flow)": [[28, "imod.flow.Recharge", false]], "recharge (class in imod.mf6)": [[152, "imod.mf6.Recharge", false]], "rechargehighestactive (class in imod.wq)": [[351, "imod.wq.RechargeHighestActive", false]], "rechargelayers (class in imod.wq)": [[352, "imod.wq.RechargeLayers", false]], "rechargeregridmethod (class in imod.mf6.regrid)": [[222, "imod.mf6.regrid.RechargeRegridMethod", false]], "rechargetoplayer (class in imod.wq)": [[353, "imod.wq.RechargeTopLayer", false]], "regrid_like() (imod.mf6.constanthead method)": [[85, "imod.mf6.ConstantHead.regrid_like", false]], "regrid_like() (imod.mf6.drainage method)": [[92, "imod.mf6.Drainage.regrid_like", false]], "regrid_like() (imod.mf6.evapotranspiration method)": [[96, "imod.mf6.Evapotranspiration.regrid_like", false]], "regrid_like() (imod.mf6.generalheadboundary method)": [[102, "imod.mf6.GeneralHeadBoundary.regrid_like", false]], "regrid_like() (imod.mf6.initialconditions method)": [[123, "imod.mf6.InitialConditions.regrid_like", false]], "regrid_like() (imod.mf6.layeredwell method)": [[129, "imod.mf6.LayeredWell.regrid_like", false]], "regrid_like() (imod.mf6.modflow6simulation method)": [[142, "imod.mf6.Modflow6Simulation.regrid_like", false]], "regrid_like() (imod.mf6.nodepropertyflow method)": [[150, "imod.mf6.NodePropertyFlow.regrid_like", false]], "regrid_like() (imod.mf6.recharge method)": [[157, "imod.mf6.Recharge.regrid_like", false]], "regrid_like() (imod.mf6.river method)": [[163, "imod.mf6.River.regrid_like", false]], "regrid_like() (imod.mf6.specificstorage method)": [[184, "imod.mf6.SpecificStorage.regrid_like", false]], "regrid_like() (imod.mf6.storagecoefficient method)": [[189, "imod.mf6.StorageCoefficient.regrid_like", false]], "regrid_like() (imod.mf6.structureddiscretization method)": [[193, "imod.mf6.StructuredDiscretization.regrid_like", false]], "regrid_like() (imod.mf6.verticesdiscretization method)": [[198, "imod.mf6.VerticesDiscretization.regrid_like", false]], "regrid_like() (imod.mf6.well method)": [[204, "imod.mf6.Well.regrid_like", false]], "regrid_like() (imod.msw.metaswapmodel method)": [[242, "imod.msw.MetaSwapModel.regrid_like", false]], "regridder (class in imod.prepare)": [[260, "imod.prepare.Regridder", false]], "reproject() (in module imod.prepare)": [[292, "imod.prepare.reproject", false]], "river (class in imod.flow)": [[29, "imod.flow.River", false]], "river (class in imod.mf6)": [[158, "imod.mf6.River", false]], "river (class in imod.wq)": [[354, "imod.wq.River", false]], "riverregridmethod (class in imod.mf6.regrid)": [[223, "imod.mf6.regrid.RiverRegridMethod", false]], "run() (imod.mf6.modflow6simulation method)": [[143, "imod.mf6.Modflow6Simulation.run", false]], "save() (in module imod.formats.idf)": [[44, "imod.formats.idf.save", false]], "save() (in module imod.formats.ipf)": [[47, "imod.formats.ipf.save", false]], "save() (in module imod.formats.rasterio)": [[55, "imod.formats.rasterio.save", false]], "scalingfactors (class in imod.msw)": [[251, "imod.msw.ScalingFactors", false]], "seawatmodel (class in imod.wq)": [[355, "imod.wq.SeawatModel", false]], "simulationallocationoptions (class in imod.prepare)": [[261, "imod.prepare.SimulationAllocationOptions", false]], "simulationdistributingoptions (class in imod.prepare)": [[262, "imod.prepare.SimulationDistributingOptions", false]], "singlelayerhorizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[165, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", false]], "singlelayerhorizontalflowbarriermultiplier (class in imod.mf6)": [[168, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", false]], "singlelayerhorizontalflowbarrierresistance (class in imod.mf6)": [[171, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", false]], "sink_nparticles (imod.wq.advectionmodifiedmoc attribute)": [[333, "imod.wq.AdvectionModifiedMOC.sink_nparticles", false]], "sink_particle_placement (imod.wq.advectionmodifiedmoc attribute)": [[333, "imod.wq.AdvectionModifiedMOC.sink_particle_placement", false]], "solution (class in imod.mf6)": [[175, "imod.mf6.Solution", false]], "solutionpresetcomplex() (in module imod.mf6)": [[176, "imod.mf6.SolutionPresetComplex", false]], "solutionpresetmoderate() (in module imod.mf6)": [[177, "imod.mf6.SolutionPresetModerate", false]], "solutionpresetsimple() (in module imod.mf6)": [[178, "imod.mf6.SolutionPresetSimple", false]], "sourcesinkmixing (class in imod.mf6)": [[179, "imod.mf6.SourceSinkMixing", false]], "spatial_reference() (in module imod.util)": [[314, "imod.util.spatial_reference", false]], "specificstorage (class in imod.flow)": [[30, "imod.flow.SpecificStorage", false]], "specificstorage (class in imod.mf6)": [[181, "imod.mf6.SpecificStorage", false]], "specificstorageregridmethod (class in imod.mf6.regrid)": [[224, "imod.mf6.regrid.SpecificStorageRegridMethod", false]], "split() (imod.mf6.modflow6simulation method)": [[144, "imod.mf6.Modflow6Simulation.split", false]], "split_conductance() (imod.mf6.river class method)": [[164, "imod.mf6.River.split_conductance", false]], "sprinkling (class in imod.msw)": [[253, "imod.msw.Sprinkling", false]], "stability_constraint_advection() (in module imod.evaluate)": [[11, "imod.evaluate.stability_constraint_advection", false]], "stability_constraint_wel() (in module imod.evaluate)": [[12, "imod.evaluate.stability_constraint_wel", false]], "standard_log_decorator() (in module imod.logging.logging_decorators)": [[64, "imod.logging.logging_decorators.standard_log_decorator", false]], "startinghead (class in imod.flow)": [[31, "imod.flow.StartingHead", false]], "staticgridanimation3d (class in imod.visualize)": [[320, "imod.visualize.StaticGridAnimation3D", false]], "storagecoefficient (class in imod.flow)": [[32, "imod.flow.StorageCoefficient", false]], "storagecoefficient (class in imod.mf6)": [[185, "imod.mf6.StorageCoefficient", false]], "storagecoefficientregridmethod (class in imod.mf6.regrid)": [[225, "imod.mf6.regrid.StorageCoefficientRegridMethod", false]], "streamfunction() (in module imod.visualize)": [[328, "imod.visualize.streamfunction", false]], "streamfunction_line() (in module imod.evaluate)": [[13, "imod.evaluate.streamfunction_line", false]], "streamfunction_linestring() (in module imod.evaluate)": [[14, "imod.evaluate.streamfunction_linestring", false]], "structureddiscretization (class in imod.mf6)": [[190, "imod.mf6.StructuredDiscretization", false]], "timediscretization (class in imod.mf6)": [[194, "imod.mf6.TimeDiscretization", false]], "timediscretization (class in imod.wq)": [[357, "imod.wq.TimeDiscretization", false]], "timeoutputcontrol (class in imod.msw)": [[255, "imod.msw.TimeOutputControl", false]], "timevaryingconstantconcentration (class in imod.wq)": [[358, "imod.wq.TimeVaryingConstantConcentration", false]], "to_datetime() (in module imod.util)": [[315, "imod.util.to_datetime", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[112, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarriermultiplier method)": [[114, "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierresistance method)": [[117, "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.layeredwell method)": [[130, "imod.mf6.LayeredWell.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[167, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[170, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[174, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.well method)": [[205, "imod.mf6.Well.to_mf6_pkg", false]], "to_ugrid2d() (in module imod.util)": [[316, "imod.util.to_ugrid2d", false]], "top (class in imod.flow)": [[33, "imod.flow.Top", false]], "tracking (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.tracking", false]], "tracking (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.tracking", false]], "tracking (imod.wq.advectionmodifiedmoc attribute)": [[333, "imod.wq.AdvectionModifiedMOC.tracking", false]], "transform() (in module imod.util)": [[317, "imod.util.transform", false]], "unsaturatedzoneflow (class in imod.mf6)": [[195, "imod.mf6.UnsaturatedZoneFlow", false]], "upper_active_layer() (in module imod.select)": [[303, "imod.select.upper_active_layer", false]], "use_relative_weights (imod.prepare.regridder attribute)": [[260, "imod.prepare.Regridder.use_relative_weights", false]], "variabledensityflow (class in imod.wq)": [[359, "imod.wq.VariableDensityFlow", false]], "variableoutputcontrol (class in imod.msw)": [[256, "imod.msw.VariableOutputControl", false]], "verticalanisotropy (class in imod.flow)": [[34, "imod.flow.VerticalAnisotropy", false]], "verticalhydraulicconductivity (class in imod.flow)": [[35, "imod.flow.VerticalHydraulicConductivity", false]], "verticesdiscretization (class in imod.mf6)": [[196, "imod.mf6.VerticesDiscretization", false]], "voxelizer (class in imod.prepare)": [[263, "imod.prepare.Voxelizer", false]], "warning (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.WARNING", false]], "warning() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.warning", false]], "warning() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.warning", false]], "warning() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.warning", false]], "warning() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.warning", false]], "waterbalance_barchart() (in module imod.visualize)": [[329, "imod.visualize.waterbalance_barchart", false]], "weighting (imod.wq.advectionfinitedifference attribute)": [[330, "imod.wq.AdvectionFiniteDifference.weighting", false]], "weighting_factor (imod.wq.advectionhybridmoc attribute)": [[331, "imod.wq.AdvectionHybridMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmoc attribute)": [[332, "imod.wq.AdvectionMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmodifiedmoc attribute)": [[333, "imod.wq.AdvectionModifiedMOC.weighting_factor", false]], "well (class in imod.flow)": [[36, "imod.flow.Well", false]], "well (class in imod.mf6)": [[199, "imod.mf6.Well", false]], "well (class in imod.wq)": [[360, "imod.wq.Well", false]], "welldisstructured (class in imod.mf6)": [[206, "imod.mf6.WellDisStructured", false]], "welldisvertices (class in imod.mf6)": [[207, "imod.mf6.WellDisVertices", false]], "where() (in module imod.util)": [[318, "imod.util.where", false]], "write() (imod.mf6.modflow6simulation method)": [[145, "imod.mf6.Modflow6Simulation.write", false]], "write() (imod.msw.metaswapmodel method)": [[243, "imod.msw.MetaSwapModel.write", false]], "write() (in module imod.formats.gen)": [[39, "imod.formats.gen.write", false]], "write() (in module imod.formats.ipf)": [[48, "imod.formats.ipf.write", false]], "write_assoc() (in module imod.formats.ipf)": [[49, "imod.formats.ipf.write_assoc", false]], "zonal_aggregate_polygons() (in module imod.prepare)": [[293, "imod.prepare.zonal_aggregate_polygons", false]], "zonal_aggregate_raster() (in module imod.prepare)": [[294, "imod.prepare.zonal_aggregate_raster", false]]}, "objects": {"imod": [[56, 4, 0, "-", "logging"]], "imod.couplers.metamod": [[73, 0, 1, "", "MetaMod"]], "imod.couplers.metamod.MetaMod": [[73, 1, 1, "", "__init__"]], "imod.evaluate": [[3, 2, 1, "", "calculate_gxg"], [4, 2, 1, "", "convert_pointwaterhead_freshwaterhead"], [5, 2, 1, "", "facebudget"], [6, 2, 1, "", "flow_velocity"], [7, 2, 1, "", "interpolate_value_boundaries"], [8, 2, 1, "", "intra_cell_boundary_conditions"], [9, 2, 1, "", "quiver_line"], [10, 2, 1, "", "quiver_linestring"], [11, 2, 1, "", "stability_constraint_advection"], [12, 2, 1, "", "stability_constraint_wel"], [13, 2, 1, "", "streamfunction_line"], [14, 2, 1, "", "streamfunction_linestring"]], "imod.flow": [[15, 0, 1, "", "Bottom"], [16, 0, 1, "", "Boundary"], [17, 0, 1, "", "ConstantHead"], [18, 0, 1, "", "Drain"], [19, 0, 1, "", "EvapoTranspiration"], [20, 0, 1, "", "GeneralHeadBoundary"], [21, 0, 1, "", "HorizontalAnisotropy"], [22, 0, 1, "", "HorizontalFlowBarrier"], [23, 0, 1, "", "HorizontalHydraulicConductivity"], [24, 0, 1, "", "ImodflowModel"], [26, 0, 1, "", "MetaSwap"], [27, 0, 1, "", "PreconditionedConjugateGradientSolver"], [28, 0, 1, "", "Recharge"], [29, 0, 1, "", "River"], [30, 0, 1, "", "SpecificStorage"], [31, 0, 1, "", "StartingHead"], [32, 0, 1, "", "StorageCoefficient"], [33, 0, 1, "", "Top"], [34, 0, 1, "", "VerticalAnisotropy"], [35, 0, 1, "", "VerticalHydraulicConductivity"], [36, 0, 1, "", "Well"]], "imod.flow.Bottom": [[15, 1, 1, "", "__init__"]], "imod.flow.Boundary": [[16, 1, 1, "", "__init__"]], "imod.flow.ConstantHead": [[17, 1, 1, "", "__init__"]], "imod.flow.Drain": [[18, 1, 1, "", "__init__"]], "imod.flow.EvapoTranspiration": [[19, 1, 1, "", "__init__"]], "imod.flow.GeneralHeadBoundary": [[20, 1, 1, "", "__init__"]], "imod.flow.HorizontalAnisotropy": [[21, 1, 1, "", "__init__"]], "imod.flow.HorizontalFlowBarrier": [[22, 1, 1, "", "__init__"]], "imod.flow.HorizontalHydraulicConductivity": [[23, 1, 1, "", "__init__"]], "imod.flow.ImodflowModel": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "create_time_discretization"], [24, 3, 1, "", "modelname"]], "imod.flow.MetaSwap": [[26, 1, 1, "", "__init__"]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, 1, 1, "", "__init__"]], "imod.flow.Recharge": [[28, 1, 1, "", "__init__"]], "imod.flow.River": [[29, 1, 1, "", "__init__"]], "imod.flow.SpecificStorage": [[30, 1, 1, "", "__init__"]], "imod.flow.StartingHead": [[31, 1, 1, "", "__init__"]], "imod.flow.StorageCoefficient": [[32, 1, 1, "", "__init__"]], "imod.flow.Top": [[33, 1, 1, "", "__init__"]], "imod.flow.VerticalAnisotropy": [[34, 1, 1, "", "__init__"]], "imod.flow.VerticalHydraulicConductivity": [[35, 1, 1, "", "__init__"]], "imod.flow.Well": [[36, 1, 1, "", "__init__"]], "imod.formats.gen": [[37, 2, 1, "", "read"], [38, 2, 1, "", "read_ascii"], [39, 2, 1, "", "write"]], "imod.formats.idf": [[40, 2, 1, "", "header"], [41, 2, 1, "", "open"], [42, 2, 1, "", "open_dataset"], [43, 2, 1, "", "open_subdomains"], [44, 2, 1, "", "save"]], "imod.formats.ipf": [[45, 2, 1, "", "read"], [46, 2, 1, "", "read_associated"], [47, 2, 1, "", "save"], [48, 2, 1, "", "write"], [49, 2, 1, "", "write_assoc"]], "imod.formats.prj": [[50, 2, 1, "", "open_projectfile_data"], [51, 2, 1, "", "read_projectfile"], [52, 2, 1, "", "read_timfile"]], "imod.formats.rasterio": [[53, 2, 1, "", "header"], [54, 2, 1, "", "open"], [55, 2, 1, "", "save"]], "imod.logging": [[57, 4, 0, "-", "config"], [60, 4, 0, "-", "ilogger"], [62, 4, 0, "-", "logging_decorators"], [65, 4, 0, "-", "loglevel"], [67, 4, 0, "-", "logurulogger"], [69, 4, 0, "-", "nulllogger"], [71, 4, 0, "-", "pythonlogger"]], "imod.logging.config": [[58, 0, 1, "", "LoggerType"], [59, 2, 1, "", "configure"]], "imod.logging.config.LoggerType": [[58, 3, 1, "", "LOGURU"], [58, 3, 1, "", "NULL"], [58, 3, 1, "", "PYTHON"], [58, 1, 1, "", "__init__"]], "imod.logging.ilogger": [[61, 0, 1, "", "ILogger"]], "imod.logging.ilogger.ILogger": [[61, 1, 1, "", "__init__"], [61, 1, 1, "", "critical"], [61, 1, 1, "", "debug"], [61, 1, 1, "", "error"], [61, 1, 1, "", "info"], [61, 1, 1, "", "log"], [61, 1, 1, "", "warning"]], "imod.logging.logging_decorators": [[63, 2, 1, "", "init_log_decorator"], [64, 2, 1, "", "standard_log_decorator"]], "imod.logging.loglevel": [[66, 0, 1, "", "LogLevel"]], "imod.logging.loglevel.LogLevel": [[66, 3, 1, "", "CRITICAL"], [66, 3, 1, "", "DEBUG"], [66, 3, 1, "", "ERROR"], [66, 3, 1, "", "INFO"], [66, 3, 1, "", "WARNING"], [66, 1, 1, "", "__init__"]], "imod.logging.logurulogger": [[68, 0, 1, "", "LoguruLogger"]], "imod.logging.logurulogger.LoguruLogger": [[68, 1, 1, "", "__init__"], [68, 1, 1, "", "critical"], [68, 1, 1, "", "debug"], [68, 1, 1, "", "error"], [68, 1, 1, "", "info"], [68, 1, 1, "", "log"], [68, 1, 1, "", "warning"]], "imod.logging.nulllogger": [[70, 0, 1, "", "NullLogger"]], "imod.logging.nulllogger.NullLogger": [[70, 1, 1, "", "__init__"], [70, 1, 1, "", "critical"], [70, 1, 1, "", "debug"], [70, 1, 1, "", "error"], [70, 1, 1, "", "info"], [70, 1, 1, "", "log"], [70, 1, 1, "", "warning"]], "imod.logging.pythonlogger": [[72, 0, 1, "", "PythonLogger"]], "imod.logging.pythonlogger.PythonLogger": [[72, 1, 1, "", "__init__"], [72, 1, 1, "", "critical"], [72, 1, 1, "", "debug"], [72, 1, 1, "", "error"], [72, 1, 1, "", "info"], [72, 1, 1, "", "log"], [72, 1, 1, "", "warning"]], "imod.mf6": [[74, 0, 1, "", "AdvectionCentral"], [75, 0, 1, "", "AdvectionTVD"], [76, 0, 1, "", "AdvectionUpstream"], [77, 0, 1, "", "ApiPackage"], [78, 0, 1, "", "Buoyancy"], [79, 0, 1, "", "ConstantConcentration"], [80, 0, 1, "", "ConstantHead"], [86, 0, 1, "", "Dispersion"], [87, 0, 1, "", "Drainage"], [93, 0, 1, "", "Evapotranspiration"], [97, 0, 1, "", "GeneralHeadBoundary"], [103, 0, 1, "", "GroundwaterFlowModel"], [108, 0, 1, "", "GroundwaterTransportModel"], [111, 0, 1, "", "HorizontalFlowBarrierHydraulicCharacteristic"], [113, 0, 1, "", "HorizontalFlowBarrierMultiplier"], [115, 0, 1, "", "HorizontalFlowBarrierResistance"], [118, 0, 1, "", "ImmobileStorageTransfer"], [119, 0, 1, "", "InitialConditions"], [124, 0, 1, "", "LayeredWell"], [131, 0, 1, "", "MassSourceLoading"], [132, 0, 1, "", "MobileStorageTransfer"], [133, 0, 1, "", "Modflow6Simulation"], [146, 0, 1, "", "NodePropertyFlow"], [151, 0, 1, "", "OutputControl"], [152, 0, 1, "", "Recharge"], [158, 0, 1, "", "River"], [165, 0, 1, "", "SingleLayerHorizontalFlowBarrierHydraulicCharacteristic"], [168, 0, 1, "", "SingleLayerHorizontalFlowBarrierMultiplier"], [171, 0, 1, "", "SingleLayerHorizontalFlowBarrierResistance"], [175, 0, 1, "", "Solution"], [176, 2, 1, "", "SolutionPresetComplex"], [177, 2, 1, "", "SolutionPresetModerate"], [178, 2, 1, "", "SolutionPresetSimple"], [179, 0, 1, "", "SourceSinkMixing"], [181, 0, 1, "", "SpecificStorage"], [185, 0, 1, "", "StorageCoefficient"], [190, 0, 1, "", "StructuredDiscretization"], [194, 0, 1, "", "TimeDiscretization"], [195, 0, 1, "", "UnsaturatedZoneFlow"], [196, 0, 1, "", "VerticesDiscretization"], [199, 0, 1, "", "Well"], [206, 0, 1, "", "WellDisStructured"], [207, 0, 1, "", "WellDisVertices"], [208, 2, 1, "", "open_cbc"], [209, 2, 1, "", "open_dvs"], [210, 2, 1, "", "open_hds"], [211, 2, 1, "", "read_cbc_headers"]], "imod.mf6.AdvectionCentral": [[74, 1, 1, "", "__init__"]], "imod.mf6.AdvectionTVD": [[75, 1, 1, "", "__init__"]], "imod.mf6.AdvectionUpstream": [[76, 1, 1, "", "__init__"]], "imod.mf6.ApiPackage": [[77, 1, 1, "", "__init__"]], "imod.mf6.Buoyancy": [[78, 1, 1, "", "__init__"]], "imod.mf6.ConstantConcentration": [[79, 1, 1, "", "__init__"]], "imod.mf6.ConstantHead": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "clip_box"], [82, 1, 1, "", "from_imod5_data"], [83, 1, 1, "", "from_imod5_shd_data"], [84, 1, 1, "", "mask"], [85, 1, 1, "", "regrid_like"]], "imod.mf6.Dispersion": [[86, 1, 1, "", "__init__"]], "imod.mf6.Drainage": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "cleanup"], [89, 1, 1, "", "clip_box"], [90, 1, 1, "", "from_imod5_data"], [91, 1, 1, "", "mask"], [92, 1, 1, "", "regrid_like"]], "imod.mf6.Evapotranspiration": [[93, 1, 1, "", "__init__"], [94, 1, 1, "", "clip_box"], [95, 1, 1, "", "mask"], [96, 1, 1, "", "regrid_like"]], "imod.mf6.GeneralHeadBoundary": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "cleanup"], [99, 1, 1, "", "clip_box"], [100, 1, 1, "", "from_imod5_data"], [101, 1, 1, "", "mask"], [102, 1, 1, "", "regrid_like"]], "imod.mf6.GroundwaterFlowModel": [[103, 1, 1, "", "__init__"], [104, 1, 1, "", "dump"], [105, 1, 1, "", "from_imod5_data"], [106, 1, 1, "", "mask_all_packages"], [107, 1, 1, "", "prepare_wel_for_mf6"]], "imod.mf6.GroundwaterTransportModel": [[108, 1, 1, "", "__init__"], [109, 1, 1, "", "dump"], [110, 1, 1, "", "mask_all_packages"]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierResistance": [[115, 1, 1, "", "__init__"], [116, 1, 1, "", "clip_box"], [117, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.ImmobileStorageTransfer": [[118, 1, 1, "", "__init__"]], "imod.mf6.InitialConditions": [[119, 1, 1, "", "__init__"], [120, 1, 1, "", "clip_box"], [121, 1, 1, "", "from_imod5_data"], [122, 1, 1, "", "mask"], [123, 1, 1, "", "regrid_like"]], "imod.mf6.LayeredWell": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "clip_box"], [126, 1, 1, "", "from_imod5_cap_data"], [127, 1, 1, "", "from_imod5_data"], [128, 1, 1, "", "mask"], [129, 1, 1, "", "regrid_like"], [130, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.MassSourceLoading": [[131, 1, 1, "", "__init__"]], "imod.mf6.MobileStorageTransfer": [[132, 1, 1, "", "__init__"]], "imod.mf6.Modflow6Simulation": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "clip_box"], [135, 1, 1, "", "create_time_discretization"], [136, 1, 1, "", "dump"], [137, 1, 1, "", "from_imod5_data"], [138, 1, 1, "", "open_concentration"], [139, 1, 1, "", "open_flow_budget"], [140, 1, 1, "", "open_head"], [141, 1, 1, "", "open_transport_budget"], [142, 1, 1, "", "regrid_like"], [143, 1, 1, "", "run"], [144, 1, 1, "", "split"], [145, 1, 1, "", "write"]], "imod.mf6.NodePropertyFlow": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "clip_box"], [148, 1, 1, "", "from_imod5_data"], [149, 1, 1, "", "mask"], [150, 1, 1, "", "regrid_like"]], "imod.mf6.OutputControl": [[151, 1, 1, "", "__init__"]], "imod.mf6.Recharge": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "clip_box"], [154, 1, 1, "", "from_imod5_cap_data"], [155, 1, 1, "", "from_imod5_data"], [156, 1, 1, "", "mask"], [157, 1, 1, "", "regrid_like"]], "imod.mf6.River": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "cleanup"], [160, 1, 1, "", "clip_box"], [161, 1, 1, "", "from_imod5_data"], [162, 1, 1, "", "mask"], [163, 1, 1, "", "regrid_like"], [164, 1, 1, "", "split_conductance"]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "clip_box"], [167, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "clip_box"], [170, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "clip_box"], [173, 1, 1, "", "from_imod5_data"], [174, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.Solution": [[175, 1, 1, "", "__init__"]], "imod.mf6.SourceSinkMixing": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "from_flow_model"]], "imod.mf6.SpecificStorage": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "clip_box"], [183, 1, 1, "", "mask"], [184, 1, 1, "", "regrid_like"]], "imod.mf6.StorageCoefficient": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "clip_box"], [187, 1, 1, "", "from_imod5_data"], [188, 1, 1, "", "mask"], [189, 1, 1, "", "regrid_like"]], "imod.mf6.StructuredDiscretization": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "clip_box"], [192, 1, 1, "", "from_imod5_data"], [193, 1, 1, "", "regrid_like"]], "imod.mf6.TimeDiscretization": [[194, 1, 1, "", "__init__"]], "imod.mf6.UnsaturatedZoneFlow": [[195, 1, 1, "", "__init__"]], "imod.mf6.VerticesDiscretization": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "clip_box"], [198, 1, 1, "", "regrid_like"]], "imod.mf6.Well": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "cleanup"], [201, 1, 1, "", "clip_box"], [202, 1, 1, "", "from_imod5_data"], [203, 1, 1, "", "mask"], [204, 1, 1, "", "regrid_like"], [205, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.WellDisStructured": [[206, 1, 1, "", "__init__"]], "imod.mf6.WellDisVertices": [[207, 1, 1, "", "__init__"]], "imod.mf6.regrid": [[212, 0, 1, "", "ConstantHeadRegridMethod"], [213, 0, 1, "", "DiscretizationRegridMethod"], [214, 0, 1, "", "DispersionRegridMethod"], [215, 0, 1, "", "DrainageRegridMethod"], [216, 0, 1, "", "EmptyRegridMethod"], [217, 0, 1, "", "EvapotranspirationRegridMethod"], [218, 0, 1, "", "GeneralHeadBoundaryRegridMethod"], [219, 0, 1, "", "InitialConditionsRegridMethod"], [220, 0, 1, "", "MobileStorageTransferRegridMethod"], [221, 0, 1, "", "NodePropertyFlowRegridMethod"], [222, 0, 1, "", "RechargeRegridMethod"], [223, 0, 1, "", "RiverRegridMethod"], [224, 0, 1, "", "SpecificStorageRegridMethod"], [225, 0, 1, "", "StorageCoefficientRegridMethod"]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[212, 1, 1, "", "__init__"]], "imod.mf6.regrid.DiscretizationRegridMethod": [[213, 1, 1, "", "__init__"]], "imod.mf6.regrid.DispersionRegridMethod": [[214, 1, 1, "", "__init__"]], "imod.mf6.regrid.DrainageRegridMethod": [[215, 1, 1, "", "__init__"]], "imod.mf6.regrid.EmptyRegridMethod": [[216, 1, 1, "", "__init__"]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[217, 1, 1, "", "__init__"]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[218, 1, 1, "", "__init__"]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[219, 1, 1, "", "__init__"]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[220, 1, 1, "", "__init__"]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[221, 1, 1, "", "__init__"]], "imod.mf6.regrid.RechargeRegridMethod": [[222, 1, 1, "", "__init__"]], "imod.mf6.regrid.RiverRegridMethod": [[223, 1, 1, "", "__init__"]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[224, 1, 1, "", "__init__"]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[225, 1, 1, "", "__init__"]], "imod.msw": [[226, 0, 1, "", "AnnualCropFactors"], [227, 0, 1, "", "CouplerMapping"], [228, 0, 1, "", "EvapotranspirationMapping"], [230, 0, 1, "", "GridData"], [232, 0, 1, "", "IdfMapping"], [233, 0, 1, "", "Infiltration"], [235, 0, 1, "", "InitialConditionsEquilibrium"], [236, 0, 1, "", "InitialConditionsPercolation"], [237, 0, 1, "", "InitialConditionsRootzonePressureHead"], [238, 0, 1, "", "InitialConditionsSavedState"], [239, 0, 1, "", "LanduseOptions"], [240, 0, 1, "", "MetaSwapModel"], [244, 0, 1, "", "MeteoGrid"], [245, 0, 1, "", "MeteoGridCopy"], [247, 0, 1, "", "Ponding"], [249, 0, 1, "", "PrecipitationMapping"], [251, 0, 1, "", "ScalingFactors"], [253, 0, 1, "", "Sprinkling"], [255, 0, 1, "", "TimeOutputControl"], [256, 0, 1, "", "VariableOutputControl"]], "imod.msw.AnnualCropFactors": [[226, 1, 1, "", "__init__"]], "imod.msw.CouplerMapping": [[227, 1, 1, "", "__init__"]], "imod.msw.EvapotranspirationMapping": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "from_imod5_data"]], "imod.msw.GridData": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "from_imod5_data"]], "imod.msw.IdfMapping": [[232, 1, 1, "", "__init__"]], "imod.msw.Infiltration": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "from_imod5_data"]], "imod.msw.InitialConditionsEquilibrium": [[235, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsPercolation": [[236, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsRootzonePressureHead": [[237, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsSavedState": [[238, 1, 1, "", "__init__"]], "imod.msw.LanduseOptions": [[239, 1, 1, "", "__init__"]], "imod.msw.MetaSwapModel": [[240, 1, 1, "", "__init__"], [241, 1, 1, "", "from_imod5_data"], [242, 1, 1, "", "regrid_like"], [243, 1, 1, "", "write"]], "imod.msw.MeteoGrid": [[244, 1, 1, "", "__init__"]], "imod.msw.MeteoGridCopy": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "from_imod5_data"]], "imod.msw.Ponding": [[247, 1, 1, "", "__init__"], [248, 1, 1, "", "from_imod5_data"]], "imod.msw.PrecipitationMapping": [[249, 1, 1, "", "__init__"], [250, 1, 1, "", "from_imod5_data"]], "imod.msw.ScalingFactors": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "from_imod5_data"]], "imod.msw.Sprinkling": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "from_imod5_data"]], "imod.msw.TimeOutputControl": [[255, 1, 1, "", "__init__"]], "imod.msw.VariableOutputControl": [[256, 1, 1, "", "__init__"]], "imod.prepare": [[257, 0, 1, "", "ALLOCATION_OPTION"], [258, 0, 1, "", "DISTRIBUTING_OPTION"], [259, 0, 1, "", "LayerRegridder"], [260, 0, 1, "", "Regridder"], [261, 0, 1, "", "SimulationAllocationOptions"], [262, 0, 1, "", "SimulationDistributingOptions"], [263, 0, 1, "", "Voxelizer"], [264, 2, 1, "", "allocate_drn_cells"], [265, 2, 1, "", "allocate_ghb_cells"], [266, 2, 1, "", "allocate_rch_cells"], [267, 2, 1, "", "allocate_riv_cells"], [268, 2, 1, "", "assign_wells"], [269, 2, 1, "", "c_leakage"], [270, 2, 1, "", "c_radial"], [271, 2, 1, "", "celltable"], [272, 2, 1, "", "cleanup_drn"], [273, 2, 1, "", "cleanup_ghb"], [274, 2, 1, "", "cleanup_riv"], [275, 2, 1, "", "cleanup_wel"], [276, 2, 1, "", "create_layered_top"], [277, 2, 1, "", "distribute_drn_conductance"], [278, 2, 1, "", "distribute_ghb_conductance"], [279, 2, 1, "", "distribute_riv_conductance"], [280, 2, 1, "", "fill"], [281, 2, 1, "", "gdal_rasterize"], [282, 2, 1, "", "get_lower_active_grid_cells"], [283, 2, 1, "", "get_lower_active_layer_number"], [284, 2, 1, "", "get_upper_active_grid_cells"], [285, 2, 1, "", "get_upper_active_layer_number"], [286, 2, 1, "", "laplace_interpolate"], [287, 2, 1, "", "linestring_to_square_zpolygons"], [288, 2, 1, "", "linestring_to_trapezoid_zpolygons"], [289, 2, 1, "", "polygonize"], [290, 2, 1, "", "rasterize"], [291, 2, 1, "", "rasterize_celltable"], [292, 2, 1, "", "reproject"], [293, 2, 1, "", "zonal_aggregate_polygons"], [294, 2, 1, "", "zonal_aggregate_raster"]], "imod.prepare.ALLOCATION_OPTION": [[257, 1, 1, "", "__init__"]], "imod.prepare.DISTRIBUTING_OPTION": [[258, 1, 1, "", "__init__"]], "imod.prepare.LayerRegridder": [[259, 1, 1, "", "__init__"], [259, 3, 1, "", "method"]], "imod.prepare.Regridder": [[260, 1, 1, "", "__init__"], [260, 3, 1, "", "extra_overlap"], [260, 3, 1, "", "method"], [260, 3, 1, "", "ndim_regrid"], [260, 3, 1, "", "use_relative_weights"]], "imod.prepare.SimulationAllocationOptions": [[261, 1, 1, "", "__init__"]], "imod.prepare.SimulationDistributingOptions": [[262, 1, 1, "", "__init__"]], "imod.prepare.Voxelizer": [[263, 1, 1, "", "__init__"], [263, 3, 1, "", "method"]], "imod.select": [[295, 2, 1, "", "active_grid_boundary_xy"], [296, 2, 1, "", "cross_section_line"], [297, 2, 1, "", "cross_section_linestring"], [298, 2, 1, "", "grid_boundary_xy"], [299, 2, 1, "", "points_in_bounds"], [300, 2, 1, "", "points_indices"], [301, 2, 1, "", "points_set_values"], [302, 2, 1, "", "points_values"], [303, 2, 1, "", "upper_active_layer"]], "imod.util": [[304, 2, 1, "", "cd"], [305, 2, 1, "", "coord_reference"], [306, 2, 1, "", "empty_2d"], [307, 2, 1, "", "empty_2d_transient"], [308, 2, 1, "", "empty_3d"], [309, 2, 1, "", "empty_3d_transient"], [310, 2, 1, "", "from_mdal_compliant_ugrid2d"], [311, 2, 1, "", "ignore_warnings"], [312, 2, 1, "", "mdal_compliant_ugrid2d"], [313, 2, 1, "", "print_if_error"], [314, 2, 1, "", "spatial_reference"], [315, 2, 1, "", "to_datetime"], [316, 2, 1, "", "to_ugrid2d"], [317, 2, 1, "", "transform"], [318, 2, 1, "", "where"]], "imod.visualize": [[319, 0, 1, "", "GridAnimation3D"], [320, 0, 1, "", "StaticGridAnimation3D"], [321, 2, 1, "", "cross_section"], [322, 2, 1, "", "grid_3d"], [323, 2, 1, "", "imshow_topview"], [324, 2, 1, "", "line_3d"], [325, 2, 1, "", "plot_map"], [326, 2, 1, "", "quiver"], [327, 2, 1, "", "read_imod_legend"], [328, 2, 1, "", "streamfunction"], [329, 2, 1, "", "waterbalance_barchart"]], "imod.visualize.GridAnimation3D": [[319, 1, 1, "", "__init__"]], "imod.visualize.StaticGridAnimation3D": [[320, 1, 1, "", "__init__"]], "imod.wq": [[330, 0, 1, "", "AdvectionFiniteDifference"], [331, 0, 1, "", "AdvectionHybridMOC"], [332, 0, 1, "", "AdvectionMOC"], [333, 0, 1, "", "AdvectionModifiedMOC"], [334, 0, 1, "", "AdvectionTVD"], [335, 0, 1, "", "BasicFlow"], [336, 0, 1, "", "BasicTransport"], [337, 0, 1, "", "ConstantHead"], [338, 0, 1, "", "Dispersion"], [339, 0, 1, "", "Drainage"], [340, 0, 1, "", "EvapotranspirationHighestActive"], [341, 0, 1, "", "EvapotranspirationLayers"], [342, 0, 1, "", "EvapotranspirationTopLayer"], [343, 0, 1, "", "GeneralHeadBoundary"], [344, 0, 1, "", "GeneralizedConjugateGradientSolver"], [345, 0, 1, "", "LayerPropertyFlow"], [346, 0, 1, "", "MassLoading"], [347, 0, 1, "", "OutputControl"], [348, 0, 1, "", "ParallelKrylovFlowSolver"], [349, 0, 1, "", "ParallelKrylovTransportSolver"], [350, 0, 1, "", "PreconditionedConjugateGradientSolver"], [351, 0, 1, "", "RechargeHighestActive"], [352, 0, 1, "", "RechargeLayers"], [353, 0, 1, "", "RechargeTopLayer"], [354, 0, 1, "", "River"], [355, 0, 1, "", "SeawatModel"], [357, 0, 1, "", "TimeDiscretization"], [358, 0, 1, "", "TimeVaryingConstantConcentration"], [359, 0, 1, "", "VariableDensityFlow"], [360, 0, 1, "", "Well"]], "imod.wq.AdvectionFiniteDifference": [[330, 1, 1, "", "__init__"], [330, 3, 1, "", "courant"], [330, 3, 1, "", "weighting"]], "imod.wq.AdvectionHybridMOC": [[331, 1, 1, "", "__init__"], [331, 3, 1, "", "courant"], [331, 3, 1, "", "dceps"], [331, 3, 1, "", "dchmoc"], [331, 3, 1, "", "max_particles"], [331, 3, 1, "", "nph"], [331, 3, 1, "", "npl"], [331, 3, 1, "", "nplane"], [331, 3, 1, "", "npmax"], [331, 3, 1, "", "npmin"], [331, 3, 1, "", "tracking"], [331, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionMOC": [[332, 1, 1, "", "__init__"], [332, 3, 1, "", "cell_max_nparticles"], [332, 3, 1, "", "cell_min_nparticles"], [332, 3, 1, "", "courant"], [332, 3, 1, "", "dconcentration_epsilon"], [332, 3, 1, "", "max_nparticles"], [332, 3, 1, "", "nparticles_advection"], [332, 3, 1, "", "nparticles_no_advection"], [332, 3, 1, "", "nplane"], [332, 3, 1, "", "tracking"], [332, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionModifiedMOC": [[333, 1, 1, "", "__init__"], [333, 3, 1, "", "courant"], [333, 3, 1, "", "dconcentration_epsilon"], [333, 3, 1, "", "sink_nparticles"], [333, 3, 1, "", "sink_particle_placement"], [333, 3, 1, "", "tracking"], [333, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionTVD": [[334, 1, 1, "", "__init__"], [334, 3, 1, "", "courant"]], "imod.wq.BasicFlow": [[335, 1, 1, "", "__init__"]], "imod.wq.BasicTransport": [[336, 1, 1, "", "__init__"]], "imod.wq.ConstantHead": [[337, 1, 1, "", "__init__"]], "imod.wq.Dispersion": [[338, 1, 1, "", "__init__"]], "imod.wq.Drainage": [[339, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationHighestActive": [[340, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationLayers": [[341, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationTopLayer": [[342, 1, 1, "", "__init__"]], "imod.wq.GeneralHeadBoundary": [[343, 1, 1, "", "__init__"]], "imod.wq.GeneralizedConjugateGradientSolver": [[344, 1, 1, "", "__init__"]], "imod.wq.LayerPropertyFlow": [[345, 1, 1, "", "__init__"]], "imod.wq.MassLoading": [[346, 1, 1, "", "__init__"]], "imod.wq.OutputControl": [[347, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovFlowSolver": [[348, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovTransportSolver": [[349, 1, 1, "", "__init__"]], "imod.wq.PreconditionedConjugateGradientSolver": [[350, 1, 1, "", "__init__"]], "imod.wq.RechargeHighestActive": [[351, 1, 1, "", "__init__"]], "imod.wq.RechargeLayers": [[352, 1, 1, "", "__init__"]], "imod.wq.RechargeTopLayer": [[353, 1, 1, "", "__init__"]], "imod.wq.River": [[354, 1, 1, "", "__init__"]], "imod.wq.SeawatModel": [[355, 1, 1, "", "__init__"], [355, 3, 1, "", "check"], [356, 1, 1, "", "create_time_discretization"], [355, 3, 1, "", "modelname"]], "imod.wq.TimeDiscretization": [[357, 1, 1, "", "__init__"]], "imod.wq.TimeVaryingConstantConcentration": [[358, 1, 1, "", "__init__"]], "imod.wq.VariableDensityFlow": [[359, 1, 1, "", "__init__"]], "imod.wq.Well": [[360, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:module"}, "terms": {"": [0, 9, 10, 12, 13, 14, 23, 32, 35, 36, 41, 44, 54, 55, 56, 107, 119, 140, 146, 180, 185, 187, 208, 209, 210, 231, 247, 260, 263, 265, 270, 280, 296, 297, 300, 315, 318, 326, 330, 331, 332, 333, 334, 360, 361, 376, 377, 382, 384, 387, 393, 395, 396, 399, 403, 408, 413, 415, 419, 421, 422, 425, 428, 429, 433, 437, 438, 439, 440, 441], "0": [4, 5, 6, 8, 11, 12, 16, 21, 26, 27, 32, 44, 45, 48, 51, 55, 61, 68, 70, 72, 78, 81, 84, 89, 91, 93, 94, 95, 97, 99, 101, 106, 110, 111, 113, 115, 116, 119, 120, 122, 124, 125, 126, 127, 131, 134, 146, 147, 149, 152, 153, 154, 156, 158, 160, 161, 162, 164, 165, 166, 168, 169, 171, 172, 175, 181, 182, 183, 185, 186, 187, 188, 190, 191, 194, 195, 197, 199, 201, 202, 206, 207, 233, 234, 239, 247, 248, 254, 257, 258, 260, 268, 271, 272, 273, 274, 275, 286, 287, 288, 292, 294, 297, 299, 300, 301, 302, 303, 319, 320, 321, 322, 324, 325, 326, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 345, 348, 349, 350, 357, 359, 361, 372, 374, 379, 380, 381, 382, 383, 384, 386, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 427, 428, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443], "00": [3, 379, 380, 382, 383, 386, 387, 389, 394, 403, 407, 410, 414, 415, 418, 432, 438, 439, 443], "000": [315, 394, 407, 432, 443], "000000": 410, "000000000": [387, 403, 410, 415, 438, 439], "000000002": 403, "00001157407405": 439, "0000864": 383, "0001": [27, 175, 331, 345, 348, 350, 379, 380, 381, 382, 383, 384, 400, 402], "0003": 403, "00078071": 403, "00078091": 403, "00078183": 403, "00082746": 403, "00083373": [403, 439], "000834": 439, "0008352": 403, "00084055": 403, "0008475": 382, "00084771": 403, "00085378": 403, "00086102": 403, "00088318": 403, "0008994": 403, "00089943": 403, "00090591": 403, "0009065": 403, "0009093": 403, "0009098": 403, "0009125": 403, "00091255": 403, "000913": 403, "000918": 439, "00091826": [403, 439], "00097932": 403, "00098031": 403, "00098196": 403, "001": [175, 345, 380, 383, 387, 396, 398, 400, 401, 402, 403, 406, 408, 410], "00158879": 403, "00159777": 403, "00160275": 403, "00160428": 403, "00160856": 403, "00160863": 403, "00161301": 403, "00161518": 403, "00161658": 403, "0016166": 403, "00161772": 403, "00161827": 403, "00161909": 403, "0016207": 403, "00162071": 403, "00162122": 403, "00162407": 403, "0016263": 403, "00162744": 403, "00163142": 403, "00163613": 403, "00163785": 403, "00163787": 403, "001638": 439, "00163841": 403, "00163919": 403, "00164029": 403, "00164151": 403, "00164618": 403, "00164895": 403, "00166721": 403, "00167463": 403, "0016792": 403, "00167949": 403, "00168478": 403, "00168655": 403, "00168658": 403, "001689": 403, "00169": 403, "00169032": 403, "00169166": 403, "00169605": 403, "00169624": 403, "00169678": 403, "00169771": 403, "00169961": 403, "00170712": 403, "00170842": 403, "001712": 403, "00171206": 403, "00171221": 403, "00172136": 403, "00173": 403, "00173005": 403, "00173329": 403, "0017413": 403, "00174276": 403, "00174685": 403, "00174713": 403, "001752": 403, "00175232": 403, "00175247": 403, "00175276": 403, "00175411": 403, "00175477": 403, "0017549": 403, "00175632": 403, "00175832": 403, "00175834": 403, "00176321": 403, "00176362": 403, "00176593": 403, "0017666": 403, "00176716": 403, "00176909": 403, "00177083": 403, "00177297": 403, "00177411": 403, "00177807": 403, "00177865": 403, "00178251": 403, "00179237": 403, "00179266": 403, "00180298": 403, "001803": 403, "001825": 403, "00182535": 403, "00182747": 403, "00183059": 403, "00183236": 403, "00183427": 403, "00183771": 403, "00184691": 403, "00185661": 403, "00186046": 403, "00186831": 403, "00187044": 403, "00188156": 403, "00188612": 403, "00189647": 403, "00189853": 403, "0019": 403, "00190413": 403, "001906": 403, "001907": 403, "00190719": 403, "00190866": 403, "001912": 403, "00191231": 403, "00191248": 403, "00191336": 403, "00191589": 403, "001916": 403, "001917": 403, "00191725": 403, "00191761": 403, "00191962": 403, "0019212": 403, "00192603": 403, "0019277": 403, "00193016": 403, "0019308": 403, "00193096": 403, "00194384": 403, "00194592": 403, "00194606": 403, "001961": 403, "001982": 439, "00198224": 403, "002": [175, 395, 401], "00203658": 403, "00203995": 403, "002041": 403, "00204444": 403, "00204451": 403, "00204493": 403, "0020481": 403, "0020491": 403, "00205102": 403, "00217596": 403, "00217812": 403, "00218172": 403, "0021932": 403, "00219364": 403, "00219559": 403, "00220936": 403, "00221006": 403, "00221065": 403, "00221361": 403, "00221743": 403, "00222133": 403, "002221arrai": 403, "00222806": 403, "00223096": 403, "00223372": 403, "002234": 403, "00223808": 403, "00224485": 403, "00224585": 403, "002247": 403, "00224736": 403, "00225167": 403, "00226806": 403, "00226807": 403, "00227892": 403, "0022924": 403, "00229702": 403, "00230603": 403, "00231468": 403, "00231699": 403, "00232221": 403, "0023817": 403, "002382arrai": 403, "00242177": 403, "00247561": 403, "00247603": 403, "00247622": 403, "00248376": 403, "00248442": 403, "00248449": 403, "00249076": 403, "00249155": 403, "00249192": 403, "003658": 440, "0056": 439, "00582": 164, "007": 384, "007232": 440, "00762653": 440, "009": 413, "01": [25, 44, 55, 78, 124, 135, 137, 151, 175, 199, 268, 286, 336, 338, 356, 359, 361, 379, 380, 381, 382, 383, 384, 386, 387, 395, 396, 398, 400, 401, 402, 403, 406, 407, 408, 410, 414, 421, 422, 423, 424, 432, 433, 438, 439, 443], "01089": 440, "0108900045784": 440, "01161366e": 439, "0125": [383, 384], "01326780e": 439, "014": 440, "014464": 440, "01597916": 440, "01724138": 440, "01arrai": 387, "01t00": [379, 380, 382, 383, 387, 438], "01xarrai": 387, "02": [135, 151, 361, 379, 384, 386, 387, 396, 400, 402, 406, 407, 410, 418, 421, 422, 432, 434, 438, 439, 440, 443], "02017498e": 439, "02150538": 440, "022981": 440, "025": 78, "02609539": 440, "02678776e": 439, "02arrai": 438, "02d": [44, 55], "02t00": 438, "02xarrai": 438, "03": [124, 175, 199, 361, 381, 386, 387, 396, 400, 402, 403, 406, 407, 432, 435, 440, 441, 443], "03195832": 440, "03195833": 440, "03225806": 440, "03448276": 440, "03830185e": 439, "03838577e": 439, "03arrai": [403, 440], "04": [361, 387, 400, 402, 406, 407, 410, 415, 432, 433, 438], "040467": 434, "042497": 440, "045454545": 382, "046": 439, "046072": 440, "0471248271865": 440, "047125": 440, "04793749": 440, "04804630e": 439, "04805851e": 439, "048676": 440, "04867641771818": 440, "04973": 440, "04arrai": 438, "04t00": 438, "05": [127, 175, 199, 202, 268, 275, 331, 332, 333, 338, 361, 387, 393, 403, 406, 410, 414, 415, 418, 428, 432, 433, 436, 439, 440, 441, 443], "05172414": 440, "05299568e": 439, "053": 413, "053304": 440, "05376344": 440, "05433397e": 439, "05435915e": 439, "054636": 440, "056": 443, "0571b0": 329, "05957603e": 439, "05arrai": [393, 403, 415, 433, 439, 440, 441], "05t01": 383, "06": [344, 349, 361, 387, 406, 410, 432, 437, 438, 443], "06107712e": 439, "06316519e": 439, "06320744e": 439, "063594": 434, "06391665": 440, "06451613": 440, "06758380e": 439, "06817684e": 439, "06821775e": 439, "06896552": 440, "06arrai": 439, "07": [361, 387, 410, 432, 433, 438, 443], "07140017": 440, "072": 439, "072821": 440, "07375240e": 439, "07408428e": 439, "07412310e": 439, "07526882": 440, "07691193e": 439, "077": [401, 407, 432], "078": [432, 438, 439, 443], "07891464e": 439, "07901382e": 439, "07952986e": 439, "07958746e": 439, "07989581": 440, "0799999": 441, "08": [361, 387, 414, 432, 439, 440, 443], "081337": 440, "084911": 440, "084911240260034": 440, "0862069": 440, "088": 439, "088569": 440, "0896": 439, "09": [361, 387, 410, 432, 440, 443], "09063745": 440, "090909091": 382, "0912": 439, "092": 439, "092143": 440, "09587497": 440, "09587498": 440, "095e": [415, 433], "09677419": 440, "096965": 440, "09970045": 440, "0arrai": [387, 393, 396, 403, 415, 433, 438, 439, 440, 441], "0b0": 427, "0d": 0, "0e": [27, 332, 333, 349, 350, 379, 380, 381, 382, 383, 384, 395, 396, 398, 400, 401, 402, 403, 406, 408, 428], "0e20": [44, 47, 49, 345], "0e30": [335, 336], "0rc0": [361, 431], "0x00000265d3624e50": 433, "0x00000265d3700190": 433, "0x00000265d373e590": 433, "0x00000265d38633d0": 433, "0x00000265d3871f90": 433, "0x00000265d3873990": 433, "0x00000265d3873c50": 433, "0x00000265d3873f10": 433, "0x00000265d389f910": 433, "0x00000265d389f950": 433, "0x00000265d38ae590": 433, "0x00000265d38ef690": 433, "0x00000265d38efb50": 433, "0x00000265d39092d0": 433, "0x00000265d49bb690": 433, "0x00000265d49eec50": 433, "0x00000265d4a66790": 403, "0x00000265d4c3eb90": 433, "0x00000265d57f6690": 379, "0x00000265d5892c90": 383, "0x00000265d593c950": 399, "0x00000265d5c591d0": 415, "0x00000265d5e6e250": 379, "0x00000265d5e9e410": 383, "0x00000265d5f56410": 399, "0x00000265d6238950": 403, "0x00000265d63a8750": 413, "0x00000265d6466590": 382, "0x00000265d6645450": 412, "0x00000265d6665e90": 408, "0x00000265d66a3390": 380, "0x00000265d685bbd0": 403, "0x00000265d6b2e190": 403, "0x00000265d6b6eb50": 415, "0x00000265d7361150": 439, "0x00000265d739ad50": 410, "0x00000265d73f4790": 413, "0x00000265d7a37690": 379, "0x00000265d7a6e2d0": [382, 384], "0x00000265d7b7a2d0": 395, "0x00000265d7cd0790": 440, "0x00000265d7d09850": 406, "0x00000265d7ea4890": 379, "0x00000265db0b1c90": 397, "0x00000265db0c7290": 393, "0x00000265db256410": 380, "0x00000265db26e690": 382, "0x00000265db3052d0": 382, "0x00000265db30fa90": 380, "0x00000265dc3803d0": 412, "0x00000265dc39b450": 401, "0x00000265dc528a50": 403, "0x00000265dc532590": 399, "0x00000265dc54e9d0": 410, "0x00000265dc5ccdd0": 411, "0x00000265dc6722d0": 406, "0x00000265dc692f90": 400, "0x00000265dc85c9d0": 398, "0x00000265dca30f10": 408, "0x00000265dcb72ad0": 382, "0x00000265dce66790": 382, "0x00000265dcec4210": 384, "0x00000265dd15ea10": 403, "0x00000265dd54e3d0": 401, "0x00000265dd54e790": 399, "0x00000265dd54ec10": 401, "0x00000265dd574310": 410, "0x00000265dd5b74d0": 401, "0x00000265dd6123d0": 403, "0x00000265dde45dd0": 395, "0x00000265df9ecd50": 440, "0x00000265dff46590": 403, "0x00000265e4a69650": 403, "0x00000265e4b4e690": 403, "0xarrai": [387, 415, 438, 439], "1": [3, 5, 11, 12, 21, 26, 27, 29, 30, 44, 47, 49, 50, 51, 55, 58, 66, 78, 82, 83, 84, 91, 93, 95, 101, 106, 110, 122, 124, 126, 127, 139, 146, 149, 152, 156, 161, 162, 164, 165, 168, 171, 175, 183, 188, 190, 194, 195, 199, 202, 208, 211, 234, 239, 248, 252, 254, 257, 258, 264, 265, 266, 267, 268, 272, 273, 274, 276, 286, 287, 294, 297, 299, 300, 301, 302, 303, 313, 319, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 344, 345, 348, 349, 350, 353, 357, 358, 359, 361, 379, 380, 381, 382, 383, 384, 387, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 415, 419, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 434, 437, 438, 439, 440, 441], "10": [26, 27, 66, 77, 111, 113, 115, 118, 164, 175, 287, 288, 301, 328, 331, 332, 344, 349, 350, 361, 380, 381, 382, 384, 386, 387, 393, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 415, 421, 422, 427, 431, 432, 433, 434, 439, 440, 441, 443], "100": [27, 175, 292, 315, 348, 350, 381, 387, 393, 395, 396, 398, 400, 401, 402, 403, 406, 408, 410, 412, 413, 415, 419, 421, 424, 439, 440], "1000": [4, 26, 78, 81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 165, 166, 168, 169, 171, 172, 182, 186, 191, 197, 201, 247, 348, 350, 359, 395, 398, 403, 408, 434], "10000": [5, 271, 293, 294], "100000": [434, 439], "10000038": 441, "100_000": [292, 433], "101": [401, 407, 408, 432], "101000": 434, "1016": [77, 384, 440], "102": 415, "102000": 434, "102150": 411, "1022": 433, "1025": [359, 395, 398], "102550": 411, "1029": 382, "103000": 434, "103150": 411, "103350": 411, "10344828": 440, "1035": 440, "103736": 415, "104": 175, "104000": 434, "10412979e": 439, "10419674e": 439, "1048": 439, "104b": [433, 439], "105": [398, 415], "1050": 440, "105000": 434, "105257": 77, "10539465e": 439, "10544491e": 439, "105e": [415, 433], "106": [175, 440], "106000": 434, "107": 415, "107000": 434, "1073": 440, "10752688": 440, "108000": 434, "108750": 411, "108774": 434, "1088": 440, "109000": 434, "109150": 411, "10_000": 5, "10kb": 396, "10mb": 403, "11": [301, 361, 387, 402, 403, 410, 415, 427, 431, 433, 434, 439, 440, 441], "110": [415, 418], "110000": 434, "1104": 440, "110_000": 433, "111": [26, 387], "111000": 434, "1111": 164, "111378": 434, "111380": 434, "11185414": 440, "112": 415, "112000": 434, "112096": 434, "112098": 434, "1126": 440, "113000": 434, "114000": 434, "1141": 440, "114750": [415, 433], "114850": [415, 433], "114950": [415, 433], "115": [398, 415, 434], "1150": 401, "115000": 434, "11500013": 440, "115050": [415, 433], "115150": [415, 433], "115250": [415, 433], "115350": [415, 433], "11541767e": 439, "115450": [415, 433], "11550407e": 439, "115550": [415, 433], "115650": [411, 412, 413, 415, 433], "115926": 434, "115938": 434, "116000": 434, "1163": 440, "117": 415, "117000": 434, "117297": 434, "117298": 434, "117599": 439, "1179": 440, "118000": 434, "119": [403, 407, 432], "119000": 434, "1194": 440, "11999989": 440, "11kb": 403, "11layer": 387, "11mb": [415, 439], "12": [21, 299, 301, 361, 380, 387, 393, 399, 402, 403, 407, 410, 415, 427, 431, 432, 433, 434, 439, 440, 441], "120": [379, 393, 415], "120176": 440, "120333": 440, "12068966": 440, "12087021e": 439, "12099190e": 439, "120_000": 434, "121": 379, "1218": 440, "122": 415, "1232": [439, 440], "123e": 396, "125": [396, 398, 415, 439], "12500": 400, "1251": 439, "1252": 440, "125coordin": 439, "125dask": 439, "125nan": 439, "126": 396, "127": [396, 415], "1271": 440, "127409": 440, "1278333": 440, "1285": 440, "129": 440, "12960052": 440, "13": [361, 380, 402, 403, 410, 415, 427, 433, 434, 439, 440, 441], "130": [415, 432, 437, 443], "1300000": [433, 439], "1309": 440, "130983": 440, "132152": 413, "1324": 440, "1340": 440, "134641": 440, "135": [398, 415], "1359": 410, "1362": 440, "136363636": 382, "136b": 403, "13754582e": 439, "1377": 440, "13793103": 440, "138": 408, "13978495": 440, "1399": 440, "139b": 438, "13arrai": [403, 433, 439, 441], "13coordin": [433, 439, 441], "13kb": 403, "13nan": 403, "13time": 439, "13xarrai": [403, 433], "13y": [403, 433, 439], "14": [3, 21, 361, 396, 402, 403, 415, 434, 440], "140": 415, "14000034": 440, "140b": 438, "141": [383, 386, 413, 414, 417, 418, 432], "1415": 440, "142": 175, "143": 175, "1430": 440, "14381246": 440, "144": 440, "145": [398, 415], "14511347": 440, "1454": 440, "1468": 440, "147": 175, "1487": 440, "14964905e": 439, "14991608e": 439, "14th": 3, "15": [111, 113, 115, 288, 345, 346, 361, 380, 382, 395, 396, 398, 399, 400, 401, 402, 403, 406, 410, 415, 417, 419, 434, 440], "150": [27, 348, 350, 379, 380, 381, 382, 383, 384, 387, 393, 408, 410, 415, 440], "1500": 440, "15040016": 440, "15053763": 440, "1507": 440, "151": [432, 433, 443], "1521": 440, "152397": 433, "1545": 440, "155": 415, "15517241": 440, "155578": 434, "156": 439, "1560": 440, "156e": [415, 433], "157": 396, "1574074074074073e": 439, "157407e": 439, "1576": 440, "157e": 439, "158": 439, "15840006": 440, "159": [379, 439], "159016": 440, "15979162": 440, "1598": 440, "16": [331, 332, 361, 383, 399, 403, 404, 407, 410, 415, 432, 434, 439, 440], "160": [379, 415], "160b": 440, "161": 439, "1613": 440, "162": 440, "1635": 440, "165": [415, 434], "1651": 440, "166": 439, "166248": 440, "1666": 440, "1678": [41, 54], "1679": 42, "1690": 440, "169822": 440, "16982248058866": 440, "16b": [387, 396, 403, 438, 439], "16mb": [440, 441], "17": [194, 361, 396, 403, 415, 417, 434, 440], "170": 415, "170174": 440, "1704": 440, "1708": 379, "172": 108, "17204301": 440, "1723": 440, "17241379": 440, "173": 439, "17348": 440, "1743": 440, "1745": 164, "175": [415, 439], "1757": 440, "17577079": 440, "177": 403, "177892": 413, "178": 403, "1781": 440, "179": 403, "1796": 440, "17x": 403, "18": [231, 361, 403, 407, 410, 415, 432, 434, 440], "180": [21, 393, 403, 415], "181": 403, "1811": 440, "181818182": 382, "182": [403, 440], "1827957": 440, "183": 440, "1834": 440, "1849": 440, "185": 415, "186": 439, "187": [434, 439], "1870": 440, "187935": 410, "188": 439, "1887": 440, "18965517": 440, "1899": 50, "19": [361, 410, 415, 434, 439, 440, 441], "190": 415, "1900": [50, 380], "1902": 440, "190894": 434, "19174995": 440, "19246": 413, "1926": 440, "192689": 434, "1940": 440, "194318": 440, "195": 415, "19585562e": 439, "1959": 440, "196b": 415, "197": 440, "197855": 440, "1979": [415, 440], "1984": 439, "19840002": 440, "1988": 400, "1990": [175, 345], "1992": 175, "1993": 440, "1996": 400, "1997": 382, "1999": [11, 12, 408], "1arrai": [393, 403, 433, 439], "1b": [438, 439, 440, 441], "1d": [0, 7, 305, 306, 307, 308, 309, 314, 338, 387, 405, 407, 421, 422, 425, 432], "1d_tpt_benchmark": 401, "1e": [44, 47, 48, 49, 111, 165, 331, 332, 333, 335, 336, 344, 345, 349, 396, 398, 403], "1e3": [115, 171, 287, 288], "1kb": [387, 396, 439, 440], "1layer": 396, "1mb": [439, 440], "1st": [331, 332, 333], "1xarrai": 403, "1y": 438, "2": [9, 13, 21, 26, 27, 44, 47, 49, 50, 55, 78, 80, 87, 93, 97, 103, 108, 111, 113, 115, 124, 126, 151, 152, 158, 164, 165, 168, 171, 175, 195, 199, 206, 237, 239, 251, 254, 257, 258, 296, 299, 300, 301, 302, 319, 331, 332, 333, 344, 345, 352, 357, 361, 372, 374, 379, 382, 387, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 410, 411, 415, 417, 418, 421, 422, 427, 428, 429, 431, 433, 434, 437, 438, 439, 440, 441], "20": [44, 47, 48, 49, 66, 111, 113, 115, 175, 287, 288, 345, 361, 380, 382, 393, 395, 399, 400, 402, 410, 415, 434, 440], "200": [292, 400, 402, 403, 406, 411, 412, 415, 433, 439, 440, 441], "2000": [3, 25, 124, 135, 151, 199, 356, 359, 379, 380, 381, 382, 383, 384, 396, 398, 400, 401, 402, 403, 406, 438], "2000d": 401, "2001": [25, 41, 54, 137, 356, 381], "2002": [4, 137, 408], "2003": [137, 379, 384], "2004": 384, "2005": [23, 35, 175, 195, 399, 400, 403], "2007": 410, "2008": [26, 410], "2009": [164, 403, 439], "200_000": 292, "200coordin": 440, "200layer": [433, 439, 440, 441], "200x": [403, 433, 439, 440], "201": 413, "2010": [382, 403, 439], "2011": [403, 410], "2012": [403, 410], "2013": [403, 406], "2014": [403, 410], "2015": 403, "2016": [26, 410], "2017": [387, 440], "2017a": 26, "2017b": 26, "2018": 387, "2019": 361, "202": 131, "2020": [164, 361, 379, 395, 421, 422, 423, 424, 429], "2021": [77, 361], "2022": 361, "2023": 361, "2024": 361, "2030": 398, "2032": 440, "20356822": 440, "2047": 440, "205": 415, "2050": 434, "205088": 440, "20539975": 440, "20689655": 440, "2070": 440, "20772911": 440, "2085": 440, "20898857e": 439, "20933380e": 439, "20arrai": 440, "20coordin": 440, "20xarrai": 440, "20y": 440, "21": [361, 383, 399, 415, 434, 438, 439, 440], "210": 415, "2106": 440, "211": 396, "211782": 410, "212": 396, "2123": 440, "21232": 440, "213": 396, "2138": 440, "214": 396, "215": [396, 415], "21505376": 440, "215arrai": 396, "215xarrai": 396, "216": 396, "2162": 440, "21656537": 440, "216b": 403, "216dask": 396, "216kb": 433, "2176": 440, "218": [415, 433], "218462": 440, "218x": [415, 433], "2195": 440, "2195519960724": 440, "219552": 440, "21kb": 387, "21mb": [433, 439], "22": [361, 410, 415, 434, 439, 440], "220": [415, 440], "2212": 439, "2215": 440, "2229": 440, "22370827": 440, "22413793": 440, "224736": 410, "225": 415, "22500": 400, "225211": 410, "2253": [382, 440], "22580645": 440, "225_500": 410, "2261": [41, 54, 127, 202, 382], "226134": 410, "2262": 42, "226410": 410, "226509": 410, "2268": 440, "226a": 374, "2272": 439, "227272727": 382, "2283": 440, "2295": 0, "2296": 0, "22996807": 440, "23": [361, 403, 415, 434, 439, 440], "230": [393, 415], "230500": 403, "2306": 440, "230_000": 403, "23147655": 440, "231500": 403, "2321": 440, "232500": 403, "233500": 403, "2342": 440, "234500": 403, "235": [415, 440], "235500": 403, "2359": 440, "236500": 403, "236695": 440, "2374": 440, "237500": [403, 439], "237512": [403, 433, 439, 440, 441], "237537": [403, 433, 439, 440, 441], "237550": 439, "237562": [403, 433, 439, 440, 441], "237587": [403, 433, 439, 440, 441], "237612": [403, 433, 439, 440, 441], "237637": [403, 433, 439, 440, 441], "237650": 439, "237662": [403, 433, 439, 440, 441], "237687": [403, 433, 439, 440, 441], "237712": [403, 433, 439, 440, 441], "237737": [403, 433, 439, 440, 441], "237750": 439, "237850": 439, "237950": 439, "237_500": 403, "238050": 439, "238150": 439, "238250": 439, "238350": 439, "238450": 439, "238500": 403, "238550": 439, "238650": 439, "238725": 440, "238737": 440, "238750": 439, "238762": 440, "238787": 440, "238812": 440, "238837": 440, "238850": 439, "238862": 440, "238887": 440, "238912": 440, "238937": 440, "238950": 439, "238962": 440, "238987": 440, "239012": 440, "239037": 440, "239050": 439, "239062": 440, "239087": 440, "239112": 440, "239137": 440, "239150": 439, "239162": 440, "239187": 440, "239212": 440, "239237": 440, "239250": 439, "239262": 440, "239287": 440, "239312": 440, "239337": 440, "239350": 439, "239362": 440, "239387": 440, "239412": 440, "239437": 440, "239450": 439, "239462": 440, "239487": 440, "239500": 403, "239512": 440, "239537": 440, "239550": 439, "239562": 440, "239587": 440, "239612": 440, "239637": 440, "239650": 439, "239662": 440, "239687": 440, "23968744": 440, "2397": 440, "239712": 440, "239737": 440, "239750": 439, "239762": 440, "239787": 440, "239812": 440, "239837": 440, "239850": 439, "239862": 440, "239887": 440, "239912": 440, "239937": 440, "239950": 439, "239962": 440, "239987": 440, "24": [3, 383, 410, 415, 434, 439, 440, 441], "240": [393, 415], "240012": [403, 440], "240037": 440, "240050": 439, "240062": 440, "240087": 440, "240112": 440, "240137": 440, "240150": 439, "240162": 440, "240187": 440, "240212": 440, "240237": 440, "240250": 439, "240262": 440, "240287": 440, "240312": 440, "240337": 440, "240350": 439, "240362": 440, "240387": 440, "240412": 440, "240437": 440, "240450": 439, "240462": 440, "240487": 440, "240500": 403, "240512": 440, "240537": 440, "240550": 439, "240562": 440, "240587": 440, "240612": 440, "240637": 440, "240650": 439, "240662": 440, "240687": 440, "240712": 440, "240737": 440, "240750": 439, "240762": 440, "240787": 440, "240812": 440, "240837": 440, "240850": 439, "240862": 440, "240887": 440, "240912": 440, "240937": 440, "240950": 439, "240962": 440, "240987": 440, "240_000": [403, 410], "241012": 440, "241037": 440, "241050": [439, 440], "241150": 439, "2412": 440, "241250": 439, "241350": 439, "24137931": 440, "241450": 439, "241500": 403, "241550": 439, "241650": 439, "241750": 439, "241850": 439, "24192309": 440, "241950": 439, "242050": 439, "242150": 439, "242250": 439, "242350": 439, "242450": 439, "242500": 403, "242550": 439, "242650": 439, "24273429": 403, "242750": 439, "242850": 439, "242950": 439, "2430": 440, "243050": 439, "243150": 439, "243250": 439, "243350": 439, "243450": 439, "243500": 403, "243550": 439, "243650": 439, "243750": 439, "243850": 439, "243927": 440, "243950": 439, "244012": 403, "244050": 439, "244150": 439, "244250": 439, "244350": 439, "2444": 440, "244450": 439, "244500": 403, "244550": 439, "244650": 439, "244750": 439, "244850": 439, "24491787e": 439, "244950": 439, "244_000": 403, "245": 415, "245050": 439, "2451": 440, "245150": 439, "245250": 439, "245350": 439, "245450": 439, "245500": 403, "245550": 439, "245650": 439, "245750": 439, "245850": 439, "245950": 439, "246050": 439, "246150": 439, "246250": 439, "24633751e": 439, "246350": 439, "246450": 439, "2465": 440, "246500": 403, "246550": 439, "246650": 439, "24668083e": 439, "24672249": 403, "246750": 439, "246850": 439, "246950": 439, "247050": 439, "247150": 439, "247250": 439, "24731183": 440, "247350": 439, "247450": 439, "247500": 403, "247525": 410, "247550": 439, "247650": 439, "247750": 439, "247850": 439, "247950": 439, "248": [415, 433], "248050": 439, "2481": 415, "248150": 439, "248250": 439, "248350": 439, "248450": 439, "248500": 403, "248550": 439, "248650": 439, "248750": 439, "248850": 439, "2489": 440, "248950": 439, "249050": 439, "249150": 439, "249250": 439, "249350": 439, "249450": 439, "249500": 403, "249550": 439, "249650": 439, "249750": 439, "249762": [403, 433, 439, 440, 441], "249787": [403, 433, 439, 440, 441], "249812": [403, 433, 439, 440, 441], "249837": [403, 433, 439, 440, 441], "249850": 439, "249862": [403, 433, 439, 440, 441], "249887": [403, 433, 439, 440, 441], "249912": [403, 433, 439, 440, 441], "249937": [403, 433, 439, 440, 441], "249950": 439, "249962": [403, 433, 439, 440, 441], "249987": [403, 433, 439, 440, 441], "24b": [387, 393, 438], "24kb": 440, "25": [175, 359, 361, 393, 398, 401, 403, 410, 415, 433, 434, 439, 440, 441], "250": [165, 168, 171, 380, 387, 415, 440], "250000": 439, "2504": 440, "250500": 403, "250_000": 403, "251159": 440, "25116062": 440, "251500": 403, "2519": 440, "252500": 403, "253500": 403, "25355321": 403, "2542": 440, "254500": 403, "255500": 403, "2556666": 440, "2557": 440, "25598717": 440, "256": 439, "25620192": 403, "256500": 403, "2578": 440, "257_000": 403, "25806452": 440, "258392": 440, "25846219e": 439, "25862069": 440, "2595": 440, "25999999": 440, "25arrai": 393, "25kb": 439, "25th": 292, "26": [361, 410, 415, 432, 434, 439, 440, 441, 443], "2610": 440, "26131344": 440, "2633": 440, "26336139": 403, "2648": 440, "26504986": 403, "26550211": 403, "26586366e": 439, "2666": 440, "2677002": 440, "2687": 440, "2688172": 440, "269": 410, "26985601": 403, "26992607": 440, "27": [26, 103, 380, 403, 415, 433, 434, 440], "270": [21, 384, 403], "27008811": 403, "2701": 440, "2713542": 440, "27164576": 440, "27183901": 403, "2725": 440, "272727273": 382, "274": 440, "27431479": 403, "27500": 400, "275534": 440, "27586207": 440, "276": 439, "27649525": 403, "278": [384, 439], "27823924": 403, "27883947": 440, "27time": 403, "28": [0, 3, 380, 410, 415, 434, 439, 440], "280": [379, 382], "28070347": 403, "28274798": 440, "282767": 440, "28512": [379, 382, 383, 384], "28608515": 403, "28676046": 403, "287": 384, "28762492": 440, "289": 440, "28957748": 440, "28992": [292, 325, 413], "289999": 440, "28kb": 396, "28th": 3, "29": [361, 410, 415, 434, 440, 441], "29032258": 440, "2907364": 403, "291671": 440, "29310345": 440, "294117632": 410, "29513741": 440, "297231": 440, "29728577": 403, "2arrai": 396, "2coordin": [438, 439], "2d": [0, 13, 14, 26, 258, 277, 279, 280, 289, 292, 298, 303, 306, 307, 308, 316, 322, 325, 348, 349, 379, 380, 381, 382, 383, 384, 395, 403, 405, 407, 421, 422, 425, 432, 436, 442, 443], "2d6bb6b2": 374, "2f": [348, 349], "2gb": 374, "2kb": [387, 396, 403, 415, 433, 439, 440, 441], "2layer": [438, 439], "2mb": [403, 433, 440], "2mesh2d_nfac": 396, "2x": 438, "2y": [387, 439], "3": [3, 4, 6, 8, 11, 12, 26, 27, 47, 49, 111, 131, 164, 165, 175, 195, 239, 258, 299, 300, 301, 302, 326, 331, 332, 333, 336, 344, 351, 361, 379, 382, 387, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 411, 415, 417, 421, 422, 424, 427, 428, 429, 431, 433, 434, 437, 438, 439, 440, 441], "30": [27, 66, 260, 263, 319, 320, 322, 335, 336, 344, 348, 349, 350, 379, 380, 381, 382, 383, 384, 387, 393, 400, 402, 403, 404, 407, 410, 415, 432, 439], "300": [329, 400, 402, 406], "30107527": 440, "30180931": 440, "302": [432, 433, 434, 443], "30360409": 440, "303704": 410, "304": 382, "304463": 440, "3044632363935": 440, "305e": 403, "306": 439, "3072": 374, "308": 379, "309": 440, "30980277": 440, "30_000": 419, "30t23": [403, 439], "31": [384, 403, 408, 415, 439], "31001320e": 439, "31028404e": 439, "31034483": 440, "31123686e": 439, "3125604112": 413, "314374": 440, "315815": 440, "315e": 403, "318181818": 382, "31937456e": 439, "31958325": 440, "31arrai": [403, 415, 439], "31t00": [403, 415, 439], "31xarrai": 403, "32": [271, 331, 332, 415, 429, 432], "3216": 439, "321606": 440, "32258065": 440, "32500": 400, "325kb": 439, "32630": 292, "32631": 413, "327": 440, "32758621": 440, "328": [384, 386, 393, 394, 432], "3288": 439, "3288002": 440, "328838": 440, "329": [439, 440], "32mb": 440, "33": [382, 410, 415, 440], "33000016": 440, "331": 396, "333": [398, 407, 432], "33302832": 440, "33333333": 440, "33556241": 440, "33594632": 440, "336": 439, "336071": 440, "339": 396, "339959": 440, "34": [372, 374, 415, 440, 441], "340": 396, "341": 396, "342": [396, 404, 407, 410, 432, 440], "343303": 440, "34408602": 440, "34453869": 440, "34482759": 440, "34805989": 440, "35": [190, 336, 379, 380, 381, 382, 383, 384, 393, 395, 398, 401, 410, 415, 440], "350": 387, "35154157": 440, "353213": 440, "35321338409926": 440, "35387764e": 439, "35398254e": 439, "35500002": 440, "35537922": 440, "35661888": 440, "3572": 399, "358": 403, "36": [410, 415, 432, 440, 441], "360446": 440, "36107755": 440, "36206897": 440, "363636364": 382, "364": 408, "364103": 440, "364103388758": 440, "3648": 439, "365": [387, 408, 439, 440], "3655914": 440, "365655": 440, "365d": 408, "36704140e": 439, "36731339e": 439, "36752074": 440, "367678": 440, "37": 415, "371": 434, "3724": [434, 439], "3744": 440, "37491": 440, "375": 434, "37500": 400, "375e": [403, 433, 439, 440, 441], "37634409": 440, "376e": [403, 433, 439, 440, 441], "3776": 440, "37846184": 440, "378e": 439, "379": 439, "37931034": 440, "37948227e": 439, "37981462e": 439, "38": [396, 415, 439, 440], "380": 440, "38137436": 440, "382142": 440, "3834999": 440, "3848": 439, "386406": 434, "387e": 440, "388e": 440, "389799": 440, "39": [374, 415, 440, 441], "390": [410, 433], "3915987": 440, "392b": 415, "39655172": 440, "39657822e": 439, "39692154e": 439, "397": 440, "399285": 440, "39947906": 440, "3arrai": [387, 393], "3coordin": [393, 438], "3d": [0, 5, 7, 15, 90, 100, 105, 121, 137, 148, 155, 161, 187, 192, 277, 279, 280, 303, 309, 319, 320, 322, 335, 387, 400, 403, 415, 416, 419, 421, 422, 425, 430, 432, 436, 442, 443], "3kb": 396, "3rd": [326, 357], "3xarrai": 393, "3y": 387, "4": [5, 27, 47, 49, 93, 97, 103, 108, 119, 124, 146, 151, 152, 158, 164, 175, 190, 194, 199, 206, 207, 258, 299, 300, 301, 302, 344, 349, 350, 359, 361, 374, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 413, 414, 415, 419, 427, 428, 433, 434, 436, 438, 439, 440, 441], "40": [66, 195, 331, 332, 333, 379, 380, 383, 384, 395, 410, 415, 428, 437], "400000": 403, "400b": 439, "400kb": [439, 440], "402943": 440, "4030385": 440, "406517": 440, "407846": 434, "408": 439, "40860215": 440, "4088": 439, "409": 440, "409090909": 382, "40979767e": 439, "40993958e": 439, "40b": 433, "41": [379, 383, 384, 395, 415, 439, 441], "410998257": 413, "411": 379, "413168": 440, "41375": 440, "4137931": 440, "41486168": 440, "41545822": 440, "417": 432, "418": 440, "41935484": 440, "41958737": 440, "41e": 440, "42": [415, 440], "420982": 440, "422": 439, "42485857e": 439, "4252": 439, "42520046": 440, "43": [415, 434], "43103448": 440, "43143739": 440, "432": 439, "4324": 439, "4326": [292, 413], "43262911e": 439, "433": 440, "43572426": 440, "437311964137": 440, "437312": 440, "43812462444505": 440, "438125": 440, "4394": 440, "4399999": 441, "44": [415, 434, 440], "44086022": 440, "441782": 440, "445357": 440, "445850": [411, 412, 413, 415, 433], "445950": [415, 433], "446050": [415, 433], "446150": [415, 433], "446250": [415, 433], "446350": [415, 433], "446450": [415, 433], "446550": [415, 433], "446650": [415, 433], "446750": [415, 433], "447126": 413, "44741655": 440, "448065": 434, "44827586": 440, "44999999": 440, "44arrai": 440, "45": [382, 398, 399, 415, 434, 439], "450": [387, 400, 402, 406], "450000": 434, "450050": 415, "450851": 434, "450_000": [433, 434], "451000": 434, "4516129": 440, "452000": 434, "452589": 440, "453000": 434, "454000": 434, "454545455": 382, "455000": 434, "456": 440, "456000": 434, "457000": 434, "457177": 415, "457215": 415, "458000": 434, "458e": [415, 433], "459000": 434, "459821": 440, "46": [119, 408, 411, 415, 434, 440], "460": 408, "460000": 434, "46072292e": 439, "460_000": 433, "461000": 434, "462000": 434, "463000": 434, "463008": 440, "463013": 434, "46339571": 440, "464000": 434, "465000": 434, "46551724": 440, "465750": 411, "465950": 411, "466": 434, "466000": 434, "4664": 439, "466627": 434, "466650": [415, 433], "466750": [411, 415, 433], "4668": 439, "466850": [415, 433], "466950": [411, 415, 433], "467000": 434, "467050": [415, 433], "467150": [411, 415, 433], "467201": 413, "467233": 434, "467250": [415, 433], "467350": [411, 415, 433], "467450": [415, 433], "467550": [411, 412, 413, 415, 433], "468000": 434, "468151": 413, "4689": 434, "46896210e": 439, "469000": 434, "46933594e": 439, "46arrai": 440, "46e": [415, 433], "46xarrai": 440, "47": [415, 434], "470000": 434, "471": 440, "471000": 434, "472000": 434, "472222222222243": 439, "472890": 410, "473": 410, "473000": 434, "474000": 434, "47500": 400, "475000": 434, "476000": 434, "477000": 434, "47761154": 440, "478000": 434, "478782": 434, "479": 413, "479000": 434, "48": 415, "480622": 440, "480_000": 434, "48275862": 440, "48387097": 440, "484196": 440, "486": 440, "487152": 440, "487854": 440, "48b": [403, 438], "49": [410, 415], "491": 26, "491429": 440, "49462366": 440, "496": [397, 407, 432], "498579": 403, "498661": 440, "498e": 439, "4996": 439, "49976540e": 439, "49arrai": 415, "49y": 415, "4a": 359, "4arrai": 438, "4b": [359, 403, 439, 440], "4b9080cbb3354582": [403, 406, 434, 439], "4baa": 374, "4c": 359, "4d": 387, "4kb": [403, 433, 439, 440, 441], "4th": [331, 332, 333], "4y": 403, "5": [45, 124, 135, 151, 164, 168, 175, 199, 234, 257, 258, 271, 286, 297, 299, 300, 301, 302, 318, 319, 321, 326, 331, 332, 333, 361, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 410, 411, 413, 415, 417, 421, 422, 427, 428, 431, 433, 434, 437, 438, 439, 440, 441], "50": [27, 66, 175, 286, 344, 348, 349, 350, 381, 387, 400, 402, 413, 415, 439, 443], "500": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 165, 166, 168, 169, 171, 172, 175, 182, 186, 191, 197, 201, 395, 396, 398, 400, 401, 402, 403, 406, 408, 433, 439, 440, 441], "5000": [387, 399, 400, 402, 406, 433], "50000": 357, "5001": 403, "500coordin": 440, "500dask": [433, 439], "500fals": 440, "500layer": 439, "500nan": [403, 440], "500time": 403, "500y": [433, 439, 440, 441], "5023": 434, "505e": 403, "50761642e": 439, "50784569e": 439, "50798958": 440, "50840683e": 439, "50853882e": 439, "508670464": 410, "5094004": 440, "50_000": [357, 419], "50kb": 439, "50m": 413, "50th": 292, "50x": 439, "51": [146, 395, 440, 441], "510": 440, "511": 410, "511296": 440, "511471": 434, "5116": 439, "51160002": 440, "51496162e": 439, "51531830e": 439, "515e": 403, "51612903": 440, "517": 415, "51724138": 440, "519461": 440, "52": [413, 415, 440, 441], "52303586468673": 440, "523036": 440, "52335644": 440, "52359343e": 439, "52396874": 440, "525": 440, "52500": 400, "52613735e": 439, "526694": 440, "52688172": 440, "52719975": 440, "52b": [403, 433, 439, 441], "53": [151, 440], "530268": 440, "5317909315": 413, "534013": 403, "53448276": 440, "536": 439, "5375": 440, "53750002": 440, "53761673": 440, "53763441": 440, "53865388624": 413, "53968716e": 439, "53994791": 440, "54064": 433, "54136038e": 439, "542414": 410, "545": 440, "5450002": 440, "545454545": 382, "54699516e": 439, "54708900e": 439, "54834080e": 439, "549": [400, 407, 432], "55": [398, 415, 440], "550": 387, "550500": 403, "550747": 434, "550_000": 403, "551500": 403, "55172414": 440, "552500": 403, "553500": 403, "554500": 403, "555500": 403, "55592707": 440, "555e": 403, "556500": 403, "557": 415, "557500": 403, "55815029e": 439, "558301": 440, "558500": 403, "559000": 439, "559012": [403, 433, 439, 440, 441], "559037": [403, 433, 439, 440, 441], "559050": 439, "559062": [403, 433, 439, 440, 441], "559087": [403, 433, 439, 440, 441], "559112": [403, 433, 439, 440, 441], "559137": [403, 433, 439, 440, 441], "55913978": 440, "559150": 439, "559162": [403, 433, 439, 440, 441], "559187": [403, 433, 439, 440, 441], "559212": [403, 433, 439, 440, 441], "559237": [403, 433, 439, 440, 441], "559250": 439, "559262": [403, 433, 439, 440, 441], "559287": [403, 433, 439, 440, 441], "559312": [403, 433, 439, 440, 441], "559337": [403, 433, 439, 440, 441], "559350": 439, "559362": [403, 433, 439, 440, 441], "559387": [403, 433, 439, 440, 441], "559412": [403, 433, 439, 440, 441], "559437": [403, 433, 439, 440, 441], "559450": 439, "559462": [403, 433, 439, 440, 441], "559487": [403, 433, 439, 440, 441], "559500": 403, "559512": [403, 433, 439, 440, 441], "559537": [403, 433, 439, 440, 441], "559550": 439, "559562": [403, 433, 439, 440, 441], "559587": [403, 433, 439, 440, 441], "559612": [403, 433, 439, 440, 441], "559637": [403, 433, 439, 440, 441], "559650": 439, "559662": [403, 433, 439, 440, 441], "559687": [403, 433, 439, 440, 441], "559712": [403, 433, 439, 440, 441], "559737": [403, 433, 439, 440, 441], "559750": 439, "559762": [403, 433, 439, 440, 441], "559787": [403, 433, 439, 440, 441], "559812": [403, 433, 439, 440, 441], "559837": [403, 433, 439, 440, 441], "559850": 439, "559862": [403, 433, 439, 440, 441], "559887": [403, 433, 439, 440, 441], "559912": [403, 433, 439, 440, 441], "559937": [403, 433, 439, 440, 441], "559950": 439, "559962": [403, 433, 439, 440, 441], "559987": [403, 433, 439, 440, 441], "559_000": [403, 410], "56": [410, 439, 440], "560012": [403, 433, 439, 440, 441], "56002688e": 439, "560037": [403, 433, 439, 440, 441], "560050": 439, "560062": [403, 433, 439, 440, 441], "560087": [403, 433, 439, 440, 441], "560112": [403, 433, 439, 440, 441], "560137": [403, 433, 439, 440, 441], "560150": 439, "560162": [403, 433, 439, 440, 441], "560187": [403, 433, 439, 440, 441], "560212": [403, 433, 439, 440, 441], "560237": [403, 433, 439, 440, 441], "560250": 439, "560262": [403, 433, 439, 440, 441], "560287": [403, 433, 439, 440, 441], "560312": [403, 433, 439, 440, 441], "560337": [403, 433, 439, 440, 441], "560350": [439, 440], "560362": [403, 433, 439, 440, 441], "560387": [403, 433, 439, 440, 441], "560412": [403, 433, 439, 440, 441], "560437": [403, 433, 439, 440, 441], "560450": 439, "560462": [403, 433, 439, 440, 441], "560487": [403, 433, 439, 440, 441], "560500": 403, "560512": [403, 433, 439, 440, 441], "560537": [403, 433, 439, 440, 441], "560550": 439, "560562": [403, 433, 439, 440, 441], "560587": [403, 433, 439, 440, 441], "560612": [403, 433, 439, 440, 441], "560637": [403, 433, 439, 440, 441], "560650": 439, "560662": [403, 433, 439, 440, 441], "560687": [403, 433, 439, 440, 441], "560712": [403, 433, 439, 440, 441], "560737": [403, 433, 439, 440, 441], "560750": 439, "560762": [403, 433, 439, 440, 441], "560787": [403, 433, 439, 440, 441], "560812": [403, 433, 439, 440, 441], "560837": [403, 433, 439, 440, 441], "560850": 439, "560862": [403, 433, 439, 440, 441], "560887": [403, 433, 439, 440, 441], "560912": [403, 433, 439, 440, 441], "560937": [403, 433, 439, 440, 441], "560950": 439, "560962": [403, 433, 439, 440, 441], "560987": [403, 433, 439, 440, 441], "560_000": [403, 433], "561012": [403, 433, 439, 440, 441], "561037": [403, 433, 439, 440, 441], "561050": 439, "561062": [403, 433, 439, 440, 441], "561087": [403, 433, 439, 440, 441], "561112": [403, 433, 439, 440, 441], "561137": [403, 433, 439, 440, 441], "561150": 439, "561162": [403, 433, 439, 440, 441], "561187": [403, 433, 439, 440, 441], "561212": [403, 433, 439, 440, 441], "561237": [403, 433, 439, 440, 441], "561250": 439, "561262": [403, 433, 439, 440, 441], "561287": [403, 433, 439, 440, 441], "561312": [403, 433, 439, 440, 441], "561337": [403, 433, 439, 440, 441], "561350": 439, "561362": [403, 433, 439, 440, 441], "561387": [403, 433, 439, 440, 441], "561412": [403, 433, 439, 440, 441], "561437": [403, 433, 439, 440, 441], "561450": 439, "561462": [403, 433, 439, 440, 441], "561487": [403, 433, 439, 440, 441], "561500": 403, "561512": [403, 433, 439, 440, 441], "561537": [403, 433, 439, 440, 441], "561550": 439, "561562": [403, 433, 439, 440, 441], "561587": [403, 433, 439, 440, 441], "561612": [403, 433, 439, 440, 441], "561637": [403, 433, 439, 440, 441], "561650": 439, "561662": [403, 433, 439, 440, 441], "561687": [403, 433, 439, 440, 441], "561712": [403, 433, 439, 440, 441], "561737": [403, 433, 439, 440, 441], "561750": 439, "561762": [403, 433, 439, 440, 441], "561787": [403, 433, 439, 440, 441], "561800": 440, "561812": [403, 433, 439, 440, 441], "561837": [403, 433, 439, 440, 441], "561850": 439, "561862": [403, 433, 439, 440, 441], "561887": [403, 433, 439, 440, 441], "561912": [403, 433, 439, 440, 441], "561937": [403, 433, 439, 440, 441], "561950": 439, "561962": [403, 433, 439, 440, 441], "561987": [403, 433, 439, 440, 441], "562012": [403, 433, 439, 440, 441], "562037": [403, 433, 439, 440, 441], "562050": 439, "562062": [403, 433, 439, 440, 441], "562087": [403, 433, 439, 440, 441], "562112": [403, 433, 439, 440, 441], "562137": [403, 433, 439, 440, 441], "562150": 439, "562162": [403, 433, 439, 440, 441], "562187": [403, 433, 439, 440, 441], "562212": [403, 433, 439, 440, 441], "562237": [403, 433, 439, 440, 441], "562250": 439, "562262": [403, 433, 439, 440, 441], "562287": [403, 433, 439, 440, 441], "562312": [403, 433, 439, 440, 441], "562337": [403, 433, 439, 440, 441], "562350": 439, "562362": [403, 433, 439, 440, 441], "562387": [403, 433, 439, 440, 441], "562412": [403, 433, 439, 440, 441], "562437": [403, 433, 439, 440, 441], "562450": 439, "562462": [403, 433, 439, 440, 441], "562487": [403, 433, 439, 440, 441], "562500": 403, "562512": [403, 433, 439, 440, 441], "562537": [403, 433, 439, 440, 441], "562550": 439, "562562": [403, 433, 439, 440, 441], "562587": [403, 433, 439, 440, 441], "562612": [403, 433, 439, 440, 441], "562637": [403, 433, 439, 440, 441], "562650": 439, "562662": [403, 433, 439, 440, 441], "562687": [403, 433, 439, 440, 441], "562712": [403, 433, 439, 440, 441], "562737": [403, 433, 439, 440, 441], "562750": 439, "562762": [403, 433, 439, 440, 441], "562787": [403, 410, 433, 439, 440, 441], "562812": [403, 433, 439, 440, 441], "562837": [403, 433, 439, 440, 441], "562850": 439, "562862": [403, 433, 439, 440, 441], "562887": [403, 433, 439, 440, 441], "562912": [403, 433, 439, 440, 441], "562937": [403, 433, 439, 440, 441], "562950": 439, "562962": [403, 433, 439, 440, 441], "562987": [403, 433, 439, 440, 441], "562_000": 403, "563": 440, "563012": [403, 433, 439, 440, 441], "563037": [403, 433, 439, 440, 441], "563050": 439, "563062": [403, 433, 439, 440, 441], "563087": [403, 433, 439, 440, 441], "563112": [403, 433, 439, 440, 441], "563137": [403, 433, 439, 440, 441], "563150": 439, "563162": [403, 433, 439, 440, 441], "563187": [403, 433, 439, 440, 441], "563212": [403, 433, 439, 440, 441], "563237": [403, 433, 439, 440, 441], "563250": 439, "563262": [403, 433, 439, 440, 441], "563287": [403, 433, 439, 440, 441], "563312": [403, 433, 439, 440, 441], "563337": [403, 433, 439, 440, 441], "563350": 439, "563362": [403, 433, 439, 440, 441], "563387": [403, 433, 439, 440, 441], "56340003": 440, "563412": [403, 433, 439, 440, 441], "563437": [403, 433, 439, 440, 441], "563450": 439, "563462": [403, 433, 439, 440, 441], "563487": [403, 433, 439, 440, 441], "563500": 403, "563512": [403, 433, 439, 440, 441], "563537": [403, 433, 439, 440, 441], "563550": 439, "563562": [403, 433, 439, 440, 441], "563571": 410, "563587": [403, 433, 439, 440, 441], "563612": [403, 433, 439, 440, 441], "563637": [403, 433, 439, 440, 441], "563650": 439, "563662": [403, 433, 439, 440, 441], "563687": [403, 433, 439, 440, 441], "563712": [403, 433, 439, 440, 441], "563737": [403, 433, 439, 440, 441], "563750": 439, "563762": [403, 433, 439, 440, 441], "563787": [403, 433, 439, 440, 441], "563800": 410, "563812": [403, 433, 439, 440, 441], "563837": [403, 433, 439, 440, 441], "563850": 439, "563862": [403, 433, 439, 440, 441], "563887": [403, 433, 439, 440, 441], "563906": 410, "563912": [403, 433, 439, 440, 441], "563937": [403, 433, 439, 440, 441], "563950": 439, "563962": [403, 433, 439, 440, 441], "563987": [403, 433, 439, 440, 441], "564000": 439, "564392": 410, "564500": 403, "564_000": [403, 410], "565217280": 410, "565500": 403, "565533": 440, "565e": 403, "566500": 403, "567_000": 403, "56896552": 440, "569108": 440, "56989247": 440, "56b": 403, "57": 415, "57024": 395, "57190623": 440, "572368": 410, "572765": 440, "5727653802364": 440, "57323608e": 439, "57339859e": 439, "574": 439, "57500": 400, "57634": 440, "578": 440, "57982802e": 439, "58": [395, 407, 410, 432], "584505": 440, "5862069": 440, "58788539": 440, "59": [403, 439, 440], "590000": 410, "59039576206": 413, "590909091": 382, "591": [432, 439, 443], "59139785": 440, "592e": 439, "595": 434, "59714": 440, "5972": 439, "59arrai": 440, "59e": [403, 433, 439, 440, 441], "5arrai": [433, 438], "5d": 395, "5e": [403, 433, 439, 440, 441], "5kb": 396, "5mb": [433, 439, 441], "5th": 326, "5xarrai": [433, 438], "5y": 433, "6": [80, 82, 83, 90, 93, 97, 100, 103, 108, 111, 112, 113, 114, 115, 117, 119, 121, 124, 128, 130, 131, 143, 145, 146, 148, 151, 152, 155, 158, 164, 165, 167, 168, 170, 171, 174, 175, 187, 190, 192, 194, 199, 203, 205, 206, 207, 211, 227, 257, 258, 264, 265, 266, 267, 272, 273, 274, 299, 300, 301, 302, 325, 344, 349, 359, 361, 379, 380, 381, 382, 383, 384, 386, 387, 391, 395, 396, 398, 400, 402, 403, 404, 405, 406, 410, 415, 417, 430, 433, 434, 436, 438, 439, 440, 441], "60": [175, 401, 415, 439], "600": [175, 410, 414, 432], "601": 440, "60215054": 440, "60344828": 440, "60386456": 440, "604": 439, "604373": 440, "604e": 440, "607947": 440, "60833979e": 439, "608649": 440, "61": 439, "611605": 440, "61290323": 440, "614": [395, 407, 432], "615179": 440, "616": 440, "6172": 439, "61737657e": 439, "618e": 440, "61984372": 440, "62": [415, 433], "62068966": 440, "6251": 399, "625149": 434, "63": [124, 199, 206, 207, 433], "632793": 440, "633": 440, "634": 439, "6344086": 440, "63479853e": 439, "635": 439, "63573351": 403, "63582288": 440, "63598": 440, "636363636": 382, "63793103": 440, "638e": 439, "639e": [403, 433, 439, 440, 441], "64": [0, 410, 429, 433], "640x480": [417, 440, 441], "641": [399, 407, 432], "64275829": 403, "643212": 440, "64516129": 440, "64976361": 403, "64b": 438, "64e": [338, 403, 433, 439, 440, 441], "64mb": 440, "65": [398, 415], "650": 387, "650000e": 439, "650444": 440, "650kb": 439, "651": 439, "65149546e": 439, "6516": 439, "65180204": 440, "652kb": 439, "65319374": 403, "654": 440, "654019": 440, "65517241": 440, "6558001": 440, "655e": 403, "656": [381, 386, 432, 439], "6576766205017": 440, "657677": 440, "6584": 164, "658489": 440, "65848928078788": 440, "66": 440, "66021213": 403, "6608": 439, "662": 434, "665e": 403, "66720984": 403, "66778121": 440, "669": 440, "66944365": 403, "66997651": 403, "67": [87, 415, 439, 440, 441], "670": 410, "67051889": 403, "6706604": 403, "67241379": 440, "674819": 440, "674e": [415, 433], "67500": 400, "67679977": 440, "676e": [415, 433], "67741935": 440, "67764711": 403, "67880011": 440, "679": 440, "679arrai": 440, "68": 440, "681818182": 382, "682052": 440, "682111": 403, "682634": 440, "6828": 433, "6834": 434, "68376037": 440, "68462064": 403, "687e": 440, "68817204": 440, "68908155e": 439, "689284": 440, "68965517": 440, "68arrai": 440, "68xarrai": 440, "69": 440, "6904": 439, "692": [434, 440], "692858": 440, "696516": 440, "69973953": 440, "6arrai": 403, "6mb": 403, "6xarrai": 403, "6y": 403, "7": [3, 26, 118, 175, 195, 297, 299, 300, 301, 302, 359, 361, 382, 387, 393, 396, 400, 402, 403, 406, 410, 415, 429, 433, 434, 438, 439, 440, 441], "70": [400, 402, 403, 415], "70168152": 403, "70234778": 403, "7024": 395, "702e": 440, "70303061": 403, "706": 439, "706002": 440, "70689655": 440, "707": 440, "70967742": 440, "71": [158, 379, 380, 381, 382, 383, 384, 439, 440, 441], "710": 415, "71045101e": 439, "7124": 439, "71310349e": 439, "71318932e": 439, "713659": 440, "714": 439, "7143": 359, "71571869": 440, "716": 439, "717647": 410, "719": [387, 389, 432], "72": [415, 434, 439], "72043011": 440, "72043324e": 439, "720891": 440, "722": [413, 440], "724": 439, "72413793": 440, "725e": 440, "727272727": 382, "728": [396, 407, 432], "728123": 440, "728261": 410, "7284": 439, "72873783e": 439, "72925758e": 439, "72b": 387, "73": [434, 439, 440], "730146": 440, "731060": 410, "731697856155446": 440, "73169786": 440, "731698": 440, "73389453": 403, "73469247": 403, "734arrai": 403, "735": 403, "735356": 440, "73551559": 403, "736": 403, "737": 403, "738": 403, "73mb": 403, "74": [406, 433, 434], "7412": 439, "74137931": 440, "7425878607337": 440, "742588": 440, "744": 434, "746": 440, "74767702": 440, "74989173946": 413, "75": [97, 330, 331, 332, 334, 379, 382, 398, 415, 434], "750": [386, 387], "75000": 399, "75015": 399, "75020": 399, "752498": 440, "75268817": 440, "75328350e": 439, "755842": 440, "75605583e": 439, "75862069": 440, "75934601e": 439, "759731": 440, "75th": 292, "76": [382, 410, 434, 440], "760": 440, "76000023": 440, "763": 439, "76307201": 440, "76344086": 440, "76365618": 440, "764": [396, 439], "766963": 440, "768": 439, "769": 26, "77": [124, 199, 410, 415, 434, 439], "7708": 440, "772727273": 382, "774195": 440, "77586207": 440, "778": 26, "77963534": 440, "779986": 440, "78": [433, 440], "780": 440, "781": [379, 386, 432], "781427": 440, "78494624": 440, "7864": 439, "787407": 403, "787419": 403, "79": [152, 376], "791338": 440, "79133800852065": 440, "792": 439, "79310345": 440, "79561451": 440, "79569892": 440, "79857": 440, "798822606ff1": 374, "799": 440, "7ec0e": [321, 325], "7layer": 403, "8": [175, 323, 338, 348, 349, 361, 374, 382, 387, 393, 400, 402, 403, 406, 410, 415, 433, 434, 439, 440, 441], "80": [331, 332, 383, 384, 393, 395, 415], "800000": 410, "800kb": 403, "802": 439, "804131": 440, "805802": 440, "806310": 410, "80645161": 440, "807": [432, 441, 443], "809445": 434, "809999": 439, "80b": 438, "81": [124, 199, 379], "81034483": 440, "81159367": 440, "812": 434, "81238127": 440, "813035": 440, "814": 440, "818": 396, "818181818": 382, "82": [124, 199, 379, 415, 439], "820267": 440, "82757283": 440, "82758621": 440, "82795699": 440, "83": [124, 199], "83600044": 440, "837": 440, "83741": 440, "838150": 410, "83870968": 440, "84": [410, 439], "842105344": 410, "843018": 434, "84355199": 440, "844642": 440, "84482759": 440, "84568357": 440, "847584": 382, "8494001c276a4b96804cde7829c04d7f": 374, "85": [398, 415, 441], "850": 387, "851874": 440, "852": 440, "853": [406, 407, 432], "854": 407, "854890": 434, "855": 434, "859106": 440, "85953116": 440, "86": [93, 383, 384, 410, 440, 441], "8608": 439, "86091": 434, "86206897": 440, "86359978": 440, "863636364": 382, "864": 395, "864b": 393, "865": 434, "869": 440, "87": 415, "87096774": 440, "872": 439, "875": [379, 380, 386, 432, 440], "87510014": 440, "87551032": 440, "875arrai": 440, "876249": 440, "8762492488771": 440, "877339": 440, "87931034": 440, "88": 439, "88172043": 440, "883481": 440, "888": 439, "88b": 387, "890": 440, "89000003": 440, "890714": 440, "891": [411, 414, 432], "89148948": 440, "892": 434, "89221048e": 439, "8964": 433, "89655172": 440, "897946": 440, "89848566e": 439, "8arrai": 439, "8b": [387, 396, 403, 415, 433, 438, 439, 440, 441], "8mb": 440, "8xarrai": 439, "9": [175, 361, 381, 382, 387, 393, 396, 402, 403, 410, 415, 421, 424, 429, 433, 434, 439, 440, 441, 443], "90": [21, 400, 402, 415], "900": 387, "90000": 434, "9000001": 440, "901483": 440, "90279961": 440, "90322581": 440, "904": 434, "905": 440, "90746864": 440, "90870237e": 439, "909090909": 382, "90950": [411, 412, 413, 415, 433], "90_000": 434, "91": [387, 433, 440], "91000": 434, "91050": [415, 433], "91150": [415, 433], "91250": [415, 433], "913": 26, "91350": [415, 433], "9137931": 440, "91397849": 440, "914": 440, "91450": [415, 433], "91550": [415, 433], "91560221e": 439, "91650": [415, 433], "91750": [415, 433], "91759992": 440, "91850": [415, 433], "92": [415, 439, 440], "92000": 434, "92048049": 440, "922321": 440, "92344781": 440, "925628": 440, "9258001": 440, "9259787643396": 440, "925979": 440, "92645": 413, "928": [415, 440], "92900181e": 439, "929553": 440, "92arrai": 440, "92c5de": 329, "93": 26, "93000": 434, "93000031": 440, "93103448": 440, "93282318e": 439, "9358001": 440, "936785": 440, "93942697": 440, "94": 433, "94000": 434, "943": 440, "94623656": 440, "94827586": 440, "94934893e": 439, "94950": 411, "95": [398, 415], "95000": 434, "9508": 440, "95150": 411, "952": 439, "95350": 411, "954545455": 382, "95540613": 440, "95569086": 440, "95698925": 440, "958": 440, "96": [410, 433], "96000": 434, "96116": 440, "964818": 440, "96547222e": 439, "96551724": 440, "96773362e": 439, "968393": 440, "969": [382, 386, 412, 414, 415, 418, 432], "97": [27, 175, 348, 349, 350, 395, 396, 398, 400, 401, 402, 403, 406, 408, 415], "97000": 434, "97071409e": 439, "97132": 415, "972222222222214": 393, "975468": 440, "975625": 440, "977": 434, "97849462": 440, "97wr01926": 382, "98": [26, 27, 286, 348, 349, 350, 379, 380, 381, 382, 383, 384], "98000": 434, "982": 440, "98263748545648": 413, "98275862": 440, "984": 439, "98664236e": 439, "9874959": 440, "987arrai": 439, "98924731": 440, "99": [27, 348, 349, 350, 393, 413], "99000": 434, "99483585": 440, "996": 440, "997": [432, 440, 443], "9976": 439, "998836": 440, "999": 27, "9999": [26, 233, 247], "9999999": 0, "9nan": 387, "9x": 387, "A": [0, 9, 13, 26, 27, 29, 41, 42, 54, 58, 59, 66, 82, 83, 90, 93, 100, 105, 118, 119, 124, 127, 131, 132, 146, 152, 161, 164, 175, 193, 199, 202, 206, 207, 244, 260, 271, 280, 296, 303, 331, 332, 333, 339, 350, 357, 359, 374, 382, 384, 399, 403, 408, 421, 422, 425, 433, 434, 435, 437, 440], "ATS": 175, "And": [382, 417, 429], "As": [0, 7, 127, 175, 202, 376, 395, 396, 398, 399, 400, 401, 403, 406, 419, 428, 434], "At": [0, 25, 85, 92, 96, 102, 123, 129, 135, 150, 157, 163, 184, 189, 198, 204, 356, 429], "Be": [30, 32, 185], "But": 439, "By": [0, 55, 103, 139, 146, 175, 208, 300, 322, 390, 403, 415, 428, 433], "For": [0, 12, 25, 26, 27, 33, 77, 80, 87, 93, 97, 119, 124, 128, 135, 146, 151, 152, 158, 175, 199, 203, 206, 226, 251, 255, 256, 264, 265, 266, 267, 271, 280, 294, 319, 321, 330, 331, 332, 333, 334, 335, 336, 350, 356, 357, 359, 372, 373, 376, 382, 384, 390, 393, 396, 398, 399, 403, 405, 410, 420, 421, 422, 424, 425, 427, 429, 431, 433, 434, 435, 437, 438, 439, 440, 441], "If": [0, 3, 6, 11, 12, 16, 27, 37, 41, 42, 43, 44, 45, 47, 54, 55, 56, 59, 77, 79, 80, 82, 86, 87, 93, 97, 103, 105, 108, 112, 113, 114, 117, 118, 124, 130, 131, 132, 137, 138, 141, 145, 146, 151, 152, 158, 164, 167, 170, 174, 175, 180, 181, 185, 190, 195, 199, 205, 206, 207, 239, 247, 251, 260, 263, 264, 265, 267, 272, 273, 274, 281, 287, 292, 297, 300, 303, 305, 314, 318, 319, 321, 324, 325, 328, 331, 332, 335, 336, 339, 345, 348, 349, 357, 359, 372, 373, 374, 398, 403, 405, 413, 425, 428, 429, 431, 437, 439], "In": [0, 5, 11, 18, 20, 26, 29, 39, 41, 44, 47, 49, 54, 55, 80, 82, 83, 124, 127, 146, 175, 195, 199, 202, 260, 263, 280, 292, 316, 322, 339, 343, 351, 352, 353, 354, 357, 373, 374, 375, 377, 382, 387, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 413, 415, 428, 429, 433, 434, 437, 438, 439, 440, 441], "It": [0, 13, 14, 27, 44, 55, 76, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204, 227, 260, 263, 271, 320, 331, 332, 333, 337, 350, 374, 377, 393, 395, 398, 399, 402, 403, 404, 410, 415, 417, 421, 424, 428, 429, 430, 434, 438, 439, 441], "Its": [155, 187, 439], "NO": 175, "NOT": 425, "No": [0, 229, 239, 250], "Not": [47, 49, 79, 80, 87, 93, 97, 124, 131, 152, 158, 195, 199, 206, 207, 300, 376, 393, 421, 422, 429, 431], "On": [127, 202, 373, 375, 378, 431, 440], "One": [31, 66, 118, 119, 307, 309, 321, 326, 328, 335, 374, 410, 421, 424], "Or": [3, 5, 25, 135, 195, 297, 300, 356, 372, 431], "Such": 439, "That": [399, 441], "The": [0, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 25, 26, 27, 29, 30, 31, 33, 36, 37, 41, 44, 45, 47, 49, 51, 54, 55, 58, 59, 66, 68, 70, 72, 74, 76, 77, 78, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 103, 105, 106, 108, 110, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 132, 135, 137, 138, 139, 140, 141, 142, 144, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 175, 181, 183, 184, 187, 188, 189, 192, 193, 194, 195, 198, 199, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 236, 239, 244, 249, 250, 254, 256, 258, 259, 260, 263, 271, 276, 280, 290, 292, 293, 294, 296, 297, 300, 316, 319, 325, 326, 328, 329, 331, 332, 333, 335, 336, 337, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 372, 374, 376, 378, 379, 380, 381, 382, 384, 387, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 413, 415, 417, 419, 421, 422, 425, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 442], "Their": [428, 433], "Then": [138, 139, 140, 260, 263, 404, 408, 429], "There": [5, 45, 127, 202, 372, 373, 377, 387, 402, 404, 413, 428, 435, 437, 439, 440, 441], "These": [0, 13, 14, 25, 47, 49, 85, 92, 96, 102, 105, 123, 129, 135, 137, 150, 157, 163, 184, 189, 193, 198, 204, 226, 230, 287, 288, 321, 325, 327, 335, 356, 376, 385, 388, 390, 391, 405, 409, 419, 429, 431, 433, 434, 435, 438, 439, 440, 441], "To": [0, 5, 26, 35, 39, 41, 44, 45, 47, 55, 59, 81, 85, 89, 92, 94, 96, 99, 102, 116, 120, 123, 125, 129, 134, 135, 147, 150, 151, 153, 157, 160, 163, 166, 169, 172, 182, 184, 186, 189, 191, 197, 198, 201, 204, 271, 280, 292, 294, 300, 322, 336, 356, 372, 374, 376, 378, 379, 380, 381, 382, 383, 384, 387, 396, 399, 403, 408, 412, 415, 419, 421, 422, 424, 429, 431, 433, 437, 438, 439, 440, 441], "With": [127, 146, 202, 419, 420, 421, 429, 431, 433, 440], "_": [0, 41, 42, 43, 44, 47, 54, 55, 74, 75, 76, 77, 78, 79, 80, 86, 87, 93, 97, 111, 113, 115, 118, 119, 124, 131, 132, 146, 151, 152, 158, 165, 168, 171, 175, 179, 181, 185, 190, 194, 195, 196, 199, 206, 207, 387, 437, 439, 440], "__": [74, 75, 76, 77, 78, 79, 80, 86, 87, 93, 97, 111, 113, 115, 118, 119, 124, 131, 132, 146, 151, 152, 158, 165, 168, 171, 175, 179, 181, 185, 190, 194, 195, 196, 199, 206, 207], "__init__": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 58, 61, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 93, 97, 103, 108, 111, 113, 115, 118, 119, 124, 131, 132, 133, 146, 151, 152, 158, 165, 168, 171, 175, 179, 181, 185, 190, 194, 195, 196, 199, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237, 238, 239, 240, 244, 245, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 319, 320, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 378, 429], "__name__": 439, "__version__": 378, "_c": 43, "_dask": 0, "_dtype_lik": 271, "_dtypedict": [271, 290], "_l": [41, 42, 43, 44, 54, 55, 433], "_metadata_dict": 393, "_mf6io": 77, "_p": 43, "_provid": 325, "_regrid_method": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204, 399, 439], "_required_extra": 26, "_supportsdtyp": [271, 290], "_tricontour": 397, "_type": 271, "_valid": 0, "ab": [381, 387, 399, 400, 402, 406, 408], "abc": 271, "abil": 374, "abl": [0, 372, 398, 431, 438], "about": [146, 175, 195, 373, 379, 381, 395, 399, 403, 431], "abov": [0, 27, 146, 181, 185, 190, 257, 275, 348, 350, 372, 396, 403, 419, 431, 433, 434, 437, 439, 440], "abrupt": 345, "abruptli": 438, "absent": [312, 425], "absolut": [27, 145, 146, 175, 260, 348, 350], "abstract": [61, 126, 253, 254], "acceler": [175, 344], "accept": [0, 26, 104, 109, 124, 136, 199, 293, 294, 312, 313, 321, 325, 348, 349, 410, 428, 439, 441], "access": [0, 378, 393, 433, 438], "accessor": [421, 424], "accident": 0, "accompani": 433, "accord": [0, 41, 44, 47, 49, 54, 55, 230, 268, 378, 397, 433, 441], "accordingli": [0, 106, 110], "account": [0, 21, 161, 398, 425, 439, 440], "accumul": [255, 396], "accur": [0, 86, 321], "accuraci": [271, 286, 330, 331, 332, 333, 334], "achiev": [175, 331, 332, 333, 403, 439], "acitv": 335, "acronym": 429, "across": [264, 265, 266, 267, 280, 398, 403, 439, 440, 442], "act": [0, 429, 440], "activ": [0, 16, 26, 51, 78, 80, 82, 83, 84, 91, 95, 101, 103, 106, 110, 112, 114, 117, 118, 122, 127, 130, 132, 146, 149, 154, 156, 162, 167, 170, 174, 175, 183, 188, 195, 202, 205, 229, 230, 231, 250, 257, 264, 265, 266, 267, 272, 273, 274, 277, 279, 282, 283, 284, 285, 295, 303, 335, 336, 345, 348, 349, 351, 359, 379, 380, 381, 382, 383, 384, 387, 403, 425, 429, 431, 438, 439, 440, 441], "active_grid_boundary_xi": [0, 361], "actual": [0, 44, 55, 211, 236, 256, 437], "ad": [44, 59, 77, 78, 105, 137, 143, 146, 175, 296, 297, 316, 345, 396, 400, 402, 405, 415, 429, 437, 439, 440], "adapt": [11, 12, 175, 296, 297], "add": [0, 25, 59, 61, 68, 70, 72, 78, 86, 105, 135, 137, 143, 319, 325, 356, 373, 374, 381, 395, 396, 400, 401, 403, 405, 406, 408, 417, 425, 429, 431, 434, 437, 438, 439, 440], "add_basemap": 325, "add_bounding_box": 319, "add_colorbar": 410, "add_default_file_handl": [56, 59, 68, 72], "add_default_stream_handl": [56, 59, 68, 72], "add_mesh": 319, "add_timemap": 0, "addit": [0, 12, 25, 39, 51, 61, 68, 70, 72, 127, 131, 135, 146, 175, 202, 256, 260, 271, 290, 356, 376, 390, 429, 433], "addition": [139, 208, 271, 429], "additional_depth": [61, 68, 70, 72], "additional_tim": [25, 135, 356, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 400, 401, 402, 403, 406, 408, 438], "address": [0, 373, 374], "adequ": [260, 263, 331, 332, 333, 344, 348, 349, 357], "adher": 0, "adjac": [26, 76, 146, 345], "adjust": [26, 251, 331, 332, 333, 357], "administr": [431, 434], "admiss": [140, 208, 209, 210], "adv": [379, 380, 381, 382, 383, 384, 395, 398, 401, 408], "advanc": [0, 379, 405, 430], "advantag": [374, 376, 437], "advect": [11, 330, 331, 332, 333, 334, 357, 395, 398, 408], "advectiontvd": [379, 380, 381, 382, 383, 384, 395], "advectionupstream": [398, 401, 408], "advent": 333, "advic": [0, 37, 431, 439, 441], "advis": [251, 425], "affair": 429, "affect": [0, 27, 119, 335, 350, 441], "affin": [292, 317, 419, 433], "afresh": 375, "after": [0, 3, 41, 42, 54, 77, 79, 80, 87, 93, 97, 103, 105, 108, 124, 131, 135, 137, 152, 158, 195, 199, 206, 207, 236, 271, 304, 356, 359, 374, 375, 379, 380, 381, 382, 383, 384, 403, 441], "again": [0, 41, 54, 80, 127, 202, 373, 374, 429, 437, 439, 440], "against": [8, 403, 429], "aggreg": [0, 231, 291, 293, 294, 421, 422], "agnost": [0, 107, 124, 199], "agricultur": 403, "ahead": [403, 406, 439], "ahn": [413, 417, 433], "ahn_50m": 413, "ahn_utm": 413, "ahn_utm_50m": 413, "aim": [27, 350], "air": [195, 428], "air_entri": 195, "air_entry_potenti": 195, "al": [338, 398], "albedo": [239, 393], "algorithm": [175, 331, 332, 333, 359, 440], "alh": 86, "alias": 50, "align": [146, 272, 273, 274, 421, 422, 425, 441], "all": [0, 3, 5, 7, 8, 11, 25, 27, 31, 41, 42, 54, 61, 74, 75, 76, 82, 83, 85, 92, 93, 96, 102, 103, 105, 106, 108, 110, 119, 123, 127, 129, 135, 137, 139, 144, 145, 146, 150, 151, 157, 163, 175, 184, 187, 189, 192, 193, 194, 198, 202, 204, 208, 211, 237, 252, 256, 272, 273, 274, 281, 300, 318, 331, 332, 335, 336, 344, 348, 350, 356, 373, 375, 376, 377, 378, 385, 387, 388, 391, 393, 396, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 416, 421, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 441, 442], "all_boundaries_constant_head": 396, "all_package_inst": 439, "all_touch": 281, "allo": 374, "alloc": [0, 90, 100, 105, 107, 137, 146, 161, 257, 258, 261, 264, 265, 266, 267, 277, 278, 279, 281], "alloc_opt": 261, "allocate_drn_cel": [0, 277, 361, 425], "allocate_ghb_cel": [0, 361, 425], "allocate_rch_cel": [0, 257, 361], "allocate_riv_cel": [0, 279, 361, 425, 440], "allocation_opt": [0, 90, 100, 105, 137, 161, 261, 264, 265, 266, 267, 277, 279, 361, 440], "allow": [0, 3, 41, 54, 80, 118, 175, 195, 251, 264, 265, 267, 330, 331, 332, 333, 334, 336, 357, 403, 404, 410, 417, 419, 425, 429, 431, 433, 437], "alon": 403, "along": [0, 9, 10, 13, 14, 21, 86, 138, 141, 146, 234, 248, 280, 296, 297, 299, 306, 307, 308, 309, 345, 396, 403, 410, 415, 433], "alpha": [321, 325, 410, 417], "alreadi": [0, 80, 126, 254, 263, 326, 393, 408, 431, 437, 441, 442], "alright": 441, "also": [0, 21, 27, 39, 41, 44, 54, 55, 80, 87, 93, 97, 124, 140, 146, 152, 158, 175, 199, 206, 207, 208, 209, 210, 227, 228, 234, 241, 249, 252, 271, 280, 303, 330, 331, 332, 333, 334, 335, 336, 348, 350, 372, 373, 374, 375, 376, 387, 396, 398, 399, 400, 403, 404, 411, 415, 417, 419, 421, 422, 428, 429, 431, 433, 434, 437, 438, 439, 440, 441], "alter": [325, 441], "altern": [0, 41, 54, 421, 422, 429, 431], "alternative_cell_averag": [146, 439], "alterra": 26, "although": [74, 345, 395], "altogeth": [421, 422], "alv": 86, "alwai": [0, 20, 25, 32, 44, 45, 50, 104, 109, 135, 136, 146, 185, 195, 338, 343, 356, 357, 373, 419, 421, 422, 429, 433, 437, 439, 441], "ambigu": [301, 302], "amersfoort": [325, 413], "among": [77, 336, 403], "amongst": [0, 425], "amount": [0, 26, 30, 175, 181, 345, 351, 352, 353, 398, 429, 438, 439], "amt": 146, "an": [0, 4, 5, 11, 13, 14, 21, 26, 27, 30, 39, 41, 45, 46, 47, 50, 51, 54, 56, 66, 75, 78, 80, 105, 106, 110, 112, 114, 117, 118, 121, 124, 126, 127, 132, 137, 146, 148, 151, 154, 155, 164, 167, 170, 174, 175, 181, 199, 202, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 235, 254, 260, 268, 272, 273, 274, 281, 292, 296, 297, 299, 300, 301, 302, 306, 307, 308, 309, 317, 321, 325, 328, 336, 344, 345, 348, 349, 350, 359, 361, 372, 374, 376, 377, 380, 381, 382, 384, 387, 396, 398, 399, 400, 402, 403, 406, 410, 411, 417, 419, 425, 426, 428, 430, 431, 433, 434, 435, 437, 438, 439, 442], "anaconda": 431, "analys": 251, "analysi": [379, 396, 403, 421, 422, 424, 430], "analyz": [441, 442], "ananaconda": 429, "angl": [21, 146, 439], "angldegx": [0, 146], "angle1": [146, 221, 439], "angle2": [146, 221, 439], "angle3": [146, 221, 439], "ani": [0, 21, 47, 48, 50, 51, 80, 84, 86, 91, 93, 95, 101, 103, 104, 109, 118, 122, 124, 127, 131, 132, 136, 146, 149, 152, 156, 158, 162, 175, 183, 187, 188, 195, 199, 202, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 240, 268, 271, 290, 299, 301, 305, 306, 307, 308, 309, 312, 330, 331, 332, 333, 334, 345, 357, 373, 421, 422, 424, 425, 426, 431, 437, 439, 440], "anim": [0, 319, 320, 430, 442], "anisotrop": [21, 146, 402], "anisotropi": [21, 34, 146, 345], "anisotropy_angl": 21, "anisotropy_factor": 21, "anistropi": 425, "announc": [63, 64], "annoyingli": 437, "annualcropfactor": 361, "annualgrowthfactor": 393, "anoth": [8, 80, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204, 292, 399, 421, 422, 428, 433], "answer": 0, "anticip": [335, 336], "anymor": 0, "anyth": [58, 70, 104, 109, 136, 293, 294, 312], "anywai": 373, "anywher": [421, 422], "apart": [0, 255, 373], "api": [0, 77, 107, 290, 293, 294, 315, 376, 387, 406, 434], "apipackag": 0, "appar": 435, "append": [0, 419], "appli": [0, 4, 11, 12, 19, 25, 28, 45, 103, 106, 110, 113, 135, 146, 175, 195, 251, 326, 345, 348, 351, 352, 353, 356, 357, 359, 403, 413, 415, 435, 439], "applic": [0, 66, 338, 359], "approach": [13, 14, 175, 331, 332, 372, 437, 439], "appropri": [0, 175, 306, 307, 308, 309, 345, 421, 422, 431, 438], "approxim": [86, 271, 331, 332, 333, 344, 398, 428], "april": [0, 3, 387, 429], "aqueou": [118, 132], "aquif": [15, 23, 30, 32, 33, 34, 35, 97, 105, 118, 130, 132, 137, 181, 185, 205, 269, 325, 335, 345, 401, 403, 428, 433], "aquitard": [23, 35, 105, 137, 269, 321, 403, 433, 440], "ar": [0, 3, 4, 5, 7, 9, 10, 11, 13, 14, 22, 25, 26, 27, 31, 41, 42, 45, 47, 48, 49, 50, 51, 54, 66, 77, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 104, 105, 107, 109, 112, 114, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 167, 170, 174, 175, 180, 181, 183, 184, 185, 187, 188, 189, 192, 193, 195, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 229, 230, 234, 239, 244, 245, 250, 251, 252, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 277, 279, 280, 287, 288, 292, 296, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 313, 314, 316, 319, 321, 325, 326, 327, 328, 331, 332, 335, 336, 345, 348, 350, 351, 352, 353, 356, 359, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 410, 412, 413, 415, 419, 421, 422, 425, 426, 429, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442], "arang": [292, 299, 379, 380, 381, 382, 383, 384, 387, 395, 398, 399, 400, 401, 402, 406, 408, 415, 417, 434, 440], "arbitrari": [0, 5, 299], "architectur": 429, "area": [26, 29, 32, 152, 164, 185, 226, 230, 231, 232, 252, 258, 271, 290, 293, 336, 351, 352, 353, 398, 403, 410, 411, 421, 422, 424, 428, 440, 441], "area_svat": [230, 425], "areal": 403, "arg": [58, 66, 73, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 257, 258, 374], "arguabl": 428, "argument": [0, 5, 11, 45, 46, 74, 75, 76, 85, 92, 96, 102, 119, 123, 129, 139, 140, 143, 150, 157, 163, 180, 184, 189, 193, 198, 204, 208, 209, 210, 239, 256, 260, 263, 271, 290, 292, 299, 300, 301, 302, 319, 321, 322, 325, 326, 328, 374, 381, 433, 440], "aris": 4, "arithmet": 345, "arm": 429, "around": [3, 331, 332, 333, 373, 390, 431, 437], "arrai": [0, 5, 22, 77, 79, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 105, 106, 110, 118, 119, 121, 122, 123, 124, 126, 129, 132, 137, 139, 140, 144, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 181, 183, 184, 185, 187, 188, 189, 190, 192, 193, 195, 196, 198, 199, 201, 204, 206, 207, 208, 209, 210, 226, 228, 230, 233, 239, 244, 247, 249, 251, 253, 254, 264, 265, 266, 267, 271, 276, 277, 279, 280, 286, 299, 300, 301, 306, 307, 308, 309, 321, 325, 326, 328, 336, 338, 382, 387, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 408, 410, 415, 419, 429, 433, 437, 438, 439, 440, 441], "array_lik": [9, 13, 179, 296, 328], "array_nam": 439, "array_origin": 439, "array_regrid": 439, "arraynam": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204], "arri": 439, "arrow": 396, "articl": [377, 428, 429], "artifact": [372, 403, 406, 439], "artifical_recharge_lay": [126, 254], "artifici": 26, "artificial_recharg": [126, 254], "artificial_recharge_capac": [126, 254], "as_index": 271, "asc": [348, 349, 425], "ascii": [0, 37, 38, 229, 244, 250, 433], "asctim": 56, "asdict": 439, "ask": [0, 373, 426], "assert": 0, "assign": [0, 12, 59, 83, 107, 124, 127, 130, 145, 146, 175, 199, 202, 205, 268, 276, 322, 324, 326, 335, 345, 387, 410, 428, 438, 439, 440], "assign_coord": [322, 326, 398, 403], "assign_edge_coord": 396, "assign_wel": [0, 361], "assoc_column": [0, 47, 49], "assoc_ext": [47, 48], "assoc_kwarg": 45, "associ": [0, 45, 46, 47, 48, 49, 50, 78, 105, 127, 137, 146, 202, 395, 396, 398, 401, 408, 435, 439], "assum": [82, 83, 130, 146, 175, 195, 205, 264, 265, 267, 271, 395, 396, 398, 400, 403, 406, 437, 439], "assumpt": [13, 14, 146], "astyp": [387, 403, 410], "asymmetr": 78, "at_elev": [137, 257, 261, 264, 265, 277, 440], "at_first_act": [257, 266, 440], "ath1": 86, "ath2": 86, "atleast": 0, "ats_outer_maximum_fract": [0, 175], "attach": [0, 395, 400, 402, 406, 433], "attempt": [0, 80, 146, 345], "attent": 441, "attr": [41, 42, 54, 292], "attract": 429, "attribut": [0, 58, 66, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 92, 93, 96, 97, 102, 103, 108, 111, 113, 115, 118, 119, 123, 124, 129, 131, 132, 146, 150, 151, 152, 157, 158, 163, 165, 168, 171, 175, 179, 181, 184, 185, 189, 190, 193, 194, 195, 196, 198, 199, 201, 204, 206, 207, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237, 238, 239, 244, 245, 247, 249, 251, 253, 255, 256, 257, 258, 261, 262, 271, 292, 297, 312, 387, 393, 396, 399, 403, 415, 419, 433, 434, 437, 438, 439, 440, 441], "atv": 86, "au": 408, "auburn": 379, "author": 374, "autmat": 325, "auto": [0, 361, 425], "autom": 439, "automat": [0, 39, 41, 42, 44, 54, 128, 137, 138, 139, 140, 141, 151, 203, 208, 209, 210, 319, 323, 328, 330, 331, 332, 333, 334, 335, 336, 337, 343, 359, 372, 373, 376, 387, 395, 399, 419, 431, 433, 437], "aux": [80, 87, 93, 97, 124, 152, 158, 199, 206, 207, 395, 408], "auxiliari": [0, 146], "auxiliary_variable_nam": 179, "auxmix": [80, 87, 93, 97, 124, 152, 158, 199, 206, 207], "avail": [0, 58, 66, 175, 192, 259, 260, 263, 264, 265, 266, 267, 277, 279, 292, 372, 376, 390, 395, 396, 398, 400, 403, 406, 410, 429, 431, 435, 437, 439, 440], "averag": [3, 146, 175, 292, 399, 403, 410, 413, 421, 422, 439], "avevap": 393, "avoid": [0, 175, 247, 268, 281, 301, 302, 421, 422], "avprec": 393, "awar": 437, "awrmat": 379, "ax": [0, 21, 25, 135, 146, 321, 325, 326, 328, 329, 356, 379, 380, 381, 382, 383, 384, 396, 397, 398, 399, 403, 404, 408, 410, 411, 412, 413, 415, 417, 434, 437, 439, 440, 441], "ax0": 439, "ax1": 439, "axesimag": [403, 406, 410, 412, 413], "axi": [21, 41, 42, 54, 86, 146, 260, 321, 325, 326, 328, 399, 410, 433, 435], "axix": 419, "b": [25, 32, 135, 185, 269, 270, 292, 318, 321, 325, 356, 401, 429, 437], "b12a1745001": 410, "b12a1745002": 410, "b12a1747001": 410, "b12a1747002": 410, "b12a1748001": 410, "b12a1805001": 410, "b12a1805002": 410, "b12a1806001": 410, "ba": [0, 379, 380, 381, 382, 383, 384], "back": [0, 45, 304, 325, 395, 396, 400, 406, 429, 433, 434], "backend": 0, "background": [325, 403, 415, 419, 428, 431, 440], "backtrack": 175, "backtracking_numb": 175, "backtracking_reduction_factor": 175, "backtracking_residual_limit": 175, "backtracking_toler": 175, "backward": [119, 315, 426], "bakker": 384, "balanc": [0, 256, 329, 331, 332, 333, 336, 348, 349, 397, 398, 425, 439, 442], "band": 292, "bar": [175, 393], "bardelta": 175, "bare": [226, 256, 429], "bare_soil_factor": 226, "barrier": [0, 22, 111, 112, 113, 114, 115, 117, 165, 167, 168, 170, 171, 174, 287, 288, 425], "barrier_gdf": [111, 113, 115, 165, 168, 171], "barrier_i": [165, 168, 171, 287, 288], "barrier_x": [165, 168, 171, 287, 288], "barrier_zbot": [287, 288], "barrier_zbottom": [287, 288], "barrier_ztop": [287, 288], "barycentr": [212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225], "base": [0, 13, 14, 21, 26, 47, 48, 50, 58, 61, 66, 68, 70, 72, 74, 85, 92, 96, 102, 112, 114, 117, 123, 128, 129, 130, 146, 150, 157, 163, 167, 170, 174, 175, 184, 189, 193, 195, 198, 203, 204, 205, 231, 251, 258, 263, 275, 324, 330, 331, 332, 333, 334, 357, 377, 395, 398, 401, 402, 403, 410, 415, 419, 421, 424, 428, 429, 430, 431, 433, 434, 439], "baseexcept": 313, "basemap": [0, 325, 417], "basenam": [103, 108], "baseregridd": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204], "basi": 419, "basic": [280, 321, 335, 336, 345, 382, 393, 440, 441], "basicconfig": 56, "basicflow": [0, 379, 380, 381, 382, 383, 384], "basictransport": [0, 379, 380, 381, 382, 383, 384], "bat": 375, "batch": [0, 425], "bbox_inch": 329, "bc": 195, "bcf": [403, 428], "bdec": 374, "bdgfff": [5, 415], "bdgflf": [5, 415], "bdgfrf": [5, 415], "becaus": [0, 151, 247, 335, 387, 393, 399, 401, 419, 425, 429, 437, 438], "becom": [0, 44, 55, 80, 146, 331, 332, 333, 345, 428, 438, 439], "bed": [15, 269, 271, 335, 400, 440], "bed_leak": 406, "been": [0, 73, 80, 138, 139, 140, 141, 146, 180, 251, 296, 297, 300, 332, 376, 392, 395, 396, 400, 403, 410, 419, 426, 429, 433, 437, 439, 441], "befor": [0, 9, 10, 26, 41, 42, 54, 107, 130, 143, 205, 291, 297, 387, 403, 404, 410, 421, 422, 425, 439, 440, 441], "beforehand": 12, "begin": [31, 63, 64, 90, 100, 140, 161, 208, 209, 210, 239, 335, 336, 403, 406, 439], "behav": 23, "behavior": [0, 66, 175, 300, 301, 302, 325, 403, 406, 439], "behind": [379, 437], "being": [0, 127, 144, 175, 202, 315, 428, 439], "belong": [0, 105, 112, 114, 117, 126, 137, 144, 167, 170, 174, 254], "below": [3, 4, 7, 18, 27, 29, 41, 51, 54, 103, 146, 175, 181, 185, 190, 195, 257, 274, 275, 331, 332, 333, 336, 339, 348, 350, 354, 372, 374, 377, 390, 395, 398, 425, 429, 431, 437], "below_surfacelevel": 3, "benchmark": [379, 382, 384, 405, 407, 432], "bene": [19, 27, 28, 332, 338, 350], "benefit": 175, "best": [45, 357, 377, 398, 437, 441], "better": [0, 45, 130, 205, 331, 332, 333, 393, 399, 410, 428, 441], "between": [0, 7, 9, 10, 13, 17, 21, 23, 25, 35, 45, 74, 76, 97, 103, 118, 135, 146, 175, 195, 228, 249, 253, 258, 270, 286, 321, 325, 327, 331, 332, 333, 337, 344, 345, 349, 356, 357, 359, 376, 384, 387, 398, 399, 403, 408, 421, 422, 425, 429, 438, 439, 441, 442], "beyond": [127, 202, 260], "bhead": [20, 97, 343], "bi": 175, "bicgstab": [175, 349, 395, 398, 401, 408], "big": [421, 422], "big_align": [421, 422], "bilinear": 292, "billion": 426, "bimonth": 0, "bin": 439, "binari": [0, 37, 39, 78, 118, 138, 139, 140, 141, 145, 151, 208, 209, 210, 376, 395, 398, 401, 403, 408, 419, 421, 424, 429], "binary_dil": [298, 396, 398, 402], "binary_eros": 403, "binaryfil": 419, "bind": [421, 424], "bisect": [348, 349], "bit": [0, 271, 437, 440], "black": [325, 396, 417, 440], "blank": [106, 110], "bloat": 376, "blob": 376, "block": [0, 50, 118, 132, 146, 195, 304, 331, 332, 376, 403, 439], "bnd": [51, 379, 380, 381, 382, 383, 384, 387, 425], "bodi": [0, 294], "bone": 429, "bookkeep": 387, "bool": [0, 3, 5, 41, 42, 43, 51, 54, 59, 68, 72, 77, 78, 79, 80, 86, 87, 93, 97, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 124, 130, 131, 132, 135, 136, 138, 139, 140, 142, 145, 146, 151, 152, 158, 165, 167, 168, 170, 171, 174, 175, 179, 180, 181, 185, 190, 192, 194, 195, 196, 199, 205, 206, 207, 208, 210, 230, 243, 256, 260, 268, 281, 286, 299, 303, 318, 322, 325, 337, 339, 343, 344, 347, 351, 352, 353, 354, 357, 359, 360, 396, 398, 402, 403, 406, 438, 439, 440, 441], "boolean": [0, 3, 8, 181, 185, 264, 265, 266, 267, 277, 279, 282, 283, 284, 285, 292, 321, 325, 403, 421, 422], "boolfalsearrai": [438, 439, 440, 441], "booltruearrai": 439, "bor": 374, "border": 396, "border_valu": [396, 398, 402], "borehol": [47, 410, 434], "borehole1d": [47, 49], "borehole3d": [47, 49], "bot": [6, 8, 11, 12, 23, 35, 146, 322, 345, 379, 380, 381, 382, 383, 384, 403, 415, 425], "bot_elev": 406, "both": [0, 5, 26, 27, 77, 86, 118, 132, 151, 161, 175, 239, 257, 271, 280, 293, 294, 296, 297, 300, 321, 325, 326, 328, 331, 332, 357, 378, 379, 382, 387, 399, 403, 404, 419, 428, 429, 431, 438, 439], "bottom": [0, 29, 81, 89, 93, 94, 99, 103, 112, 114, 116, 117, 119, 120, 125, 130, 146, 147, 153, 158, 160, 166, 167, 169, 170, 172, 174, 182, 186, 190, 191, 195, 196, 197, 199, 201, 205, 213, 257, 258, 263, 264, 265, 267, 268, 274, 275, 276, 277, 278, 279, 287, 288, 321, 322, 326, 328, 335, 354, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 400, 401, 402, 403, 406, 408, 415, 433, 439, 440, 441], "bottom_elev": [0, 29, 51, 158, 223, 258, 267, 274, 279, 354, 403, 439, 440, 441], "bottom_l": [420, 421], "bottom_l1": [420, 421], "bottom_resist": 233, "bottom_sourc": 0, "bound": [0, 29, 81, 89, 94, 99, 116, 120, 125, 127, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 202, 275, 281, 299, 300, 301, 302, 319, 354], "boundari": [0, 5, 7, 8, 17, 18, 19, 20, 26, 28, 29, 58, 66, 79, 80, 87, 93, 97, 105, 124, 137, 152, 158, 180, 199, 206, 207, 231, 257, 258, 260, 261, 262, 265, 273, 295, 298, 321, 325, 327, 335, 336, 337, 339, 343, 345, 354, 381, 395, 396, 398, 400, 401, 402, 403, 406, 408, 434, 440], "boundary_valu": 134, "boundarycondit": 0, "boundarynorm": 321, "box": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 319, 379], "branch": [372, 373, 378], "break": [0, 429, 431], "breviti": 393, "brief": 441, "bring": 426, "broadcast": [5, 387, 393, 440], "broader": 430, "broken": 0, "brook": 195, "brought": 441, "brows": 376, "btn": [0, 379, 380, 381, 382, 383, 384], "budget": [0, 5, 6, 11, 77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 139, 141, 146, 151, 152, 158, 180, 181, 185, 195, 199, 206, 207, 208, 211, 256, 337, 339, 343, 345, 347, 351, 352, 353, 354, 360, 403, 415, 425, 430], "budget_fil": [0, 151], "budget_fileout": 195, "budgetbinfil": 118, "budgetcsv_fileout": 195, "budgetcsvfil": [118, 406], "budgetzon": 5, "bug": [0, 373], "bui": 78, "build": [0, 378, 385, 388, 391, 399, 402, 403, 404, 405, 408, 429, 430, 439, 441, 442], "buildag": [403, 406, 434, 439], "builder": 372, "built": 419, "bulk": [118, 132, 401], "bulk_dens": [118, 132, 220, 401, 439], "bundl": 433, "buoyanc": [0, 395], "burden": 398, "burn": [271, 281, 290], "busi": 66, "button": [378, 405], "by_conduct": [258, 440], "by_corrected_transmiss": [258, 262, 279, 440], "by_crosscut_thick": [258, 440], "by_crosscut_transmiss": [258, 440], "by_layer_thick": [258, 440], "by_layer_transmiss": [258, 262, 277, 440], "bypass": [26, 374], "byte": [0, 211, 396, 433, 437, 439], "c": [0, 4, 25, 29, 135, 292, 356, 359, 374, 379, 380, 381, 382, 383, 384, 387, 401, 403, 406, 429, 434, 439, 440], "c0": [269, 271], "c1": [78, 269], "c2": 78, "c_leakag": 361, "c_radial": 361, "ca0020": 329, "cach": [0, 399, 439], "calcul": [0, 3, 5, 8, 11, 12, 21, 74, 78, 80, 103, 112, 114, 117, 146, 152, 167, 170, 174, 175, 181, 185, 194, 195, 271, 335, 336, 345, 347, 348, 351, 352, 353, 357, 359, 403, 410, 430, 435, 441], "calculate_gxg": [0, 361, 425], "calculate_gxg_point": 0, "calendar": [50, 140, 208, 209, 210, 403, 429], "calibr": [26, 251], "call": [0, 26, 45, 77, 78, 85, 88, 92, 96, 98, 102, 107, 112, 114, 117, 123, 127, 128, 129, 135, 138, 139, 140, 141, 143, 150, 157, 159, 163, 167, 170, 174, 175, 184, 189, 198, 200, 202, 203, 204, 259, 260, 263, 271, 315, 319, 322, 331, 332, 356, 372, 373, 374, 387, 393, 403, 410, 421, 424, 425, 429, 437, 439, 441], "callabl": [63, 64, 293, 294], "calss": [27, 350], "camera": 319, "camera_posit": 319, "campbel": 382, "can": [0, 5, 8, 11, 12, 13, 14, 17, 21, 25, 26, 27, 39, 41, 42, 45, 47, 54, 59, 66, 77, 78, 80, 82, 83, 85, 87, 90, 92, 93, 96, 97, 100, 102, 103, 104, 108, 109, 111, 113, 115, 118, 119, 121, 123, 124, 126, 128, 129, 131, 135, 136, 137, 146, 148, 150, 151, 152, 155, 157, 158, 161, 163, 164, 165, 168, 171, 175, 181, 184, 185, 187, 189, 190, 192, 193, 198, 199, 203, 204, 206, 207, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 232, 239, 241, 247, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 277, 279, 280, 281, 287, 288, 296, 297, 300, 316, 319, 321, 322, 325, 326, 328, 331, 332, 333, 336, 337, 350, 356, 357, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 390, 392, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 408, 410, 411, 415, 419, 420, 421, 422, 424, 425, 428, 429, 431, 433, 434, 435, 437, 438, 439, 440, 441], "canal": 434, "cannot": [39, 50, 127, 146, 175, 202, 239, 277, 279, 425, 429, 437, 438, 439], "cap": [0, 26, 126, 154, 229, 231, 234, 241, 246, 248, 250, 252, 425], "capabl": [175, 442], "capac": [26, 126, 132, 226, 233, 239, 253, 254], "capillari": [195, 251, 428], "captur": [431, 437], "care": [30, 32, 185, 300, 425, 437, 439], "carri": [398, 429, 439, 441], "cartesian": [21, 292], "cartodb": 325, "case": [0, 4, 5, 41, 44, 47, 49, 54, 55, 82, 83, 124, 127, 138, 141, 146, 175, 195, 199, 202, 260, 280, 292, 313, 316, 322, 357, 373, 377, 382, 387, 393, 395, 396, 397, 398, 401, 403, 410, 413, 428, 429, 431, 433, 437, 438, 439, 441], "cat": 47, "catch": 0, "categori": [429, 434], "caus": [0, 27, 146, 247, 251, 272, 273, 274, 331, 332, 345, 350, 357, 398, 403, 406, 413, 425, 439, 441], "caveat": 439, "cbar": 325, "cbc": [0, 139, 151, 195, 208, 211, 396], "cbc_content": 208, "cbc_grid": 396, "cbc_path": [208, 211], "cclose": [344, 349, 379, 380, 381, 382, 383, 384], "cd": [164, 361, 379, 380, 381, 382, 383, 384, 387, 429, 431], "cdist": 0, "cell": [0, 4, 5, 7, 8, 11, 12, 16, 18, 26, 27, 29, 31, 36, 74, 76, 77, 80, 84, 91, 93, 95, 97, 101, 103, 106, 110, 112, 114, 117, 119, 122, 124, 126, 127, 128, 130, 139, 144, 146, 149, 151, 152, 154, 156, 162, 164, 167, 170, 174, 175, 181, 183, 185, 187, 188, 190, 195, 199, 202, 203, 205, 207, 208, 211, 227, 228, 229, 241, 249, 250, 254, 257, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 282, 283, 284, 285, 291, 293, 295, 303, 306, 307, 308, 309, 319, 320, 321, 322, 326, 330, 331, 332, 333, 334, 335, 336, 338, 339, 345, 348, 349, 350, 351, 352, 353, 354, 359, 360, 376, 379, 380, 381, 382, 383, 384, 387, 396, 398, 399, 400, 403, 406, 410, 422, 426, 433, 434, 436, 439, 441, 442], "cell2d": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 198, 204, 207], "cell_averag": 146, "cell_max_nparticl": [331, 332], "cell_min_nparticl": [331, 332], "cell_overlap": 260, "cellcentr": 399, "cellfac": 76, "cellid": [107, 130, 205], "cellsiz": [0, 9, 10, 13, 14, 26, 192, 269, 271, 281, 292, 293, 294, 296, 415, 424], "celltabl": [0, 291, 361], "center": [74, 146, 281, 379, 396, 398, 400, 402, 403, 406], "centimet": 26, "centr": [4, 398, 401, 403, 440], "central": [74, 330, 359, 382], "centroid": [411, 439], "centroidloc": [399, 439], "certain": [0, 5, 18, 29, 37, 335, 339, 354, 410, 429, 431], "cf": 396, "cftime": [0, 36, 41, 42, 54, 360, 419], "cftimeindex": 0, "cg": [175, 396, 400, 402, 403, 406, 408], "cghb": 343, "chanc": 322, "chang": [17, 27, 30, 45, 146, 175, 181, 185, 206, 207, 229, 250, 304, 310, 319, 337, 338, 345, 348, 350, 359, 373, 374, 375, 378, 387, 401, 403, 413, 428, 429, 431, 438, 441, 442], "changelog": [361, 378], "chani": 345, "channel": [429, 431], "character": [400, 402, 406], "characterist": [3, 111, 165, 175, 226, 331, 332, 333], "chart": 393, "chd": [80, 82, 83, 212, 387, 396, 400, 401, 402, 406, 408, 425, 438, 439], "chd_chd": 396, "chd_clip": 396, "chd_concentr": 408, "chd_data": 438, "chd_field": 408, "chd_locat": [396, 398, 402], "chd_time": 438, "cheatsheet": 373, "check": [0, 8, 24, 139, 175, 208, 229, 250, 299, 319, 330, 331, 332, 333, 334, 355, 373, 395, 403, 421, 422, 433, 439, 441], "checkout": 372, "chemic": [336, 408], "choco": 374, "chocolatei": 374, "chocolateyusewindowscompress": 374, "choic": [323, 429, 440], "choleski": [27, 344], "choos": [0, 13, 14, 239, 318, 321, 325], "chosen": [146, 264, 265, 266, 267, 280, 328, 331, 332, 357, 374, 408, 439, 440], "chunk": [0, 260, 396, 419, 433, 439], "chunksiz": [271, 293, 294, 396, 433, 439], "chunktyp": [396, 433, 439], "chunkwis": [0, 271], "ci": [164, 372, 374], "cim": 118, "cimfil": 118, "cinact": 336, "circl": [39, 402, 405, 407, 432], "circle_partit": [397, 407, 432], "circle_transport": [398, 407, 432], "circular": [396, 397, 398], "clai": [268, 428], "clarif": 373, "class": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 57, 58, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 92, 93, 96, 97, 102, 103, 108, 111, 113, 115, 118, 119, 123, 124, 129, 131, 132, 133, 146, 150, 151, 152, 157, 158, 163, 165, 168, 171, 175, 179, 181, 184, 185, 189, 190, 193, 194, 195, 196, 198, 199, 204, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237, 238, 239, 240, 244, 245, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 319, 320, 321, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 396, 399, 400], "classic": [379, 381], "classmethod": [82, 83, 90, 100, 105, 121, 126, 127, 137, 148, 154, 155, 161, 164, 173, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 254], "clean": [0, 88, 98, 159, 200, 272, 273, 274, 275, 373, 375], "cleaned_d": 441, "cleanup": [0, 425, 432, 442, 443], "cleanup_drn": [0, 88, 361, 425], "cleanup_ghb": [0, 98, 361, 425], "cleanup_riv": [0, 159, 361, 425, 441], "cleanup_wel": [0, 200, 361, 425], "clement": 379, "clemept": 379, "cli": 374, "cli_secret": 374, "click": [374, 405], "clip": [0, 81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 275, 396, 403, 425, 439], "clip_box": [0, 396, 425, 439], "clip_by_grid": 0, "clipped_half_simulation_constant_head": 396, "clockwis": 146, "clone": [372, 429, 431], "close": [119, 286, 410, 429], "closer": 433, "closur": [175, 286], "cm": [26, 195, 231, 325], "cmap": [319, 321, 323, 395, 398, 410, 415], "cmd": 374, "coarsen": 0, "coarser": [228, 249, 439], "code": [0, 26, 124, 199, 206, 207, 271, 313, 357, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "coeffici": [26, 30, 32, 86, 118, 132, 146, 175, 185, 233, 338, 401], "coerc": 0, "col_index": [271, 291], "colleagu": [429, 441], "colleagues_river_data": 441, "collect": [25, 51, 135, 211, 271, 356, 379, 380, 382, 383, 384, 395, 399, 400, 402, 403, 406, 408, 411, 429, 430, 433, 440], "collis": 50, "colloqui": 429, "color": [321, 323, 325, 327, 329, 396, 411, 415, 417, 439], "colorbar": [321, 325, 417], "colorbrewer2": [321, 325], "colormap": [321, 325], "column": [0, 5, 9, 10, 11, 12, 13, 14, 26, 39, 45, 47, 48, 49, 107, 118, 146, 206, 237, 268, 271, 275, 281, 290, 291, 293, 294, 345, 351, 352, 380, 382, 383, 387, 399, 400, 402, 403, 406, 408, 410, 419, 421, 422, 433, 434], "column_a": 293, "column_b": 293, "column_name_in_geodatafram": [421, 422], "column_name_in_vector_data": [421, 422], "com": [0, 41, 54, 164, 374, 429, 431], "comand": [379, 380, 381, 382, 383, 384, 387], "combin": [0, 8, 34, 35, 41, 42, 43, 45, 54, 126, 146, 254, 395, 398, 399, 403, 428, 433, 435], "combine_first": 403, "come": [0, 76, 376, 398, 403, 408, 421, 422, 429, 433, 434, 435, 442], "comma": [0, 118], "command": [372, 375, 379, 380, 381, 382, 383, 384, 387, 421, 424, 429, 431, 433], "comment": [0, 376], "commerci": [429, 431], "commit": [374, 376], "common": [33, 146, 272, 273, 274, 275, 280, 313, 315, 335, 428, 433, 441], "commonli": [175, 390, 428, 431, 433], "commun": [0, 195, 374, 377, 429, 431, 441], "compani": 431, "compar": [0, 29, 42, 127, 175, 202, 403, 404, 428, 433, 439, 440], "comparison": [404, 430, 441], "compat": [119, 315, 347, 426], "compil": [41, 42, 54, 259, 260, 263, 429], "complain": 381, "complenetess": 378, "complet": [0, 55, 377, 429, 441], "complex": [209, 387, 419, 426, 429], "compli": [0, 441], "compliant": [0, 104, 109, 136, 312, 420, 421], "complic": [45, 127, 202, 429], "compon": [0, 6, 9, 10, 13, 14, 146, 326], "componenti": 397, "compos": [44, 55], "composit": 0, "compress": 428, "comput": [0, 5, 6, 11, 12, 27, 41, 54, 80, 87, 90, 93, 97, 100, 112, 114, 117, 124, 139, 146, 152, 158, 164, 167, 170, 174, 175, 199, 206, 207, 208, 231, 255, 258, 260, 269, 271, 293, 294, 331, 332, 359, 387, 396, 397, 398, 401, 402, 403, 408, 411, 415, 419, 421, 422, 425, 428, 429, 431, 433, 438, 439, 440], "computation": [331, 332, 333], "conc": [379, 380, 381, 382, 383, 384, 395, 408], "concat": 403, "concaten": [138, 141, 234, 248, 398, 403], "concentr": [0, 74, 76, 78, 79, 80, 87, 93, 97, 118, 119, 124, 138, 141, 151, 152, 158, 180, 199, 206, 207, 212, 215, 218, 222, 223, 272, 273, 274, 319, 331, 332, 333, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 349, 351, 352, 353, 354, 358, 359, 360, 379, 380, 382, 383, 384, 395, 398, 401, 408, 439], "concentration_boundary_typ": [80, 87, 93, 97, 124, 152, 158, 179, 199, 206, 207, 395, 408], "concentration_fil": [0, 151], "concentration_l1": 0, "concept": [403, 428, 437], "conceptu": [379, 380, 381, 382, 384], "concis": 419, "concret": 437, "cond": [20, 29, 87, 97, 318, 343], "cond_d": 164, "cond_drn": 164, "cond_riv": 164, "conda": [0, 378, 419, 429], "condens": 256, "condiat": 395, "condit": [0, 5, 8, 19, 27, 28, 32, 84, 91, 95, 101, 105, 119, 122, 137, 146, 149, 156, 162, 175, 180, 183, 185, 188, 237, 238, 318, 336, 381, 395, 396, 398, 400, 402, 406, 408, 440], "condition1": [421, 422], "condition2": [421, 422], "conduct": [0, 18, 20, 21, 23, 26, 29, 34, 35, 51, 87, 90, 97, 100, 105, 107, 112, 114, 117, 124, 127, 130, 137, 146, 158, 161, 164, 167, 170, 174, 195, 199, 202, 205, 215, 218, 223, 251, 258, 260, 262, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 339, 343, 345, 354, 359, 382, 387, 395, 396, 398, 399, 400, 402, 421, 422, 424, 425, 428, 433, 441], "conductances_distribut": [277, 279], "conductivity_factor": 26, "config": 56, "config_run": [0, 387], "configur": [0, 56, 426, 428, 439], "confin": [15, 32, 130, 146, 181, 185, 187, 205, 335, 345, 400, 403, 428], "confirm": [405, 427], "confus": 428, "confusingli": 0, "conjug": [27, 175, 344, 350, 357], "conjunct": [175, 319], "connect": [0, 74, 103, 139, 146, 190, 208, 227, 228, 249, 374, 434, 436], "connection_length": 406, "connection_width": 406, "connectiondata": 146, "connectiontyp": 406, "consecut": 359, "consequ": [192, 393, 403, 410, 426, 429], "conserv": [27, 332, 359], "consid": [5, 44, 55, 66, 206, 207, 272, 273, 274, 322, 331, 332, 333, 336, 338, 373, 403, 410, 415, 429, 439], "consider": [0, 428, 437], "consist": [0, 44, 55, 74, 175, 240, 387, 396, 398, 400, 401, 406, 410, 429, 433, 434, 439, 441], "consistenli": 0, "consol": 374, "constant": [0, 16, 17, 51, 77, 79, 80, 82, 83, 126, 127, 146, 195, 202, 254, 303, 319, 320, 335, 336, 337, 345, 357, 358, 379, 380, 381, 382, 383, 384, 387, 395, 396, 399, 400, 401, 402, 406, 408, 421, 422, 424, 425, 428, 436, 438, 439, 440], "constant_conc": 401, "constant_concentr": 398, "constant_head": [396, 398, 400, 401, 402, 406], "constantconcentr": 336, "constanthead": [0, 212, 387, 396, 400, 401, 402, 403, 406, 408, 425, 438, 439], "constantheadregridmethod": [0, 82, 83], "constraint": [11, 12, 330, 331, 332, 333, 334, 439], "constrast": 437, "construct": [0, 41, 54, 82, 83, 90, 100, 121, 148, 154, 155, 161, 187, 192, 229, 231, 234, 241, 246, 248, 250, 252, 287, 288, 297, 322, 393, 408, 440], "constructor": [0, 74, 75, 76, 319, 403, 406, 439], "consum": [421, 422, 442], "conta": [48, 396, 400], "contact": [395, 441], "contain": [0, 3, 6, 7, 8, 11, 12, 26, 45, 46, 47, 48, 49, 78, 105, 126, 137, 139, 141, 142, 144, 208, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 233, 240, 244, 245, 249, 253, 254, 257, 258, 261, 262, 264, 265, 266, 267, 268, 271, 277, 279, 280, 292, 319, 321, 325, 326, 328, 329, 345, 374, 377, 387, 393, 395, 396, 402, 403, 404, 410, 415, 416, 428, 431, 433, 434, 435, 439, 440, 441], "contamin": 408, "content": [0, 47, 50, 51, 139, 195, 208, 251], "context": [0, 304, 311, 374], "contextili": [0, 325, 417], "contextmanag": 311, "continu": [66, 175, 313, 359, 373, 408, 433, 435], "contour": [13, 14, 328, 395, 398, 400, 406, 408, 415], "contourf": [395, 397, 398, 400, 406, 408], "contrast": [429, 437], "contribut": [377, 439], "control": [0, 5, 27, 77, 78, 79, 80, 86, 87, 93, 97, 103, 105, 108, 118, 124, 131, 132, 137, 139, 146, 151, 152, 158, 175, 180, 181, 185, 194, 195, 199, 206, 207, 208, 241, 256, 280, 300, 325, 331, 345, 347, 387, 395, 406, 430, 431], "convect": 379, "conveni": [0, 271, 390, 398, 411, 412, 419, 421, 422, 433, 435, 439, 441], "convent": [41, 42, 43, 44, 54, 55, 316, 396, 433], "converg": [27, 175, 331, 332, 344, 348, 349, 350, 359, 395, 406, 428], "convers": [0, 126, 138, 139, 140, 141, 208, 209, 210, 254], "convert": [0, 4, 26, 39, 45, 80, 103, 104, 107, 109, 124, 127, 130, 136, 138, 139, 140, 141, 146, 151, 161, 181, 185, 192, 199, 202, 205, 208, 209, 210, 224, 225, 231, 315, 316, 336, 343, 345, 354, 393, 395, 396, 398, 400, 401, 402, 403, 406, 408, 411, 422, 424, 425, 428, 439], "convert_pointwaterhead_freshwaterhead": 361, "convert_to_disv": 0, "convolut": [421, 422], "convolv": [421, 422], "coo": 271, "coolei": 175, "cooordin": 402, "cooper": 437, "coord": [0, 78, 85, 92, 96, 102, 123, 124, 129, 150, 151, 157, 163, 184, 189, 198, 199, 204, 292, 299, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 401, 402, 406, 408, 438, 440], "coord_refer": [0, 361], "coordin": [0, 7, 9, 10, 13, 14, 36, 41, 44, 50, 78, 124, 140, 146, 181, 190, 199, 201, 208, 209, 210, 226, 230, 233, 244, 247, 251, 253, 260, 263, 271, 280, 290, 292, 293, 296, 297, 299, 300, 301, 302, 305, 306, 307, 308, 309, 314, 317, 321, 322, 324, 326, 328, 348, 349, 360, 387, 393, 396, 399, 402, 403, 410, 413, 415, 419, 421, 422, 434, 435, 438, 439, 440, 441], "copi": [0, 142, 238, 245, 387, 396, 398, 402, 403, 431, 440, 441], "copyfil": 0, "core": [0, 82, 83, 90, 100, 121, 148, 155, 161, 187, 192, 271, 293, 294, 374, 431, 437], "corei": 195, "corner": 434, "correct": [0, 61, 68, 70, 72, 258, 269, 292, 359, 374, 403, 440, 441], "correct_water_t": 359, "correctli": [0, 66, 419], "correpsond": [140, 208, 209, 210], "correspond": [0, 146, 201, 251, 338, 359, 372, 387, 403, 410, 433], "cost": 376, "costli": 399, "could": [0, 27, 105, 195, 350, 376, 377, 410, 434], "couldn": 431, "count": [271, 439], "counter": [146, 439], "coupl": [0, 146, 154, 231, 247, 359, 391, 394, 403, 425, 432], "coupler": [0, 361], "couplermap": [361, 425], "couplingmap": 0, "courant": [330, 331, 332, 333, 334, 357, 379, 380, 381, 382, 383, 384, 439], "cover": [226, 377], "coverag": 373, "cpg": 434, "cpt": [47, 49], "cpu": 437, "cpython": 429, "cr": [0, 104, 109, 136, 292, 296, 297, 312, 325, 413, 434], "crash": 0, "creat": [0, 44, 45, 47, 55, 83, 85, 92, 96, 102, 103, 104, 108, 109, 123, 124, 126, 127, 129, 135, 142, 150, 151, 157, 163, 180, 184, 189, 193, 198, 199, 202, 204, 239, 256, 271, 276, 287, 288, 292, 299, 306, 307, 308, 309, 321, 326, 348, 349, 373, 374, 375, 378, 379, 380, 381, 382, 384, 387, 395, 397, 399, 401, 402, 403, 408, 411, 412, 413, 415, 417, 419, 425, 428, 429, 431, 433, 437, 438, 439, 440], "create_circle_simul": [397, 402], "create_layered_top": [361, 395], "create_time_discret": [0, 24, 127, 137, 202, 355, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 400, 401, 402, 403, 406, 408, 438], "create_transport_model": 401, "create_twri_simul": [399, 402], "creation": [0, 82, 388, 389, 432], "credenti": 374, "criter": 286, "criteria": [175, 357, 410], "criterion": [0, 27, 175, 344, 348, 349, 350, 441], "critic": [61, 66, 68, 70, 72, 331, 429], "cross": [0, 9, 10, 13, 14, 21, 296, 297, 321, 326, 328, 331, 332, 344, 361, 379, 380, 381, 382, 384, 415, 416, 425, 430, 433, 440, 442], "cross_sect": [0, 297, 326, 361, 415, 425, 440], "cross_section_lin": [321, 361, 415], "cross_section_linestr": [321, 361, 440], "crosscut": [258, 440], "crossect": 398, "crosssect": 440, "crucial": 439, "crunch": 429, "csv": [118, 175, 195, 256, 410, 435], "csv_output": [0, 175], "ctx": [325, 417], "cube": [118, 132, 175], "cubic": [5, 11, 27, 292, 348, 350], "cubic_splin": 292, "cumsum": 387, "cumul": 387, "current": [0, 26, 136, 151, 175, 247, 336, 357, 393, 429, 430, 437], "curv": 239, "custom": [0, 41, 42, 44, 54, 55, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 322, 417, 439], "cuthil": 175, "cyclic": [0, 175], "d": [0, 4, 6, 9, 10, 13, 14, 22, 25, 26, 41, 44, 54, 55, 56, 135, 138, 139, 140, 141, 208, 209, 210, 239, 244, 269, 270, 296, 319, 329, 351, 352, 353, 356, 359, 377, 381, 384, 387, 393, 395, 396, 401, 403, 415, 419, 420, 421, 422, 429, 440], "da": [0, 41, 44, 54, 55, 280, 289, 299, 300, 301, 302, 303, 316, 319, 320, 321, 322, 323, 328, 403, 420, 421, 422], "da1": [421, 422], "da2": [421, 422], "da3": [421, 422], "da_coord": 305, "da_firstlay": [421, 422], "da_gdal": [420, 421], "da_kd": [421, 422], "da_layer1": [421, 422], "da_select": [421, 422], "da_with_gap": [421, 422], "dai": [3, 5, 11, 19, 26, 28, 140, 208, 209, 210, 234, 239, 247, 253, 255, 338, 403, 408], "daili": [255, 403, 421, 422], "damp": [27, 175, 350, 379, 380, 381, 382, 383, 384], "damp_transi": 27, "dan": [421, 422], "darci": 146, "darcian": 0, "dash": [44, 55], "dask": [0, 300, 311, 396, 419, 430, 431, 433, 437, 439], "dat": 118, "data": [0, 25, 27, 41, 45, 47, 48, 49, 50, 54, 80, 82, 83, 85, 87, 90, 92, 93, 96, 97, 100, 102, 104, 105, 109, 111, 113, 115, 118, 121, 123, 124, 126, 127, 129, 135, 136, 137, 138, 139, 140, 141, 146, 148, 150, 151, 152, 154, 155, 157, 158, 161, 163, 165, 168, 171, 184, 187, 189, 192, 193, 198, 199, 202, 204, 206, 208, 209, 210, 211, 227, 228, 229, 230, 231, 233, 234, 240, 241, 244, 245, 246, 248, 249, 250, 252, 254, 263, 271, 272, 273, 274, 281, 286, 287, 288, 290, 292, 293, 294, 296, 297, 299, 300, 303, 316, 319, 320, 321, 326, 328, 329, 335, 339, 347, 348, 350, 356, 379, 380, 381, 382, 383, 384, 387, 390, 393, 395, 396, 398, 402, 404, 406, 408, 409, 410, 411, 412, 414, 415, 417, 424, 425, 429, 430, 431, 432, 436, 437, 438, 439, 442, 443], "data_var": 8, "dataarai": [5, 239], "dataarrai": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 50, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 172, 173, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 226, 228, 230, 233, 239, 244, 247, 249, 251, 253, 255, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 328, 335, 336, 337, 339, 343, 345, 346, 348, 349, 351, 352, 353, 354, 358, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 401, 402, 403, 408, 413, 415, 422, 433, 437, 438, 439, 440, 441], "dataarrayi": [403, 439], "dataarraylay": [387, 433, 440], "dataarraytim": [387, 403], "databas": [0, 240, 251, 441], "dataclass": [82, 83, 90, 100, 121, 148, 155, 161, 187, 192, 231, 439], "datafram": [0, 12, 45, 46, 47, 48, 49, 50, 111, 113, 115, 127, 165, 168, 171, 195, 202, 268, 271, 275, 291, 293, 294, 329, 348, 349, 381, 382, 384, 387, 393, 403, 421, 422, 424, 434, 435, 439], "dataframegroupbi": [293, 294], "datarrai": [7, 19, 321], "dataset": [0, 3, 6, 8, 11, 12, 41, 54, 105, 126, 127, 137, 139, 141, 202, 208, 254, 263, 296, 297, 310, 312, 316, 318, 393, 396, 397, 398, 403, 419, 433, 434, 437, 438, 439, 440, 441], "datasetdimens": [393, 433, 438, 439, 440, 441], "datatyp": 271, "date": [0, 3, 25, 41, 42, 44, 50, 54, 55, 135, 140, 208, 209, 210, 356, 387, 429], "date_rang": [124, 199, 381, 387, 398, 421, 422], "datecolumn": 329, "daterang": [25, 356], "datetim": [0, 25, 36, 80, 81, 87, 89, 90, 93, 94, 97, 99, 100, 105, 116, 120, 124, 125, 127, 134, 135, 137, 140, 147, 152, 153, 158, 160, 161, 166, 169, 172, 182, 186, 191, 197, 199, 201, 202, 206, 208, 209, 210, 241, 312, 315, 356, 360, 403, 406, 439], "datetime64": [0, 36, 41, 42, 54, 81, 89, 94, 99, 116, 120, 125, 134, 138, 139, 140, 141, 147, 151, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 208, 209, 210, 307, 309, 360, 387, 403, 406, 415, 438, 439], "datetimeindex": [387, 403, 438, 439], "datetimeprolepticgregorian": [0, 41, 42, 54], "datimeprolepticgregorian": 0, "datum": 3, "day_of_year": 226, "dbd": 175, "dbf": 434, "dcep": [331, 332, 333], "dchmoc": 331, "dconcentration_epsilon": [331, 332, 333], "dconcentration_hybrid": 331, "deactiv": [86, 127, 175, 202, 234, 272, 273, 274, 441], "deal": [0, 260, 263, 390, 419, 421, 424, 426, 429, 440, 442], "dear": 441, "debug": [0, 61, 63, 64, 66, 68, 70, 72, 107, 348, 349, 374], "dec": 403, "decai": [118, 132, 220, 401, 439], "decay_sorb": [118, 132, 220, 401, 439], "decid": [44, 55], "decim": 336, "declin": [32, 185], "declxml": 0, "decomposit": 175, "decor": [61, 63, 64, 68, 70, 72], "decreas": [0, 175, 440], "dedic": 399, "deep": [26, 440], "deepcopi": 0, "deeper": 440, "deepest": 440, "def": [260, 263, 401, 402, 403, 437, 439], "default": [0, 3, 6, 8, 11, 12, 22, 24, 26, 27, 39, 41, 42, 44, 47, 48, 49, 54, 55, 56, 58, 59, 72, 77, 78, 79, 80, 82, 83, 85, 86, 87, 90, 92, 93, 96, 97, 100, 102, 103, 104, 107, 109, 118, 119, 121, 123, 124, 129, 130, 131, 132, 136, 138, 139, 140, 141, 143, 146, 148, 150, 151, 152, 155, 157, 158, 161, 163, 164, 175, 180, 181, 184, 185, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 258, 259, 260, 261, 262, 263, 268, 271, 280, 281, 290, 292, 300, 301, 302, 303, 318, 319, 321, 322, 325, 330, 332, 333, 335, 336, 337, 338, 339, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 360, 372, 375, 398, 399, 403, 415, 421, 422, 428, 431, 434], "defer": [24, 355], "defin": [0, 5, 11, 12, 13, 14, 21, 22, 25, 29, 34, 41, 42, 44, 54, 55, 82, 83, 85, 92, 96, 102, 123, 126, 127, 129, 135, 144, 146, 150, 157, 163, 175, 184, 189, 193, 195, 198, 202, 204, 251, 254, 260, 266, 293, 294, 299, 300, 316, 336, 338, 345, 352, 356, 372, 374, 379, 380, 381, 382, 383, 384, 393, 395, 396, 398, 400, 402, 403, 406, 408, 410, 415, 417, 425, 429, 433, 434, 437, 439, 440, 441], "definin": 439, "definit": [0, 104, 109, 136, 336, 408], "deflat": 348, "degre": [21, 146, 175], "del": 374, "delai": [0, 311, 431], "delc": 408, "delet": [206, 207, 431], "delim_whitespac": [45, 46], "delimet": 0, "delimit": 0, "delr": 408, "delta": [11, 12, 175, 403], "delta_z": 402, "deltar": [0, 164, 372, 374, 378, 379, 380, 381, 382, 383, 384, 387, 429, 430, 431, 439], "deltares_email": 374, "delz": 408, "dem": 322, "demand": [0, 239, 331, 332, 333], "demonstr": [379, 381, 383, 384, 385, 388, 390, 391, 403, 405, 409, 419, 433, 438, 440, 442], "denot": [0, 21], "dens": [138, 139, 140, 141, 208, 209, 210, 403], "densemax": 359, "densemin": 359, "denseref": 359, "denseslp": 359, "densiti": [0, 4, 78, 118, 132, 343, 354, 359, 379, 382, 395, 398, 401, 430, 439], "density_concentration_slop": [78, 359, 379, 380, 381, 382, 383, 384, 395, 398], "density_criterion": 359, "density_fresh": 4, "density_max": 359, "density_min": 359, "density_ref": 359, "density_speci": 359, "densityfil": 78, "depenc": 429, "depend": [0, 18, 20, 29, 87, 97, 107, 126, 127, 145, 175, 193, 195, 202, 209, 254, 271, 331, 332, 339, 343, 354, 357, 379, 403, 406, 421, 424, 426, 430, 437, 438, 439], "deploi": 378, "deprec": [206, 207], "deprecationwarn": 0, "depress": 195, "depth": [0, 19, 26, 61, 68, 70, 72, 93, 107, 195, 201, 217, 230, 231, 247, 248, 251, 277, 279, 377, 410, 434, 439, 440], "depth_perched_water_t": 251, "deriv": [0, 164, 180, 190, 398, 410], "descend": [0, 421, 422], "describ": [111, 113, 115, 139, 146, 165, 168, 171, 175, 201, 208, 228, 230, 232, 233, 247, 249, 251, 253, 271, 395, 396, 398, 400, 403, 406, 428, 430, 438, 439, 440], "descript": [175, 256, 377, 384, 400, 427, 440], "design": [0, 9, 10, 13, 14, 41, 54, 80, 146, 282, 283, 284, 285, 296, 297, 419, 429, 433], "desir": [44, 55, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204, 286, 292, 331, 332, 357, 401], "desktop": 374, "despit": 435, "destin": [421, 422], "detail": [0, 25, 27, 88, 98, 135, 159, 200, 350, 356, 377, 384, 403, 405, 425, 427, 433, 440], "detect": [0, 301, 302], "determin": [25, 130, 135, 146, 151, 195, 205, 231, 271, 328, 336, 339, 345, 356, 359, 395, 403, 438, 439], "dev": [0, 260, 263], "devault": [348, 349], "develop": [0, 26, 195, 260, 263, 381, 383, 419, 421, 424, 430], "dewat": [146, 400, 401, 402, 403, 406, 439], "df": [45, 47, 48, 49, 271, 294, 329, 393, 420, 421, 422, 424], "di": [0, 82, 83, 88, 90, 98, 100, 131, 138, 139, 140, 141, 146, 155, 159, 161, 200, 206, 208, 209, 210, 213, 395, 399, 400, 401, 402, 406, 408, 430, 439, 441], "diagon": [5, 78, 175, 387], "dict": [8, 42, 45, 46, 47, 49, 50, 51, 52, 82, 83, 90, 100, 105, 121, 126, 127, 134, 137, 139, 141, 148, 155, 161, 173, 187, 192, 202, 208, 211, 240, 241, 242, 254, 272, 273, 274, 281, 292, 300, 319, 321, 325, 326, 328], "dictionari": [0, 40, 42, 45, 46, 47, 49, 50, 51, 80, 82, 83, 85, 87, 90, 92, 93, 96, 97, 100, 102, 105, 121, 123, 124, 126, 129, 137, 148, 150, 152, 155, 157, 158, 161, 163, 184, 187, 189, 192, 193, 198, 199, 204, 206, 211, 241, 254, 300, 387, 393, 396, 440, 441], "did": [0, 441], "diff": [404, 408, 441], "diff_for_plot": 404, "diff_riv_bot": 441, "diff_stag": 441, "diffc": 86, "differ": [0, 4, 20, 27, 35, 41, 45, 54, 83, 85, 90, 92, 96, 100, 102, 105, 121, 123, 126, 127, 129, 137, 144, 146, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 202, 204, 230, 233, 247, 251, 254, 261, 262, 263, 292, 318, 330, 331, 332, 333, 334, 336, 343, 350, 357, 359, 372, 379, 380, 381, 382, 383, 384, 393, 395, 401, 403, 404, 405, 407, 408, 410, 412, 421, 424, 425, 429, 431, 432, 433, 438, 439, 440, 441], "different_ways_to_regrid_model": [399, 407, 432], "difficult": [0, 403], "diffus": [86, 338, 398, 401, 439], "diffusion_coeffici": [86, 214, 338, 379, 380, 381, 382, 383, 384, 395, 398, 401, 408, 439], "digit": [44, 55, 118], "dim": [0, 18, 19, 20, 23, 28, 29, 30, 32, 34, 35, 124, 151, 199, 280, 286, 292, 293, 299, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406, 408, 421, 422, 437, 438, 441], "dimens": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 26, 33, 44, 55, 80, 87, 93, 97, 118, 124, 127, 132, 138, 139, 141, 152, 158, 180, 199, 202, 206, 208, 229, 234, 250, 257, 260, 264, 265, 266, 267, 271, 276, 277, 279, 280, 287, 288, 292, 293, 294, 295, 296, 297, 298, 300, 312, 316, 318, 319, 321, 322, 326, 328, 335, 387, 393, 396, 403, 408, 415, 419, 421, 422, 424, 429, 437, 438, 439, 440, 441], "dimension": [0, 5, 9, 10, 13, 14, 26, 128, 203, 283, 296, 297, 321, 322, 326, 328, 331, 332, 387, 395, 400, 408, 421, 422, 433, 437], "dimensionless": [32, 93, 118, 185, 345], "dimes": [295, 298], "diminish": 334, "dinoloket": 410, "direct": [0, 5, 6, 9, 10, 11, 13, 14, 86, 107, 146, 330, 331, 332, 333, 334, 345, 346, 358, 376, 395, 398, 399, 403], "directli": [0, 3, 39, 56, 292, 297, 372, 376, 413, 419, 421, 422, 425, 428, 431, 433], "directori": [0, 42, 55, 104, 109, 136, 145, 243, 304, 323, 373, 375, 376, 387, 393, 395, 396, 398, 400, 405, 406, 429, 433, 437], "dirti": 441, "dirty_d": 441, "dis6": 190, "dis_pkg": 441, "disabl": [41, 44, 175, 247], "disappear": [127, 202], "disast": 429, "discard": 3, "discharg": [0, 12, 124, 146, 195, 199, 206, 207, 329], "discontinu": 0, "discrep": [331, 332], "discret": [0, 25, 85, 88, 92, 96, 98, 102, 105, 123, 129, 131, 135, 137, 142, 146, 150, 155, 157, 159, 163, 184, 189, 190, 193, 194, 196, 198, 200, 204, 206, 207, 231, 241, 271, 356, 361, 395, 398, 400, 401, 402, 406, 408, 425, 430, 432, 439, 441, 442, 443], "discretis": 357, "discretizationregridmethod": [0, 192], "discretizationvertic": 0, "discuss": 433, "disk": [396, 425, 429, 437], "dispers": [0, 214, 344, 379, 380, 381, 382, 383, 384, 395, 398, 401, 408, 439], "dispersionregridmethod": 0, "displac": 440, "displai": [319, 320, 374, 439], "display": 439, "dispsers": 86, "disquisit": 0, "dist_opt": 262, "distanc": [74, 146, 270], "distcoef": [118, 132, 220, 401, 439], "distinct": 325, "distort": 403, "distrcond": [258, 425], "distribut": [0, 90, 100, 105, 118, 130, 132, 137, 161, 205, 258, 262, 268, 277, 279, 331, 332, 351, 352, 353, 400, 401, 403, 425, 429, 431, 437], "distribute_drn_conduct": [0, 361, 425], "distribute_ghb_conduct": [0, 361, 425], "distribute_riv_conduct": [0, 361, 425, 440], "distributing_data": 440, "distributing_opt": [0, 90, 100, 105, 137, 161, 262, 277, 278, 279, 361, 440], "distribution_coeffici": 118, "disu": 146, "disu6": 190, "disv": [0, 138, 139, 140, 141, 196, 207, 208, 209, 210, 396, 397, 398, 402, 430], "disv6": 190, "ditch": [0, 403, 434, 440], "diverg": [13, 14, 331, 332], "divid": [0, 195, 271, 331, 332, 428, 437], "dll": [0, 77], "dnscrit": 359, "do": [0, 41, 42, 45, 54, 119, 140, 208, 209, 210, 247, 251, 263, 271, 272, 273, 274, 280, 292, 300, 301, 302, 372, 373, 374, 387, 402, 403, 410, 411, 419, 422, 424, 426, 429, 431, 433, 439, 440, 441], "do_something_in_doc": 304, "doc": [0, 260, 263, 293, 294, 304, 322, 375, 387, 402, 429], "docstr": [0, 376], "documen": 433, "document": [0, 88, 98, 159, 200, 313, 319, 322, 373, 376, 377, 378, 396, 398, 403, 408, 421, 422, 430, 431, 437, 439, 440], "doe": [0, 23, 27, 82, 83, 90, 100, 121, 126, 127, 148, 155, 161, 181, 185, 187, 190, 202, 228, 231, 234, 249, 254, 281, 300, 318, 335, 350, 357, 398, 401, 421, 422, 424, 428, 431, 437], "doesn": [58, 66, 70, 201, 281, 373, 381, 401, 429, 431, 433], "doi": [77, 164, 382, 384], "domain": [0, 84, 91, 95, 101, 118, 122, 128, 132, 144, 149, 156, 162, 183, 188, 203, 268, 272, 273, 274, 292, 348, 349, 380, 387, 395, 398, 399, 401, 403, 404, 410], "domin": [331, 332, 333], "don": [319, 374, 398], "done": [82, 138, 139, 140, 141, 208, 209, 210, 229, 236, 250, 348, 349, 374, 375, 399, 403, 405, 421, 422, 428, 437, 439], "doubl": [0, 44, 399], "down": [0, 7, 11, 12, 175], "download": [24, 374, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "downloadstr": 374, "downscal": 439, "downsid": 437, "downward": [233, 440], "downward_resist": [0, 233], "dpi": 329, "drain": [87, 118, 257, 264, 270, 272, 277, 339, 400, 402, 403, 406, 428, 439, 440], "drain_elev": [264, 277], "drainag": [0, 139, 161, 164, 208, 215, 261, 262, 400, 402, 425, 439], "drainage_conduct": 164, "drainagepackag": 8, "drainageregridmethod": [0, 90], "draw": [0, 5, 321, 322, 326, 328, 398], "drawdown": [335, 347], "drawn": [297, 321, 326, 328], "driven": [377, 431], "driver": [0, 55, 433], "drn": [0, 8, 50, 139, 208, 211, 215, 257, 258, 261, 262, 277, 400, 402, 425, 439, 440], "drn_budget": [139, 208], "drop": [0, 8, 18, 175, 275, 339, 345, 411], "drop_allnan": 8, "drop_var": [403, 440], "dropna": 411, "drought": 239, "dry": [119, 130, 138, 140, 146, 175, 205, 210, 336, 345], "dry_nan": [138, 140, 210], "ds_flux": 415, "ds_ugrid": [420, 421], "dsp": [214, 379, 380, 381, 382, 383, 384, 395, 398, 401, 408], "dst_cr": [292, 413], "dsv_path": 209, "dt": [3, 11, 12], "dt0": 357, "dt_all": 8, "dt_min": 8, "dt_xyz": 11, "dtadj": 175, "dtype": [0, 44, 55, 151, 181, 271, 281, 290, 299, 301, 306, 307, 308, 309, 318, 387, 393, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 415, 433, 434, 438, 439, 440, 441], "dtypelik": [271, 290], "due": [260, 338, 395, 399, 400, 401, 406, 425, 429], "dummi": [58, 70, 411, 412, 438], "dump": [0, 323], "duplic": [0, 45, 80, 87, 93, 97, 124, 152, 158, 199, 206, 271, 400, 435, 440], "durat": [0, 140, 208, 209, 210, 239, 395, 401, 403, 408, 438], "dure": [0, 26, 27, 36, 66, 107, 130, 175, 205, 239, 345, 348, 350, 360, 372, 439], "dutch": [3, 425], "dv": 209, "dvc": 430, "dvs_path": 209, "dx": [0, 269, 281, 305, 306, 307, 308, 309, 314, 379, 380, 381, 382, 383, 384, 387, 395, 399, 400, 401, 402, 403, 406, 408, 410, 411, 412, 413, 415, 421, 422, 433, 439, 440, 441], "dx_coars": 412, "dy": [0, 269, 281, 292, 306, 307, 308, 309, 314, 379, 380, 381, 382, 383, 384, 387, 395, 399, 400, 402, 403, 406, 408, 410, 411, 412, 413, 415, 421, 422, 433, 439, 440, 441], "dy_coars": 412, "dynam": 331, "dz": [6, 7, 11, 12, 379, 380, 381, 382, 383, 384, 387, 395, 415], "e": [0, 3, 5, 25, 26, 27, 45, 46, 50, 80, 87, 93, 97, 105, 124, 135, 137, 144, 152, 158, 180, 199, 206, 211, 247, 256, 263, 271, 280, 281, 292, 293, 294, 317, 321, 322, 325, 328, 331, 332, 336, 350, 356, 357, 372, 382, 390, 393, 419, 429, 430, 431, 434, 435], "each": [0, 22, 27, 41, 42, 44, 45, 47, 51, 54, 55, 77, 79, 80, 87, 93, 97, 104, 109, 118, 124, 126, 131, 136, 146, 152, 158, 175, 180, 181, 185, 190, 195, 199, 206, 207, 226, 254, 255, 296, 297, 331, 332, 336, 338, 345, 350, 351, 352, 357, 387, 393, 398, 399, 402, 403, 408, 410, 434, 435, 437, 438, 439, 440], "eager": [24, 355, 437], "eager_da": 437, "eager_head": 437, "eager_result": 437, "eagerli": 50, "earlier": [399, 440], "eas": [0, 416], "easi": [373, 374, 431], "easier": [0, 41, 54, 398, 428, 430], "easiest": [45, 421, 422], "easili": [0, 297, 319, 320, 326, 374, 376, 393, 396, 398, 433, 434, 437, 439], "east": [5, 21, 403], "eastern": 403, "eb": 256, "echo": 108, "ecosystem": 431, "edg": [0, 4, 5, 139, 208, 379, 387, 396, 425], "edgecolor": [321, 325, 440], "edit": [0, 405], "editor": [376, 431], "edu": 379, "effect": [0, 8, 86, 112, 114, 117, 118, 132, 146, 167, 170, 174, 175, 336, 338, 346, 358, 403, 428, 439, 440], "effici": [0, 13, 14, 41, 54, 195, 281, 344, 421, 422, 429], "effort": [332, 387], "ehead": 80, "eic": 256, "either": [0, 41, 42, 47, 49, 54, 80, 118, 126, 127, 132, 175, 195, 202, 254, 295, 298, 331, 372, 428, 437, 440], "elast": 428, "elder": [385, 386, 432], "element": [26, 421, 422, 437], "elev": [0, 4, 15, 18, 19, 26, 33, 87, 93, 146, 158, 190, 215, 230, 257, 264, 267, 272, 274, 277, 279, 335, 339, 400, 402, 403, 410, 433, 439, 440, 441], "ellipsoid": [86, 146], "els": [0, 26, 401, 440], "elsewher": [331, 332, 333], "em": [13, 14], "email": 374, "embarrassingli": 437, "embed": 376, "empti": [0, 292, 300, 306, 307, 308, 309, 396, 400, 402, 410], "empty_2d": [0, 361, 410, 411, 412, 413, 421, 422, 439], "empty_2d_transi": [0, 361, 421, 422], "empty_3d": [0, 361, 421, 422], "empty_3d_transi": [0, 361, 421, 422], "emptyregridmethod": 0, "en": [30, 32, 77, 181, 185, 290, 335, 387], "enabl": [0, 373, 390, 431], "encod": [41, 42, 54, 312, 433], "encompass": 403, "encount": 26, "end": [0, 9, 10, 13, 25, 27, 63, 64, 80, 90, 100, 105, 135, 137, 161, 239, 296, 326, 331, 332, 337, 356, 379, 380, 381, 382, 383, 384, 387, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 412, 413, 415, 417, 421, 422, 433, 434, 435, 436, 437, 438, 439, 440, 441], "end_level": [63, 64], "end_sprinkling_season": [239, 393], "endtim": [24, 355, 387, 438], "enforc": [0, 439, 440], "enforce_dim_ord": 440, "eng": 379, "enorm": 426, "enough": [124, 402], "ensur": [0, 50, 272, 273, 274, 312, 403], "enter": [5, 146, 165, 168, 171, 335, 345, 401, 405, 428], "entir": [0, 4, 107, 113, 130, 146, 205, 275, 330, 331, 332, 333, 334, 336, 393, 428, 429, 433, 437, 441], "entri": [0, 42, 50, 51, 78, 108, 124, 127, 175, 195, 199, 202, 312, 378, 396], "enu": 374, "enum": [58, 66], "enumer": [257, 258, 264, 265, 266, 267, 277, 279, 440], "env": [374, 434], "environ": [0, 143, 372, 375, 378, 383, 405, 431], "envrion": 429, "envsoft": 77, "epd": 256, "epsg": [292, 325, 413], "epsilon": 195, "eq": 4, "equal": [0, 21, 26, 27, 29, 33, 74, 76, 86, 146, 164, 175, 181, 185, 228, 249, 258, 268, 286, 331, 332, 335, 338, 345, 348, 349, 350, 357, 374, 397, 403, 428, 435, 440], "equat": [5, 27, 78, 146, 164, 175, 344, 345, 350, 359, 403, 421, 422, 424], "equidist": [0, 232, 296, 306, 307, 308, 309, 421, 422], "equilibrium": [118, 132, 235, 236], "equival": [175, 257, 258, 264, 265, 266, 267, 316, 400], "ernst": 270, "erron": [0, 145, 441], "error": [0, 26, 47, 49, 61, 66, 68, 70, 72, 80, 107, 118, 130, 132, 175, 205, 256, 260, 300, 313, 387, 398, 419, 425, 441], "escap": 374, "esp": 256, "especi": [0, 175, 393, 419, 428, 429, 431, 433, 438, 439], "espg": 0, "esri": [244, 434], "esrii": [0, 433], "essenti": [271, 429, 434], "essink": 384, "establish": [27, 146, 228, 249, 345, 348, 350], "estim": [175, 403, 428], "et": [93, 195], "et_pot": 195, "etact": 256, "etc": [0, 24, 51, 211, 316, 355, 429, 433, 437, 442], "euler": [331, 332, 333], "eulerian": [331, 332, 333], "evalu": [0, 326, 328, 361, 415, 419, 425, 430, 432, 442, 443], "evapor": [19, 226, 239, 256], "evapotranspir": [0, 195, 217, 228, 244, 256, 329, 403, 439, 440], "evapotranspiration_lay": 341, "evapotranspirationmap": [244, 245, 361, 425], "evapotranspirationregridmethod": 0, "evapotranspor": 228, "even": [0, 13, 14, 27, 127, 146, 202, 330, 331, 332, 333, 334, 335, 336, 348, 349, 428, 433, 437, 438, 439, 440], "event": 66, "eventu": [403, 406, 439], "everi": [0, 3, 5, 25, 31, 45, 51, 77, 78, 79, 80, 87, 93, 97, 103, 108, 119, 124, 131, 135, 139, 146, 152, 158, 180, 181, 185, 195, 199, 206, 207, 208, 260, 326, 331, 332, 335, 336, 338, 345, 356, 403, 408, 433, 434, 435, 436, 437, 442], "everybodi": 376, "everywher": [161, 384], "evt": [0, 93, 217, 403], "evt_ss": 403, "evt_ss_mean": 403, "evt_tran": 403, "ex": [374, 379, 380, 381, 382, 383, 384, 387, 429], "ex01": [400, 402, 406, 408], "ex01_twri": [399, 400, 402, 407, 432], "exact": [372, 401, 431], "exactli": [0, 5, 6, 11, 12, 175, 374, 433], "exampl": [0, 3, 5, 24, 25, 41, 42, 44, 45, 47, 51, 54, 55, 56, 73, 78, 85, 92, 96, 102, 111, 113, 115, 123, 124, 129, 135, 137, 138, 139, 140, 143, 146, 150, 151, 157, 163, 165, 168, 171, 184, 189, 198, 199, 204, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 271, 277, 279, 280, 281, 287, 288, 290, 292, 293, 294, 297, 299, 300, 301, 302, 304, 311, 313, 319, 320, 321, 322, 325, 326, 329, 355, 356, 372, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443], "example_1d_transport": [401, 407, 432], "example_bc": 438, "example_l1": [41, 54], "example_model": [397, 399, 402, 407, 432], "example_with_tim": 45, "examplesimod": 386, "examplesimodflow": 389, "examplesmetaswap": 394, "examplesmf6": 407, "examplesprepar": 414, "examplesvisu": 418, "exce": [4, 274, 286, 330, 331, 332, 333, 334, 357, 437, 439, 441], "exceed": [7, 146, 251, 331, 332, 359, 439], "excel": [373, 435], "except": [0, 119, 252, 300, 301, 302, 313, 325, 433], "exception_typ": 313, "excess": 247, "exchang": [0, 103, 108, 146, 175], "exclud": [190, 439], "exclus": 0, "excpet": 268, "exe": 251, "execut": [0, 119, 143, 359, 376, 379, 380, 381, 382, 383, 384, 386, 387, 389, 394, 395, 396, 398, 400, 403, 405, 406, 407, 414, 418, 429, 432, 443], "executionpolici": 374, "exercis": [45, 441], "exfiltr": [29, 164], "exhaust": 442, "exist": [0, 45, 56, 161, 190, 245, 286, 292, 325, 390, 391, 394, 429, 432, 433, 437, 439, 442], "exit": 372, "expand": [90, 100, 161, 442], "expand_dim": [395, 398, 401, 408], "expans": [41, 42, 45, 54], "expect": [66, 90, 100, 112, 114, 117, 121, 143, 148, 155, 161, 167, 170, 174, 175, 187, 192, 313, 396, 401, 405, 421, 422, 434], "expens": 75, "experi": [27, 175, 350, 419, 431], "experiment": 0, "explain": [164, 401, 437, 442], "explan": [21, 441, 442], "explicit": [175, 330, 331, 332, 333, 334, 357, 359], "explicitli": [41, 54, 175, 292, 325, 336, 338, 357, 359, 400], "explor": 0, "expon": [132, 195], "exponenti": [118, 175], "export": [0, 419], "express": [41, 42, 54, 336, 437], "extdp": 195, "extend": [0, 195, 228, 249, 419], "extens": [0, 44, 47, 48, 55, 103, 108, 373, 431, 433, 439], "extent": [0, 192, 433], "exterior": [0, 322, 324, 396], "exterior_depth": 322, "exterior_onli": 322, "extern": [26, 396, 398, 403], "extinct": [93, 195], "extinction_depth": [19, 195, 340, 341, 342], "extinction_theta": 195, "extra": [0, 26, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 233, 398, 433], "extra_overlap": 260, "extra_storage_coeffici": 233, "extract": [0, 5, 26, 124, 127, 130, 199, 202, 205, 206, 207, 256, 297, 300, 305, 314, 317, 437], "extrat": 0, "extrem": [0, 175], "f": [4, 25, 135, 164, 356, 382, 439, 440], "f4a582": 329, "face": [0, 5, 9, 10, 11, 13, 14, 74, 139, 146, 208, 211, 295, 298, 345, 396, 397, 398, 415], "face_area": 398, "face_budget_right": 5, "face_dimens": [396, 398, 402], "facebudget": [361, 425], "facebudget_front": 5, "facebudget_low": 5, "facebudget_net": 5, "facecolor": [321, 325, 417, 440], "facet": 419, "fact": 425, "fact_mswp": 26, "fact_svat": [226, 393], "factor": [11, 12, 21, 26, 27, 29, 34, 51, 127, 146, 161, 164, 175, 202, 226, 251, 252, 331, 332, 333, 345, 348, 350, 401, 425], "fail": [0, 27, 37, 43, 313, 372, 373, 374], "fairli": 435, "fall": [7, 18, 29, 41, 42, 54, 103, 127, 128, 130, 202, 203, 205, 299, 301, 302, 325, 339, 354, 402, 429], "fallback": [0, 437], "fals": [0, 3, 5, 41, 42, 43, 54, 56, 59, 77, 78, 79, 80, 86, 87, 93, 97, 103, 104, 108, 109, 111, 113, 115, 118, 119, 124, 130, 131, 132, 136, 138, 139, 140, 145, 146, 151, 152, 158, 165, 168, 171, 175, 179, 180, 181, 185, 190, 194, 195, 196, 199, 205, 206, 207, 208, 210, 260, 263, 271, 281, 292, 303, 318, 321, 322, 325, 337, 339, 340, 341, 342, 343, 345, 347, 348, 349, 351, 352, 353, 354, 357, 359, 360, 374, 379, 380, 381, 382, 383, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 410, 415, 421, 422, 438, 439, 440, 441], "falsearrai": 440, "falsexarrai": [438, 439], "familiar": [396, 400, 402], "faq": [0, 431], "far": [401, 429, 431, 440], "fast": [315, 390, 431, 435, 437], "faster": [0, 86, 319, 320, 344, 359, 429, 431], "fault": 22, "faulti": 0, "favor": 433, "favorit": 431, "feasibl": 429, "featur": [0, 66, 260, 263, 269, 270, 271, 281, 290, 373, 376, 377, 387, 398, 403, 425, 429, 434, 437, 440, 442], "feature_typ": 39, "fedd": 239, "feddes_p1": [239, 393], "feddes_p2": [239, 393], "feddes_p3h": [239, 393], "feddes_p3l": [239, 393], "feddes_p4": [239, 393], "feddes_t3h": [239, 393], "feddes_t3l": [239, 393], "feed": [396, 400, 441], "feedstock": 0, "feel": 425, "few": [0, 375, 395, 399, 400, 406, 429, 435], "fewer": [331, 332], "fff": [9, 10, 13, 14], "fiddli": [41, 54], "field": [0, 9, 10, 13, 14, 85, 92, 96, 102, 123, 129, 146, 150, 157, 163, 184, 189, 198, 204, 296, 297, 326, 331, 332, 338, 398, 399, 401, 408, 415], "fig": [321, 325, 329, 379, 380, 381, 382, 383, 384, 396, 397, 398, 399, 403, 404, 408, 410, 411, 412, 413, 415, 439, 440, 441], "figsiz": [323, 325, 440], "figur": [321, 325, 373, 417, 437, 438, 440, 441], "file": [0, 5, 22, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 77, 78, 79, 80, 87, 93, 97, 103, 104, 105, 108, 109, 111, 113, 115, 118, 119, 124, 126, 127, 131, 132, 136, 137, 138, 139, 140, 141, 145, 146, 151, 152, 158, 165, 168, 171, 175, 180, 181, 185, 190, 195, 199, 202, 206, 207, 208, 209, 210, 211, 226, 227, 228, 230, 233, 235, 236, 237, 238, 240, 244, 245, 247, 249, 253, 254, 256, 271, 281, 292, 293, 294, 319, 327, 335, 345, 348, 349, 372, 374, 375, 376, 386, 387, 389, 390, 394, 395, 396, 397, 400, 402, 403, 406, 407, 410, 413, 414, 418, 419, 422, 429, 430, 431, 432, 433, 434, 435, 442, 443], "filehandl": [56, 59], "filenam": [41, 42, 43, 44, 54, 55, 56, 61, 68, 70, 72, 175, 433, 434], "fileout": [77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 152, 158, 180, 181, 185, 195, 199, 206, 207, 403], "fill": [0, 127, 175, 202, 286, 290, 306, 307, 308, 309, 361, 387, 403, 435], "fill_between": 321, "fill_valu": [380, 406], "filt_bot": 410, "filt_top": 410, "filter": [0, 106, 110, 268, 275, 322, 402, 433], "filternumm": 410, "final": [0, 25, 135, 271, 356, 379, 380, 381, 382, 383, 384, 387, 403, 404, 408, 431, 433, 435, 440], "find": [0, 42, 357, 372, 373, 392, 396, 425, 429, 431], "fine": [376, 425], "finest": 425, "finish": [138, 139, 140, 141, 319, 387], "finit": [27, 330, 331, 332, 333, 334, 350, 357], "fiona": 434, "first": [0, 5, 9, 10, 13, 14, 25, 37, 41, 42, 43, 45, 50, 51, 54, 76, 80, 87, 93, 97, 118, 119, 124, 127, 132, 135, 137, 138, 139, 140, 143, 146, 151, 152, 158, 175, 190, 195, 199, 202, 206, 208, 229, 250, 257, 259, 260, 263, 269, 271, 292, 303, 326, 331, 332, 333, 356, 359, 374, 381, 387, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 413, 415, 421, 422, 425, 428, 429, 431, 433, 434, 438, 439, 440, 441, 442], "first_active_to_elev": [257, 261, 440], "first_order_decai": [118, 132, 401], "firstli": 318, "fit": [45, 419, 437, 441, 442], "fix": [19, 28, 118, 175, 272, 273, 274, 275, 331, 332, 333, 373, 377, 395, 403, 441], "fixed_cel": [0, 93, 152, 438, 439], "fixed_format": 393, "fixed_format_pars": 393, "fixtur": [0, 439], "flag": [27, 41, 54, 59, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207, 331, 332, 337, 339, 343, 344, 345, 348, 349, 351, 352, 353, 354, 357, 359, 360], "flatten": 51, "flexibl": [0, 5, 316, 425, 430], "flf": [9, 10], "flip": 0, "float": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 41, 44, 47, 49, 51, 55, 78, 79, 80, 81, 84, 87, 89, 91, 93, 94, 95, 97, 99, 101, 116, 118, 119, 120, 122, 124, 125, 127, 131, 132, 134, 146, 147, 149, 152, 153, 156, 158, 160, 162, 164, 166, 169, 172, 175, 181, 182, 183, 185, 186, 188, 190, 191, 194, 195, 196, 197, 199, 201, 202, 206, 207, 226, 228, 230, 233, 237, 239, 244, 247, 249, 251, 253, 268, 269, 270, 271, 275, 281, 286, 287, 288, 290, 291, 293, 294, 301, 305, 306, 307, 308, 309, 312, 314, 319, 321, 322, 324, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 393, 395, 396, 398, 400, 401, 402, 403, 406, 421, 422], "float32": [44, 54, 403, 415, 433, 439, 440, 441], "float326": 439, "float32nan": [439, 440, 441], "float64": [0, 44, 139, 141, 208, 387, 393, 396, 403, 410, 415, 433, 437, 438, 439, 440, 441], "float640": [393, 438], "float641": [393, 396, 403, 438, 439], "float6410": [393, 415], "float64100": [415, 439], "float64120": 393, "float6414": 440, "float642": [403, 433, 439, 440, 441], "float6420": 393, "float64230": 393, "float6425": [403, 433, 439, 440, 441], "float6429": 440, "float644": [415, 433], "float645": [393, 403, 433, 439, 440, 441], "float6450": 387, "float646": 440, "float648": 415, "float64850": 387, "float649": [415, 433], "float6499": 393, "float64nan": [439, 440], "float_format": [348, 349], "flopi": 400, "flow": [0, 5, 6, 9, 10, 11, 13, 14, 44, 47, 49, 76, 77, 78, 79, 80, 86, 87, 93, 97, 103, 105, 108, 111, 112, 113, 114, 115, 117, 118, 124, 131, 132, 137, 139, 145, 146, 152, 158, 165, 167, 168, 170, 171, 174, 175, 180, 181, 185, 195, 199, 206, 207, 208, 211, 247, 287, 288, 326, 331, 332, 335, 336, 345, 346, 348, 357, 358, 359, 361, 379, 382, 395, 396, 397, 399, 401, 406, 408, 416, 418, 428, 430, 432, 433, 438, 439, 442], "flow_solv": [395, 398, 401, 408], "flow_veloc": [0, 9, 10, 361, 415], "flowfront": 5, "flowja": [0, 139, 208], "flowlow": 5, "flowmodel": 401, "flowright": 5, "flowvel_streamlin": [415, 418, 432], "fluid": [78, 359, 384, 398], "flux": [0, 5, 8, 9, 12, 18, 19, 20, 28, 29, 36, 87, 90, 93, 97, 100, 152, 236, 255, 339, 343, 351, 352, 353, 354, 360, 395, 398, 403, 415], "flux_concentr": 395, "fmt": 400, "focus": [399, 402, 430, 433, 434], "folder": [0, 240, 373, 374, 379, 380, 381, 382, 383, 384, 387, 429], "follow": [0, 13, 14, 25, 43, 44, 55, 78, 105, 127, 135, 137, 146, 164, 202, 231, 261, 262, 271, 272, 273, 274, 275, 287, 288, 300, 348, 349, 356, 372, 374, 375, 378, 379, 380, 381, 382, 383, 384, 387, 390, 393, 395, 396, 398, 399, 400, 403, 405, 406, 410, 417, 425, 429, 430, 431, 433, 435, 437, 438, 439, 440, 441], "forc": [25, 135, 356, 374, 426, 440], "foremost": 429, "forg": [0, 378, 429, 431], "forget": 374, "form": [105, 139, 208, 316, 395, 396, 400, 402, 419, 421, 424, 429, 433, 434, 435, 442], "format": [0, 56, 78, 82, 83, 90, 93, 100, 118, 121, 126, 127, 137, 148, 154, 155, 161, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 254, 317, 319, 329, 347, 348, 349, 361, 373, 390, 403, 419, 425, 430, 434, 435, 437, 442], "former": [376, 441], "formul": [0, 78, 103, 146, 175, 181, 185, 195, 334, 338, 398], "forth": 0, "fortran": 429, "fortun": 435, "forward": [0, 127, 202, 319, 321, 325, 387], "found": [0, 103, 108, 139, 208, 372, 374, 399, 403, 429, 439], "four": [5, 331, 332, 401], "fourth": [331, 332, 333], "frac": [4, 11, 12], "fraction": [118, 175, 239, 330, 331, 332, 333, 334, 336], "fraction_evaporated_sprinkl": [239, 393], "frame": 403, "framework": [26, 56, 58, 59, 68, 72], "framewotk": 403, "free": [0, 93, 379, 425, 437], "freeli": 247, "freq": [381, 387, 398, 403, 438, 439], "frequenc": [3, 151, 435], "frequent": [0, 311, 426], "fresh": [379, 380, 381, 383, 384, 395], "freshwat": [4, 343, 354, 359, 385, 386, 405, 407, 432], "freshwaterhead": 4, "freshwaterlen": [380, 386, 432], "freundlich": 132, "frf": [9, 10, 13, 14], "from": [0, 3, 4, 6, 7, 8, 18, 21, 25, 26, 27, 29, 30, 32, 35, 36, 39, 45, 50, 55, 56, 66, 76, 78, 82, 83, 90, 100, 105, 111, 113, 115, 119, 121, 126, 127, 135, 137, 146, 148, 154, 155, 161, 164, 165, 168, 171, 175, 180, 181, 185, 187, 190, 192, 195, 201, 202, 211, 229, 231, 234, 236, 241, 246, 248, 250, 252, 254, 256, 257, 261, 262, 264, 265, 266, 267, 276, 277, 279, 286, 287, 288, 292, 294, 296, 297, 302, 303, 312, 314, 317, 325, 326, 331, 332, 339, 344, 345, 348, 350, 354, 356, 357, 360, 372, 373, 374, 376, 379, 382, 386, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 410, 413, 414, 418, 425, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443], "from_datafram": 393, "from_edg": 403, "from_fil": 0, "from_flow_model": [0, 395, 398, 401, 408], "from_imod5_cap_data": [0, 425], "from_imod5_data": [0, 361, 425], "from_imod5_shd_data": [82, 425], "from_lakes_and_outlet": 406, "from_mdal_compliant_ugrid2d": [0, 361], "from_user_input": [104, 109, 136, 312], "front": [0, 5, 6, 9, 10, 11, 13, 14, 139, 208, 326, 345, 401, 415], "frost": 26, "frustrat": [429, 433], "fulfil": [0, 66], "full": [0, 21, 319, 344, 372, 379, 380, 381, 382, 383, 384, 387, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 415, 417, 419, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441], "full_lik": [300, 380, 384, 393, 395, 396, 398, 400, 401, 402, 403, 406, 415, 421, 422], "fulli": [0, 25, 30, 90, 100, 121, 135, 148, 155, 161, 181, 187, 192, 356, 380, 419, 425, 429, 431, 433, 437, 438, 440], "function": [0, 4, 5, 7, 8, 9, 10, 11, 37, 42, 43, 44, 45, 50, 55, 57, 62, 66, 80, 82, 83, 85, 86, 88, 90, 92, 96, 98, 100, 102, 106, 107, 110, 121, 123, 126, 129, 135, 148, 150, 154, 155, 157, 159, 161, 163, 175, 184, 187, 189, 192, 193, 195, 198, 200, 204, 211, 229, 231, 234, 239, 241, 246, 248, 250, 252, 259, 260, 263, 277, 279, 294, 296, 297, 298, 300, 301, 302, 303, 315, 325, 326, 328, 356, 373, 390, 392, 393, 396, 398, 399, 401, 402, 403, 408, 410, 411, 412, 413, 417, 419, 421, 422, 424, 425, 429, 430, 431, 433, 435, 437, 438, 439, 440, 441, 442], "function_nam": 439, "function_that_throws_warn": 311, "functionali": 390, "fundament": 419, "funtion": 390, "further": [21, 127, 175, 202, 396, 440], "furthermor": [0, 107, 151, 190, 258, 336, 374, 376, 403, 428, 440, 441], "futur": [206, 207, 373, 374], "g": [0, 3, 5, 25, 27, 45, 46, 50, 80, 87, 93, 97, 105, 124, 135, 137, 152, 158, 180, 199, 206, 211, 247, 256, 271, 280, 281, 292, 293, 294, 317, 321, 322, 325, 350, 356, 372, 384, 390, 393, 419, 429, 430, 431, 434, 435], "galleri": [376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "gamma": 175, "gap": [280, 286, 322], "gapfil": 442, "gash": 239, "gatkin": 0, "gauss": 292, "gcg": [357, 379, 380, 381, 382, 383, 384], "gcr": 349, "gdal": [0, 54, 55, 104, 109, 136, 281, 292, 420, 421, 433, 434], "gdal_compliant_grid": [0, 420, 421], "gdal_raster": [361, 421, 422], "gdf": [5, 271, 325, 417, 421, 424, 434, 440], "gen": [0, 22, 50, 361, 425], "gener": [0, 5, 20, 27, 41, 44, 47, 49, 54, 55, 97, 118, 119, 124, 180, 199, 251, 257, 260, 261, 262, 263, 265, 271, 273, 280, 292, 306, 307, 308, 309, 330, 331, 332, 333, 334, 338, 343, 344, 349, 350, 357, 361, 372, 375, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 422, 426, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "generalheadboundari": [0, 180, 218, 387, 395, 398, 425, 439], "generalheadboundarypackag": 8, "generalheadboundaryregridmethod": 0, "generalizedconjugategradientsolv": [379, 380, 381, 382, 383, 384], "geodatafram": [0, 37, 38, 39, 45, 50, 111, 113, 115, 165, 168, 171, 271, 281, 287, 288, 289, 290, 297, 325, 387, 411, 413, 421, 422, 424, 434, 435, 440], "geohydrolog": 433, "geohydrologi": 435, "geojson": 434, "geom_typ": 434, "geometr": [0, 357, 402], "geometri": [0, 10, 14, 22, 39, 45, 111, 113, 115, 165, 168, 171, 271, 281, 287, 288, 293, 294, 297, 324, 387, 396, 400, 403, 404, 406, 411, 421, 422, 424, 434, 435, 440], "geometric_mean": [0, 221, 259, 260, 263, 399, 439], "geopackag": 434, "geopanda": [0, 5, 37, 38, 39, 45, 50, 271, 289, 290, 297, 387, 390, 413, 421, 422, 424, 430, 431, 432, 440, 442, 443], "geoseri": 413, "geospati": [292, 431, 433, 434], "geotiff": 433, "get": [0, 5, 44, 55, 77, 139, 175, 208, 292, 300, 302, 303, 326, 337, 343, 351, 352, 353, 372, 375, 393, 403, 412, 429, 431, 433, 437, 439, 441], "get_alldata": 419, "get_cmap": 325, "get_data": 419, "get_label_arrai": [0, 397, 404, 408], "get_lower_active_grid_cel": [0, 361], "get_lower_active_layer_numb": [0, 361], "get_model": 419, "get_regrid_method": 439, "get_upper_active_grid_cel": [0, 361], "get_upper_active_layer_numb": [0, 361], "getlogg": 56, "ghb": [0, 8, 20, 100, 218, 257, 258, 261, 262, 265, 343, 387, 398, 425, 440], "ghb2": 387, "ghb_conc": 395, "ghb_head": 395, "ghbssmden": 343, "ghg": 3, "gi": [297, 419, 430, 431, 433, 434, 442], "gift": [239, 393], "gift_dur": [239, 393], "gigabyt": [419, 429, 431], "git": [373, 374, 376, 429, 430, 431], "github": [0, 316, 373, 378, 429, 430, 431, 439], "gitlab": 0, "give": [0, 44, 55, 428, 439], "given": [0, 5, 7, 9, 10, 13, 14, 25, 47, 49, 103, 124, 135, 142, 175, 195, 230, 290, 296, 297, 319, 325, 356, 357, 415, 428, 439], "glg": 3, "glob": [41, 42, 45, 54, 433], "global": 43, "globpath": 42, "gmre": 349, "go": [119, 201, 378, 379, 380, 381, 382, 383, 384, 387, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 415, 417, 433, 434, 435, 436, 437, 438, 439, 440, 441], "goal": [390, 396, 419], "goe": 437, "good": [319, 321, 325, 326, 403, 439], "got": [0, 431], "gov": [87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 165, 168, 171, 175, 190, 194, 199, 206, 207], "gpd": [5, 37, 38, 39, 45, 111, 113, 115, 165, 168, 171, 271, 287, 288, 289, 290, 297, 387, 421, 424, 434, 440], "gpkg": 434, "grab": 437, "gracefulli": [260, 263, 419], "gradient": [27, 175, 331, 332, 333, 344, 350, 357], "gradual": [345, 438], "granular": [66, 175], "graph": [396, 433, 437, 439], "grassland": 393, "gray_r": 410, "grb": [138, 139, 140, 141, 208, 209, 210, 400, 406, 419, 437], "grb_path": [208, 209, 210], "great": [390, 441, 442], "greater": [0, 27, 32, 144, 146, 175, 181, 185, 195, 330, 331, 332, 333, 334, 338, 344, 348, 349, 350, 357, 359, 377, 419, 428], "greatli": [0, 322, 429], "grei": [321, 440], "grid": [0, 74, 82, 83, 85, 86, 90, 92, 96, 100, 102, 104, 107, 109, 112, 114, 117, 121, 123, 124, 126, 127, 129, 130, 136, 138, 139, 140, 141, 146, 148, 150, 155, 157, 161, 163, 167, 170, 174, 184, 187, 189, 190, 192, 193, 198, 199, 202, 204, 205, 208, 209, 210, 228, 229, 230, 231, 232, 244, 245, 249, 250, 254, 257, 258, 264, 265, 266, 267, 268, 272, 273, 274, 275, 277, 279, 282, 283, 284, 285, 290, 292, 295, 296, 297, 298, 322, 325, 330, 331, 332, 333, 334, 338, 348, 349, 353, 361, 387, 395, 396, 398, 399, 401, 402, 403, 404, 408, 410, 411, 412, 413, 419, 421, 422, 424, 425, 430, 432, 438, 439, 440, 441, 442, 443], "grid_3d": [0, 361], "grid_boundary_xi": [0, 361], "grid_coord": 401, "grid_dim": 401, "grid_shap": 401, "grid_triangl": 398, "gridagnosticwel": [127, 128, 202, 203], "gridanimation3d": [0, 320, 361, 425], "gridblock": 439, "griddata": [0, 118, 361, 425], "griddataarrai": [81, 89, 94, 99, 105, 112, 114, 116, 117, 120, 121, 125, 126, 137, 147, 148, 153, 155, 160, 166, 167, 169, 170, 172, 174, 182, 186, 187, 191, 197, 201, 254], "groenendijk": 26, "ground": [164, 428], "groundwat": [0, 3, 9, 10, 13, 14, 19, 26, 28, 29, 80, 93, 103, 108, 118, 124, 126, 130, 131, 145, 152, 158, 180, 195, 199, 205, 206, 207, 251, 253, 254, 256, 346, 358, 379, 382, 383, 390, 395, 396, 398, 399, 403, 408, 421, 422, 424, 426, 430, 433, 434, 435, 438, 440, 442], "groundwater_et_funct": 195, "groundwaterflowmodel": [0, 137, 180, 261, 262, 395, 396, 398, 400, 401, 402, 403, 406, 408, 438], "groundwatertransport": 78, "groundwatertransportmodel": [0, 395, 398, 401, 408], "group": [0, 45, 211, 291, 430, 435, 439], "groupbi": [45, 271, 293, 294, 410, 421, 422], "growth": 380, "gt": [387, 393, 396, 403, 415, 433, 438, 439, 440, 441], "guarante": 441, "guess": 55, "gui": 0, "guid": [0, 26, 376, 377, 408, 432, 433, 434, 440, 443], "guide_jupyt": 442, "guide_python": 442, "guo": 4, "gvg": [0, 3], "gwf": [0, 77, 80, 103, 105, 111, 113, 115, 119, 137, 146, 165, 168, 171, 175, 181, 185, 195, 403, 404, 439, 441], "gwf_1": [396, 397, 399, 400, 402, 403, 406, 408, 419, 438], "gwf_model": [395, 396, 398, 400, 401, 402, 403, 406, 408, 438, 441], "gwf_simul": [404, 441], "gwfgwf": 0, "gwl": 3, "gwrch_uzf": 0, "gwseep": 195, "gwt": [77, 78, 108, 118, 175], "gwt_model": 395, "gxg": [0, 3, 425], "h": [0, 4, 25, 135, 140, 146, 175, 208, 209, 210, 345, 356, 384], "h1": 408, "h_": 4, "h_fstrict": 348, "h_fstrictpk": 348, "ha": [0, 5, 16, 25, 39, 44, 45, 55, 73, 78, 80, 85, 92, 96, 102, 106, 110, 111, 113, 115, 118, 123, 124, 129, 130, 135, 138, 139, 140, 141, 146, 150, 157, 163, 165, 168, 171, 175, 180, 184, 189, 198, 204, 205, 251, 257, 258, 264, 265, 267, 271, 272, 273, 274, 281, 292, 303, 319, 335, 346, 356, 358, 359, 374, 376, 387, 392, 393, 395, 398, 399, 400, 401, 402, 403, 410, 413, 419, 426, 428, 429, 431, 433, 435, 436, 437, 439, 440, 441], "had": [0, 399], "half": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 395, 396], "half_simul": 396, "half_simulation_constant_head": 396, "hand": [78, 86, 146, 175, 344, 393, 429, 441], "handbook": 373, "handi": 393, "handl": [0, 41, 54, 127, 202, 336, 429, 435], "handler": [56, 59], "happen": [66, 161, 373, 403, 439], "harbaugh": [399, 400], "hard": [0, 429], "harder": 175, "hardli": 429, "hardwar": 437, "harmon": [146, 345], "harmonic_mean": [221, 259, 260, 263, 439], "has_nodata": [421, 422], "hasattr": 439, "hassl": 373, "hatch": 321, "hatchl": 0, "have": [0, 25, 41, 44, 45, 54, 55, 80, 87, 93, 97, 105, 107, 118, 124, 127, 132, 135, 137, 144, 146, 152, 154, 158, 175, 180, 181, 185, 199, 201, 202, 206, 226, 228, 230, 233, 247, 249, 251, 253, 263, 264, 265, 267, 271, 287, 296, 297, 300, 321, 326, 328, 332, 335, 336, 356, 372, 373, 374, 376, 377, 381, 382, 387, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 408, 410, 413, 419, 421, 422, 424, 425, 428, 429, 431, 433, 434, 437, 438, 439, 440, 441], "haven": 440, "haywir": 437, "hclose": [27, 348, 350, 379, 380, 381, 382, 383, 384], "hclose_inn": 348, "hclosepk": 348, "hd": [151, 210, 396, 400, 403, 406, 419, 437], "hdry": 345, "hds_origin": [404, 439], "hds_path": 210, "hds_regrid": 439, "hds_split": 404, "head": [0, 3, 4, 16, 17, 18, 20, 27, 29, 30, 31, 32, 41, 42, 44, 54, 55, 77, 78, 79, 80, 82, 83, 87, 97, 103, 118, 119, 140, 146, 151, 158, 175, 180, 181, 185, 195, 210, 212, 218, 237, 239, 251, 252, 257, 261, 262, 265, 273, 303, 325, 335, 336, 337, 339, 343, 345, 347, 348, 350, 354, 373, 379, 380, 381, 382, 383, 384, 387, 395, 396, 397, 398, 400, 401, 402, 404, 406, 408, 409, 411, 414, 415, 419, 425, 428, 432, 433, 435, 437, 438, 439, 442], "head_2001": [41, 54], "head_20010101_l1": [41, 54], "head_centr": 387, "head_dri": 345, "head_edg": 387, "head_edge_ris": 387, "head_end": 337, "head_fil": [0, 151], "head_l": [41, 54], "head_l1": [41, 44, 54, 55], "head_l2": [41, 44, 54, 55], "head_observ": 410, "head_period": 387, "head_start": 337, "header": [0, 211, 348, 349, 361], "headfil": 419, "headl11": [41, 54], "heads_grid": 410, "heartili": 373, "heat": 379, "height": [328, 433], "held": 146, "hell": 429, "help": [41, 54, 175, 373, 421, 424, 426, 439, 440, 441, 442], "helpfil": [348, 349], "henc": [50, 379, 380, 381, 382, 384, 401], "henri": [379, 385, 386, 405, 407, 432], "here": [0, 9, 10, 13, 14, 24, 41, 42, 54, 73, 74, 103, 108, 260, 263, 300, 332, 357, 373, 374, 378, 379, 380, 381, 382, 383, 384, 387, 392, 396, 398, 399, 401, 403, 405, 408, 425, 429, 431, 433, 437, 440, 441], "heterogen": 0, "heterogeneous_k": 399, "hex": [321, 325, 327], "hexidecim": [321, 325], "hfb": [0, 111, 112, 113, 114, 115, 117, 165, 167, 168, 170, 171, 174, 287, 288, 387, 425], "hfb6": [111, 113, 115, 165, 168, 171], "hfb_gdf": 387, "hfb_layer": 387, "hhformulation_rh": 78, "high": [325, 395, 437], "higher": [9, 10, 13, 14, 175, 296, 297, 322, 345, 421, 424], "highest": [0, 3, 21, 351], "highli": [344, 402, 429], "hill": [175, 345], "hist": 439, "histori": 175, "hit": [130, 205], "hk": 345, "hm": 146, "hmk": 146, "hmmmm": 441, "hmoc": 331, "hn": 345, "hnoflo": [335, 345], "hoffman": 239, "hold": [23, 258, 271], "hole": [280, 322], "hollow": 322, "homepag": 429, "homogen": 401, "hondsrug": [403, 404, 407, 432, 441], "hondsrug_crosssect": 0, "hondsrug_drainag": 403, "hondsrug_initi": 403, "hondsrug_layermodel": [403, 433], "hondsrug_layermodel_topsystem": 440, "hondsrug_meteorologi": 403, "hondsrug_partit": [404, 407, 432], "hondsrug_planar_riv": 440, "hondsrug_riv": 403, "hondsrug_sav": [404, 439, 441], "hondsrug_simul": [0, 404, 439, 441], "horizont": [0, 5, 13, 14, 21, 22, 23, 34, 86, 105, 111, 112, 113, 114, 115, 117, 124, 127, 137, 139, 146, 165, 167, 168, 170, 171, 174, 190, 199, 202, 208, 268, 269, 270, 280, 287, 288, 331, 332, 338, 345, 351, 352, 353, 382, 396, 397, 399, 403, 425, 439], "horizontal_anisotropi": 345, "horizontalflowbarri": [0, 112, 114, 117, 167, 170, 174, 387], "horizontalflowbarrierbas": [116, 166, 169, 172], "horizontalflowbarrierhydrauliccharacterist": 0, "horizontalflowbarriermultipli": 0, "horizontalflowbarrierresist": [0, 287, 288, 425], "horizontalflowbarriersinglelayerresist": 0, "horizontalhydraulicconduct": [34, 35, 387], "hotfix": 0, "hour": [140, 208, 209, 210], "hourli": [421, 422], "how": [0, 44, 55, 80, 87, 93, 97, 124, 127, 143, 144, 146, 151, 152, 158, 199, 202, 206, 207, 260, 322, 372, 373, 385, 388, 391, 395, 396, 398, 399, 400, 403, 404, 405, 406, 409, 413, 426, 433, 438, 439, 440, 442], "howev": [0, 9, 10, 13, 14, 23, 41, 42, 45, 54, 80, 119, 127, 175, 202, 260, 263, 330, 331, 332, 333, 334, 357, 375, 376, 393, 398, 419, 421, 424, 428, 433, 437, 440, 441], "hoyningen": 239, "html": [55, 77, 260, 263, 290, 293, 294, 322, 375, 376, 387, 429, 439], "http": [0, 30, 32, 41, 54, 55, 77, 87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 164, 165, 168, 171, 175, 181, 185, 190, 194, 199, 206, 207, 260, 263, 290, 293, 294, 316, 321, 322, 325, 374, 379, 380, 381, 382, 383, 384, 387, 429, 430, 431, 439], "hue": 401, "human": [145, 429], "hundr": [426, 433], "hurri": 431, "hybrid": [331, 332, 333], "hydraul": [21, 23, 30, 32, 34, 35, 78, 97, 107, 111, 112, 114, 117, 119, 130, 146, 158, 165, 167, 170, 174, 181, 185, 195, 205, 251, 258, 269, 271, 277, 279, 345, 382, 439, 440], "hydraulic_characterist": [111, 165], "hydrocoin": [385, 386, 432], "hydrogeolog": 440, "hydrolog": [3, 382, 403, 426, 440], "hydrologi": 384, "hydrology_product_line_imod": [372, 374], "hydrostat": 395, "hysteresi": 26, "i": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 43, 44, 45, 47, 50, 51, 54, 55, 59, 66, 68, 70, 72, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 92, 93, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 123, 124, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 150, 151, 152, 154, 157, 158, 161, 163, 164, 165, 167, 168, 170, 171, 174, 175, 180, 181, 184, 185, 187, 189, 190, 194, 195, 196, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 241, 244, 247, 249, 250, 251, 252, 253, 254, 256, 258, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 276, 280, 281, 290, 292, 293, 294, 296, 297, 300, 303, 305, 313, 315, 316, 318, 319, 320, 321, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 413, 415, 417, 422, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 440, 441, 442], "iboud": [379, 380, 382, 383, 384], "ibound": [0, 16, 26, 51, 82, 83, 212, 286, 303, 335, 348, 349, 379, 380, 381, 382, 383, 384, 387, 425, 439], "ic": [119, 219, 395, 396, 398, 400, 401, 402, 406, 408, 439], "ic6": 119, "icbcfl": 345, "icbund": [336, 379, 380, 381, 382, 383, 384], "icelltyp": [146, 221, 395, 396, 398, 400, 401, 402, 406, 408, 439], "ichdcb": 337, "iconvert": [181, 185], "id": [0, 45, 47, 48, 124, 199, 268, 271, 275, 294, 403, 410], "id_cod": 45, "id_nam": [22, 36, 360, 379, 381, 382, 383, 384, 387], "idea": [326, 393, 403, 429, 431], "ideflay": [257, 425], "idem": 51, "ident": [82, 83, 90, 100, 121, 148, 155, 161, 187, 357, 433], "identifi": [0, 41, 54, 124, 195, 199, 335, 437, 440], "idf": [0, 3, 5, 47, 49, 50, 54, 126, 232, 254, 256, 315, 322, 347, 348, 349, 361, 379, 380, 381, 382, 383, 384, 387, 419, 425, 433, 437], "idf_svat": 425, "idfmap": [0, 361, 425], "idomain": [0, 84, 91, 95, 101, 106, 110, 112, 114, 117, 122, 146, 149, 156, 162, 167, 170, 174, 183, 188, 190, 196, 213, 231, 264, 265, 266, 267, 272, 273, 274, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 425, 433, 439, 440, 441], "iex": 374, "if_fals": [318, 421, 422], "if_tru": [318, 421, 422], "iff": [29, 425], "ighbcb": 343, "ignor": [0, 41, 66, 74, 75, 76, 126, 127, 202, 233, 239, 254, 300, 301, 302, 311, 441], "ignore_warn": 361, "ignorecas": [41, 54], "ihdwet": [146, 345], "illustr": [380, 395, 396, 397, 398, 399], "iloc": 434, "ilogg": [68, 70, 72], "ilpfcb": 345, "ilu": [175, 348, 349], "ilut": 175, "im": [137, 175, 408], "imag": [376, 403, 406, 410, 412, 413, 415, 437], "imeth": 211, "imeth1": 0, "imeth1head": 211, "imeth6head": 211, "immedi": [77, 79, 80, 87, 93, 97, 103, 108, 124, 131, 152, 158, 195, 199, 206, 207, 437], "immisc": 384, "immobil": 118, "immobile_poros": 118, "imod": [0, 361, 372, 378, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 420, 421, 422, 424, 425, 426, 427, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442], "imod5": [0, 24, 43, 82, 83, 90, 100, 105, 121, 126, 127, 137, 148, 154, 155, 161, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 254, 261, 262, 379, 380, 381, 382, 383, 384, 387, 426], "imod5_data": [0, 82, 83, 90, 100, 105, 121, 126, 127, 137, 148, 154, 155, 161, 173, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 254], "imod5datadict": [126, 154, 229, 231, 234, 241, 246, 248, 250, 252, 254], "imod_v5_3_x64r": 387, "imodenv": 431, "imodflow": [0, 19, 21, 23, 24, 26, 28, 164, 192, 361, 387, 419, 430, 432], "imodflow_jupyt": 388, "imodflow_python": 388, "imodflow_v5_3_metaswap_svn1977_x64r": 387, "imodflowmodel": [0, 387, 438], "imodflowprojectfil": [387, 389, 432], "imodlfow": 425, "imperm": 22, "implement": [26, 61, 77, 146, 390, 429], "implicit": [0, 75, 330, 331, 332, 333, 334, 344, 357], "import": [0, 3, 5, 41, 45, 54, 56, 82, 105, 124, 137, 199, 208, 241, 254, 257, 261, 262, 264, 265, 266, 267, 271, 277, 279, 294, 297, 315, 325, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 411, 412, 413, 415, 417, 419, 424, 425, 431, 433, 434, 437, 438, 439, 440, 441], "importantli": 0, "imported_model": 137, "imposs": [4, 41, 54], "improv": [0, 175, 377], "imread": 437, "imshow": [325, 403, 406, 410, 412, 413, 437], "imshow_topview": [0, 361], "imt": 359, "in_bound": 299, "inact": [0, 16, 84, 91, 93, 95, 101, 106, 110, 122, 128, 130, 149, 152, 156, 162, 183, 188, 195, 203, 205, 229, 241, 250, 272, 273, 274, 303, 335, 336, 345, 379, 382, 384, 403, 439, 441], "inactict": 439, "inactive_concentr": 336, "inactive_head": 335, "inbetween": 440, "includ": [0, 12, 15, 25, 26, 31, 33, 41, 42, 45, 51, 54, 78, 80, 107, 119, 135, 145, 146, 175, 180, 181, 185, 227, 251, 280, 292, 296, 297, 303, 335, 336, 344, 345, 346, 348, 349, 356, 358, 373, 376, 377, 380, 382, 383, 384, 396, 398, 402, 403, 417, 429, 431, 438, 439, 441], "include_constant_head": 303, "incompat": [0, 429], "incomplet": [27, 175, 344], "inconsist": [0, 127, 202, 441], "inconvert": [187, 428], "incorpor": 280, "incorrect": 0, "incorrectli": 0, "increas": [0, 175, 328, 331, 332, 333, 357, 395, 396, 399, 428, 438, 439, 440], "increment": 175, "ind_i": 300, "ind_x": 300, "inde": 441, "independ": [437, 439], "index": [0, 5, 11, 45, 55, 124, 199, 226, 297, 300, 322, 348, 349, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 403, 408, 415, 421, 422, 424, 429, 433, 438, 439, 440, 441], "indexcolumn": 48, "indic": [26, 27, 77, 78, 79, 80, 86, 87, 93, 97, 103, 107, 108, 118, 119, 124, 131, 132, 144, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207, 209, 239, 271, 300, 330, 331, 332, 333, 336, 337, 343, 345, 348, 349, 350, 351, 352, 353, 354, 357, 359, 360, 402, 403, 410, 415, 434], "individu": [0, 5, 36, 80, 281, 360, 393, 403, 421, 422, 437], "indivudu": 439, "inequ": [421, 422], "infer": [0, 180, 241, 260, 266, 325, 433], "infi_svat": [233, 425], "infiltr": [0, 26, 29, 161, 164, 195, 256, 361, 425], "infiltration_capac": [233, 234], "infiltration_capacity_rur": 26, "infiltration_capacity_urban": 26, "infiltration_factor": [29, 51, 164, 223, 439], "infiltration_r": 195, "infin": 175, "inflow": [80, 87, 93, 97, 124, 152, 158, 199, 206, 207, 329, 395, 408], "influenc": [26, 175], "info": [56, 61, 63, 64, 66, 68, 70, 72, 379], "inform": [26, 27, 40, 45, 66, 77, 78, 79, 80, 87, 90, 93, 97, 100, 103, 107, 108, 118, 119, 124, 127, 131, 138, 139, 140, 141, 146, 152, 158, 175, 190, 195, 199, 202, 206, 207, 208, 209, 210, 244, 245, 271, 317, 336, 382, 387, 396, 398, 399, 410, 415, 419, 428, 429, 431, 433, 434, 439, 440], "ingo": 5, "inher": 426, "inherit": 0, "ini": [0, 127, 202, 387], "inic": [348, 349], "inifil": 387, "init": [0, 387, 431], "init_svat": [235, 236, 237, 238], "initi": [0, 31, 63, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207, 235, 236, 237, 238, 239, 260, 261, 262, 263, 319, 331, 332, 333, 335, 336, 345, 357, 395, 398, 399, 401, 406, 438], "initial_immmobile_concentr": 118, "initial_immobile_concentr": 118, "initial_pf": 237, "initialcondit": [219, 395, 396, 398, 400, 401, 402, 403, 406, 408, 439], "initialconditionsequilibrium": 361, "initialconditionspercol": 361, "initialconditionsregridmethod": [0, 121], "initialconditionsrootzonepressurehead": 361, "initialconditionssavedst": 361, "inject": [124, 127, 199, 202, 206, 207, 381, 382, 384, 408], "injection_concentr": 408, "inlin": 376, "inner": [27, 146, 175, 286, 322, 344, 345, 348, 349, 350], "inner_csvfil": [0, 175, 176, 177, 178], "inner_dvclos": [175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "inner_it": [27, 344, 348, 349, 350, 379, 380, 381, 382, 383, 384], "inner_maximum": [175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "inner_rclos": [175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "innerit": [348, 349], "inp": [0, 26, 226, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 243, 244, 245, 247, 249, 250, 251, 253, 425], "inplac": [88, 98, 159, 200, 441], "input": [0, 9, 10, 24, 25, 26, 78, 79, 80, 82, 83, 85, 86, 87, 90, 92, 93, 96, 97, 100, 102, 106, 110, 111, 113, 115, 118, 119, 121, 123, 124, 129, 130, 131, 132, 135, 142, 145, 146, 148, 150, 151, 152, 155, 157, 158, 161, 163, 165, 168, 171, 175, 180, 181, 184, 185, 187, 189, 190, 193, 194, 195, 196, 198, 199, 204, 205, 206, 207, 236, 240, 251, 256, 260, 271, 280, 325, 335, 356, 357, 361, 377, 391, 394, 396, 397, 399, 401, 403, 417, 419, 425, 428, 432, 435, 437, 439, 440, 442], "input_fil": 393, "inputfil": 145, "insert": [50, 331, 332, 343, 382, 387, 403, 439], "insid": [0, 66, 152, 374, 398, 429, 438], "insight": 377, "insignific": [331, 332, 336], "inspect": [0, 434, 441], "instal": [0, 104, 109, 136, 312, 374, 419, 421, 424, 426], "install_requir": 419, "instanc": [7, 244, 245, 321, 325, 326, 328], "instead": [0, 27, 41, 42, 45, 47, 49, 50, 54, 82, 119, 127, 175, 201, 202, 263, 281, 294, 305, 313, 314, 319, 350, 357, 359, 387, 419, 421, 422, 425, 428, 429, 433, 437, 440, 441], "instruct": [373, 405, 429], "insuffici": [373, 390], "int": [16, 22, 26, 27, 36, 47, 49, 51, 61, 68, 70, 72, 77, 81, 84, 89, 91, 94, 95, 99, 101, 106, 110, 116, 118, 120, 122, 124, 125, 134, 146, 147, 149, 153, 156, 160, 162, 166, 169, 172, 175, 181, 182, 183, 185, 186, 188, 191, 194, 197, 201, 206, 207, 260, 271, 281, 286, 290, 291, 293, 294, 301, 308, 309, 322, 328, 331, 332, 333, 336, 344, 345, 348, 349, 350, 352, 357, 359, 360, 393, 395, 398, 399, 400, 401, 402, 403, 406, 408], "int32": [271, 396, 398, 402, 403, 415, 433, 439, 440, 441], "int320arrai": 439, "int321": [403, 415, 433, 439, 441], "int321arrai": [403, 440], "int64": [308, 309, 387, 393, 396, 433, 438, 439, 440], "int640": 396, "int641": [387, 393, 396, 433, 439, 440], "int641arrai": [387, 438], "int642": 438, "integ": [47, 48, 49, 84, 91, 95, 101, 106, 110, 122, 146, 149, 151, 156, 162, 175, 183, 188, 190, 196, 230, 239, 260, 271, 283, 285, 294, 308, 309, 321, 325, 335, 336, 344, 348, 349, 352, 403, 419, 421, 422], "integr": [56, 373, 430], "intellig": 0, "intend": [26, 401, 438, 442], "intens": [236, 344, 439], "interact": [0, 29, 77, 164, 269, 372, 373, 425, 429, 431, 437], "interblock": 345, "intercept": [226, 239, 256], "interception_capac": 226, "interception_capacity_per_lai": [239, 393], "interception_capacity_per_lai_rutt": [239, 393], "interception_capacity_per_lai_vonhoyningen": [239, 393], "interception_factor": 226, "interception_intercept": [239, 393], "interception_opt": [239, 393], "intercomparison": 382, "interconnect": 132, "interest": [5, 387, 402, 404, 434, 439, 441], "interfac": [61, 97, 381, 385, 386, 387, 395, 398, 432], "interfer": 431, "interflow": 26, "intermedi": 0, "intermitt": 429, "intern": [0, 77, 190, 234, 239, 428], "internod": 359, "interpl": [421, 422, 424], "interpol": [0, 7, 74, 80, 260, 280, 286, 296, 297, 409, 414, 432, 435], "interpolate_na": [421, 422], "interpolate_value_boundari": [0, 361], "interpolated_head": [403, 410], "interpolated_head_larg": 403, "interpret": [0, 39, 151, 303, 357, 376, 429, 433, 437], "intersect": [419, 434], "intersphinx": 376, "interv": [27, 81, 89, 94, 99, 116, 118, 120, 125, 134, 146, 147, 153, 160, 166, 169, 172, 175, 182, 186, 191, 195, 197, 201, 328, 345], "interval_wet": 345, "intra": [8, 269], "intra_cell_boundary_condit": 361, "intrins": 439, "introduc": [376, 390, 419, 439, 442], "introduct": [395, 396, 398, 400, 403, 406], "intuit": 419, "invalid": 0, "invent": 406, "invers": 439, "invert": [9, 10], "investig": [400, 441], "invididu": 429, "involv": [45, 80, 87, 93, 97, 124, 152, 158, 199, 206, 207, 419, 439], "io": [0, 77, 290, 316, 429, 430, 439], "ipest": 425, "ipf": [0, 12, 50, 126, 127, 202, 254, 361, 419, 425, 435], "ipf_point": 45, "ipn": 425, "ipykernel": 429, "ipynb": [379, 380, 381, 382, 383, 384, 387, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 412, 413, 415, 417, 433, 434, 435, 436, 437, 438, 439, 440, 441], "ipython": [376, 429], "irivcb": [354, 360], "irreduc": 195, "irregular": 436, "irrelev": 0, "irrig": 26, "is_act": 440, "is_const": 51, "is_edg": 403, "is_ibound": 303, "is_lak": 406, "is_observ": 410, "is_partit": 0, "is_split": 180, "is_x_centr": 387, "is_x_edg": 387, "isel": [0, 5, 300, 326, 395, 396, 397, 398, 400, 401, 403, 404, 406, 408, 415, 421, 422, 439], "isg": 425, "isggrid": 425, "isin": 387, "isnan": [410, 440], "isnul": 396, "isol": [45, 429], "isolv": [344, 348, 349], "isotherm": [118, 132, 344, 348, 349], "isotrop": [21, 338, 402, 439], "issu": [0, 377, 398, 426, 429, 430, 431, 435, 439, 441], "issueboard": 425, "ist": 118, "item": [359, 421, 422], "iter": [25, 27, 86, 135, 146, 175, 286, 319, 344, 345, 348, 349, 350, 356, 359, 410], "iter1": [27, 286, 344, 350, 410], "iterdir": [433, 434], "itrack": [331, 332, 333], "its": [0, 66, 107, 127, 130, 139, 146, 151, 195, 201, 202, 205, 208, 280, 293, 296, 297, 316, 387, 401, 403, 413, 426, 431, 433, 434, 435, 437], "itself": [399, 433], "ityp": [0, 47, 49, 346, 358], "ivertcon": 195, "iwetit": [146, 345], "iwr": 374, "iwtabl": 359, "iybg": 236, "j": [16, 25, 77, 135, 164, 321, 325, 335, 356, 379, 382, 384], "ja": [139, 208, 211], "jacobi": 344, "jarvi": 239, "jarvis_drought_stress": [239, 393], "jarvis_o2_stress": [239, 393], "jet": [319, 325], "jhydrol": 384, "jinja2": 419, "jit": [259, 260, 263], "join": [271, 403, 421, 422, 433, 434], "journal": [26, 384], "judg": 410, "jump": 322, "jupyt": [376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "just": [0, 41, 54, 127, 202, 281, 376, 384, 393, 398, 412, 421, 422, 431, 433, 439, 440, 441], "k": [16, 21, 85, 92, 96, 102, 112, 114, 117, 123, 129, 130, 146, 150, 157, 163, 167, 170, 174, 184, 189, 198, 204, 205, 221, 268, 277, 278, 279, 321, 335, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 411, 415, 433, 439, 440], "k11": 146, "k22": [146, 221, 439], "k33": [146, 221, 396, 398, 400, 402, 403, 406, 439], "k_horizont": [23, 345, 379, 380, 381, 382, 383, 384], "k_valu": 398, "k_vertic": [35, 345, 379, 380, 381, 382, 383, 384], "kappa": 175, "kd": [322, 401, 421, 422], "kdif": [239, 393], "kdir": [239, 393], "kdw": 425, "keep": [0, 318, 421, 422, 428, 433, 440], "keep_nan": 318, "kei": [0, 42, 50, 51, 66, 80, 82, 87, 90, 93, 97, 100, 105, 124, 126, 127, 137, 139, 152, 158, 161, 173, 199, 202, 206, 208, 254, 272, 273, 274, 281, 321, 325, 396, 405, 421, 422, 438, 439], "kept": [50, 106, 110], "kernel": [421, 422], "keyboard": 405, "keyerror": 0, "keysview": 396, "keyword": [0, 45, 46, 77, 79, 80, 87, 93, 97, 103, 118, 124, 131, 132, 146, 152, 158, 175, 195, 199, 206, 207, 256, 280, 290, 292, 299, 300, 301, 302, 319, 321, 325, 326, 328, 440], "kg": [4, 395], "kh": [34, 42, 269, 270, 387], "khv": [382, 387, 425], "kib": [396, 433, 439], "kind": 377, "km": 433, "knmi": 403, "know": [374, 398, 419, 431], "knowledg": 431, "known": [12, 426], "konikow": 382, "krylov": [348, 349], "kutta": [331, 332, 333], "kv": [34, 269, 270], "kv_sat": 195, "kva": [387, 425], "kvv": 425, "kwarg": [45, 46, 73, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 256, 290, 319], "kwargs_aquitard": [321, 440], "kwargs_basemap": [325, 417], "kwargs_colorbar": [321, 325, 417, 440], "kwargs_contour": 328, "kwargs_pcolormesh": 321, "kwargs_quiv": [326, 415], "kwargs_rast": 325, "kwd": [58, 66, 257, 258], "l": [23, 29, 30, 35, 41, 54, 93, 164, 175, 270, 297, 338, 382], "l2": [29, 175], "l2norm": 175, "l2norm_rclos": 175, "l2t": 338, "lab": [27, 350], "label": [0, 146, 325, 374, 397, 403, 408, 417, 419, 433, 435], "label_arrai": 408, "lag": 359, "lagrangian": [331, 332, 333], "lai": 239, "lak": [0, 406, 430], "lake": [0, 379, 405, 407, 411, 412, 413, 417, 432, 434, 439, 440], "lake_grid": [411, 412], "lake_grid_coars": 412, "lake_i": 406, "lake_lay": 406, "lake_x": 406, "lakedata": [0, 406], "lakes_shp": [411, 412, 413, 417, 434], "lakes_wgs84": 413, "lanczo": [292, 344], "land": [33, 195, 233, 239, 247, 335, 434], "landus": [26, 230, 231, 234, 248, 251, 393], "landuse_index": 393, "landuse_indexpandasindexpandasindex": 393, "landuse_nam": [239, 393], "landuse_opt": 393, "landuseopt": [361, 393], "langevin": [4, 384], "langmuir": 132, "languag": 429, "lanuag": 426, "laplac": [0, 286, 421, 422, 424], "laplace_interpol": [0, 361, 410, 421, 422, 424], "larg": [0, 8, 27, 41, 54, 175, 195, 247, 322, 350, 376, 390, 421, 422, 429, 430, 431, 435, 437, 439], "larger": [27, 29, 187, 228, 249, 321, 331, 332, 350, 359, 396, 403, 410, 428, 437, 439], "last": [0, 5, 25, 77, 79, 80, 87, 93, 97, 124, 127, 131, 135, 151, 152, 158, 180, 195, 199, 202, 206, 207, 280, 316, 356, 359, 395, 398, 399, 401, 403, 408, 434, 438], "lat": 413, "later": [127, 195, 202, 429, 441], "latest": [175, 372, 405, 429, 437], "latitud": [9, 13, 296], "latter": [124, 195, 199, 376, 434, 441], "law": 146, "layavg": 345, "layer": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 47, 51, 54, 55, 81, 89, 94, 99, 107, 112, 113, 114, 116, 117, 120, 124, 125, 126, 127, 130, 134, 139, 141, 144, 147, 153, 160, 165, 166, 167, 168, 169, 170, 171, 172, 174, 182, 186, 190, 191, 197, 201, 202, 205, 206, 207, 208, 233, 254, 256, 257, 258, 259, 263, 264, 265, 267, 268, 274, 276, 277, 279, 280, 283, 285, 303, 308, 309, 310, 312, 318, 321, 322, 326, 328, 335, 336, 338, 345, 348, 349, 352, 353, 360, 379, 380, 381, 382, 383, 384, 387, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 415, 428, 433, 435, 437, 438, 439, 440, 441], "layer1": 0, "layer2": 0, "layer_grid": 440, "layer_max": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201], "layer_min": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201], "layer_model": 440, "layer_typ": 345, "layer_wet": 345, "layeredhorizontalflowbarri": 0, "layeredhorizontalflowbarrierhydrauliccharacterist": 0, "layeredhorizontalflowbarriermultipli": 0, "layeredhorizontalflowbarrierresist": 0, "layeredwel": [0, 107, 425], "layermodel": [403, 433], "layernumb": 303, "layerpandasindexpandasindex": [387, 396, 403, 415, 433, 438, 439, 440, 441], "layerpropertyflow": [379, 380, 381, 382, 383, 384], "layerregridd": [0, 361], "layout": 440, "laytyp": 345, "lazi": [419, 432, 442, 443], "lazili": [0, 41, 50, 54, 138, 139, 140, 141, 208, 209, 210], "lazy_da": 437, "lazy_result": 437, "lead": [0, 47, 49, 331, 332, 357, 399, 438, 439], "leaf": 226, "leaf_area_index": 226, "leakag": 269, "learn": 175, "least": [8, 15, 25, 33, 135, 321, 326, 328, 335, 345, 356, 439], "leav": [5, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204, 398], "led": 429, "left": [11, 12, 395, 400, 402, 403, 406, 408, 440], "left_boundari": 395, "left_low": 387, "left_upp": 387, "leg": [327, 425], "legal": 431, "legend": [321, 325, 327, 417, 425], "legend_level": 321, "len": [385, 386, 387, 405, 406, 407, 432, 439], "length": [0, 25, 27, 118, 132, 135, 146, 175, 194, 195, 201, 268, 269, 287, 288, 321, 325, 327, 330, 331, 332, 333, 334, 348, 350, 351, 352, 353, 356, 357, 398, 399, 403, 415, 428, 433, 434, 439, 440, 441], "length3": [36, 360], "leq": [11, 12], "less": [0, 27, 86, 119, 146, 175, 331, 332, 345, 348, 350, 359, 376, 419, 421, 422, 428], "lesson": 382, "let": [42, 236, 256, 387, 395, 396, 399, 419, 421, 422, 429, 433, 437, 438, 439, 440, 441], "letter": [25, 135, 356], "level": [0, 3, 26, 51, 56, 59, 61, 66, 68, 70, 72, 103, 112, 114, 117, 127, 167, 170, 174, 175, 195, 202, 252, 275, 294, 321, 323, 325, 327, 328, 379, 380, 381, 382, 383, 384, 387, 408, 415, 417, 429, 434, 435, 439], "levelnam": 56, "lgr": 419, "li": 146, "lib": 434, "libari": 431, "libmf6": [0, 77], "librari": [429, 437], "lift": 0, "like": [0, 5, 26, 44, 45, 55, 84, 85, 91, 92, 95, 96, 101, 102, 106, 110, 122, 123, 129, 146, 149, 150, 156, 157, 162, 163, 175, 183, 184, 188, 189, 198, 204, 209, 240, 260, 263, 271, 281, 290, 291, 292, 293, 294, 319, 325, 328, 373, 376, 377, 396, 398, 411, 412, 413, 419, 421, 422, 429, 434, 438, 439, 440, 441, 442], "like_2d": [403, 411, 412], "like_2d_coars": 412, "like_3d": 403, "limit": [0, 175, 271, 330, 331, 332, 333, 334, 359, 429, 431, 441, 442], "line": [0, 5, 9, 13, 14, 22, 39, 61, 68, 70, 72, 78, 281, 287, 288, 296, 321, 324, 328, 380, 387, 393, 395, 396, 398, 400, 401, 403, 406, 415, 417, 429, 433, 434, 437], "line1": 387, "line2": 387, "line2d": [380, 393, 401, 433], "line_3d": [0, 361], "line_intercept": 5, "line_slop": 5, "linear": [0, 27, 74, 78, 80, 118, 132, 164, 175, 195, 260, 348, 349, 350, 359, 401, 421, 422, 424, 428], "linear_acceler": [0, 175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "linearli": 7, "linearsegmentedcolormap": 325, "lineno": 56, "liner": 260, "linestr": [0, 10, 14, 22, 165, 168, 171, 287, 288, 297, 387, 415, 440], "linestring_to_square_zpolygon": [0, 361], "linestring_to_trapezoid_zpolygon": [0, 111, 113, 115, 361], "linewidth": 440, "link": [253, 376, 390, 403, 431, 435, 442], "linspac": [439, 440, 441], "linux": 429, "liquid": 103, "list": [0, 8, 22, 25, 26, 36, 41, 45, 47, 49, 51, 52, 54, 55, 77, 79, 80, 82, 87, 90, 93, 97, 100, 103, 105, 108, 124, 127, 130, 131, 137, 138, 141, 151, 152, 158, 161, 175, 180, 195, 199, 202, 205, 206, 207, 211, 241, 260, 263, 271, 287, 288, 290, 319, 321, 325, 327, 345, 356, 360, 372, 381, 403, 417, 419, 431], "listedcolormap": 321, "listing_fil": [103, 108, 403], "listlik": [36, 321, 325, 329, 360], "littl": [45, 428], "ll": [300, 373, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 403, 406, 410, 411, 412, 413, 415, 429, 431, 433, 438, 439, 440, 441], "lmk": 146, "load": [0, 3, 5, 41, 50, 54, 82, 83, 90, 100, 121, 127, 131, 148, 154, 155, 161, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 271, 281, 297, 346, 348, 349, 396, 404, 408, 415, 419, 434, 437, 439, 440], "load_balance_weight": [348, 349], "loadset": 0, "loam": 251, "loc": [406, 410, 439], "local": [175, 373, 374, 378], "locat": [0, 4, 5, 7, 16, 22, 26, 82, 83, 107, 124, 130, 195, 199, 205, 206, 207, 232, 253, 268, 271, 277, 279, 282, 284, 287, 288, 293, 295, 298, 300, 301, 302, 318, 319, 320, 321, 324, 330, 331, 332, 333, 334, 335, 336, 387, 403, 410, 415, 419, 429, 433, 434, 439, 440], "lock": 431, "lockfil": 431, "log": [0, 361], "log_level": [59, 68, 72], "logarithm": [146, 345], "logger": [56, 58, 61, 66, 70], "logger_typ": 59, "loggertyp": [56, 59], "login": 374, "loglevel": [56, 59, 61, 63, 64, 68, 70, 72], "lognorm": 399, "logspac": 440, "loguru": [0, 56, 58, 68], "logurulogg": 58, "lon": 413, "long": [336, 395, 402, 421, 422, 429, 433], "longer": [0, 421, 422, 429], "longitud": [9, 13, 296], "longitudin": [86, 338, 379, 380, 381, 382, 383, 384], "longitudinal_horizont": [86, 214, 395, 398, 401, 408, 439], "longitudinal_vert": [86, 214, 439], "look": [26, 146, 180, 230, 292, 319, 321, 325, 345, 372, 373, 377, 399, 402, 404, 411, 433, 437, 439, 440, 441], "lookup": [0, 26, 228, 249, 251, 393, 439], "lookup_and_forcing_fil": 26, "loop": [281, 297, 419, 433, 440], "loos": 377, "lot": [373, 393, 403, 421, 422, 426, 429, 433, 440], "low": [112, 114, 117, 167, 170, 174, 175, 429, 440], "lower": [0, 4, 5, 6, 9, 10, 11, 29, 41, 54, 119, 124, 127, 139, 175, 199, 202, 208, 239, 274, 283, 325, 326, 345, 354, 396, 415, 440, 441], "lowermost": 282, "lowest": [0, 3], "lowland": 26, "lpf": [345, 379, 380, 381, 382, 383, 384, 403, 428], "lst": [103, 108], "lt": [93, 152, 195, 387, 393, 396, 403, 415, 433, 438, 439, 440, 441], "ltsc2022": 374, "lu": [175, 393], "luckili": [403, 441], "lump": 344, "lump_dispers": [344, 379, 380, 381, 382, 383, 384], "luse_mswp": 26, "luse_svat": [26, 239, 251, 393], "lx": 408, "ly": 440, "m": [0, 3, 4, 6, 19, 24, 25, 26, 44, 55, 74, 139, 140, 208, 209, 210, 231, 239, 247, 256, 271, 319, 325, 329, 338, 345, 351, 352, 353, 355, 356, 374, 379, 380, 381, 382, 383, 384, 387, 395, 396, 403, 408, 410, 413, 415, 417, 428, 441], "m2": [26, 226, 345], "m3": [4, 6, 226, 253, 329, 345, 395, 408], "maa": 239, "machin": [374, 378, 429, 431], "maco": 429, "macro": 0, "macropor": 251, "made": [0, 104, 109, 127, 136, 202, 275, 277, 279, 319, 393], "magma": [415, 440], "magnitud": [175, 286], "mai": [26, 33, 41, 44, 45, 47, 54, 55, 81, 86, 89, 93, 94, 99, 116, 119, 120, 125, 134, 146, 147, 152, 153, 160, 166, 169, 172, 175, 182, 186, 191, 197, 201, 260, 271, 300, 306, 307, 308, 309, 318, 330, 331, 332, 333, 334, 335, 357, 396, 403, 421, 422, 424, 426, 428, 433, 434, 435, 439], "main": [0, 13, 14, 21, 127, 202], "mainli": 429, "maintain": [0, 119, 175, 260, 263, 331, 332, 374, 378], "maiz": 393, "major": [377, 435], "make": [0, 41, 47, 54, 56, 80, 138, 139, 140, 143, 233, 260, 263, 312, 325, 373, 374, 375, 395, 399, 400, 403, 406, 415, 419, 422, 425, 428, 431, 433, 439, 440], "makedir": 393, "mamba": 0, "mambaforg": 431, "manag": [26, 44, 55, 300, 419, 429, 430, 431, 437], "mandatori": [0, 425, 438, 439], "mangl": 0, "mani": [0, 5, 7, 45, 118, 175, 260, 322, 332, 345, 373, 377, 390, 419, 428, 433, 434, 435, 439, 442], "manner": [78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207, 271, 437, 441], "manual": [0, 21, 26, 105, 137, 164, 373, 395, 399, 403, 433, 437, 439, 441], "map": [0, 39, 45, 47, 49, 85, 92, 96, 102, 105, 123, 126, 129, 137, 150, 157, 163, 184, 189, 193, 198, 204, 209, 229, 250, 254, 325, 416, 418, 425, 432, 433, 434, 442, 443], "mapnik": 417, "march": [0, 3], "mark": [286, 429, 439], "markdown": 376, "marker": 440, "mask": [0, 106, 110], "mask_all_model": 0, "mask_all_packag": [0, 439], "mass": [30, 118, 131, 132, 181, 331, 332, 333, 336, 346, 359, 398, 401, 428, 439], "mass_budget": 401, "massload": 0, "match": [0, 41, 42, 54, 257, 258, 260, 290, 374, 421, 424, 435], "materi": 428, "mathemat": 429, "matplot": 325, "matplotlib": [321, 325, 326, 328, 329, 379, 380, 382, 383, 384, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 410, 411, 412, 413, 415, 416, 417, 419, 429, 431, 433, 437, 439, 440], "matplotlig": 321, "matric": 429, "matrix": [27, 78, 146, 175, 271, 338, 344, 345, 410, 433], "matrix_conditioning_method": 27, "matter": [401, 429, 440], "max": [212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 292, 325, 403, 404, 439, 441], "max_abstraction_groundwat": [0, 253], "max_abstraction_surfacewat": [0, 253], "max_concentr": [395, 398], "max_dens": [395, 398], "max_diff": 441, "max_it": [27, 344, 348, 349, 350, 379, 380, 381, 382, 383, 384], "max_n_transport_timestep": 357, "max_nparticl": 332, "max_overlap": [259, 263], "max_particl": 331, "max_row": 439, "maxbound": 77, "maxim": [7, 19], "maximum": [3, 26, 27, 93, 175, 253, 259, 260, 263, 331, 332, 344, 348, 349, 350, 357, 359, 398, 403, 437], "maximum_r": [340, 341, 342], "mayavi": 437, "mb": [386, 389, 394, 407, 414, 418, 432, 443], "mcdonald": 400, "mckee": 175, "mcr": 374, "mcve": 377, "md": 175, "mdal": [0, 104, 109, 136, 312, 420, 421], "mdal_compli": [0, 104, 109, 136], "mdal_compliant_ugrid2d": [0, 104, 109, 136, 310, 361, 420, 421], "mean": [0, 26, 41, 54, 85, 92, 96, 102, 123, 127, 129, 139, 143, 146, 150, 157, 163, 175, 184, 189, 198, 202, 204, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 259, 260, 263, 271, 293, 294, 322, 345, 372, 373, 375, 403, 408, 410, 419, 421, 422, 429, 431, 435, 436, 437, 439, 440, 441], "mean_head": [410, 419, 437], "mean_heads_in_grid": 410, "mean_regridd": 260, "mean_voxel": 263, "measur": [0, 3, 21, 256, 293, 403, 410, 435], "mechan": [86, 398], "med": 292, "median": [259, 260, 263], "medium": [336, 428], "meet": 357, "meetpunt": 410, "mem": [386, 389, 394, 407, 414, 418, 432, 443], "memmap": 0, "memori": [0, 27, 41, 54, 86, 146, 175, 195, 247, 271, 331, 332, 344, 396, 419], "mention": [105, 126, 137, 254], "merg": [0, 45, 208, 271, 373, 404, 435], "merge_to_dataset": 208, "mesh": [0, 312, 316, 319, 402, 420], "mesh2d": 396, "mesh2d_edge_i": 396, "mesh2d_edge_nod": 396, "mesh2d_edge_x": 396, "mesh2d_face_nod": 396, "mesh2d_nedg": 396, "mesh2d_nfac": 396, "mesh2d_nfacespandasindexpandasindex": 396, "mesh2d_nmax_face_nod": 396, "mesh2d_nnod": 396, "mesh2d_node_i": 396, "mesh2d_node_x": 396, "mesh2d_x": 398, "mesh_kwarg": [319, 320], "mesher": [421, 424], "meshzoo": 0, "messag": [0, 56, 61, 63, 64, 68, 70, 72], "met": [127, 175, 202], "meta": [396, 433, 439], "metadata": [41, 42, 54, 292], "metadata_dict": 393, "metamod": [0, 361], "metasvap": [228, 249], "metaswap": [0, 154, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 361, 394, 432], "metaswap_exampl": [392, 394, 432], "metaswap_jupyt": 391, "metaswap_python": 391, "metaswapact": 231, "metaswapmodel": [0, 361, 425], "mete_grid": [0, 229, 244, 245, 250, 425], "mete_mswp": 26, "mete_stat": 425, "meteo": [0, 26, 236], "meteo_station_numb": 26, "meteogrid": [361, 425], "meteogridcopi": [0, 361, 425], "meteomap": 0, "meteorolog": [26, 244, 245, 403, 440], "meteorologi": 403, "meteost": 425, "meter": [3, 5, 11, 175, 247, 251, 338, 345], "meth": 0, "method": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 61, 63, 64, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 90, 92, 93, 96, 97, 98, 100, 102, 103, 105, 108, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 127, 128, 129, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 155, 157, 158, 159, 161, 163, 164, 165, 167, 168, 170, 171, 174, 175, 179, 181, 184, 185, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 292, 293, 294, 300, 319, 320, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 372, 396, 397, 398, 399, 401, 403, 413, 415, 419, 421, 422, 424, 425, 433, 437, 438], "method_nam": 439, "method_wet": 345, "metpi": [296, 297], "mf6": [0, 231, 241, 287, 288, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 419, 425, 432, 437, 438, 439, 440, 441], "mf6_di": 243, "mf6_jupyt": 405, "mf6_python": 405, "mf6_regridded_di": 242, "mf6_sim": 137, "mf6_wel": 243, "mf6_wel_adapt": 0, "mf6horizontalflowbarri": [112, 114, 117, 167, 170, 174], "mf6io": 87, "mf6io_6": [93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 165, 168, 171, 175, 190, 194, 199, 206, 207], "mf6path": 143, "mf6wel": [0, 107, 130, 205, 243], "mfnadvfd": 359, "mfsimul": 419, "mib": [433, 439], "mic": [344, 379, 380, 381, 382, 383, 384], "microsecond": [140, 208, 209, 210], "microsoft": 374, "mid": [7, 77, 393], "midpoint": [0, 7, 258, 306, 307, 308, 309, 440], "might": [0, 239, 297, 373, 379, 380, 381, 382, 383, 384, 393, 410, 429, 437, 440, 441], "migrat": 0, "million": 433, "milu": 175, "milut": 175, "mimic": [127, 202], "miminum": 403, "min": [26, 292, 325, 403], "min_concentr": [395, 398], "min_dens": [395, 398], "mind": 437, "miniconda": 431, "miniforg": 431, "minim": [12, 336, 377], "minima": 175, "minimum": [8, 11, 12, 26, 175, 259, 260, 263, 268, 275, 331, 332, 336, 359, 377, 403], "minimum_active_thick": 336, "minimum_k": [124, 127, 199, 202, 268, 400, 402], "minimum_thick": [0, 124, 127, 199, 202, 268, 275, 395], "minor": 0, "minu": [146, 175, 195], "minut": [140, 208, 209, 210, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 410, 411, 412, 413, 415, 417, 433, 434, 437, 438, 439, 440, 441], "mipwa": 251, "mipwa2": 403, "misconcept": 429, "mismatch": 258, "misnom": 74, "miss": [0, 300, 301, 302, 403, 425, 435, 438], "mistak": [272, 273, 274, 275, 441], "mix": [0, 151, 180, 181, 185, 316, 336], "mixelm": [330, 331, 332, 333, 334], "ml": 336, "mm": [19, 26, 28, 239, 244, 256, 403], "mmoc": [331, 333], "mobil": [118, 132], "mobile_immobile_mass_transfer_r": 118, "mobilestoragetransf": [220, 395, 398, 401, 408, 439], "mobilestoragetransferregridmethod": 0, "moc": 331, "mod2svat": [227, 425], "mode": [212, 213, 221, 224, 225, 259, 260, 263, 292, 293, 294, 439], "model": [0, 8, 13, 14, 15, 18, 22, 24, 25, 26, 27, 29, 31, 36, 42, 45, 77, 78, 80, 88, 90, 93, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 124, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 154, 155, 158, 159, 161, 165, 167, 168, 170, 171, 174, 175, 180, 181, 185, 187, 190, 192, 194, 195, 199, 200, 205, 206, 207, 208, 209, 211, 231, 235, 236, 239, 240, 241, 243, 251, 255, 258, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 277, 279, 303, 322, 330, 331, 332, 333, 334, 335, 336, 338, 339, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 394, 397, 401, 405, 407, 408, 410, 415, 421, 422, 424, 425, 426, 432, 433, 434, 435, 437, 439, 442, 443], "model_nam": 0, "modeldir": [379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 400, 401, 403, 406, 408], "modelgrid": 419, "modellay": [26, 207], "modelnam": [0, 24, 78, 104, 109, 175, 176, 177, 178, 355, 395, 396, 398, 400, 401, 402, 403, 406, 408], "moder": 425, "modern": [431, 434], "modflow": [0, 23, 25, 27, 35, 74, 77, 80, 82, 83, 84, 87, 90, 91, 93, 95, 97, 100, 101, 103, 108, 111, 112, 113, 114, 115, 117, 119, 121, 122, 124, 128, 130, 131, 135, 143, 145, 146, 148, 149, 151, 152, 155, 156, 158, 162, 164, 165, 167, 168, 170, 171, 174, 175, 183, 187, 188, 190, 192, 194, 195, 199, 203, 205, 206, 207, 227, 256, 264, 265, 266, 267, 272, 273, 274, 350, 351, 352, 353, 356, 357, 359, 390, 391, 395, 396, 398, 400, 402, 403, 405, 406, 419, 426, 428, 434, 438, 442], "modflow2005": [419, 425, 428], "modflow6": [0, 77, 107, 137, 145, 154, 208, 209, 210, 211, 231, 361, 391, 394, 395, 396, 399, 400, 401, 403, 406, 419, 430, 432, 436, 437, 438], "modflow6_write_kwarg": 0, "modflow6simul": [0, 127, 202, 395, 396, 398, 400, 401, 402, 403, 406, 408, 425, 438], "modif": 373, "modifi": [27, 331, 333, 338, 344, 379, 395, 400, 403, 430], "modlfow": 0, "modlow6": 241, "modpath": 419, "modul": [0, 21, 56, 58, 66, 247, 257, 258, 348, 349, 376, 409, 429, 433], "modular": 408, "moistur": [26, 251], "molecular": [86, 338, 398, 439], "moment": [0, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 198, 204], "momentum": 175, "monteith": 239, "month": [0, 3, 140, 208, 209, 210, 387], "monthli": [3, 387], "more": [0, 13, 14, 25, 27, 41, 44, 45, 47, 54, 55, 66, 75, 77, 86, 103, 108, 135, 145, 146, 175, 251, 256, 271, 281, 307, 309, 322, 330, 331, 332, 333, 334, 344, 350, 356, 359, 379, 382, 387, 393, 396, 398, 399, 401, 403, 405, 419, 425, 428, 429, 430, 434, 435, 439, 440, 441], "most": [0, 5, 27, 41, 54, 175, 271, 283, 285, 330, 331, 332, 333, 334, 344, 345, 348, 349, 350, 359, 390, 399, 421, 422, 428, 429, 431, 437, 439, 440], "mostli": [419, 442], "mother": 435, "mound": 396, "move": [0, 73, 331, 332, 392, 396], "movement": 384, "mover": 195, "mp4": 319, "mpimg": 437, "msl": [19, 26], "mst": [220, 395, 398, 401, 408], "msw": [0, 361, 393, 425], "mt3d": [11, 12, 74, 357, 419], "mt3dm": [346, 358, 359, 408, 430], "mtdnconc": 359, "much": [0, 27, 146, 319, 320, 330, 331, 332, 333, 334, 350, 359, 387, 428, 429, 431, 441], "multi": [0, 130, 205, 336, 426, 429, 430, 433, 437, 439], "multidimension": 419, "multilinear": [0, 260, 403], "multimodel": [0, 397, 404, 408], "multipl": [0, 27, 41, 42, 43, 47, 50, 54, 78, 126, 127, 130, 138, 141, 202, 205, 254, 264, 265, 266, 267, 277, 279, 291, 297, 321, 401, 403, 428, 429, 433, 440], "multipli": [0, 112, 113, 114, 117, 152, 164, 167, 168, 170, 174, 194, 251, 345, 351, 352, 353, 357, 387, 428, 433, 438], "multispeci": [336, 408], "must": [3, 5, 6, 9, 10, 11, 12, 25, 31, 47, 78, 80, 105, 106, 110, 119, 124, 135, 137, 140, 146, 175, 181, 185, 199, 208, 209, 210, 226, 228, 230, 233, 247, 249, 251, 253, 263, 292, 296, 297, 318, 319, 321, 326, 328, 330, 331, 332, 333, 334, 335, 336, 356, 357, 408, 428, 437, 439], "mutat": 0, "mwe": 377, "mxiter": [27, 286, 344, 348, 349, 350, 410], "mxpart": [331, 332], "mxstrn": 357, "my": [208, 421, 424], "my_first_imodflow_model": 387, "my_project": 431, "mydask": 437, "mypi": 372, "mypy_lint": 372, "myth": 429, "n": [0, 41, 42, 54, 74, 126, 139, 140, 208, 209, 210, 254, 276, 287, 288, 321, 325, 327, 328, 387, 403, 415, 431, 433, 434, 438, 439], "n_face": [396, 398, 402], "n_speci": 336, "n_streamlin": [328, 415], "n_timestep": [135, 194, 357, 395, 398, 401, 408, 438], "n_years_gvg": 3, "n_years_gxg": 3, "nadvfd": 330, "nam": 387, "name": [0, 22, 26, 36, 41, 42, 43, 44, 45, 47, 54, 55, 56, 58, 66, 78, 85, 92, 93, 96, 102, 103, 105, 107, 108, 111, 113, 115, 118, 123, 127, 129, 133, 137, 138, 141, 142, 150, 152, 157, 163, 165, 168, 171, 175, 180, 184, 189, 193, 198, 202, 204, 211, 239, 251, 256, 257, 258, 271, 281, 290, 291, 293, 294, 315, 316, 323, 325, 360, 372, 378, 379, 380, 381, 382, 383, 384, 387, 393, 396, 403, 415, 421, 422, 433, 434, 438, 439, 440, 441], "namefil": 0, "namespac": 0, "namfil": 0, "nan": [0, 5, 44, 47, 49, 55, 84, 91, 95, 101, 122, 138, 140, 149, 156, 162, 183, 188, 195, 210, 260, 263, 280, 290, 292, 300, 306, 307, 308, 309, 318, 387, 395, 400, 401, 402, 403, 406, 410, 411, 421, 422, 439, 440, 441], "nan_lik": 408, "nanarrai": [387, 403, 439, 440, 441], "nanosecond": [140, 208, 209, 210, 403, 406, 439], "nanpercentil": [260, 263], "nanxarrai": 440, "nap": 410, "natur": [151, 331, 332, 435, 440], "navig": 374, "nbstripout": 376, "nc": [419, 420, 421, 433], "ncol": [299, 379, 380, 381, 382, 383, 384, 387, 395, 399, 400, 401, 402, 406, 408], "ncomp": 336, "ncr": 344, "ndarrai": [124, 199, 209, 299, 301, 305, 306, 307, 308, 309, 314, 396, 433, 437, 439], "ndim_regrid": 260, "ndimag": [403, 421, 422], "ndp48": 374, "nearest": [3, 228, 249, 260, 280, 292, 403, 415, 419, 421, 422, 433, 437, 439], "nearli": [419, 442], "neatli": [44, 55], "necesarili": 406, "necessari": [0, 118, 260, 331, 332, 387, 403, 412, 417, 429, 439], "necessit": [11, 12], "need": [0, 26, 36, 41, 42, 44, 45, 54, 55, 66, 82, 83, 90, 100, 106, 110, 121, 127, 137, 143, 148, 151, 155, 161, 175, 187, 202, 260, 263, 277, 279, 287, 313, 331, 332, 333, 336, 344, 345, 351, 352, 353, 357, 360, 374, 375, 378, 382, 387, 395, 396, 398, 403, 410, 412, 415, 419, 431, 433, 435, 437, 439, 441], "neg": [0, 5, 11, 27, 118, 124, 131, 132, 146, 199, 206, 207, 292, 379, 380, 381, 382, 383, 384, 403], "neglig": [331, 332, 333, 428, 429], "neighbor": [146, 280, 345, 421, 422, 436], "neighbour": [228, 249, 280, 439], "neither": 26, "nest": [0, 51], "net": [5, 256, 374], "netcdf": [0, 104, 109, 136, 312, 403, 419, 430], "netcdf4": [306, 307, 308, 309], "netflow": 5, "netflow_lay": 5, "netflow_right": 5, "netflow_right_of_diagon": 5, "netherland": [0, 403, 433], "network": [403, 425], "new": [0, 9, 10, 13, 14, 82, 83, 90, 100, 121, 142, 144, 148, 161, 187, 251, 292, 296, 297, 300, 331, 332, 373, 374, 377, 390, 395, 396, 397, 398, 399, 400, 405, 406, 415, 421, 422, 429, 439], "new_model": 399, "new_npf": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 198, 204], "new_riv": 441, "new_riv_d": 441, "new_sim": 397, "new_simul": 399, "new_top": 276, "newer": 0, "newton": [0, 103, 175, 403], "next": [0, 25, 127, 135, 202, 244, 245, 331, 332, 333, 356, 372, 387, 403, 405, 408, 410, 415, 417, 437, 438, 439, 440], "nface": [396, 398, 402], "ngwa": 164, "nice": [41, 54, 376, 410, 438, 440], "nieuwkoopse_pla": 406, "nl": [164, 372, 374, 379, 380, 381, 382, 383, 384, 387], "nlai": [335, 379, 380, 381, 382, 383, 384, 387, 395, 399, 400, 401, 402, 406, 408], "nlayer": [396, 398, 402], "nlsink": 333, "no_ptc": [0, 175, 176, 177, 178], "nodata": [0, 44, 47, 48, 49, 55, 84, 91, 95, 101, 122, 149, 156, 162, 183, 188, 232, 272, 273, 274, 281, 290, 318, 441], "nodatavalu": 26, "node": [27, 146, 175, 209, 348, 350, 400, 402, 406], "nodepropertyflow": [0, 90, 100, 161, 221, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 425, 439], "nodepropertyflowregridmethod": [0, 85, 92, 96, 102, 123, 129, 148, 150, 157, 163, 184, 189, 198, 204, 399], "nois": 376, "nomenclatur": 74, "nomin": 195, "non": [0, 5, 7, 13, 14, 50, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 198, 204, 292, 296, 306, 307, 308, 309, 345, 359, 395, 399, 403, 406, 421, 422, 428], "nonconverg": 175, "none": [0, 5, 8, 22, 23, 24, 35, 36, 39, 41, 42, 43, 44, 47, 48, 49, 54, 55, 58, 59, 61, 66, 68, 70, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 116, 118, 119, 120, 121, 123, 124, 125, 129, 131, 132, 134, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 166, 169, 172, 175, 176, 177, 178, 182, 184, 186, 187, 189, 191, 192, 193, 195, 197, 198, 199, 201, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 240, 242, 247, 257, 258, 260, 261, 262, 267, 268, 271, 272, 273, 274, 280, 281, 286, 290, 292, 312, 321, 323, 325, 326, 329, 343, 348, 349, 354, 355, 357, 360, 387, 393, 395, 396, 398, 400, 401, 402, 403, 406, 408, 415, 438, 439, 440, 441], "nonequidist": [0, 305, 314], "nonexarrai": [438, 439, 440, 441], "nonlinear": [27, 175, 344, 348, 349, 350], "nonuniform": [331, 332], "nonzero": 195, "norm": [175, 321], "normal": [41, 42, 54, 66, 127, 202, 236, 331, 332, 359, 428, 439], "north": 21, "northeast": 403, "nota": [19, 27, 28, 332, 338, 350], "notabl": 0, "notat": [41, 54], "note": [5, 9, 10, 13, 14, 19, 23, 26, 28, 35, 39, 41, 42, 45, 47, 54, 74, 75, 76, 77, 78, 143, 146, 175, 195, 232, 239, 287, 292, 297, 306, 307, 308, 309, 319, 330, 331, 332, 333, 334, 336, 348, 349, 357, 376, 379, 380, 381, 382, 383, 384, 396, 398, 399, 403, 415, 419, 429, 433, 434, 440, 441], "notebook": [0, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "noth": 175, "notic": [0, 413, 438], "notimplementederror": 0, "notnul": [421, 422], "now": [0, 26, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 399, 400, 402, 403, 404, 406, 408, 411, 429, 438, 439, 440, 441], "np": [0, 5, 36, 41, 42, 44, 54, 124, 137, 151, 195, 199, 209, 260, 263, 290, 292, 299, 300, 360, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 410, 411, 415, 417, 421, 422, 433, 434, 437, 438, 439, 440, 441], "nparticles_advect": [331, 332], "nparticles_no_advect": [331, 332], "npc": [348, 349], "npf": [0, 85, 90, 92, 96, 100, 102, 123, 129, 146, 148, 150, 157, 161, 163, 184, 189, 198, 204, 221, 395, 396, 398, 399, 400, 401, 402, 406, 408, 428, 439], "npf_regrid": 399, "nph": [331, 332], "npl": [331, 332], "nplane": [331, 332], "npmax": [331, 332], "npmin": [331, 332], "npsink": 333, "nrchop": [351, 352, 353], "nrow": [299, 379, 380, 381, 382, 383, 384, 387, 395, 399, 400, 401, 402, 406, 408, 439], "nseg": 0, "nstp": [194, 357], "nswtcpl": 359, "nt": 374, "ntrailwav": 195, "null": 58, "nulllogg": 58, "numba": [260, 263, 419], "numba_celltre": 431, "number": [0, 3, 26, 27, 44, 47, 48, 49, 50, 55, 61, 68, 70, 72, 77, 80, 93, 118, 124, 131, 135, 152, 158, 175, 194, 199, 206, 207, 236, 257, 260, 271, 283, 285, 299, 301, 328, 330, 331, 332, 333, 334, 335, 336, 344, 345, 348, 349, 350, 352, 357, 359, 376, 378, 380, 382, 383, 390, 395, 400, 401, 402, 403, 406, 408, 410, 416, 421, 422, 426, 428, 429, 431, 433, 434, 436, 437, 439, 440], "number_orthogon": 175, "number_partit": [397, 404], "numer": [0, 175, 377, 401, 403, 428, 439], "numpi": [0, 44, 151, 260, 263, 271, 281, 300, 307, 309, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 410, 415, 417, 419, 429, 431, 433, 434, 437, 438, 439, 440, 441], "numpysupport": [260, 263], "nutshel": [431, 437], "nwaveset": 195, "o": 393, "object": [0, 22, 41, 42, 54, 61, 82, 83, 90, 100, 105, 107, 121, 127, 130, 135, 137, 142, 148, 151, 155, 161, 187, 192, 202, 205, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 259, 260, 261, 262, 263, 317, 318, 325, 356, 361, 374, 379, 380, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 403, 406, 408, 410, 411, 412, 413, 415, 419, 425, 433, 434, 438, 439, 440, 441], "objectnonearrai": [438, 439, 440, 441], "observ": [79, 80, 87, 93, 97, 124, 131, 152, 158, 195, 199, 206, 207, 396, 410, 434, 438, 439, 440, 441], "obsolet": 0, "obstruct": 22, "obtain": [9, 10, 13, 14, 296, 297, 321, 326, 328, 345, 403, 404, 410, 413, 415], "obviou": [376, 437], "oc": [0, 105, 137, 151, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 400, 401, 402, 406, 408], "occupi": [26, 112, 114, 117, 167, 170, 174], "occur": [0, 26, 27, 50, 80, 118, 119, 271, 293, 294, 322, 359, 403, 428, 440], "occurr": 26, "octob": 387, "off": [0, 78, 379, 380, 381, 382, 384, 387, 400, 411, 433, 438, 439, 440], "offici": 0, "often": [359, 428, 429, 434, 441], "ogr": [271, 281, 293, 294, 434], "ogw": 87, "oh": 441, "ok": 405, "old": [374, 378, 421, 422], "old_riv": 441, "older": [0, 372, 428], "olsthoorn": [13, 14], "omit": 175, "ommit": 437, "onc": [0, 42, 80, 259, 260, 263, 316, 374, 429, 437], "one": [0, 5, 8, 25, 27, 39, 41, 44, 45, 47, 50, 54, 55, 82, 83, 85, 90, 92, 96, 100, 102, 111, 113, 115, 118, 119, 121, 123, 124, 126, 129, 132, 135, 146, 148, 150, 151, 155, 157, 161, 163, 165, 168, 171, 175, 181, 184, 185, 187, 189, 190, 193, 198, 199, 204, 252, 254, 260, 263, 268, 271, 272, 273, 274, 280, 286, 292, 316, 319, 330, 331, 332, 333, 334, 336, 338, 344, 345, 348, 349, 350, 356, 357, 359, 372, 378, 395, 399, 401, 402, 403, 410, 412, 419, 425, 429, 433, 435, 437, 439], "ones": [387, 393, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 421, 422, 437, 438, 439], "ones_lik": [5, 393, 395, 439, 440], "onli": [0, 5, 8, 11, 12, 13, 14, 19, 26, 27, 28, 36, 41, 44, 54, 55, 80, 82, 85, 92, 96, 102, 105, 111, 112, 113, 114, 115, 117, 118, 119, 123, 129, 137, 140, 146, 150, 151, 157, 163, 165, 167, 168, 170, 171, 174, 175, 181, 184, 185, 189, 190, 195, 198, 204, 208, 209, 210, 232, 239, 251, 260, 266, 271, 280, 292, 293, 320, 322, 326, 331, 332, 333, 344, 345, 346, 348, 349, 357, 358, 359, 360, 374, 375, 379, 380, 381, 382, 383, 384, 387, 396, 398, 403, 410, 419, 425, 428, 430, 431, 437, 438, 439, 440, 441], "onlin": [373, 376, 437, 441], "onlinelibrari": 164, "onto": [9, 10, 13, 14, 142, 290, 399], "open": [0, 3, 5, 42, 50, 137, 138, 139, 140, 141, 208, 209, 210, 229, 250, 292, 294, 322, 361, 374, 379, 380, 381, 382, 383, 384, 387, 401, 405, 420, 421, 425, 429, 430, 433, 437, 439], "open_": 0, "open_cbc": [0, 425], "open_concentr": [0, 395, 398, 401, 408], "open_dataarrai": [420, 421], "open_dataset": [0, 361, 403, 420, 421, 433], "open_dv": 0, "open_flow_budget": [0, 396, 397, 425], "open_hd": [0, 400, 403, 406, 419, 425, 437], "open_head": [0, 395, 396, 397, 398, 403, 404, 425, 439], "open_projectfile_data": [0, 82, 83, 90, 100, 121, 126, 127, 137, 148, 154, 155, 161, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 254, 361, 425], "open_rasterio": 292, "open_subdomain": [0, 361], "open_transport_budget": [0, 401], "openstreetmap": [0, 417], "oper": [0, 45, 66, 106, 110, 318, 331, 332, 333, 398, 403, 411, 421, 422, 424, 429, 431, 434, 437], "opposit": 175, "opt": 439, "optim": [175, 357, 429, 437], "option": [0, 3, 4, 5, 6, 8, 11, 12, 19, 22, 24, 27, 28, 36, 39, 41, 42, 43, 44, 45, 47, 49, 54, 55, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 105, 108, 109, 116, 118, 120, 121, 123, 124, 125, 127, 129, 131, 132, 134, 136, 137, 140, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 158, 160, 161, 163, 166, 169, 172, 175, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 239, 251, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273, 274, 277, 279, 280, 281, 290, 292, 293, 294, 303, 312, 318, 321, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 373, 398, 403, 413, 428, 431, 433, 434, 439], "optionalkeyword": 175, "order": [0, 75, 76, 80, 118, 124, 132, 175, 199, 275, 286, 318, 328, 331, 332, 333, 357, 401, 403, 410, 421, 422, 440], "ordin": 393, "ordinari": [421, 422, 437], "org": [30, 32, 55, 77, 181, 185, 260, 263, 293, 294, 321, 322, 325, 374, 382, 384, 387], "organ": [426, 431], "orient": [146, 395], "origin": [0, 4, 45, 106, 110, 175, 195, 268, 357, 376, 395, 396, 397, 399, 400, 402, 403, 404, 413, 433, 439, 441], "original_modeldir": 404, "original_rch_packag": 439, "original_simul": 439, "orthomin": 344, "oscil": 76, "oss": [164, 379, 380, 381, 382, 383, 384, 387], "other": [0, 41, 42, 47, 54, 55, 74, 77, 135, 146, 175, 211, 264, 265, 267, 293, 321, 326, 328, 356, 376, 396, 401, 403, 408, 421, 422, 425, 428, 429, 431, 434, 437, 438, 440], "otherwis": [47, 151, 291, 338, 387, 431, 438], "oud": 384, "our": [373, 374, 376, 387, 396, 411, 413, 425, 431, 438, 440, 441], "out": [0, 127, 146, 202, 300, 301, 322, 326, 372, 373, 402, 419, 422, 428, 429, 431, 437, 438, 439, 440], "out_of_bound": [0, 300, 301, 302], "outcom": 408, "outer": [27, 146, 175, 286, 344, 345, 348, 349, 350, 379, 382, 403, 421, 422], "outer_csvfil": [0, 175, 176, 177, 178], "outer_dvclos": [175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "outer_edg": 403, "outer_maximum": [175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "outflow": [80, 87, 93, 97, 124, 152, 158, 199, 206, 207, 329], "outgo": 5, "outletman": 0, "outletspecifi": 0, "outletweir": 0, "outlin": [127, 202, 395], "output": [0, 4, 5, 25, 26, 45, 56, 59, 77, 78, 79, 80, 87, 93, 97, 103, 105, 108, 118, 124, 131, 132, 135, 137, 140, 142, 146, 151, 152, 158, 175, 180, 181, 185, 190, 195, 199, 206, 207, 208, 209, 210, 241, 255, 256, 276, 290, 319, 345, 347, 356, 361, 376, 387, 395, 396, 399, 404, 406, 419, 425, 435, 437, 439, 442], "outputcontrol": [0, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 400, 401, 402, 403, 406, 408], "outsid": [0, 84, 91, 95, 101, 122, 127, 149, 156, 162, 183, 188, 202, 268, 272, 273, 274, 275, 301, 302, 410, 437], "over": [0, 8, 11, 34, 80, 87, 93, 97, 118, 124, 132, 152, 158, 195, 199, 206, 207, 229, 231, 247, 250, 257, 258, 260, 277, 279, 281, 287, 288, 297, 318, 319, 320, 325, 326, 330, 331, 332, 333, 334, 348, 349, 351, 352, 353, 376, 387, 395, 396, 398, 419, 429, 433, 437, 439, 440], "overal": 401, "overcom": 175, "overhaul": 0, "overhead": [259, 260, 263, 439], "overlai": [321, 323, 325, 410, 417, 440], "overlap": [8, 85, 92, 96, 102, 113, 123, 129, 150, 157, 163, 184, 189, 198, 204, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 258, 260, 268, 399, 439], "overli": [146, 264, 265, 267], "overrid": [82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 137, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 204], "overridden": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204], "overview": [395, 396, 398, 399, 400, 403, 406, 425, 429, 442], "overwhelm": 326, "overwrit": [106, 110], "overwritten": [0, 291], "own": [0, 44, 55, 56, 260, 263, 387, 426], "oxygen": 239, "p": [26, 41, 54, 63, 64, 374, 379, 382, 384, 408], "p1": 239, "p2": 239, "p30": [260, 263], "p30_regridd": 260, "p30_result": [260, 263], "p30_voxel": 263, "p3h": 239, "p3l": 239, "p4": 239, "p54": [11, 12], "pack": 438, "packag": [0, 12, 17, 18, 19, 20, 25, 26, 28, 29, 34, 36, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 231, 234, 241, 243, 246, 248, 250, 251, 252, 254, 257, 258, 261, 262, 271, 277, 279, 335, 336, 337, 339, 343, 345, 346, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 374, 378, 381, 382, 387, 390, 392, 393, 395, 396, 398, 399, 400, 401, 402, 405, 407, 408, 412, 417, 419, 421, 424, 425, 426, 428, 430, 431, 432, 433, 434, 437, 438, 441, 442], "package_convergence_filenam": 406, "package_instance_cr": 439, "package_nam": [179, 429, 439], "packagenam": 161, "pad": [44, 55, 264, 265, 267], "page": [87, 93, 97, 103, 108, 119, 124, 131, 146, 151, 152, 158, 175, 190, 194, 199, 206, 207, 361, 372, 377, 419, 429], "pair": [9, 13, 296, 415, 434], "panda": [0, 45, 46, 47, 48, 49, 50, 127, 202, 268, 271, 275, 291, 293, 294, 307, 309, 329, 381, 382, 384, 387, 390, 393, 395, 396, 398, 401, 403, 406, 408, 410, 411, 419, 421, 422, 424, 430, 431, 432, 434, 438, 439, 442, 443], "pandamesh": [421, 424], "para_sim": [236, 243, 425], "parallel": [0, 348, 349, 404, 431, 437, 439], "paramet": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 393, 395, 396, 400, 401, 402, 406, 410, 426, 428, 434, 439], "parameter": 26, "paraview": 347, "parent": 0, "parenthes": 50, "pars": [0, 41, 296, 297, 315, 393], "part": [0, 5, 26, 41, 42, 54, 84, 91, 95, 101, 113, 122, 149, 156, 162, 183, 188, 315, 318, 319, 375, 379, 380, 381, 382, 383, 384, 387, 403, 404, 429, 434, 435], "partial": [112, 114, 117, 167, 170, 174, 419, 439], "particl": [330, 331, 332, 333, 334, 357], "partit": [0, 144, 180, 348, 349, 405, 407, 408, 432], "partition_gener": [0, 397, 404, 408], "partopt": [348, 349], "pass": [0, 5, 41, 54, 190, 294, 397, 403, 406, 439], "passthrough": [84, 91, 95, 101, 106, 110, 122, 149, 156, 162, 183, 188, 439, 440], "past": [175, 429], "path": [0, 26, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 104, 109, 136, 137, 138, 139, 140, 143, 145, 195, 208, 209, 210, 211, 238, 240, 243, 245, 271, 281, 293, 294, 304, 327, 348, 349, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 400, 403, 405, 406, 420, 421, 422, 429, 433, 434], "path_a": 293, "path_b": 293, "pathcollect": 440, "pathlib": [26, 46, 47, 48, 49, 50, 145, 208, 209, 210, 211, 271, 281, 293, 294, 433], "pathlik": [50, 51, 52], "pattern": [0, 40, 41, 42, 43, 44, 45, 53, 54, 55, 175, 331, 332, 333, 433], "pcg": [27, 50, 175, 345, 348, 379, 380, 381, 382, 383, 384, 387, 425], "pcolormesh": 321, "pd": [3, 12, 25, 36, 45, 124, 195, 199, 268, 294, 348, 349, 356, 360, 381, 382, 384, 387, 393, 395, 398, 401, 403, 408, 410, 421, 422, 438, 439], "pdf": [87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 165, 168, 171, 175, 190, 194, 199, 206, 207, 379], "peat": 428, "peatland": 403, "peclet": 439, "peek": 319, "peilgestuurd": 425, "penetr": [425, 440], "penman": 239, "peopl": [429, 431], "per": [0, 3, 5, 11, 27, 30, 32, 47, 105, 118, 132, 137, 138, 139, 140, 141, 151, 175, 181, 185, 208, 209, 210, 211, 231, 253, 261, 262, 268, 269, 271, 291, 331, 332, 348, 350, 398, 399, 408, 410, 428], "perc": 252, "percel": [330, 331, 332, 333, 334], "percentag": 132, "percentil": [292, 293, 294], "perch": [26, 146, 251, 400, 401, 402, 403, 406, 425, 439], "perched_water_t": 26, "percol": 236, "perfect": 373, "perforation_length": 402, "perform": [0, 24, 45, 78, 175, 280, 315, 355, 399, 429, 437], "perimet": [269, 270], "period": [17, 25, 26, 27, 50, 77, 79, 80, 87, 90, 93, 97, 100, 103, 105, 108, 119, 124, 131, 135, 137, 151, 152, 158, 161, 175, 180, 194, 195, 199, 206, 207, 239, 255, 337, 345, 350, 356, 357, 395, 398, 403, 438], "period_data": [0, 90, 100, 105, 137, 161], "period_tim": 387, "periodic_stress": 387, "periods_da": 387, "perlen": [194, 357], "permeabl": [21, 425], "perpendicular": [13, 14, 21, 398], "perspect": [429, 434, 439], "pet": 195, "petm": 93, "pf": 237, "pfree": 393, "phase": [118, 132], "phenomenon": 21, "phreatic": [0, 233, 269], "physic": [0, 4, 26, 230, 240, 251, 395, 398, 406], "picard": 175, "pick": 373, "pictur": [411, 437], "pie": 397, "piec": [313, 397, 437], "piecewis": 164, "pile": 22, "pip": [0, 419, 421, 424, 429], "pipe": [403, 439], "pipe_cond": 403, "pipe_elev": 403, "pipelin": [374, 378], "pixel": [281, 325], "pixi": [0, 372, 375, 378, 419, 429, 434], "pixi_vers": 374, "pkg": [393, 425, 439], "pkg_name": 134, "pkgname": 107, "place": [0, 36, 124, 126, 127, 139, 164, 199, 202, 208, 254, 268, 318, 331, 332, 360, 396, 403, 439], "placed_wel": 268, "placement": [331, 332, 333, 425], "plai": 345, "plan": [0, 331, 332], "planar": [0, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 198, 204, 257, 264, 265, 266, 267, 277, 279, 285, 440], "planar_riv": 440, "plane": [146, 280, 295, 298, 331, 332, 439], "plant": 195, "planview": 433, "pleas": [5, 42, 45, 78, 119, 297, 299, 377, 403], "plot": [0, 9, 10, 319, 321, 322, 325, 326, 328, 379, 380, 381, 382, 383, 384, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 410, 411, 412, 413, 416, 418, 419, 425, 429, 432, 433, 434, 435, 439, 440, 441], "plot_colorbar": [321, 440], "plot_histograms_side_by_sid": 439, "plot_kwarg": 439, "plot_map": [0, 361, 417, 418, 425, 432, 439, 440, 441], "plote": 415, "plotter": 319, "plotter_kwarg": [319, 320], "plt": [325, 329, 379, 380, 381, 382, 383, 384, 393, 396, 397, 398, 399, 403, 404, 408, 410, 411, 412, 413, 415, 437, 439, 440], "plume": 401, "pm": [256, 421, 424], "png": [0, 323, 329, 437], "pocket": [385, 386, 432], "point": [0, 4, 9, 13, 39, 45, 104, 109, 124, 126, 127, 136, 146, 199, 202, 254, 275, 281, 296, 299, 300, 301, 302, 343, 354, 361, 408, 409, 411, 414, 415, 419, 425, 429, 432, 434, 437, 438], "point_interpol": [410, 414, 432], "point_valu": 0, "pointer": [348, 349], "points_from_xi": [45, 434], "points_gdf": 434, "points_in_bound": [0, 301, 302, 361], "points_indic": [0, 361], "points_outside_grid": 410, "points_set_valu": [0, 300, 361, 410], "points_valu": [0, 361, 403, 421, 422], "pointwaterhead": 4, "polcg": 175, "polydata": 324, "polygon": [0, 39, 45, 111, 113, 115, 271, 281, 287, 288, 290, 293, 294, 324, 361, 409, 414, 432, 434, 440], "polygonize_rast": [411, 414, 432], "polygonized_lak": 411, "polygontyp": [287, 288], "polynomi": 27, "pond": [26, 226, 252, 256, 361, 425], "ponding_depth": 247, "ponding_depth_rur": 26, "ponding_depth_urban": 26, "ponding_factor": 226, "pooch": [419, 431], "pop": [319, 439, 441], "popular": [429, 430, 442], "pore": [118, 345, 428, 439], "poros": [0, 6, 8, 11, 12, 118, 132, 220, 336, 379, 380, 381, 382, 383, 384, 395, 398, 401, 408, 415, 428, 439], "porou": [336, 428], "portion": [30, 181, 376], "posit": [5, 11, 27, 124, 131, 146, 199, 206, 207, 211, 319, 328, 345, 382, 384], "positron": 325, "possibl": [0, 13, 14, 26, 44, 47, 49, 55, 80, 86, 256, 260, 263, 393, 403, 410, 415, 417, 421, 422, 424, 431, 439, 440], "possibli": 296, "post": [146, 419, 425], "pota": 393, "potato": 393, "potenti": [127, 195, 202], "power": 437, "powershel": 374, "pp": [26, 403], "pp_ss": 403, "pp_ss_mean": 403, "pp_tran": 403, "pr": 374, "practic": 429, "pragmat": [41, 54, 428, 429], "pre": [0, 8, 429, 431], "precipit": [236, 244, 249, 256, 403, 440], "precipitationmap": [244, 245, 361, 425], "precis": [0, 44, 403, 406, 439], "precomput": 286, "precondit": [27, 175, 350], "precondition": [175, 344, 348, 349, 379, 380, 381, 382, 383, 384], "preconditionedconjugategradientsolv": [379, 380, 381, 382, 383, 384, 387], "preconditioner_drop_toler": 175, "preconditioner_level": 175, "predefin": 175, "predifin": 175, "prefer": [0, 331, 332], "preferenti": 26, "prepar": [0, 5, 88, 90, 98, 100, 104, 107, 109, 136, 137, 159, 161, 200, 236, 336, 361, 395, 403, 410, 411, 412, 413, 421, 422, 425, 430, 432, 434, 440, 441, 442], "prepare_jupyt": 409, "prepare_python": 409, "prepare_wel_for_mf6": 0, "prepend": 0, "prerequisit": 374, "prescrib": [80, 398, 402], "presenc": [0, 251, 439], "present": [0, 3, 5, 7, 26, 47, 50, 78, 80, 82, 83, 106, 110, 118, 139, 140, 175, 208, 209, 210, 271, 321, 325, 326, 328, 402, 431], "preserv": [0, 318, 421, 422], "preset": 425, "press": [319, 378, 405], "pressur": [195, 237, 239, 251, 252, 359], "prevent": [0, 66, 78, 127, 202, 260, 439], "preview": 437, "previou": [80, 175, 194, 238, 403, 410, 415, 417, 431, 441], "previous": [0, 238, 315, 393, 403, 410, 415, 429, 440], "price": 429, "primari": [0, 403, 434, 437], "primarili": [430, 433, 434], "primod": [73, 392], "princip": [21, 146, 390], "principl": 45, "print": [0, 26, 27, 63, 64, 77, 79, 80, 87, 93, 97, 103, 108, 124, 131, 139, 151, 152, 158, 175, 180, 195, 199, 206, 207, 208, 313, 319, 335, 396, 403, 404, 408, 413, 433, 434, 439, 440], "print_convergence_info": 27, "print_flow": [77, 79, 80, 87, 93, 97, 103, 108, 124, 131, 152, 158, 179, 180, 195, 199, 206, 207, 395, 396, 398, 400, 402, 403, 406, 408, 438, 439, 440, 441], "print_if_error": [0, 361, 441], "print_input": [77, 79, 80, 87, 93, 97, 103, 108, 111, 113, 115, 124, 131, 152, 158, 165, 168, 171, 195, 199, 206, 207, 287, 288, 395, 396, 398, 400, 402, 403, 406, 408, 438, 439, 440, 441], "print_opt": [0, 175, 176, 177, 178, 395, 396, 398, 400, 401, 402, 403, 406, 408], "print_stag": 406, "printout": [27, 336], "printout_interv": 27, "priori": 398, "priorit": 318, "prj": [0, 82, 83, 90, 100, 121, 126, 127, 137, 148, 154, 155, 161, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 254, 361, 425, 434], "probabl": [373, 441], "problem": [27, 175, 336, 344, 348, 349, 350, 377, 379, 381, 382, 384, 395, 398, 399, 400, 401, 428, 429, 441], "problemat": [0, 441], "procedur": 359, "process": [0, 26, 41, 54, 56, 127, 146, 202, 271, 359, 374, 398, 403, 419, 425, 428, 429, 433, 439, 440], "processor": 429, "produc": [0, 291, 322, 440, 442], "product": [118, 132, 175], "prof": [13, 14], "profil": [235, 236, 374, 401], "program": [74, 118, 132, 146, 152, 175, 190, 297, 357, 359, 387, 403, 405, 426, 429], "progress": [357, 374], "project": [0, 9, 10, 13, 14, 50, 51, 56, 105, 126, 137, 251, 254, 292, 373, 376, 377, 378, 413, 415, 430, 431, 434, 441], "projectfil": [0, 26, 105, 127, 137, 202, 387, 425], "prompt": [379, 380, 381, 382, 383, 384, 387, 429], "prone": 419, "proper": 0, "properli": [0, 429], "properti": [0, 23, 35, 146, 345, 400, 402, 406, 428, 433, 434, 435, 439], "proport": [20, 93, 343, 403], "proportion": 403, "proportion_depth": [0, 93, 217, 439], "proportion_r": [0, 93, 217, 439], "provid": [0, 9, 10, 13, 14, 19, 25, 26, 28, 43, 56, 78, 79, 80, 81, 86, 87, 89, 93, 94, 97, 99, 116, 118, 119, 120, 124, 125, 131, 132, 134, 135, 140, 146, 147, 151, 152, 153, 158, 160, 164, 166, 169, 172, 175, 180, 181, 182, 185, 186, 190, 191, 194, 195, 196, 197, 199, 201, 206, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 256, 260, 263, 271, 290, 292, 306, 307, 308, 309, 321, 325, 356, 361, 372, 376, 377, 387, 390, 395, 396, 398, 403, 411, 413, 415, 417, 419, 421, 422, 426, 429, 430, 433, 434, 435, 438, 440, 441, 442], "provis": 431, "prsiti": [336, 408], "ps1": 374, "pseudo": 175, "psgw": 256, "pssw": 256, "pstem": 393, "ptc": 175, "public": [107, 315], "publish": 0, "publsihed_pdf": 379, "pull": [0, 372, 373, 429], "pump": [36, 268, 360, 381, 382, 434], "pun": 239, "pure": [66, 429, 438], "purpos": [0, 107, 426], "push": [378, 403], "put": [105, 137, 146, 387], "pxdp": 93, "py": [375, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "pydata": [260, 263, 293, 294], "pyogrio": 434, "pypi": [378, 429], "pyplot": [379, 380, 382, 383, 384, 393, 396, 397, 398, 399, 403, 404, 408, 410, 411, 412, 413, 415, 437, 439, 440], "pyproj": [413, 431], "pytest": [0, 373], "python": [0, 25, 45, 56, 58, 59, 72, 127, 135, 151, 202, 239, 297, 356, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 421, 422, 424, 425, 426, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "pythonlogg": 58, "pyton": 56, "pyvista": [0, 319, 322, 324, 416, 431], "q": [12, 124, 199, 206, 207, 319, 381, 382, 384, 408], "q1": 292, "q3": 292, "q_": 12, "qdr": 256, "qg": 0, "qgi": [0, 434], "qmodf": 256, "qrun": 256, "qscale": 381, "qspgw": 256, "quadcontourset": [328, 395, 398, 400, 406, 408, 415], "quadmesh": [379, 380, 382, 383, 384, 399, 403, 411, 433], "quadrilater": [0, 316], "qualiti": [0, 410, 441], "qualnam": [58, 66, 257, 258], "quantil": 323, "quantile_colorscal": 323, "quantiti": [0, 32, 185], "quasi": [15, 26, 90, 100, 105, 121, 137, 148, 155, 161, 187, 192, 335, 400, 425], "queri": 77, "question": [0, 426], "quickli": [396, 398], "quiet": 374, "quit": [433, 435, 440], "quiver": [0, 9, 10, 361, 396, 425], "quiver_lin": [0, 326, 361, 415], "quiver_linestr": [0, 326, 361], "quiverplot": 425, "quot": [0, 419], "r": [11, 12, 41, 54, 321, 325, 429], "r_fstrict": 348, "r_fstrictpk": 348, "radial": 270, "radial_c": 270, "rag": 151, "rainfal": [329, 406], "rais": [0, 47, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207, 260, 268, 300, 301, 302, 311, 313, 441], "ram": 437, "random": [331, 332, 333, 399], "randomli": [331, 332, 374], "rang": [0, 26, 27, 127, 146, 175, 195, 202, 321, 350, 379, 380, 381, 382, 383, 384, 428, 439], "rangeindex": 396, "raphson": [103, 175], "rare": [0, 331, 332, 390], "raster": [0, 5, 54, 55, 271, 280, 281, 291, 292, 293, 294, 325, 361, 409, 414, 417, 420, 425, 432, 436, 442, 443], "rasterio": [0, 41, 42, 104, 109, 136, 281, 290, 292, 294, 312, 317, 361, 425, 430, 431, 433], "rasterize_cellt": [271, 361], "rasterize_shp": [412, 414, 432], "rasterr": [411, 412], "rate": [0, 19, 28, 36, 77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 127, 130, 131, 132, 152, 154, 158, 175, 180, 195, 199, 202, 205, 206, 207, 217, 222, 257, 266, 268, 351, 352, 353, 360, 379, 380, 381, 382, 383, 384, 387, 395, 398, 400, 402, 403, 408, 438, 439], "rate_factor_tim": [124, 199], "rate_transi": [124, 199], "rate_wel": 400, "rather": [0, 41, 42, 54, 146, 260, 318, 376, 390, 428, 429, 433, 437, 442], "ratio": [338, 345], "ratio_horizont": 338, "ratio_vert": 338, "rational": 390, "ravel": 440, "raw": 419, "rbot": [29, 354], "rcb": [348, 349], "rch": [0, 152, 154, 155, 222, 257, 380, 396, 398, 400, 402, 425, 438, 439, 440], "rch_conc": 380, "rch_concentr": 398, "rch_data": 438, "rch_rate": [380, 396, 398, 400, 402], "rch_ss": 403, "rch_ss_tran": 403, "rch_time": 438, "rch_total": 403, "rch_tran": 403, "rch_trans_yr": 403, "rclose": [27, 175, 348, 350, 379, 380, 381, 382, 383, 384], "rclose_inn": 348, "rclose_opt": [0, 175], "rclosepk": 348, "rcm": 175, "rd": 292, "rdnew": 325, "rdylbu": 415, "rdylbu_r": [395, 398, 417], "re": [0, 9, 10, 41, 45, 54, 260, 310, 319, 372, 373, 413, 429, 433, 437], "reach": [236, 260], "reaction": 408, "reactiv": 430, "read": [0, 27, 31, 38, 40, 46, 50, 51, 77, 79, 80, 87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 138, 139, 140, 141, 152, 158, 165, 168, 171, 190, 195, 199, 206, 207, 208, 209, 210, 211, 335, 345, 357, 359, 361, 376, 377, 391, 394, 396, 403, 410, 419, 420, 421, 422, 425, 428, 429, 431, 432, 433, 435], "read_ascii": [0, 37, 361], "read_associ": 361, "read_binari": 37, "read_csv": [45, 46, 410], "read_dens": 359, "read_fil": [5, 45, 271, 297, 421, 424, 434], "read_grb": 0, "read_imod_legend": [361, 425], "read_metaswap_fil": [393, 394, 432], "read_projectfil": [0, 361, 425], "read_timfil": 361, "readabl": [0, 145, 429], "reader": 0, "readthedoc": [77, 290], "real": [175, 331, 338, 344, 349, 439], "reason": [0, 25, 33, 127, 135, 175, 202, 315, 330, 331, 332, 333, 334, 335, 356, 421, 422, 428, 437], "reassign": [93, 152], "reattach": 439, "rebuild": 374, "rebuilt": 375, "recalcul": [175, 359], "recent": [175, 338], "recharg": [0, 19, 25, 26, 132, 135, 222, 266, 351, 352, 353, 356, 380, 396, 400, 402, 406, 425, 438, 439], "recharge_lay": 352, "rechargehighestact": 380, "rechargeregridmethod": [0, 155, 439], "recip": [0, 429], "recogn": [0, 376], "recommend": [146, 271, 359, 373, 429, 431, 439], "recomput": [130, 205], "record": [0, 118, 211, 345, 357], "rectangl": [39, 395], "rectangular": [395, 400, 402, 403, 404, 406, 433], "recurs": [42, 348, 349], "redirect": 0, "reduc": [0, 19, 27, 29, 175, 195, 322, 348, 349, 350, 421, 422, 439, 440], "reduct": [175, 239, 421, 422], "refer": [0, 4, 5, 11, 26, 42, 45, 78, 82, 164, 190, 260, 263, 271, 293, 294, 297, 299, 314, 317, 320, 322, 336, 359, 387, 403, 410, 412, 413, 431, 434, 437], "reference_concentr": [78, 395, 398], "reference_dens": [78, 395, 398], "refin": 0, "reflect": 439, "regard": 5, "regardless": [27, 357], "regex": [41, 42, 43, 54], "regex101": [41, 54], "region": [26, 27, 328, 338, 350, 405, 407, 432, 439], "registri": [372, 374], "regrid": [0, 82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 137, 142, 146, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 204, 259, 260, 263, 361, 402, 403, 405, 407, 421, 422, 425, 432, 442, 443], "regrid_cach": [82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 204, 399, 439], "regrid_context": 242, "regrid_lik": [0, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 361, 399, 425, 439], "regrid_method": [212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 439], "regrid_method_setup": 439, "regrid_method_t": 439, "regrid_method_typ": [100, 192], "regrid_schem": [82, 83, 90, 121, 148, 155, 161, 187], "regridd": [0, 82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 204, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 263, 361, 399, 403, 421, 422, 439], "regridded_k_1": 399, "regridded_k_2": 399, "regridded_k_3": 399, "regridded_recharg": 439, "regridded_simul": 439, "regridded_simulation_nam": 142, "regridded_twri": 399, "regridder_typ": [0, 82, 83, 85, 90, 92, 96, 100, 102, 105, 121, 123, 129, 137, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 204, 242, 399, 439], "regriddertyp": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 198, 204, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 242, 399, 439], "regridderweightscach": [0, 82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 204, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 242, 399, 439], "regridmethod": 0, "regridmethodtyp": [82, 85, 92, 96, 100, 102, 105, 123, 129, 137, 148, 150, 157, 163, 184, 189, 192, 193, 198, 204], "regular": [41, 42, 54, 86, 104, 109, 136, 146, 296, 297, 403, 411], "reinstal": [0, 431], "reinstat": 0, "rel": [3, 47, 48, 146, 175, 260, 331, 332, 333, 344, 349, 428, 437, 441], "relat": [26, 247, 251, 359, 403, 439, 442], "relativ_rclos": 175, "relative_rclos": 175, "relativeoverlap": [212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 439], "relax": [0, 27, 103, 175, 286, 348, 349, 350, 379, 380, 381, 382, 383, 384, 403, 406, 439], "relaxation_factor": [175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "releas": [0, 30, 32, 181, 185, 206, 207, 345, 379, 380, 381, 382, 383, 384, 387, 429], "relev": [0, 271, 399, 429], "reli": [41, 54, 292, 429], "remain": [0, 30, 80, 127, 146, 181, 195, 202, 336, 357, 428], "rememb": [41, 54], "remot": 429, "remov": [107, 128, 130, 131, 195, 203, 205, 268, 272, 273, 274, 280, 300, 312, 331, 332, 372, 376, 403, 410, 421, 422, 429, 439, 440], "renam": [0, 41, 47, 49, 54, 403], "render": [0, 281, 319, 320, 322, 376, 441], "reorder": 175, "reordering_method": [0, 175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "rep": 26, "repeat": [0, 50, 80, 87, 93, 97, 105, 124, 137, 152, 158, 199, 206, 387, 440], "repeat_item": [80, 87, 93, 97, 124, 152, 158, 199, 206], "repeat_stress": [80, 87, 93, 97, 105, 124, 137, 152, 158, 199, 206, 438, 439, 440, 441], "repeatedli": [259, 260, 263], "replac": [0, 45, 50, 318, 331, 332, 399, 403, 421, 422, 428, 439], "report": [0, 26, 408], "reposistori": 429, "repositori": [0, 372, 373, 374, 376, 429], "repres": [0, 24, 33, 39, 44, 86, 118, 140, 146, 175, 208, 209, 210, 319, 335, 345, 395, 403, 408, 421, 424, 428, 433, 434, 435], "represent": [0, 107, 112, 114, 117, 140, 167, 170, 174, 208, 209, 210, 322, 433, 439], "reproduc": [372, 374, 377, 430, 431], "reproject": [0, 361, 409, 414, 432, 433], "reproject_kwarg": 292, "repsect": 164, "request": [0, 127, 202, 251, 373, 377], "requir": [0, 4, 11, 24, 25, 26, 27, 39, 41, 45, 50, 54, 78, 86, 104, 109, 118, 124, 127, 132, 135, 136, 138, 139, 140, 141, 146, 175, 199, 202, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 244, 245, 260, 271, 275, 312, 316, 318, 321, 325, 326, 328, 335, 336, 348, 349, 350, 356, 374, 376, 387, 393, 398, 403, 410, 419, 420, 421, 424, 425, 429, 431, 437, 438, 439, 440, 441], "rergrid": 439, "resampl": [3, 105, 127, 137, 202, 292, 403, 419, 421, 422, 435], "research": 382, "resembl": 399, "reserv": 45, "reset": [319, 330, 331, 332, 333, 334, 359], "reset_index": 403, "reshap": 299, "resid": 374, "residu": [27, 175, 195, 251, 348, 350], "resisit": 233, "resist": [22, 26, 29, 111, 112, 114, 115, 117, 164, 167, 170, 171, 174, 233, 234, 247, 248, 269, 270, 271, 287, 288, 387], "resistor": 439, "resolut": [271, 293, 294, 331, 332, 413, 425, 435], "resolv": 0, "resourc": [93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 165, 168, 171, 175, 190, 194, 199, 206, 207, 373, 379, 382, 400, 425], "respect": [0, 3, 25, 37, 135, 138, 139, 140, 141, 146, 164, 208, 209, 210, 257, 321, 356, 420, 421, 433, 438], "respectivli": 325, "respons": [226, 227, 228, 230, 233, 235, 236, 237, 238, 239, 244, 247, 249, 253, 428], "rest": [387, 399, 408, 439], "restack": [0, 310], "restor": 428, "restructur": [0, 376], "result": [0, 4, 5, 8, 11, 12, 26, 45, 118, 127, 132, 175, 202, 260, 271, 290, 292, 300, 318, 319, 322, 335, 336, 344, 345, 357, 359, 376, 381, 382, 384, 401, 404, 408, 410, 413, 415, 421, 422, 428, 429, 431, 433, 437, 439, 440], "result_dir": 437, "resultdir_is_workdir": [379, 380, 381, 382, 383, 384], "resultdir_is_workspac": 0, "retain": [74, 175], "retard": [11, 12, 401], "retent": 195, "retriev": 379, "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 107, 112, 114, 116, 117, 120, 121, 122, 123, 125, 126, 129, 130, 134, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 153, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 169, 170, 172, 174, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 197, 198, 201, 204, 205, 208, 209, 210, 211, 229, 231, 234, 241, 246, 248, 250, 252, 254, 257, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 319, 321, 322, 324, 325, 326, 327, 328, 329, 393, 396, 397, 401, 402, 403, 421, 422, 441], "return_cbar": 325, "return_cmap_norm": 321, "return_index": 322, "reus": [393, 439], "revers": [106, 110, 175], "revert": 0, "revisit": 419, "revolv": 390, "rewet": [119, 146, 439], "rewet_factor": [146, 439], "rewet_iter": [146, 439], "rewet_lay": [146, 221, 439], "rewet_method": [146, 439], "rewrit": 164, "rgb": 321, "rgba": 325, "rho": [4, 359], "rho_": 4, "rhobulk": 401, "rhs_option": [146, 439], "rich": 433, "richard": 26, "rid": 375, "ridg": [403, 440], "right": [0, 5, 6, 9, 10, 11, 12, 13, 14, 78, 86, 139, 146, 175, 208, 326, 344, 345, 374, 395, 408, 415, 431, 440], "right_boundari": 395, "right_low": 387, "right_upp": 387, "rioxarrai": [104, 109, 136, 292, 312], "rise": 251, "risk": 0, "riv": [0, 8, 24, 51, 137, 158, 223, 257, 258, 261, 262, 279, 355, 425, 439, 440, 441], "riv_alloc": 440, "riv_bot": 403, "riv_bottom": 440, "riv_cleaned_dict": 441, "riv_cond": 403, "riv_conduc": 440, "riv_conduct": 440, "riv_pkg": 441, "riv_primari": 0, "riv_stag": [403, 440], "river": [0, 8, 24, 25, 105, 135, 137, 223, 257, 261, 262, 267, 274, 279, 329, 355, 356, 425, 439, 441], "river_conduct": 164, "riverb": [29, 158, 354, 439], "riverpackag": 8, "riverregridmethod": [0, 161], "rivssmden": 354, "rm": 372, "robin": 440, "robust": [75, 175, 429], "rock": 132, "role": [345, 442], "root": [195, 237, 373], "root_act": 195, "root_potenti": 195, "rootact": 195, "rootzon": [26, 230, 231], "rootzone_depth": 230, "rootzone_thick": 26, "rotat": [146, 239, 292, 384, 413, 433, 439], "rotated_exampl": 292, "rotational_period": [239, 393], "roughli": [397, 439, 440], "round_ext": 0, "routin": [27, 175, 350, 442], "row": [0, 5, 9, 10, 11, 13, 14, 86, 107, 206, 271, 345, 379, 380, 382, 383, 399, 400, 402, 403, 406, 408, 419, 433, 434, 435, 439], "row_index": [271, 291], "rsc": [239, 393], "rsoil": [239, 393], "rst": 376, "rsw": [239, 393], "ru": 0, "ruff": 373, "rule": [27, 350, 433, 439], "run": [0, 24, 107, 130, 138, 139, 140, 141, 205, 236, 238, 373, 374, 375, 376, 378, 393, 397, 399, 401, 404, 408, 410, 411, 412, 413, 415, 417, 419, 425, 429, 431, 433, 434, 437, 438, 439, 440, 441], "runfil": [0, 380, 382, 383, 384, 425], "rung": [331, 332, 333], "runoff": [26, 247, 248], "runoff_resist": [234, 247], "runoff_resistance_rur": 26, "runoff_resistance_urban": 26, "runon": [26, 247, 248, 256], "runon_resist": [234, 247], "runon_resistance_rur": 26, "runon_resistance_urban": 26, "runtim": [130, 205], "runtimewarn": 311, "rural": [26, 231, 234, 248], "rutter": 239, "sai": [255, 260, 421, 422], "salin": [78, 380, 395, 398], "salt": [239, 379, 381, 384], "saltmax": 393, "saltslop": 393, "saltwat": [385, 386, 432], "saltwaterpocket": [383, 386, 432], "same": [0, 4, 25, 27, 30, 32, 41, 42, 45, 54, 78, 83, 85, 90, 92, 96, 100, 102, 118, 121, 123, 127, 129, 135, 144, 148, 150, 155, 157, 161, 163, 175, 184, 185, 187, 189, 192, 193, 198, 202, 204, 258, 280, 292, 336, 348, 350, 356, 372, 387, 390, 395, 398, 399, 401, 403, 410, 413, 415, 421, 422, 429, 431, 433, 435, 439, 440], "sampl": [0, 10, 14, 293, 294, 297, 421, 422, 433, 437, 439], "sand": 379, "sandi": 428, "sanford": 382, "sat": 146, "satisfi": [11, 27, 195, 319, 348, 350], "satur": [0, 30, 146, 181, 195, 251, 269, 270, 336, 345, 403, 428], "save": [0, 104, 108, 109, 118, 136, 146, 195, 236, 238, 260, 337, 339, 343, 345, 347, 351, 352, 353, 354, 360, 361, 373, 387, 403, 425, 433, 437], "save_budget": [151, 337, 339, 340, 341, 342, 343, 345, 351, 352, 353, 354, 360, 395, 396, 398, 400, 401, 402, 403, 406, 408], "save_budget_idf": 347, "save_budget_tec": 347, "save_budget_vtk": 347, "save_concentr": [151, 395, 398, 401, 408], "save_concentration_idf": [347, 379, 380, 381, 382, 383, 384], "save_concentration_tec": 347, "save_concentration_vtk": 347, "save_flow": [0, 77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 146, 152, 158, 179, 180, 181, 185, 195, 199, 206, 207, 395, 396, 398, 400, 401, 402, 403, 406, 408, 438, 439, 440, 441], "save_flux": 387, "save_head": [151, 387, 395, 396, 398, 400, 401, 402, 403, 406, 408], "save_head_idf": [347, 379, 380, 381, 382, 383, 384], "save_head_tec": 347, "save_head_vtk": 347, "save_satur": [0, 146, 439], "save_specific_discharg": [146, 402, 408, 439], "saved_st": 238, "savefig": 329, "scalar": [0, 27, 306, 307, 308, 309, 318, 421, 422], "scale": [175, 195, 251, 381, 425], "scale_hydraulic_conduct": 251, "scale_pressure_head": 251, "scale_soil_moistur": 251, "scaling_method": [0, 175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "scalingfactor": [361, 425], "scanopi": 393, "scap_svat": [0, 253, 425], "scatter": [400, 402, 440], "scene": 437, "schedul": [311, 437], "schemat": [23, 35], "schemata": 441, "scheme": [26, 74, 75, 76, 175, 330, 331, 332, 333, 334, 344, 357], "schemit": 440, "scientic": 419, "scientif": [118, 430, 431], "scipi": [403, 419, 421, 422, 431], "sconc": [336, 379, 380, 382, 383, 384], "scope": 374, "scraper": 437, "scratch": 387, "screen": [107, 130, 199, 205, 402], "screen_bottom": [0, 199, 201, 268, 275, 395, 400, 402, 408], "screen_lay": 402, "screen_top": [0, 199, 201, 268, 275, 395, 400, 402, 408], "script": [0, 313, 376, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 410, 411, 412, 413, 415, 417, 429, 430, 431, 433, 434, 437, 438, 439, 440, 441], "sea": [3, 329, 440], "search": [3, 7, 280, 405], "searchabl": 373, "season": [80, 87, 93, 97, 124, 152, 158, 199, 206, 239], "seawat": [0, 4, 348, 349, 355, 359, 395, 419, 430], "seawat_get_runfil": 0, "seawat_writ": 0, "seawat_write_runfil": 0, "seawatmodel": [0, 379, 380, 381, 382, 383, 384, 438], "second": [0, 51, 75, 80, 86, 87, 93, 97, 124, 140, 146, 152, 158, 175, 199, 206, 208, 209, 210, 231, 321, 326, 328, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 410, 411, 412, 413, 415, 417, 428, 433, 434, 437, 438, 439, 440, 441], "second_result": 260, "second_sourc": 260, "secondli": [0, 318, 429, 442], "secret": 374, "section": [0, 9, 10, 13, 14, 21, 296, 297, 321, 326, 328, 331, 332, 361, 379, 380, 381, 382, 384, 403, 415, 416, 425, 426, 430, 431, 433, 437, 440, 442], "securityprotocol": 374, "sediment": [26, 268], "see": [0, 21, 27, 41, 44, 47, 54, 55, 73, 77, 88, 98, 143, 159, 200, 256, 290, 316, 319, 345, 348, 350, 372, 373, 382, 384, 395, 396, 398, 399, 400, 401, 403, 405, 411, 413, 421, 422, 425, 427, 428, 429, 431, 433, 437, 438, 440, 441], "seem": [435, 437, 441], "seen": [379, 439], "segment": [0, 93, 439], "sel": [0, 3, 5, 139, 208, 300, 387, 396, 398, 399, 400, 402, 403, 404, 406, 415, 419, 421, 422, 423, 424, 433, 437, 439, 440], "select": [0, 5, 11, 27, 45, 81, 89, 94, 99, 116, 120, 125, 127, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 202, 264, 265, 266, 267, 271, 277, 279, 321, 331, 332, 333, 361, 374, 378, 387, 396, 398, 403, 405, 410, 415, 419, 430, 433, 435, 437, 440, 442], "select_point": [421, 424], "self": [135, 377, 430], "semant": [0, 378], "semi": [3, 22], "send": [25, 135, 356, 373], "sens": 429, "sensit": 251, "sentenc": 431, "sep": [47, 348, 349], "separ": [0, 11, 41, 42, 54, 104, 105, 109, 118, 126, 136, 137, 151, 236, 254, 312, 321, 395, 402, 403, 404, 419, 421, 424, 428, 439, 441], "seper": [164, 239, 431], "sequenc": [78, 271, 280, 290, 308, 309], "sequenti": 146, "seri": [0, 3, 80, 93, 152, 294, 421, 422, 424, 430, 432, 442, 443], "serial": 439, "serv": [45, 175, 260, 331, 332, 335], "server": [372, 374], "servic": 429, "servicepointmanag": 374, "session": 372, "set": [0, 3, 7, 25, 26, 27, 29, 33, 42, 50, 59, 76, 77, 78, 80, 84, 86, 87, 91, 93, 95, 97, 101, 105, 106, 107, 110, 122, 124, 127, 130, 135, 137, 142, 143, 146, 149, 151, 152, 156, 158, 162, 175, 180, 183, 187, 188, 199, 202, 205, 206, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 233, 239, 240, 241, 243, 247, 251, 252, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 272, 273, 274, 275, 300, 301, 312, 316, 319, 321, 322, 325, 330, 331, 332, 333, 334, 335, 336, 338, 344, 348, 349, 350, 354, 356, 357, 359, 361, 372, 374, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 402, 406, 408, 410, 425, 428, 430, 439, 440, 441, 442], "set_aspect": [396, 398], "set_axis_off": 437, "set_index": [45, 393, 439], "set_opt": 439, "set_repeat_stress": [0, 80, 87, 93, 97, 124, 152, 158, 199, 206], "set_text": 439, "set_titl": [404, 440, 441], "set_ylabel": 439, "setnodatahead": 0, "setup": [0, 56, 59, 319, 320, 374, 379, 383, 395, 396, 398, 400, 401, 402, 406], "setuptool": 0, "seven": 403, "sever": [26, 61, 68, 70, 72, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 155, 157, 161, 163, 175, 184, 187, 189, 192, 193, 198, 204, 374, 429], "sfr": 425, "sft": 425, "sg": 297, "sh": 374, "shallow": [26, 251], "shape": [0, 10, 14, 22, 39, 144, 165, 168, 171, 281, 287, 288, 290, 292, 297, 324, 387, 395, 396, 397, 399, 400, 401, 402, 406, 408, 411, 412, 431, 433, 437, 439, 440], "shape_area": 434, "shape_leng": 434, "shapefil": [5, 271, 281, 293, 294, 297, 409, 411, 413, 414, 432, 434], "share": [0, 74, 336, 429, 435], "sharei": [439, 440], "sharex": [439, 440], "sharp": 401, "shd": [31, 82, 83, 382, 387, 425], "shead": 80, "sheet": 22, "shell": [429, 431], "ship": 374, "shorter": [0, 25, 135, 300, 356, 373, 439], "shortli": [395, 396, 398, 400, 403, 406], "should": [0, 5, 7, 8, 15, 22, 25, 26, 27, 33, 59, 78, 79, 80, 82, 83, 86, 87, 90, 93, 97, 100, 105, 118, 119, 121, 124, 126, 131, 132, 135, 137, 144, 145, 146, 148, 151, 152, 158, 161, 175, 180, 181, 185, 187, 190, 194, 195, 196, 199, 206, 207, 229, 231, 239, 247, 250, 254, 260, 263, 268, 286, 291, 292, 294, 320, 322, 325, 330, 335, 337, 339, 343, 344, 347, 348, 349, 350, 354, 356, 357, 360, 372, 374, 378, 395, 399, 401, 402, 403, 404, 410, 431, 433, 437, 438, 439, 441], "show": [44, 55, 292, 399, 401, 403, 404, 408, 410, 415, 417, 428, 437, 440], "shown": [408, 433, 440], "shp": [5, 45, 271, 294, 297, 421, 422, 424, 434], "shx": 434, "side": [5, 86, 146, 175, 344, 382, 440, 441], "sign": 175, "signifi": 0, "signific": [0, 398], "significantli": [0, 175, 281, 344, 419], "silenc": [403, 406, 439], "silent": 0, "sim_concentr": 398, "sim_head": 398, "sim_w": 419, "simgro": [26, 247, 256], "similar": [0, 23, 26, 85, 92, 96, 102, 123, 129, 144, 150, 157, 163, 175, 184, 189, 193, 198, 204, 259, 260, 263, 345, 401, 404, 411, 421, 422, 424, 429, 439], "similarli": 0, "simpl": [0, 5, 74, 175, 379, 380, 381, 382, 384, 387, 395, 396, 398, 399, 400, 401, 406, 437, 440], "simplest": [417, 440], "simpli": [0, 297, 373, 429, 431, 437], "simplif": 26, "simplifi": [0, 403, 429], "simpson": 379, "simtim": 398, "simul": [0, 17, 18, 20, 25, 26, 29, 31, 36, 77, 78, 80, 82, 83, 87, 90, 93, 97, 100, 103, 104, 105, 108, 109, 118, 119, 124, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 158, 161, 164, 175, 180, 187, 190, 194, 195, 199, 202, 206, 207, 208, 209, 210, 241, 243, 261, 262, 331, 332, 335, 336, 337, 339, 343, 344, 345, 348, 349, 351, 352, 353, 354, 356, 357, 359, 360, 395, 396, 397, 399, 400, 401, 402, 404, 406, 408, 419, 428, 433, 438, 439, 440], "simulate_groundwater_seepag": 195, "simulate_seepag": 195, "simulation_bc": 438, "simulation_start_tim": [0, 138, 139, 140, 141, 208, 209, 210], "simulationallocationopt": [0, 105, 137, 361], "simulationdistributingopt": [0, 105, 137, 361], "sinc": [0, 41, 45, 54, 271, 331, 332, 379, 380, 381, 382, 384, 395, 398, 403, 411, 421, 424, 429, 433, 437, 439, 440], "singl": [0, 5, 25, 27, 41, 42, 44, 45, 47, 48, 49, 51, 54, 55, 78, 80, 83, 93, 108, 118, 124, 131, 135, 146, 152, 158, 165, 168, 171, 175, 199, 206, 207, 211, 260, 292, 336, 356, 395, 400, 401, 402, 403, 406, 428, 429, 433, 435, 437], "single_valu": [421, 422], "singlelayerhorizontalflowbarrierhydrauliccharacterist": 0, "singlelayerhorizontalflowbarriermultipli": 0, "singlelayerhorizontalflowbarrierresist": [0, 425], "sink": [0, 8, 12, 13, 14, 56, 180, 331, 332, 333, 336, 346, 358, 395, 398], "sink_nparticl": [331, 333], "sink_particle_plac": [331, 333], "site": 434, "situat": [33, 335, 357, 390, 441], "six": 403, "size": [0, 80, 87, 93, 97, 124, 145, 152, 158, 175, 199, 206, 271, 293, 294, 306, 307, 308, 309, 348, 349, 387, 393, 395, 396, 397, 400, 403, 406, 415, 417, 421, 422, 433, 438, 439, 440, 441, 442], "sizeabl": 401, "skip": [0, 112, 114, 117, 167, 170, 174, 393, 415, 421, 422], "slice": [0, 5, 81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 296, 297, 322, 326, 403, 415, 421, 422, 433], "slightli": [399, 413, 421, 424, 428], "slip": 441, "slope": [26, 78, 359, 395, 398], "slow": [0, 11, 12, 175, 429, 437, 442], "small": [11, 12, 175, 271, 331, 332, 333, 396, 408, 421, 422, 428, 441], "small_align": [421, 422], "smaller": [27, 145, 175, 234, 286, 321, 331, 332, 350, 396, 431, 437], "smallest": [27, 192, 350, 425], "smassrat": 131, "smear": 401, "smoothli": 195, "snakemak": 430, "snap": [0, 425], "snap_to_grid": 0, "snippet": [0, 377, 439], "snow": 26, "so": [0, 12, 13, 14, 26, 55, 83, 127, 202, 239, 271, 277, 279, 292, 296, 297, 315, 325, 326, 373, 374, 377, 381, 382, 384, 393, 396, 398, 403, 404, 408, 410, 411, 419, 421, 422, 428, 429, 431, 433, 437, 438, 439, 440, 441], "soft": 428, "softwar": [0, 66, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 165, 168, 171, 175, 190, 194, 199, 206, 207, 373, 376, 419, 429, 434], "soil": [26, 195, 226, 237, 240, 247, 251, 256, 428], "soil_cov": 226, "soil_moisture_factor": 26, "soil_physical_unit": [26, 230], "solut": [0, 27, 41, 54, 74, 108, 118, 119, 131, 132, 190, 331, 336, 344, 350, 357, 359, 379, 382, 384, 395, 396, 398, 400, 402, 403, 405, 406, 407, 408, 428, 429, 432, 437], "solutionpresetcomplex": [137, 175], "solutionpresetmoder": [137, 175], "solutionpresetsimpl": 175, "solv": [0, 27, 175, 330, 332, 333, 338, 344, 348, 349, 350, 357, 395, 398, 403, 404, 428, 429], "solver": [27, 137, 142, 175, 286, 338, 344, 345, 348, 349, 350, 357, 361, 395, 396, 400, 401, 402, 406, 425], "some": [0, 27, 66, 127, 175, 202, 251, 260, 272, 273, 274, 275, 294, 310, 319, 326, 338, 348, 349, 350, 373, 375, 387, 393, 396, 398, 401, 402, 403, 404, 408, 410, 415, 419, 425, 429, 433, 437, 438, 439, 440, 441], "someth": [26, 325, 402, 421, 422], "sometim": [372, 390, 429], "somewhat": [23, 376, 399], "sophist": 146, "sorb": [118, 132], "sorption": [11, 12, 118, 132, 344, 348, 349, 401], "sort": [0, 44, 55], "sound": 251, "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 63, 64, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 90, 93, 97, 98, 100, 103, 105, 108, 111, 113, 115, 118, 119, 121, 124, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 154, 155, 158, 159, 161, 164, 165, 168, 171, 173, 175, 176, 177, 178, 179, 180, 181, 185, 187, 190, 192, 193, 194, 195, 196, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 421, 422, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "source_cells": 260, "sourcesinkmix": [0, 395, 398, 401, 408], "south": 21, "sp2": [132, 220, 439], "space": [0, 74, 118, 306, 307, 308, 309, 359, 402, 419, 428, 429, 431, 433, 434], "span": 257, "spandasindexpandasindex": 440, "spars": 271, "spatial": [0, 45, 104, 109, 136, 291, 294, 314, 317, 401, 420, 421, 422, 431, 434, 435, 439], "spatial_refer": [281, 361], "speci": [0, 43, 78, 108, 138, 141, 180, 336, 359, 395, 398, 401, 408, 430], "special": [26, 85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204, 236, 319, 376, 421, 422, 439], "species_a": 401, "species_b": 401, "species_c": 401, "species_d": 401, "species_l": [0, 138, 141, 401], "speciesnam": 401, "specif": [0, 5, 12, 26, 30, 32, 39, 80, 82, 83, 90, 100, 121, 137, 146, 148, 155, 161, 175, 181, 185, 187, 192, 251, 256, 271, 292, 336, 345, 352, 372, 390, 403, 408, 429, 431, 433, 434, 435, 442], "specifi": [0, 16, 17, 23, 25, 26, 27, 29, 31, 34, 35, 36, 39, 41, 44, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 83, 85, 86, 87, 92, 93, 96, 97, 102, 103, 108, 111, 113, 115, 118, 119, 123, 124, 127, 129, 131, 132, 135, 137, 146, 150, 151, 152, 157, 158, 163, 165, 168, 171, 175, 180, 181, 184, 185, 189, 190, 193, 195, 198, 199, 202, 204, 206, 207, 226, 239, 244, 245, 255, 261, 262, 271, 292, 299, 301, 302, 328, 330, 331, 332, 333, 334, 335, 336, 337, 345, 347, 351, 352, 353, 354, 356, 357, 359, 360, 379, 380, 382, 383, 384, 387, 398, 399, 403, 419, 433, 439], "specific_storag": [30, 32, 181, 185, 224, 345, 379, 380, 381, 382, 383, 384, 395, 396, 398, 400, 401, 402, 403, 406, 408, 439], "specific_yield": [0, 181, 185, 224, 225, 345, 395, 396, 398, 400, 401, 402, 403, 406, 408, 439], "specificstorag": [0, 224, 395, 396, 398, 400, 401, 402, 403, 406, 408, 439], "specificstorageregridmethod": 0, "speed": [0, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 204, 322, 437], "sphinx": [375, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "spin": 372, "split": [0, 5, 44, 55, 180, 331, 332, 333, 397, 404, 408, 433, 435], "split_conc": 408, "split_conduct": 425, "split_modeldir": [404, 408], "split_simul": [404, 408], "splitter": 376, "spread": 86, "spring": [3, 403], "sprinkl": [0, 26, 126, 239, 256, 361, 425], "sprinkling_capac": 26, "sprinkling_lay": 26, "sprinkling_typ": 26, "spy": 425, "spyder": 376, "squar": [195, 287, 433], "squeez": 292, "src": [131, 325, 417], "src_cr": [292, 413], "src_nodata": 292, "src_transform": 292, "ss": [32, 181, 185, 211, 345, 403], "ssm": [0, 337, 343, 346, 358, 395, 398, 401, 408], "ssor": 344, "ssume": 292, "stabil": [11, 12, 175, 330, 331, 332, 333, 334, 357, 439], "stability_constraint_advect": 361, "stability_constraint_wel": 361, "stabl": [77, 290, 387], "stack": [310, 396, 433, 439], "stacked_y_x": [421, 422], "stackoverflow": 377, "stage": [0, 29, 51, 105, 127, 137, 158, 195, 202, 223, 257, 258, 264, 267, 274, 279, 354, 387, 403, 425, 439, 440, 441], "stage_above_riv_bot": 441, "stage_bottom": 440, "stage_lin": 440, "stage_to_riv_bot": [257, 261, 267, 279, 440], "stage_to_riv_bot_drn_abov": [257, 440], "stagefil": 406, "stai": 187, "stamen": [0, 325], "standard": [338, 357, 395, 421, 424, 429, 430, 439], "start": [0, 9, 10, 13, 25, 31, 42, 50, 58, 66, 80, 82, 83, 105, 119, 135, 137, 146, 211, 219, 236, 239, 257, 258, 296, 319, 326, 335, 336, 337, 345, 356, 375, 376, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 401, 402, 405, 406, 408, 410, 411, 413, 415, 419, 425, 429, 431, 433, 438, 439, 440, 441], "start_dat": 395, "start_hour": 0, "start_level": [63, 64], "start_minut": 0, "start_sprinkling_season": [239, 393], "starting_concentr": [336, 379, 380, 381, 382, 383, 384], "starting_head": [31, 335, 379, 380, 381, 382, 383, 384, 387, 403], "starting_head_as_confined_thick": [146, 439], "starting_heads_larg": 410, "startinghead": 387, "starttim": [241, 403], "starttime_steadi": 403, "stat": [421, 422], "state": [0, 13, 14, 26, 27, 31, 78, 119, 127, 175, 181, 185, 202, 236, 238, 335, 348, 349, 357, 359, 396, 401, 402, 408, 429, 431], "state_for_boundari": [81, 89, 94, 99, 120, 147, 153, 160, 182, 186, 191, 197], "statement": [0, 441], "states_for_boundari": [0, 134, 396], "static": [47, 105, 137, 180, 387], "staticgridanimation3d": [0, 319, 361], "station": 26, "statist": 442, "statu": [190, 425, 441], "stdout": 56, "steadi": [0, 13, 14, 26, 27, 31, 119, 127, 175, 181, 185, 202, 335, 357, 396, 401, 402, 408], "steadyst": 119, "steamlin": 415, "steep": 26, "steer": 425, "step": [27, 77, 79, 80, 87, 93, 97, 103, 118, 124, 131, 151, 152, 158, 175, 180, 194, 195, 199, 206, 207, 271, 330, 331, 332, 333, 334, 350, 357, 359, 374, 375, 378, 393, 395, 396, 398, 399, 400, 402, 403, 406, 408, 419, 421, 422, 437, 439], "stepsiz": [336, 357], "stiff": 428, "still": [0, 105, 127, 202, 336, 410, 438, 441], "stitl": 319, "sto": [181, 185, 224, 225, 387, 395, 396, 398, 400, 401, 402, 406, 408, 425], "stop": [27, 175, 348, 350, 359, 396, 429], "stor": [32, 185], "storag": [0, 30, 32, 118, 132, 181, 185, 211, 233, 345, 395, 398, 406, 408, 429, 437, 439], "storage_coeffici": [32, 185, 187, 225, 439], "storagecoeffici": [0, 225, 387, 425, 428, 439], "storagecoefficientregridmethod": [0, 187], "store": [0, 47, 49, 83, 85, 90, 92, 96, 100, 102, 104, 109, 121, 123, 127, 129, 136, 138, 139, 140, 141, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 202, 204, 208, 209, 210, 211, 315, 335, 374, 376, 393, 396, 399, 401, 403, 419, 429, 431, 433, 434, 435, 437, 440], "str": [22, 24, 25, 26, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 61, 68, 70, 72, 74, 75, 76, 78, 81, 82, 83, 85, 89, 90, 92, 94, 96, 99, 100, 102, 103, 104, 105, 107, 108, 109, 116, 118, 120, 121, 123, 125, 126, 127, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 153, 155, 157, 160, 161, 163, 166, 169, 172, 173, 175, 179, 180, 182, 184, 186, 187, 189, 191, 192, 193, 195, 197, 198, 201, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 240, 242, 243, 245, 254, 259, 260, 263, 271, 272, 273, 274, 280, 281, 290, 291, 293, 294, 300, 301, 304, 307, 309, 315, 321, 325, 327, 329, 355, 356, 359, 360, 387, 401], "straight": [5, 26, 429], "straightforward": [376, 399, 408, 437], "stream": [13, 14, 59, 328], "streamfunct": [0, 13, 14, 361, 415, 425], "streamfunction_lin": [0, 328, 361, 415], "streamfunction_linestr": [0, 328, 361], "streamhandl": 56, "streamlin": [0, 416, 418, 432], "streamplot": 425, "strength": 19, "stress": [17, 25, 27, 77, 79, 80, 87, 93, 97, 103, 105, 108, 119, 124, 131, 135, 137, 145, 151, 152, 158, 175, 180, 194, 195, 199, 206, 207, 239, 256, 337, 345, 350, 356, 357, 387, 395, 398, 403, 430, 438], "strict": [0, 107, 112, 114, 117, 130, 167, 170, 174, 175, 205], "strict_hfb_valid": [112, 114, 117, 167, 170, 174], "strict_well_valid": [0, 107, 130, 205], "stricter": 348, "strictli": [4, 86, 146], "string": [0, 39, 41, 42, 44, 47, 49, 54, 55, 78, 107, 124, 138, 140, 141, 151, 199, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 292, 315, 329, 330, 332, 333], "strt": [119, 146, 335], "structer": 190, "structur": [0, 51, 104, 109, 118, 131, 136, 206, 316, 390, 395, 399, 400, 406, 430, 431, 435, 436, 442], "structureddiscret": [0, 82, 83, 88, 90, 98, 100, 154, 155, 159, 161, 200, 213, 231, 241, 242, 243, 395, 400, 401, 402, 403, 406, 408, 425, 439, 441], "stuck": 175, "studi": [27, 338, 350, 403, 410, 421, 424], "style": 321, "subclass": 105, "subdirectori": [104, 109], "subdivid": 268, "subdivis": 268, "subdomain": [0, 43, 348, 349, 397], "subject": [377, 426], "submit": [336, 377], "submodel": [0, 397, 404], "submodel_label": [144, 397, 404], "subplot": [325, 329, 379, 380, 381, 382, 383, 384, 396, 397, 398, 399, 403, 404, 408, 410, 411, 412, 413, 415, 437, 439, 440], "subprocess": 143, "subsequ": [25, 80, 135, 236, 356, 357], "subset": [0, 440], "subsoil": 26, "substract": 3, "subtl": 441, "subtract": 387, "subunit": [0, 230, 231, 233, 234, 247, 248, 251, 252, 253], "succe": 429, "succesfulli": [0, 379, 380, 381, 382, 383, 384, 441], "success": [0, 7, 194, 357], "suction": 428, "suddenli": 429, "suffer": 0, "suffici": [27, 175, 331, 332, 350], "suffix": 0, "suggest": [0, 175, 338, 373], "suit": [373, 434], "suitabl": [175, 395, 435], "sum": [0, 5, 146, 195, 255, 256, 259, 260, 263, 271, 348, 349, 387, 433], "summari": [118, 175, 176, 177, 178, 361, 395, 396, 398, 400, 401, 402, 403, 406, 408], "summed_conduct": 271, "summer": [0, 50, 105, 137, 387], "sunni": 374, "sup": 395, "suppli": [3, 26, 321, 387], "support": [0, 44, 54, 55, 56, 79, 80, 85, 87, 92, 93, 96, 97, 102, 103, 105, 118, 123, 124, 127, 129, 131, 137, 140, 150, 151, 152, 157, 158, 163, 184, 189, 195, 198, 199, 202, 204, 206, 207, 208, 209, 210, 239, 247, 260, 263, 271, 281, 293, 294, 300, 317, 319, 393, 398, 403, 406, 425, 430, 431, 434, 435, 436, 437, 438, 439, 440], "supportsindex": [271, 290], "sure": [41, 47, 54, 138, 139, 140, 143, 260, 263, 374, 403, 421, 422, 425], "surfac": [3, 5, 26, 29, 33, 93, 152, 164, 175, 195, 217, 230, 247, 253, 256, 269, 275, 294, 335, 340, 341, 342, 387, 403, 417, 433, 439], "surface_depression_depth": 195, "surface_elev": [26, 230], "surface_level": [294, 417], "surfacelevel": 3, "surfacewat": [126, 253, 254], "surflevel": 3, "surpress": 76, "surprisingli": 429, "surround": 268, "suspici": 441, "svat": [0, 26, 227, 228, 229, 230, 232, 233, 247, 249, 250, 253], "svat2etrefgrid": 228, "svat2precgrid": 249, "svat2swnr_roff": [247, 425], "switch": [0, 229, 250], "sy": [0, 32, 56, 181, 185, 211, 345, 403], "symmetr": 175, "synchon": 439, "synchron": 439, "synonym": 428, "syntax": 376, "synthet": [0, 395, 399, 400, 406], "sys1": 0, "system": [0, 19, 28, 50, 66, 118, 127, 202, 269, 270, 292, 336, 374, 387, 403, 405, 408, 413, 429, 431, 434, 440], "t": [11, 12, 23, 35, 58, 63, 64, 66, 70, 164, 201, 281, 319, 348, 349, 373, 374, 381, 387, 398, 401, 429, 431, 433, 440], "t3h": 239, "t3l": 239, "tab": [378, 405], "tab20": 440, "tabl": [0, 26, 27, 33, 126, 230, 251, 252, 254, 271, 291, 335, 359, 393, 425, 428, 434, 435, 439], "tabular": [403, 434, 435], "tact": 256, "tag": [372, 374, 378], "tail": 439, "take": [0, 36, 45, 55, 164, 260, 263, 296, 297, 300, 319, 360, 373, 387, 395, 421, 422, 425, 433, 437, 439, 440], "taken": [0, 3, 292, 297, 401, 437, 439], "target": [0, 192, 241, 413, 425, 439], "target_di": [82, 83, 90, 100, 154, 155, 161, 231, 241], "target_grid": [85, 92, 96, 102, 121, 123, 129, 142, 148, 150, 157, 163, 184, 187, 189, 193, 198, 204, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 399, 439], "target_npf": [90, 100, 161], "task": [336, 372, 419, 437], "tdbg": 236, "tdi": 194, "teamciti": [374, 378], "tec": 0, "tech": 26, "technic": 429, "techniqu": 400, "tecplot": [0, 347], "tediou": 431, "tell": [387, 398], "temp_dir": [411, 412, 413], "tempdir": [417, 433, 434], "temperatur": [359, 439], "templat": [0, 281, 403], "template_data": 438, "tempor": 194, "temporari": [0, 393, 433], "temporarili": [45, 429, 437], "temporary_directori": [379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 400, 401, 403, 404, 406, 408, 411, 412, 413, 417, 433, 434, 437, 439, 441], "tend": 44, "tensor": [21, 146, 344, 439], "term": [5, 11, 21, 77, 78, 79, 80, 84, 86, 87, 91, 93, 95, 97, 101, 103, 108, 118, 122, 124, 131, 132, 146, 149, 152, 156, 158, 162, 175, 180, 181, 183, 185, 188, 195, 199, 206, 207, 270, 292, 330, 332, 333, 336, 338, 344, 345, 349, 357, 403, 428, 429], "termin": [118, 132, 175, 357, 359], "tesselate_centroidal_voronoi": 398, "test": [0, 332, 372, 425, 427, 439], "text": [0, 38, 118, 127, 145, 146, 202, 211, 376, 393, 404, 415, 429, 439, 441], "textfil": [127, 202, 429, 431], "than": [0, 4, 27, 29, 32, 41, 42, 54, 75, 119, 124, 127, 146, 175, 181, 185, 187, 195, 199, 202, 228, 234, 249, 260, 271, 275, 281, 286, 318, 320, 321, 325, 330, 331, 332, 333, 334, 338, 344, 345, 348, 349, 350, 357, 359, 376, 390, 401, 403, 410, 428, 429, 431, 433, 435, 437, 439, 441], "thank": 419, "thei": [0, 41, 42, 45, 50, 54, 82, 140, 175, 187, 208, 209, 210, 260, 263, 268, 311, 351, 352, 353, 372, 376, 396, 403, 421, 424, 428, 429, 431, 433, 434, 437, 439, 442], "them": [0, 44, 45, 55, 260, 263, 373, 374, 376, 396, 401, 403, 408, 411, 415, 429, 431, 433, 437], "theme": 0, "theoret": [379, 429], "theori": [26, 379], "thereaft": 374, "therebi": [5, 11, 12], "therefor": [0, 106, 110, 175, 372, 398, 401, 403, 425, 429, 438, 439, 440, 441, 442], "thermodynam": 439, "theta": [12, 175, 195], "theta_init": 195, "theta_r": 195, "theta_sat": 195, "thetaim": 118, "thi": [0, 4, 5, 9, 10, 11, 21, 23, 25, 26, 27, 29, 30, 32, 34, 35, 37, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 61, 68, 70, 72, 73, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 90, 92, 93, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 114, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 131, 132, 135, 137, 140, 142, 143, 146, 148, 150, 151, 152, 155, 157, 158, 159, 161, 163, 164, 167, 170, 174, 175, 180, 181, 184, 185, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 241, 244, 247, 249, 251, 253, 254, 256, 257, 258, 260, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 279, 280, 281, 290, 292, 296, 297, 299, 300, 301, 302, 313, 315, 318, 322, 325, 331, 332, 333, 335, 338, 345, 348, 349, 350, 351, 352, 353, 356, 357, 359, 361, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 413, 415, 419, 420, 421, 422, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "thick": [0, 26, 32, 124, 127, 146, 185, 199, 202, 258, 268, 269, 270, 275, 335, 336, 345, 396, 402, 403, 408, 428, 433, 440], "thicker": 440, "thickstrt": 146, "thin": 326, "thing": [77, 127, 202, 231, 251, 429, 433, 440], "think": 441, "thinner": 275, "third": [86, 146, 175, 399], "thirdli": 429, "thirteen": 403, "thk": 425, "thkmin": 336, "those": [281, 336, 357, 411, 421, 424, 439], "though": [146, 348, 349, 428, 437, 438], "thought": 437, "thousand": 433, "three": [0, 3, 5, 9, 10, 11, 13, 14, 127, 128, 146, 175, 202, 203, 251, 260, 296, 297, 322, 326, 331, 332, 384, 387, 400, 403, 408, 413, 421, 422, 433, 434, 438], "threedimension": [9, 10], "thresh": [146, 345], "threshold": [7, 18, 29, 146, 339, 354], "threshold_sprinkl": [239, 393], "threw": 0, "through": [0, 5, 9, 10, 13, 14, 127, 190, 195, 202, 296, 297, 325, 336, 345, 387, 398, 415, 441], "throughout": [187, 335, 336, 400, 402, 406], "throw": [0, 107, 130, 145, 205, 387], "thrown": [0, 425], "thu": [29, 138, 141, 181, 185, 258, 330, 331, 332, 333, 334, 345, 403], "thumb": [27, 350], "tidi": [41, 54, 433], "tie": 280, "tif": [54, 55, 292, 294, 403, 433], "tight": [329, 440], "tight_layout": [439, 440], "tightli": 403, "tile": [0, 387], "tileprovid": 325, "tim": 387, "time": [0, 3, 5, 17, 19, 25, 26, 27, 28, 31, 36, 41, 42, 43, 44, 50, 51, 54, 55, 77, 79, 80, 81, 83, 85, 87, 89, 90, 92, 93, 94, 96, 97, 99, 100, 102, 103, 105, 116, 118, 119, 120, 121, 123, 124, 125, 127, 129, 131, 132, 134, 135, 137, 139, 140, 141, 142, 145, 147, 148, 150, 151, 152, 153, 155, 157, 158, 160, 161, 163, 166, 169, 172, 175, 180, 181, 182, 184, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 229, 236, 239, 241, 244, 250, 255, 260, 277, 279, 280, 300, 307, 309, 315, 319, 320, 329, 335, 336, 337, 348, 350, 351, 352, 353, 356, 357, 358, 360, 373, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 411, 412, 413, 415, 417, 419, 429, 430, 433, 434, 437, 439, 440, 441, 442], "time_discret": [0, 135, 387, 395, 398, 401, 408, 438], "time_max": [81, 89, 90, 94, 99, 100, 116, 120, 125, 134, 147, 153, 160, 161, 166, 169, 172, 182, 186, 191, 197, 201, 439], "time_min": [81, 89, 90, 94, 99, 100, 116, 120, 125, 134, 147, 153, 160, 161, 166, 169, 172, 182, 186, 191, 197, 201], "time_unit": [0, 138, 139, 140, 141, 208, 209, 210], "timedelta": [3, 140, 208, 209, 210, 403], "timedelta64": [387, 403, 406, 439], "timediscret": [135, 356, 438], "timemap": 387, "timeoutputcontrol": 361, "timepandasindexpandasindex": [387, 396, 403, 438, 439], "timeri": 435, "times_rainfal": 406, "times_sto": 403, "timeseri": [0, 45, 47, 49, 93, 105, 127, 137, 195, 202, 403, 420, 425, 432, 443], "timespan": 0, "timestamp": [36, 41, 54, 127, 202, 307, 309, 319, 360], "timestap": [11, 12], "timestep": [0, 8, 11, 12, 135, 138, 139, 140, 141, 208, 209, 210, 255, 359, 387, 396, 398, 403, 433, 438, 439], "timestep_dur": [194, 357, 438], "timestep_multipli": [194, 357, 438], "timestr": 0, "timevaryingconstantconcentr": 0, "tip": 410, "titl": [319, 415, 439], "titu": 374, "tmp_dir": 441, "tmp_path": 397, "tmpdir": [404, 439, 441], "to_cr": 413, "to_csv": [348, 349], "to_datafram": [403, 421, 422, 424], "to_datetim": [361, 395, 401, 403, 408, 438], "to_fil": 434, "to_list": 410, "to_mf6_pkg": [0, 127, 128, 202, 203, 425], "to_netcdf": [0, 419, 420, 421, 433], "to_timedelta": [395, 401, 403, 408], "to_ugrid2d": [0, 361, 420, 421], "todo": 195, "togeth": [396, 410, 430, 442], "token": 0, "toler": [3, 175], "toml": [0, 104, 109, 136, 372, 378, 431], "tomli": 0, "tonerlit": 325, "too": 442, "tool": [376, 403, 410, 426, 430, 435], "toolset": 430, "toolz": 419, "top": [0, 6, 7, 8, 11, 12, 19, 23, 28, 35, 51, 81, 89, 94, 99, 112, 114, 116, 117, 120, 125, 130, 146, 147, 153, 160, 166, 167, 169, 170, 172, 174, 181, 182, 185, 186, 190, 191, 195, 196, 197, 199, 201, 205, 213, 258, 263, 264, 265, 267, 268, 269, 270, 275, 276, 277, 278, 279, 287, 288, 321, 322, 326, 328, 335, 351, 352, 353, 374, 379, 380, 381, 382, 383, 384, 387, 395, 396, 397, 398, 400, 401, 402, 403, 406, 408, 415, 419, 425, 430, 431, 433, 439, 440, 442], "top1d": [379, 380, 381, 382, 383, 384], "top_bot": [6, 8, 11, 12, 415], "top_elev": [19, 406], "top_sourc": 0, "topic": [50, 51], "topographi": 26, "topologi": [144, 312, 316, 396, 421, 424, 433], "topsystem": [0, 90, 100, 137, 161, 257, 261, 262, 264, 265, 266, 267, 432, 442, 443], "total": [26, 27, 118, 175, 256, 331, 332, 334, 336, 379, 380, 381, 382, 383, 384, 386, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 432, 433, 434, 437, 438, 439, 440, 441, 443], "total_flux": 395, "total_kd": [421, 422], "touch": 281, "tov": 410, "toward": [146, 331, 332, 333, 345, 396, 403, 425], "tox": 0, "tpt_1": 408, "tpt_a": 401, "tpt_b": 401, "tpt_c": 401, "tpt_d": 401, "tpt_model": [401, 408], "tqdm": 419, "track": [330, 331, 332, 333, 334, 357], "tradit": 433, "tradition": 379, "transfer": 118, "transform": [0, 3, 127, 202, 263, 361, 413], "transient": [0, 27, 36, 47, 124, 175, 181, 185, 187, 199, 307, 309, 319, 320, 345, 357, 360, 395, 396, 398, 400, 401, 402, 406, 408], "transient_da": [421, 423], "transient_uda": [421, 424], "translat": 429, "transluc": 325, "transmiss": [130, 205, 258, 268, 345, 403, 428, 433, 440], "transmissivity_l": 433, "transmissivity_l1": 433, "transmissivity_l10": 433, "transmissivity_l11": 433, "transmissivity_l12": 433, "transmissivity_l13": 433, "transmissivity_l2": 433, "transmissivity_l3": 433, "transmissivity_l4": 433, "transmissivity_l5": 433, "transmissivity_l6": 433, "transmissivity_l7": 433, "transmissivity_l8": 433, "transmissivity_l9": 433, "transpar": [234, 321, 325, 410], "transpir": [239, 256], "transport": [0, 74, 77, 80, 87, 93, 97, 108, 124, 138, 141, 145, 152, 158, 180, 199, 206, 207, 330, 331, 332, 333, 334, 336, 344, 349, 357, 359, 361, 379, 382, 384, 395, 405, 407, 430, 432], "transport_2d": [407, 408, 432], "transport_initial_timestep": 357, "transport_model": 398, "transport_solv": [395, 398, 401, 408], "transport_timestep_multipli": 357, "transportmodel": 401, "transpos": 403, "transsmis": 433, "transvers": [86, 338], "transversal_horizont": 214, "transversal_horizontal1": [86, 214, 395, 398, 401, 408, 439], "transversal_horizontal2": [86, 214, 439], "transversal_vert": [86, 214, 398, 439], "transverse_horizontal1": 86, "transverse_horizontal2": 86, "tranverse_vert": 86, "trapezoid": 288, "treat": [0, 25, 127, 135, 146, 202, 336, 356], "treatment": 344, "trend": [226, 387], "trend_da": 387, "treshold": 7, "tri": [37, 55, 397, 425], "triangl": [316, 321, 325, 421, 424, 440], "trianglemesh": [421, 424], "triangular": [396, 398], "trick": 300, "tricontourset": 397, "tripl": 118, "troublesom": 441, "trpt": 338, "trpv": 338, "true": [0, 3, 5, 8, 45, 46, 56, 59, 77, 78, 79, 80, 86, 87, 93, 97, 104, 107, 108, 109, 112, 114, 117, 118, 119, 124, 130, 131, 132, 135, 136, 139, 142, 145, 146, 151, 152, 158, 167, 170, 174, 175, 179, 180, 181, 185, 190, 192, 194, 195, 196, 199, 205, 206, 207, 208, 243, 256, 268, 281, 292, 303, 318, 321, 322, 323, 325, 339, 344, 348, 349, 357, 359, 379, 380, 381, 382, 383, 384, 395, 396, 398, 400, 401, 402, 403, 406, 408, 421, 422, 439, 440], "truncat": 26, "try": [43, 321, 325, 372, 373, 425, 429, 437], "tslngh": 357, "tsmult": [194, 357], "ttsmult": 357, "tupl": [6, 50, 85, 92, 96, 102, 123, 129, 150, 157, 161, 163, 184, 189, 193, 198, 204, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 242, 267, 271, 290, 305, 314, 321, 325, 329], "turn": [0, 47, 112, 114, 117, 167, 170, 174, 271, 430, 433, 434], "tutori": [0, 373], "tutorial_03": 0, "tvd": [75, 334, 357], "tweak": 439, "twice": [331, 332], "two": [26, 39, 44, 45, 55, 76, 78, 127, 128, 146, 202, 203, 248, 255, 260, 283, 286, 316, 318, 321, 322, 325, 326, 328, 331, 332, 359, 387, 395, 396, 403, 408, 415, 419, 421, 422, 428, 429, 431, 434, 437, 438, 440], "twodimension": [331, 332], "twri": [0, 399, 402, 405, 406, 407, 408, 432, 437], "twri_output": 437, "txt": [45, 46, 47, 48, 49], "type": [0, 3, 4, 6, 12, 13, 14, 24, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 58, 66, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 153, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 201, 204, 205, 208, 209, 210, 211, 226, 229, 230, 234, 236, 241, 246, 248, 250, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 322, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 344, 345, 355, 396, 403, 405, 408, 433, 434, 437, 439, 440], "typeerror": [0, 313], "typic": [26, 27, 175, 280, 350, 403, 429, 433, 434, 435, 437], "typo": 0, "u": [0, 9, 10, 326, 374, 396, 403, 410, 415, 419, 433, 437], "ucn": 151, "uda": [420, 421, 424], "uda_md": [420, 421], "ugrid": [0, 104, 109, 136, 312, 316, 396, 397, 398, 402, 424], "ugrid2d": [396, 398, 421, 424], "ugrid2d_dataset": 316, "ugrid_d": [420, 421], "ugriddataarrai": [0, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 106, 110, 112, 114, 116, 117, 120, 121, 122, 123, 125, 127, 128, 129, 130, 134, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 153, 155, 156, 157, 160, 161, 162, 163, 166, 167, 169, 170, 172, 173, 174, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 201, 202, 203, 204, 205, 208, 209, 210, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 295, 298, 299, 300, 301, 302, 398, 402], "ugriddatarrai": [264, 265, 267], "ugriddataset": [139, 141, 208, 310, 396], "ultim": 334, "unabl": 372, "unambigu": [140, 208, 209, 210], "unassoci": [127, 202], "uncertainti": 251, "uncompromis": 373, "unconfin": [0, 32, 181, 185, 345, 428], "unconsolid": 26, "uncoupl": 359, "under": [0, 32, 42, 103, 105, 126, 137, 175, 185, 254, 315, 325, 403, 405, 438], "under_relax": [103, 175, 395, 396, 398, 400, 401, 402, 403, 406, 408], "under_relaxation_gamma": 175, "under_relaxation_kappa": 175, "under_relaxation_momentum": 175, "under_relaxation_theta": 175, "undergo": 439, "underli": [4, 93, 146, 152, 195], "underrelax": 175, "underscor": [41, 42, 54], "understand": [398, 429], "undesir": 439, "undo": 310, "undul": 26, "unexpect": [66, 260, 421, 422], "unfortun": 300, "unidata": [296, 297], "uniform": [331, 332, 345, 348, 349, 396, 400, 402, 406, 408], "unify_chunk": 0, "unimport": 338, "uninstal": 0, "unintend": 239, "union": [37, 38, 39, 134, 138, 140, 143, 209, 210, 293, 294, 316], "unionimeth1head": 211, "uniqu": [25, 47, 124, 135, 199, 356], "unit": [0, 4, 26, 27, 30, 32, 36, 140, 175, 181, 185, 208, 209, 210, 230, 233, 247, 251, 253, 256, 329, 336, 338, 345, 348, 350, 351, 352, 353, 359, 360, 372, 395, 398, 403, 428], "unitless": 175, "unittest": 372, "unless": [27, 118, 132, 146, 336, 350], "unlik": [19, 28, 357, 398, 431, 436], "unlimit": 26, "unmodifi": [85, 92, 96, 102, 123, 129, 150, 157, 163, 184, 189, 193, 198, 204], "unnam": 410, "unpack": [300, 415], "unpartit": [404, 408], "unreli": 44, "unrend": 376, "unrot": 146, "unsatisfi": 429, "unsatur": [26, 195, 428], "unsaturated_databas": 240, "unsaturatedzoneflow": 0, "unsplit": 408, "unstabl": [398, 439], "unstack": [0, 312], "unstructur": [0, 104, 109, 136, 146, 396, 398, 402, 420, 432, 442, 443], "unstructuredgrid": 322, "until": [0, 25, 41, 54, 80, 135, 319, 356, 387, 437, 440], "unus": 335, "unwant": 318, "up": [0, 13, 14, 44, 55, 83, 85, 88, 90, 92, 96, 98, 100, 102, 121, 123, 129, 146, 148, 150, 155, 157, 159, 161, 163, 184, 187, 189, 192, 193, 198, 200, 204, 230, 257, 272, 273, 274, 275, 319, 322, 372, 373, 379, 380, 381, 382, 383, 384, 387, 396, 398, 400, 406, 408, 421, 422, 437, 439, 440, 441, 442], "updat": [0, 106, 110, 281, 378, 429, 431], "upload": [374, 378], "upon": [0, 78, 79, 80, 86, 87, 93, 97, 107, 112, 114, 117, 118, 119, 124, 131, 132, 146, 151, 152, 158, 167, 170, 174, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207], "upond": 0, "upper": [0, 257, 264, 265, 267, 285, 303, 387], "upper_active_lay": [0, 361], "uppermost": [4, 284, 403], "upscal": 439, "upsid": 0, "upstream": [75, 76, 329, 330, 359, 403], "upw": 403, "upward": [233, 440], "upward_resist": [0, 233], "upwind": 76, "urban": [26, 231, 234, 248, 252], "urban_area": 26, "urgenc": [61, 68, 70, 72], "url": 0, "us": [0, 3, 4, 5, 9, 10, 11, 17, 18, 20, 23, 25, 26, 27, 29, 34, 35, 36, 37, 41, 42, 44, 45, 50, 54, 55, 56, 59, 61, 66, 68, 70, 72, 74, 77, 78, 80, 82, 83, 85, 86, 87, 90, 92, 93, 96, 97, 100, 102, 104, 105, 107, 109, 118, 119, 121, 123, 124, 127, 129, 130, 135, 137, 138, 140, 141, 144, 146, 148, 150, 152, 154, 155, 157, 158, 161, 163, 175, 181, 184, 185, 187, 189, 190, 192, 193, 195, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 226, 228, 229, 233, 235, 236, 237, 238, 239, 241, 247, 249, 250, 251, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 280, 281, 286, 287, 288, 292, 293, 294, 297, 299, 300, 301, 302, 306, 307, 308, 309, 313, 315, 318, 319, 320, 321, 322, 325, 326, 328, 330, 331, 332, 333, 335, 337, 338, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 415, 417, 419, 421, 422, 424, 425, 429, 430, 431, 433, 434, 437, 438, 440, 441], "usabl": 434, "usag": [263, 271, 332, 437], "uscl_svat": 425, "use_absolute_path": 145, "use_binari": 145, "use_cftim": [41, 42, 43, 54], "use_relative_weight": [260, 263], "use_src_attr": 292, "useb": 374, "usecas": 315, "user": [0, 13, 14, 26, 37, 105, 107, 118, 137, 146, 175, 195, 239, 335, 357, 374, 376, 405, 408, 429, 431, 432, 439, 440, 443], "user_guid": 439, "usernam": 374, "userspecifi": 357, "userwarn": [403, 406, 434, 439], "usg": [87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 165, 168, 171, 175, 190, 194, 199, 206, 207, 419, 430], "usual": [27, 31, 175, 292, 331, 332, 335, 344, 348, 349, 350, 351, 352, 353, 379, 380, 381, 382, 383, 384, 387, 393, 395, 399, 400, 403, 406, 410, 415, 438, 440, 441], "util": [0, 44, 55, 82, 83, 90, 100, 121, 148, 155, 161, 187, 192, 296, 297, 361, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 410, 411, 412, 413, 416, 417, 419, 420, 421, 422, 433, 434, 437, 439, 440, 441], "utm30n": 292, "uzf": [0, 195, 209, 430, 439], "v": [0, 9, 10, 26, 326, 396, 408, 415], "v0": [0, 374], "v1": [0, 427], "v34": 372, "v5": [21, 164, 379, 380, 381, 382, 383, 384, 387], "v7": 26, "v8": 239, "v_": 11, "vados": 26, "valid": [0, 50, 77, 78, 79, 80, 86, 87, 93, 97, 104, 107, 109, 112, 114, 117, 118, 119, 124, 127, 130, 131, 132, 135, 136, 142, 145, 146, 151, 152, 158, 167, 170, 174, 175, 179, 180, 181, 185, 190, 192, 194, 195, 196, 199, 202, 205, 206, 207, 243, 268, 280, 425, 439, 441], "validationerror": [0, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 145, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207, 272, 273, 274, 441], "valu": [0, 3, 4, 5, 7, 20, 26, 27, 31, 39, 41, 42, 44, 45, 47, 48, 49, 54, 55, 58, 66, 78, 80, 84, 86, 87, 91, 93, 95, 97, 101, 105, 106, 110, 118, 119, 122, 124, 131, 132, 137, 138, 139, 140, 141, 144, 146, 149, 152, 156, 158, 162, 175, 181, 183, 185, 188, 190, 194, 195, 199, 201, 206, 207, 208, 209, 210, 237, 247, 257, 258, 260, 263, 264, 265, 267, 271, 280, 281, 286, 287, 290, 291, 299, 300, 301, 302, 303, 318, 322, 325, 328, 330, 331, 332, 333, 334, 335, 336, 338, 343, 344, 345, 347, 348, 349, 350, 357, 359, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 401, 403, 406, 408, 410, 411, 419, 426, 428, 433, 437, 439, 440, 441], "valueerror": [0, 301, 302], "values_to_set": 300, "van": 26, "vanilla": 390, "vari": [0, 146, 287, 288, 345, 358, 403, 421, 422, 428, 440], "variabl": [0, 16, 23, 41, 54, 78, 82, 83, 90, 93, 100, 118, 121, 126, 143, 146, 148, 155, 161, 175, 180, 187, 192, 209, 252, 254, 256, 272, 273, 274, 312, 316, 335, 336, 352, 359, 382, 393, 395, 396, 398, 403, 405, 406, 429, 433, 438, 439, 440, 441], "variable_vertical_conduct": [146, 400, 401, 402, 403, 406, 439], "variablecv": 146, "variabledensityflow": [379, 380, 381, 382, 383, 384], "variableoutputcontrol": 361, "variant": [17, 337], "variat": 334, "varieti": [0, 403, 430], "variou": [0, 357], "vcr": 256, "vcw": 425, "vdf": [379, 380, 381, 382, 383, 384], "ve": [0, 319, 421, 424, 429], "vector": [5, 27, 271, 281, 290, 293, 294, 325, 387, 411, 425, 432, 433, 437, 442, 443], "veget": [226, 239], "vegetation_factor": 226, "vegetation_index": [226, 239, 393], "vegetation_index_da": 393, "veldhuizen": 26, "veloc": [0, 6, 9, 10, 401, 408, 416, 418, 432], "veri": [27, 271, 350, 387, 395, 396, 398, 425, 428, 431, 433, 437, 438], "verifi": [128, 203, 377, 437, 439, 441], "versa": [229, 250, 442], "versatil": [430, 433], "version": [0, 45, 77, 80, 142, 175, 318, 372, 379, 380, 381, 382, 383, 384, 398, 400, 403, 421, 422, 428, 430, 441], "versu": 429, "vertic": [0, 5, 23, 26, 34, 35, 84, 86, 91, 95, 101, 105, 106, 110, 122, 137, 146, 149, 156, 162, 183, 188, 190, 195, 196, 207, 251, 257, 258, 263, 264, 265, 266, 267, 269, 270, 277, 279, 280, 287, 288, 296, 297, 331, 332, 338, 345, 351, 352, 385, 386, 387, 395, 398, 403, 406, 415, 421, 424, 430, 432, 434, 439, 440], "vertical_anisotropi": 34, "vertical_exagger": [319, 320, 322], "verticalanisotropi": [35, 387], "verticalinterfac": [384, 386, 432], "verticesdiscret": [0, 88, 98, 159, 193, 200, 213, 396, 398, 402, 439], "via": [0, 5, 138, 139, 140, 141, 208, 209, 210, 346, 358, 376, 419, 428, 431, 433, 434, 435], "vice": [229, 250, 442], "view": [0, 26, 146, 331, 332, 425, 433, 434, 438], "viewer": [425, 433], "violat": [13, 14], "viridi": [323, 439, 440, 441], "visibl": [300, 434], "visual": [0, 13, 14, 25, 51, 135, 356, 361, 376, 397, 401, 415, 417, 419, 430, 431, 432, 437, 439, 440, 441, 442], "visualis": [381, 382, 384], "visualize_jupyt": 416, "visualize_python": 416, "visualstudio": 374, "visualstudiocod": 373, "vka": 345, "void": 132, "volum": [5, 27, 30, 32, 118, 132, 146, 181, 185, 195, 345, 350, 398, 428, 439], "volumetr": [124, 152, 199, 206, 207, 351, 352, 353, 398], "von": 239, "voronoi": 398, "voxel": [0, 321, 322, 326, 328, 361], "vpt": 439, "vscode": [376, 431, 437], "vtk": 347, "vx": [6, 378, 415], "vy": [6, 415], "vz": [6, 415], "w": [0, 4, 41, 54, 140, 164, 208, 209, 210, 382], "wa": [0, 80, 126, 140, 208, 209, 210, 254, 379, 398, 403, 429, 431, 434, 439, 441], "wageningen": 26, "wai": [0, 5, 13, 14, 45, 127, 202, 271, 321, 377, 390, 405, 407, 410, 417, 421, 422, 432, 435, 440, 441], "wall": 22, "walsum": 26, "wang": [11, 12], "want": [56, 82, 85, 92, 96, 102, 105, 123, 129, 137, 150, 157, 163, 184, 189, 193, 198, 204, 260, 372, 374, 378, 387, 398, 399, 421, 422, 429, 431, 437, 439, 441], "warn": [0, 59, 61, 66, 68, 70, 72, 300, 301, 302, 403, 406, 439], "warp": 292, "wast": 435, "water": [0, 4, 26, 29, 30, 32, 33, 87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 158, 164, 165, 168, 171, 175, 181, 185, 190, 194, 195, 199, 206, 207, 239, 247, 252, 253, 256, 269, 270, 294, 329, 335, 345, 359, 379, 380, 381, 382, 384, 387, 395, 398, 400, 401, 403, 425, 428, 430, 434, 439, 442], "water_content_fil": 195, "water_mov": 195, "waterbal": [329, 425], "waterbalance_barchart": [361, 425], "watercont": 209, "watert": [26, 251], "waterwai": [271, 434], "wd": [331, 332, 333], "we": [0, 12, 82, 85, 92, 96, 102, 123, 127, 129, 150, 151, 157, 163, 164, 184, 189, 193, 195, 198, 202, 204, 239, 247, 271, 296, 297, 318, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 412, 413, 415, 419, 421, 422, 424, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442], "web": [164, 379, 380, 381, 382, 383, 384, 387], "webclient": 374, "websit": [41, 54, 403, 410], "week": [140, 208, 209, 210], "weight": [0, 74, 75, 76, 83, 85, 90, 92, 96, 100, 102, 121, 123, 127, 129, 148, 150, 155, 157, 161, 163, 184, 187, 189, 192, 193, 198, 202, 204, 258, 260, 263, 330, 331, 332, 333, 348, 349, 359, 399, 403, 421, 422, 439, 440], "weighting_factor": [331, 332, 333], "wel": [12, 107, 124, 199, 206, 207, 379, 381, 382, 383, 384, 387, 400, 402, 408, 425, 438], "wel_df": 387, "welcom": 377, "weldata": [381, 382, 384], "well": [0, 25, 45, 105, 107, 124, 126, 127, 128, 130, 135, 137, 175, 206, 207, 211, 227, 231, 241, 244, 245, 251, 254, 257, 268, 275, 356, 373, 374, 376, 378, 379, 381, 382, 383, 384, 395, 398, 399, 400, 402, 408, 410, 419, 421, 422, 425, 431, 433, 434, 435, 437, 438, 439], "well_i": 402, "well_rat": 402, "well_x": 402, "welldisstructur": 0, "welldisvertic": 0, "wellid": [126, 254], "wells_i": 400, "wells_l": 45, "wells_l1": 45, "wells_l2": 45, "wells_x": 400, "weltim": [124, 199], "were": [0, 80, 403, 410, 415, 439, 440, 441], "west": [21, 403, 433, 441], "western": 441, "wet": [146, 175, 231, 269, 270, 345], "wetdri": 146, "wetfactor": 345, "wetfct": [146, 345], "wether": 357, "wetted_area": 26, "wgs84": [292, 413], "what": [0, 45, 292, 300, 301, 302, 319, 403, 419, 431, 439, 440, 441], "wheel": [421, 424], "when": [0, 3, 4, 11, 12, 24, 27, 45, 50, 61, 66, 68, 70, 72, 78, 80, 86, 103, 127, 130, 139, 146, 151, 175, 181, 185, 195, 202, 205, 208, 261, 262, 268, 292, 313, 319, 320, 325, 331, 332, 333, 335, 344, 345, 348, 349, 350, 355, 372, 376, 396, 403, 404, 421, 422, 425, 428, 429, 437, 438, 439, 440, 442], "whenev": [27, 78, 372], "where": [0, 4, 5, 7, 22, 29, 32, 41, 54, 76, 82, 83, 105, 106, 110, 137, 164, 185, 195, 231, 241, 260, 266, 268, 271, 272, 273, 274, 286, 293, 305, 331, 332, 336, 352, 361, 374, 378, 379, 380, 381, 382, 383, 384, 387, 393, 396, 398, 400, 402, 403, 406, 415, 421, 422, 424, 425, 428, 429, 431, 437, 439, 440, 441], "wherea": [127, 202, 387, 403], "whether": [0, 5, 8, 44, 78, 79, 80, 86, 87, 93, 97, 103, 104, 109, 118, 119, 124, 131, 132, 136, 138, 139, 140, 145, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207, 208, 210, 229, 230, 250, 260, 299, 318, 321, 322, 331, 332, 333, 357, 398, 410], "which": [0, 4, 10, 11, 14, 19, 21, 25, 26, 27, 33, 36, 39, 41, 42, 44, 45, 47, 54, 55, 77, 78, 79, 80, 87, 93, 97, 103, 104, 105, 107, 108, 109, 112, 114, 117, 119, 124, 126, 127, 131, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 152, 158, 161, 167, 170, 174, 175, 180, 195, 199, 201, 202, 206, 207, 229, 239, 245, 250, 251, 254, 255, 256, 260, 264, 265, 266, 267, 271, 274, 277, 279, 280, 286, 293, 294, 296, 297, 299, 300, 318, 325, 330, 331, 332, 333, 334, 335, 336, 345, 347, 350, 351, 352, 353, 356, 357, 360, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 401, 403, 406, 408, 410, 412, 413, 419, 428, 429, 430, 433, 434, 438, 439, 440, 441], "while": [0, 30, 175, 181, 195, 280, 331, 332, 333, 376, 396, 421, 422, 428, 429, 442], "white": [325, 396, 415], "whiten": 321, "whiten_triangl": [321, 325], "whitespac": 440, "who": [0, 431], "whole": [66, 399, 404, 439], "whose": [281, 439], "why": [127, 202, 419, 429, 441], "wide": 5, "width": [118, 408, 434], "wiki": [30, 32, 181, 185], "wikipedia": [30, 32, 181, 185, 428], "wil": 42, "wildcard": 433, "wildli": 440, "wilei": 164, "window": [3, 143, 319, 372, 374, 375, 379, 380, 381, 382, 383, 384, 387, 405, 419, 429, 435], "winter": [0, 50, 105, 137, 387], "wise": [421, 422, 441], "wish": [45, 271, 318], "with_gap": [421, 422, 424], "within": [0, 45, 80, 146, 271, 281, 297, 299, 331, 332, 337, 351, 352, 353, 357, 373, 398, 399, 403, 429, 438], "within_polygon": 45, "without": [0, 3, 8, 13, 14, 47, 50, 74, 80, 87, 93, 97, 124, 127, 152, 158, 199, 202, 206, 259, 260, 263, 268, 276, 292, 348, 349, 396, 404, 410, 421, 424, 431, 437, 439, 440], "wofost": 226, "wonder": [127, 202], "word": 428, "work": [0, 13, 14, 25, 41, 44, 54, 66, 135, 136, 140, 175, 208, 209, 210, 292, 299, 300, 331, 332, 356, 373, 377, 379, 380, 381, 382, 383, 384, 387, 396, 398, 403, 406, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441], "workaround": [425, 428], "workflow": [373, 430, 442], "world": 439, "worri": 429, "worsen": 175, "worth": 377, "worthi": 379, "would": [0, 4, 44, 55, 146, 373, 396, 429, 437, 439], "wouldn": 387, "wq": [0, 19, 28, 43, 361, 379, 380, 381, 382, 383, 384, 386, 419, 430, 432, 438], "wq_jupyt": 385, "wq_python": 385, "wq_v5_3_svn359_x64r": [379, 380, 381, 382, 383, 384], "wrap": [82, 83, 90, 100, 121, 148, 155, 161, 187, 192, 298, 318, 321, 326, 328, 373, 433, 434], "wrapper": 61, "write": [0, 24, 41, 42, 44, 47, 49, 54, 55, 56, 78, 104, 107, 109, 112, 114, 117, 118, 128, 130, 136, 138, 139, 140, 143, 164, 167, 170, 174, 203, 205, 232, 239, 240, 255, 256, 300, 317, 319, 321, 326, 328, 355, 361, 377, 379, 380, 381, 382, 383, 384, 387, 393, 395, 397, 398, 401, 403, 404, 406, 408, 419, 425, 429, 430, 433, 434, 438, 439], "write_assoc": [0, 361], "write_qgis_project": 0, "writecontext": 0, "writeup": [143, 405], "written": [0, 44, 47, 48, 49, 55, 59, 77, 78, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 145, 146, 151, 152, 158, 175, 180, 181, 185, 190, 195, 199, 206, 207, 211, 244, 255, 256, 312, 337, 345, 376, 387, 403, 429, 433, 437, 441], "wrong": [78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 158, 175, 180, 181, 185, 190, 194, 195, 196, 199, 206, 207], "www": 379, "x": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 81, 85, 86, 89, 92, 94, 96, 99, 102, 107, 111, 113, 115, 116, 120, 123, 124, 125, 129, 134, 139, 141, 146, 147, 150, 153, 157, 160, 163, 164, 166, 169, 172, 182, 184, 186, 189, 190, 191, 197, 198, 199, 201, 204, 208, 263, 268, 269, 271, 275, 280, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 316, 318, 319, 321, 322, 326, 328, 345, 360, 378, 379, 380, 381, 382, 383, 384, 387, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 410, 413, 415, 419, 421, 422, 423, 424, 434, 435, 437, 438, 439, 440, 441], "x27": [387, 393, 396, 403, 415, 433, 438, 439, 440, 441], "x64": 374, "x86": [374, 429], "x_line": 440, "x_max": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201, 396], "x_min": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201], "xarrai": [0, 5, 9, 10, 13, 14, 41, 42, 43, 44, 50, 54, 55, 82, 83, 90, 100, 105, 121, 126, 137, 148, 151, 155, 161, 187, 192, 195, 254, 268, 271, 272, 273, 274, 275, 280, 281, 290, 292, 293, 294, 295, 296, 297, 298, 300, 303, 305, 306, 307, 308, 309, 312, 314, 317, 318, 348, 349, 377, 379, 380, 381, 382, 383, 384, 387, 390, 393, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 415, 419, 421, 422, 424, 430, 431, 432, 435, 437, 438, 439, 440, 441, 442, 443], "xarri": [130, 205], "xlabel": 393, "xmax": [281, 305, 306, 307, 308, 309, 314, 387, 395, 399, 400, 401, 402, 403, 406, 410, 411, 412, 413, 421, 422, 439], "xmi": 77, "xmin": [281, 305, 306, 307, 308, 309, 314, 387, 395, 399, 400, 401, 402, 403, 406, 410, 411, 412, 413, 421, 422, 439], "xor": [421, 422], "xpandasindexpandasindex": [387, 403, 415, 433, 438, 439, 440, 441], "xr": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 79, 80, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 101, 102, 106, 110, 118, 119, 122, 123, 124, 129, 131, 132, 134, 138, 139, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 162, 163, 164, 181, 183, 184, 185, 188, 189, 190, 193, 195, 198, 199, 204, 206, 207, 208, 209, 210, 226, 228, 230, 233, 239, 244, 247, 249, 251, 253, 255, 269, 270, 280, 281, 286, 289, 291, 292, 299, 300, 301, 302, 303, 306, 307, 308, 309, 312, 316, 319, 321, 322, 324, 325, 326, 328, 335, 336, 337, 339, 343, 345, 346, 351, 352, 353, 354, 358, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 415, 420, 421, 422, 433, 437, 438, 439, 440], "xsection_alloc": 440, "xsection_distribut": 440, "xsection_k": 440, "xsection_layer_nr": 440, "xt3d": [86, 146, 398, 425], "xt3d_off": [86, 395, 398, 401, 408], "xt3d_option": [146, 439], "xt3d_rh": [86, 395, 398, 401, 408], "xtick": 393, "xu": [84, 85, 91, 92, 95, 96, 101, 102, 106, 110, 122, 123, 129, 134, 138, 139, 140, 141, 142, 149, 150, 156, 157, 162, 163, 183, 184, 188, 189, 193, 196, 198, 204, 208, 209, 210, 300, 396, 398, 402, 421, 424], "xugrid": [0, 82, 83, 90, 100, 121, 130, 148, 155, 161, 187, 192, 205, 268, 272, 273, 274, 275, 295, 298, 310, 396, 398, 402, 419, 421, 424, 431, 439], "xxxx": 0, "xy": [295, 298, 324, 439], "xy0": [287, 288], "xy1": [287, 288], "xy2": [287, 288], "xyz": 0, "y": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 81, 85, 86, 89, 92, 94, 96, 99, 102, 107, 111, 113, 115, 116, 120, 123, 124, 125, 129, 134, 139, 141, 146, 147, 150, 153, 157, 160, 163, 166, 169, 172, 182, 184, 186, 189, 190, 191, 197, 198, 199, 201, 204, 208, 263, 268, 269, 271, 275, 280, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 309, 316, 318, 319, 322, 329, 345, 360, 374, 378, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 399, 400, 401, 402, 403, 406, 408, 410, 413, 415, 419, 421, 422, 423, 424, 434, 435, 437, 438, 439, 440, 441], "y_max": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201], "y_min": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201], "ye": 403, "year": [0, 3, 41, 50, 54, 127, 140, 202, 208, 209, 210, 236, 239, 387, 398, 403], "yearli": [226, 403], "yet": [0, 79, 80, 87, 93, 97, 124, 131, 146, 152, 158, 195, 199, 206, 207, 300, 318, 405, 421, 424, 427, 440], "yield": [32, 181, 185, 187, 331, 332, 345, 398, 399, 403], "yincreas": [379, 380, 381, 382, 383, 384, 395, 399, 415], "ylabel": 393, "ymax": [281, 306, 307, 308, 309, 314, 387, 399, 400, 402, 403, 406, 410, 411, 412, 413, 421, 422, 439], "ymin": [281, 306, 307, 308, 309, 314, 387, 399, 400, 402, 403, 406, 410, 411, 412, 413, 421, 422, 439], "yml": 0, "you": [0, 5, 25, 26, 41, 42, 44, 45, 54, 55, 56, 59, 61, 68, 70, 72, 105, 127, 128, 135, 137, 138, 139, 140, 143, 202, 203, 251, 256, 260, 261, 262, 263, 287, 288, 297, 300, 319, 325, 356, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 387, 392, 393, 396, 402, 403, 404, 405, 409, 420, 421, 422, 425, 426, 429, 431, 437, 438, 439, 440, 441], "your": [0, 41, 45, 54, 56, 138, 139, 140, 143, 206, 207, 260, 263, 326, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 387, 393, 395, 396, 398, 400, 403, 405, 406, 425, 429, 431, 437, 438, 439, 441], "yourself": [300, 325, 372, 425, 431, 439], "ypandasindexpandasindex": [387, 403, 415, 433, 438, 439, 440, 441], "z": [0, 4, 6, 7, 11, 86, 146, 201, 287, 288, 322, 324, 378, 395, 398, 415], "zaadnoordijk": 164, "zarr": 0, "zb0": [287, 288], "zb1": [287, 288], "zb2": 288, "zbot": [111, 113, 115, 287, 288], "zbottom": [0, 287, 288], "zero": [0, 5, 18, 19, 27, 44, 55, 118, 132, 144, 146, 175, 195, 251, 331, 332, 339, 345, 357, 359, 401, 403, 408, 439], "zero_order_decai": [118, 132], "zerodivisionerror": 0, "zeros_lik": [393, 396, 398, 399, 402, 408], "zetaim": 118, "zheng": [11, 12], "zip": [0, 379, 380, 381, 382, 383, 384, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "zmax": 395, "zmin": 395, "zonal": [0, 293, 294], "zonal_aggreg": [293, 294], "zonal_aggregate_polygon": [0, 361], "zonal_aggregate_rast": [0, 361], "zone": [5, 22, 26, 195, 237, 293, 294, 421, 422, 434], "zone2d": 5, "zone_of_interest": 5, "zt0": [287, 288], "zt1": [287, 288], "zt2": 288, "ztop": [0, 111, 113, 115, 287, 288]}, "titles": ["Changelog", "Evaluate model output", "iMODFLOW", "imod.evaluate.calculate_gxg", "imod.evaluate.convert_pointwaterhead_freshwaterhead", "imod.evaluate.facebudget", "imod.evaluate.flow_velocity", "imod.evaluate.interpolate_value_boundaries", "imod.evaluate.intra_cell_boundary_conditions", "imod.evaluate.quiver_line", "imod.evaluate.quiver_linestring", "imod.evaluate.stability_constraint_advection", "imod.evaluate.stability_constraint_wel", "imod.evaluate.streamfunction_line", "imod.evaluate.streamfunction_linestring", "imod.flow.Bottom", "imod.flow.Boundary", "imod.flow.ConstantHead", "imod.flow.Drain", "imod.flow.EvapoTranspiration", "imod.flow.GeneralHeadBoundary", "imod.flow.HorizontalAnisotropy", "imod.flow.HorizontalFlowBarrier", "imod.flow.HorizontalHydraulicConductivity", "imod.flow.ImodflowModel", "imod.flow.ImodflowModel.create_time_discretization", "imod.flow.MetaSwap", "imod.flow.PreconditionedConjugateGradientSolver", "imod.flow.Recharge", "imod.flow.River", "imod.flow.SpecificStorage", "imod.flow.StartingHead", "imod.flow.StorageCoefficient", "imod.flow.Top", "imod.flow.VerticalAnisotropy", "imod.flow.VerticalHydraulicConductivity", "imod.flow.Well", "imod.formats.gen.read", "imod.formats.gen.read_ascii", "imod.formats.gen.write", "imod.formats.idf.header", "imod.formats.idf.open", "imod.formats.idf.open_dataset", "imod.formats.idf.open_subdomains", "imod.formats.idf.save", "imod.formats.ipf.read", "imod.formats.ipf.read_associated", "imod.formats.ipf.save", "imod.formats.ipf.write", "imod.formats.ipf.write_assoc", "imod.formats.prj.open_projectfile_data", "imod.formats.prj.read_projectfile", "imod.formats.prj.read_timfile", "imod.formats.rasterio.header", "imod.formats.rasterio.open", "imod.formats.rasterio.save", "imod.logging", "imod.logging.config", "imod.logging.config.LoggerType", "imod.logging.config.configure", "imod.logging.ilogger", "imod.logging.ilogger.ILogger", "imod.logging.logging_decorators", "imod.logging.logging_decorators.init_log_decorator", "imod.logging.logging_decorators.standard_log_decorator", "imod.logging.loglevel", "imod.logging.loglevel.LogLevel", "imod.logging.logurulogger", "imod.logging.logurulogger.LoguruLogger", "imod.logging.nulllogger", "imod.logging.nulllogger.NullLogger", "imod.logging.pythonlogger", "imod.logging.pythonlogger.PythonLogger", "imod.couplers.metamod.MetaMod", "imod.mf6.AdvectionCentral", "imod.mf6.AdvectionTVD", "imod.mf6.AdvectionUpstream", "imod.mf6.ApiPackage", "imod.mf6.Buoyancy", "imod.mf6.ConstantConcentration", "imod.mf6.ConstantHead", "imod.mf6.ConstantHead.clip_box", "imod.mf6.ConstantHead.from_imod5_data", "imod.mf6.ConstantHead.from_imod5_shd_data", "imod.mf6.ConstantHead.mask", "imod.mf6.ConstantHead.regrid_like", "imod.mf6.Dispersion", "imod.mf6.Drainage", "imod.mf6.Drainage.cleanup", "imod.mf6.Drainage.clip_box", "imod.mf6.Drainage.from_imod5_data", "imod.mf6.Drainage.mask", "imod.mf6.Drainage.regrid_like", "imod.mf6.Evapotranspiration", "imod.mf6.Evapotranspiration.clip_box", "imod.mf6.Evapotranspiration.mask", "imod.mf6.Evapotranspiration.regrid_like", "imod.mf6.GeneralHeadBoundary", "imod.mf6.GeneralHeadBoundary.cleanup", "imod.mf6.GeneralHeadBoundary.clip_box", "imod.mf6.GeneralHeadBoundary.from_imod5_data", "imod.mf6.GeneralHeadBoundary.mask", "imod.mf6.GeneralHeadBoundary.regrid_like", "imod.mf6.GroundwaterFlowModel", "imod.mf6.GroundwaterFlowModel.dump", "imod.mf6.GroundwaterFlowModel.from_imod5_data", "imod.mf6.GroundwaterFlowModel.mask_all_packages", "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "imod.mf6.GroundwaterTransportModel", "imod.mf6.GroundwaterTransportModel.dump", "imod.mf6.GroundwaterTransportModel.mask_all_packages", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierMultiplier", "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierResistance", "imod.mf6.HorizontalFlowBarrierResistance.clip_box", "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.ImmobileStorageTransfer", "imod.mf6.InitialConditions", "imod.mf6.InitialConditions.clip_box", "imod.mf6.InitialConditions.from_imod5_data", "imod.mf6.InitialConditions.mask", "imod.mf6.InitialConditions.regrid_like", "imod.mf6.LayeredWell", "imod.mf6.LayeredWell.clip_box", "imod.mf6.LayeredWell.from_imod5_cap_data", "imod.mf6.LayeredWell.from_imod5_data", "imod.mf6.LayeredWell.mask", "imod.mf6.LayeredWell.regrid_like", "imod.mf6.LayeredWell.to_mf6_pkg", "imod.mf6.MassSourceLoading", "imod.mf6.MobileStorageTransfer", "imod.mf6.Modflow6Simulation", "imod.mf6.Modflow6Simulation.clip_box", "imod.mf6.Modflow6Simulation.create_time_discretization", "imod.mf6.Modflow6Simulation.dump", "imod.mf6.Modflow6Simulation.from_imod5_data", "imod.mf6.Modflow6Simulation.open_concentration", "imod.mf6.Modflow6Simulation.open_flow_budget", "imod.mf6.Modflow6Simulation.open_head", "imod.mf6.Modflow6Simulation.open_transport_budget", "imod.mf6.Modflow6Simulation.regrid_like", "imod.mf6.Modflow6Simulation.run", "imod.mf6.Modflow6Simulation.split", "imod.mf6.Modflow6Simulation.write", "imod.mf6.NodePropertyFlow", "imod.mf6.NodePropertyFlow.clip_box", "imod.mf6.NodePropertyFlow.from_imod5_data", "imod.mf6.NodePropertyFlow.mask", "imod.mf6.NodePropertyFlow.regrid_like", "imod.mf6.OutputControl", "imod.mf6.Recharge", "imod.mf6.Recharge.clip_box", "imod.mf6.Recharge.from_imod5_cap_data", "imod.mf6.Recharge.from_imod5_data", "imod.mf6.Recharge.mask", "imod.mf6.Recharge.regrid_like", "imod.mf6.River", "imod.mf6.River.cleanup", "imod.mf6.River.clip_box", "imod.mf6.River.from_imod5_data", "imod.mf6.River.mask", "imod.mf6.River.regrid_like", "imod.mf6.River.split_conductance", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.Solution", "imod.mf6.SolutionPresetComplex", "imod.mf6.SolutionPresetModerate", "imod.mf6.SolutionPresetSimple", "imod.mf6.SourceSinkMixing", "imod.mf6.SourceSinkMixing.from_flow_model", "imod.mf6.SpecificStorage", "imod.mf6.SpecificStorage.clip_box", "imod.mf6.SpecificStorage.mask", "imod.mf6.SpecificStorage.regrid_like", "imod.mf6.StorageCoefficient", "imod.mf6.StorageCoefficient.clip_box", "imod.mf6.StorageCoefficient.from_imod5_data", "imod.mf6.StorageCoefficient.mask", "imod.mf6.StorageCoefficient.regrid_like", "imod.mf6.StructuredDiscretization", "imod.mf6.StructuredDiscretization.clip_box", "imod.mf6.StructuredDiscretization.from_imod5_data", "imod.mf6.StructuredDiscretization.regrid_like", "imod.mf6.TimeDiscretization", "imod.mf6.UnsaturatedZoneFlow", "imod.mf6.VerticesDiscretization", "imod.mf6.VerticesDiscretization.clip_box", "imod.mf6.VerticesDiscretization.regrid_like", "imod.mf6.Well", "imod.mf6.Well.cleanup", "imod.mf6.Well.clip_box", "imod.mf6.Well.from_imod5_data", "imod.mf6.Well.mask", "imod.mf6.Well.regrid_like", "imod.mf6.Well.to_mf6_pkg", "imod.mf6.WellDisStructured", "imod.mf6.WellDisVertices", "imod.mf6.open_cbc", "imod.mf6.open_dvs", "imod.mf6.open_hds", "imod.mf6.read_cbc_headers", "imod.mf6.regrid.ConstantHeadRegridMethod", "imod.mf6.regrid.DiscretizationRegridMethod", "imod.mf6.regrid.DispersionRegridMethod", "imod.mf6.regrid.DrainageRegridMethod", "imod.mf6.regrid.EmptyRegridMethod", "imod.mf6.regrid.EvapotranspirationRegridMethod", "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "imod.mf6.regrid.InitialConditionsRegridMethod", "imod.mf6.regrid.MobileStorageTransferRegridMethod", "imod.mf6.regrid.NodePropertyFlowRegridMethod", "imod.mf6.regrid.RechargeRegridMethod", "imod.mf6.regrid.RiverRegridMethod", "imod.mf6.regrid.SpecificStorageRegridMethod", "imod.mf6.regrid.StorageCoefficientRegridMethod", "imod.msw.AnnualCropFactors", "imod.msw.CouplerMapping", "imod.msw.EvapotranspirationMapping", "imod.msw.EvapotranspirationMapping.from_imod5_data", "imod.msw.GridData", "imod.msw.GridData.from_imod5_data", "imod.msw.IdfMapping", "imod.msw.Infiltration", "imod.msw.Infiltration.from_imod5_data", "imod.msw.InitialConditionsEquilibrium", "imod.msw.InitialConditionsPercolation", "imod.msw.InitialConditionsRootzonePressureHead", "imod.msw.InitialConditionsSavedState", "imod.msw.LanduseOptions", "imod.msw.MetaSwapModel", "imod.msw.MetaSwapModel.from_imod5_data", "imod.msw.MetaSwapModel.regrid_like", "imod.msw.MetaSwapModel.write", "imod.msw.MeteoGrid", "imod.msw.MeteoGridCopy", "imod.msw.MeteoGridCopy.from_imod5_data", "imod.msw.Ponding", "imod.msw.Ponding.from_imod5_data", "imod.msw.PrecipitationMapping", "imod.msw.PrecipitationMapping.from_imod5_data", "imod.msw.ScalingFactors", "imod.msw.ScalingFactors.from_imod5_data", "imod.msw.Sprinkling", "imod.msw.Sprinkling.from_imod5_data", "imod.msw.TimeOutputControl", "imod.msw.VariableOutputControl", "imod.prepare.ALLOCATION_OPTION", "imod.prepare.DISTRIBUTING_OPTION", "imod.prepare.LayerRegridder", "imod.prepare.Regridder", "imod.prepare.SimulationAllocationOptions", "imod.prepare.SimulationDistributingOptions", "imod.prepare.Voxelizer", "imod.prepare.allocate_drn_cells", "imod.prepare.allocate_ghb_cells", "imod.prepare.allocate_rch_cells", "imod.prepare.allocate_riv_cells", "imod.prepare.assign_wells", "imod.prepare.c_leakage", "imod.prepare.c_radial", "imod.prepare.celltable", "imod.prepare.cleanup_drn", "imod.prepare.cleanup_ghb", "imod.prepare.cleanup_riv", "imod.prepare.cleanup_wel", "imod.prepare.create_layered_top", "imod.prepare.distribute_drn_conductance", "imod.prepare.distribute_ghb_conductance", "imod.prepare.distribute_riv_conductance", "imod.prepare.fill", "imod.prepare.gdal_rasterize", "imod.prepare.get_lower_active_grid_cells", "imod.prepare.get_lower_active_layer_number", "imod.prepare.get_upper_active_grid_cells", "imod.prepare.get_upper_active_layer_number", "imod.prepare.laplace_interpolate", "imod.prepare.linestring_to_square_zpolygons", "imod.prepare.linestring_to_trapezoid_zpolygons", "imod.prepare.polygonize", "imod.prepare.rasterize", "imod.prepare.rasterize_celltable", "imod.prepare.reproject", "imod.prepare.zonal_aggregate_polygons", "imod.prepare.zonal_aggregate_raster", "imod.select.active_grid_boundary_xy", "imod.select.cross_section_line", "imod.select.cross_section_linestring", "imod.select.grid_boundary_xy", "imod.select.points_in_bounds", "imod.select.points_indices", "imod.select.points_set_values", "imod.select.points_values", "imod.select.upper_active_layer", "imod.util.cd", "imod.util.coord_reference", "imod.util.empty_2d", "imod.util.empty_2d_transient", "imod.util.empty_3d", "imod.util.empty_3d_transient", "imod.util.from_mdal_compliant_ugrid2d", "imod.util.ignore_warnings", "imod.util.mdal_compliant_ugrid2d", "imod.util.print_if_error", "imod.util.spatial_reference", "imod.util.to_datetime", "imod.util.to_ugrid2d", "imod.util.transform", "imod.util.where", "imod.visualize.GridAnimation3D", "imod.visualize.StaticGridAnimation3D", "imod.visualize.cross_section", "imod.visualize.grid_3d", "imod.visualize.imshow_topview", "imod.visualize.line_3d", "imod.visualize.plot_map", "imod.visualize.quiver", "imod.visualize.read_imod_legend", "imod.visualize.streamfunction", "imod.visualize.waterbalance_barchart", "imod.wq.AdvectionFiniteDifference", "imod.wq.AdvectionHybridMOC", "imod.wq.AdvectionMOC", "imod.wq.AdvectionModifiedMOC", "imod.wq.AdvectionTVD", "imod.wq.BasicFlow", "imod.wq.BasicTransport", "imod.wq.ConstantHead", "imod.wq.Dispersion", "imod.wq.Drainage", "imod.wq.EvapotranspirationHighestActive", "imod.wq.EvapotranspirationLayers", "imod.wq.EvapotranspirationTopLayer", "imod.wq.GeneralHeadBoundary", "imod.wq.GeneralizedConjugateGradientSolver", "imod.wq.LayerPropertyFlow", "imod.wq.MassLoading", "imod.wq.OutputControl", "imod.wq.ParallelKrylovFlowSolver", "imod.wq.ParallelKrylovTransportSolver", "imod.wq.PreconditionedConjugateGradientSolver", "imod.wq.RechargeHighestActive", "imod.wq.RechargeLayers", "imod.wq.RechargeTopLayer", "imod.wq.River", "imod.wq.SeawatModel", "imod.wq.SeawatModel.create_time_discretization", "imod.wq.TimeDiscretization", "imod.wq.TimeVaryingConstantConcentration", "imod.wq.VariableDensityFlow", "imod.wq.Well", "API Reference", "Input/output", "Logging", "MetaMod", "MODFLOW6", "MetaSWAP", "Prepare model input", "Select points and cross sections", "Utilities", "Visualize", "iMOD-WQ", "Debugging Continuous Integration", "Contributing Code", "Docker build image", "Building documentation and examples", "Developing examples", "Developing", "How to release a new version", "Elder", "Freshwater Lens", "Henry", "Hydrocoin", "Saltwater Pocket", "Vertical Interface", "iMOD-WQ", "Computation times", "Model Creation", "iMODFLOW", "Computation times", "Examples", "MetaSWAP", "Coupled MetaSWAP - Modflow6 model", "Reading existing MetaSWAP input", "Computation times", "Henry", "Circle", "Circle partitioned", "Freshwater lens (circle)", "Different ways to regrid models", "TWRI", "1D Solute Transport Benchmarks", "Example models", "Regional model", "Partitioning a regional model", "MODFLOW6", "Lake package example", "Computation times", "Transport 2d example", "Prepare", "Head point interpolation", "Polygonize raster", "Rasterize shapefiles", "Reproject data", "Computation times", "Flow velocities and streamlines", "Visualization", "Plot maps", "Computation times", "General Questions", "Data In/Out", "How do I \u2026", "Data modification", "Plot a timeseries for a single cell", "Unstructured", "iMOD5 backwards compatibility", "FAQ", "Known Issues", "Groundwater Modeling with iMOD", "Installing Python and packages", "iMOD Python: make massive MODFLOW models", "Installing", "Computation times", "Raster data and xarray", "Vector data and Geopandas", "Time series data and Pandas", "Unstructured Grids", "Lazy evaluation", "Model time discretization", "Regridding", "Topsystem: from 2D map to 3D model", "Data cleanup", "User Guide", "Computation times"], "titleterms": {"0": 0, "01": 0, "02": 0, "03": 0, "04": 0, "05": 0, "06": 0, "07": 0, "08": 0, "09": 0, "0rc0": 0, "1": [0, 413], "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "1d": 401, "2": [0, 413], "20": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 0, "2024": 0, "21": 0, "22": 0, "23": 0, "25": 0, "26": 0, "29": 0, "2d": [408, 440], "3": [0, 413], "3d": 440, "4": 0, "5": 0, "6": [0, 427], "7": 0, "8": 0, "9": 0, "A": [429, 439], "If": [421, 422], "In": [420, 421], "The": 441, "active_grid_boundary_xi": 295, "ad": [0, 403], "add": 398, "advectioncentr": 74, "advectionfinitediffer": 330, "advectionhybridmoc": 331, "advectionmoc": 332, "advectionmodifiedmoc": 333, "advectiontvd": [75, 334], "advectionupstream": 76, "agon": 429, "alloc": 440, "allocate_drn_cel": 264, "allocate_ghb_cel": 265, "allocate_rch_cel": 266, "allocate_riv_cel": 267, "allocation_opt": 257, "along": [421, 422], "an": [393, 421, 422, 429], "anaconda": 429, "annualcropfactor": 226, "api": 361, "apipackag": 77, "ar": 428, "arithmet": [421, 422], "arrai": [421, 422], "assign": [398, 403], "assign_wel": 268, "attach": 403, "autom": 373, "background": 429, "backward": [425, 427], "barrier": 387, "basic": 438, "basicflow": 335, "basictransport": 336, "benchmark": 401, "beta": 431, "bit": 429, "bottom": 15, "boundari": [16, 379, 380, 382, 383, 384, 387, 438, 439], "bug": 377, "build": [372, 374, 375, 379, 380, 381, 382, 383, 384, 387], "buoyanc": [78, 398], "c_leakag": 269, "c_radial": 270, "calcul": 415, "calculate_gxg": 3, "cd": 304, "cell": [421, 423, 424, 440], "cellsiz": [413, 421, 422], "celltabl": 271, "central": 387, "chang": [0, 421, 422], "changelog": 0, "chd": 403, "chunk": 437, "circl": [396, 397, 398], "clean": 441, "cleanup": [88, 98, 159, 200, 441], "cleanup_drn": 272, "cleanup_ghb": 273, "cleanup_riv": 274, "cleanup_wel": 275, "clip_box": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 160, 166, 169, 172, 182, 186, 191, 197, 201], "code": 373, "coeffici": 428, "comparison": 439, "compat": [425, 427], "comput": [386, 389, 394, 407, 414, 418, 432, 437, 443], "conda": 431, "condit": [379, 380, 382, 383, 384, 387, 403, 421, 422, 438, 439], "conduct": [403, 439, 440], "config": [57, 58, 59], "configur": 59, "conflict": 429, "constant": 403, "constantconcentr": 79, "constanthead": [17, 80, 81, 82, 83, 84, 85, 337], "constantheadregridmethod": 212, "contain": 372, "continu": 372, "contribut": 373, "control": [373, 403], "convers": 434, "convert": [420, 421], "convert_pointwaterhead_freshwaterhead": 4, "coord_refer": 305, "coordin": [398, 400, 406, 433], "coupl": 392, "coupler": 73, "couplermap": 227, "cr": 433, "creat": [372, 393, 396, 398, 400, 406, 421, 422], "create_layered_top": 276, "create_time_discret": [25, 135, 356], "creation": 387, "cross": 368, "cross_sect": 321, "cross_section_lin": 296, "cross_section_linestr": 297, "dask": [421, 422], "data": [403, 413, 419, 420, 421, 422, 433, 434, 435, 440, 441], "dataarrai": [400, 406, 420, 421], "dataset": [413, 420, 421, 422, 424], "date": 403, "debug": 372, "default": 439, "delai": 437, "deltaforg": 431, "depend": [419, 429, 431], "deprec": 0, "develop": [376, 377, 429, 431], "di": 403, "differ": [399, 419], "dimens": 433, "discret": [365, 379, 380, 381, 382, 384, 387, 403, 438], "discretizationregridmethod": 213, "dispers": [86, 338], "dispersionregridmethod": 214, "distribut": 440, "distribute_drn_conduct": 277, "distribute_ghb_conduct": 278, "distribute_riv_conduct": 279, "distributing_opt": 258, "ditch": 387, "do": 421, "docker": [372, 374], "dockerfil": 374, "document": 375, "domain": [396, 413, 439], "dr": 431, "drain": 18, "drainag": [87, 88, 89, 90, 91, 92, 339, 403], "drainageregridmethod": 215, "drn": 403, "dump": [104, 109, 136], "e": [421, 422], "edg": 403, "elder": 379, "els": [421, 422], "empti": [421, 422], "empty_2d": 306, "empty_2d_transi": 307, "empty_3d": 308, "empty_3d_transi": 309, "emptyregridmethod": 216, "environ": 429, "evalu": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 421, 422, 437], "evapotranspir": [19, 93, 94, 95, 96], "evapotranspirationhighestact": 340, "evapotranspirationlay": 341, "evapotranspirationmap": [228, 229], "evapotranspirationregridmethod": 217, "evapotranspirationtoplay": 342, "exampl": [375, 376, 390, 393, 402, 406, 408, 440], "exist": [393, 441], "experienc": 431, "extent": [421, 422], "extra": 438, "extract": 403, "facebudget": 5, "factor": 428, "faq": 426, "file": [393, 420, 421, 425, 437], "fill": [280, 421, 422, 424], "final": 439, "fix": 0, "flopi": 419, "flow": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 365, 371, 387, 398, 403, 415], "flow_veloc": 6, "forc": [421, 422], "format": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 433], "freshwat": [380, 398], "from": [419, 421, 422, 424, 440], "from_flow_model": 180, "from_imod5_cap_data": [126, 154], "from_imod5_data": [82, 90, 100, 105, 121, 127, 137, 148, 155, 161, 173, 187, 192, 202, 229, 231, 234, 241, 246, 248, 250, 252, 254], "from_imod5_shd_data": 83, "from_mdal_compliant_ugrid2d": 310, "function": 415, "g": [421, 422], "gdal_raster": 281, "gen": [37, 38, 39], "gener": [419, 421, 424, 428], "generalheadboundari": [20, 97, 98, 99, 100, 101, 102, 343], "generalheadboundaryregridmethod": 218, "generalizedconjugategradientsolv": 344, "geopanda": 434, "get": [421, 422], "get_lower_active_grid_cel": 282, "get_lower_active_layer_numb": 283, "get_upper_active_grid_cel": 284, "get_upper_active_layer_numb": 285, "grid": [2, 400, 406, 436], "grid_3d": 322, "grid_boundary_xi": 298, "gridanimation3d": 319, "griddata": [230, 231], "groundwat": 428, "groundwaterflowmodel": [103, 104, 105, 106, 107], "groundwatertransportmodel": [108, 109, 110], "guid": 442, "head": [403, 410, 421, 423, 424], "header": [40, 53], "henri": [381, 395], "histogram": 439, "horizont": 387, "horizontalanisotropi": 21, "horizontalflowbarri": 22, "horizontalflowbarrierhydrauliccharacterist": [111, 112], "horizontalflowbarriermultipli": [113, 114], "horizontalflowbarrierresist": [115, 116, 117], "horizontalhydraulicconduct": 23, "how": [374, 378, 419, 421], "hydraul": 403, "hydrocoin": 382, "hydrogeologi": [382, 387], "i": [419, 421, 437, 439], "ic": 403, "icelltyp": 403, "idf": [40, 41, 42, 43, 44, 420, 421], "idfmap": 232, "ignore_warn": 311, "ilogg": [60, 61], "imag": [372, 374], "immobilestoragetransf": 118, "imod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 371, 385, 419, 428, 429, 430, 431], "imod5": [425, 427], "imodflow": [2, 388], "imodflowmodel": [24, 25], "import": [403, 420, 421], "imshow_topview": 323, "increas": [421, 422], "infiltr": [233, 234, 428], "inform": 403, "init_log_decor": 63, "initi": [379, 380, 382, 383, 384, 387, 403], "initialcondit": [119, 120, 121, 122, 123], "initialconditionsequilibrium": 235, "initialconditionspercol": 236, "initialconditionsregridmethod": 219, "initialconditionsrootzonepressurehead": 237, "initialconditionssavedst": 238, "inp": 393, "input": [362, 367, 393, 433, 434], "insid": 372, "instal": [429, 431], "integr": 372, "interfac": 384, "interpol": [403, 410, 421, 422, 424], "interpolate_value_boundari": 7, "intra_cell_boundary_condit": 8, "ipf": [45, 46, 47, 48, 49, 420, 421], "issu": [425, 427], "known": [425, 427], "lake": 406, "landuseopt": 239, "laplace_interpol": 286, "larg": 419, "latest": 431, "layer": [421, 422, 423, 424], "layeredwel": [124, 125, 126, 127, 128, 129, 130], "layerpropertyflow": 345, "layerregridd": 259, "layout": 437, "lazi": 437, "len": [380, 398], "line_3d": 324, "linestring_to_square_zpolygon": 287, "linestring_to_trapezoid_zpolygon": 288, "load": [403, 421, 422], "local": 372, "locat": 435, "log": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 363], "loggertyp": 58, "logging_decor": [62, 63, 64], "loglevel": [65, 66], "logurulogg": [67, 68], "make": [420, 421, 430], "map": [417, 440], "mask": [84, 91, 95, 101, 122, 128, 149, 156, 162, 183, 188, 203], "mask_all_packag": [106, 110], "massiv": 430, "massload": 346, "masssourceload": 131, "mdal_compliant_ugrid2d": 312, "memori": [421, 422, 437], "mesh": [396, 398, 421, 424], "metamod": [73, 364], "metaswap": [26, 366, 391, 392, 393, 425], "metaswapmodel": [240, 241, 242, 243], "meteogrid": 244, "meteogridcopi": [245, 246], "method": [365, 439, 441], "mf6": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "miniconda": 429, "miniforg": 429, "mobilestoragetransf": 132, "mobilestoragetransferregridmethod": 220, "model": [1, 2, 365, 367, 371, 387, 392, 395, 396, 398, 399, 400, 402, 403, 404, 406, 419, 428, 430, 438, 440, 441], "modflow": [427, 430, 437], "modflow6": [365, 392, 405, 425, 428, 440, 441], "modflow6simul": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "modif": [421, 422], "more": 433, "msw": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "multipl": [420, 421], "netcdf": [420, 421, 433], "new": [378, 413, 431, 441], "nodata": [421, 422, 424], "node": 403, "nodepropertyflow": [146, 147, 148, 149, 150], "nodepropertyflowregridmethod": 221, "non": 439, "note": [425, 439], "npf": 403, "nulllogg": [69, 70], "numpi": [421, 422], "object": 365, "obtain": [372, 439], "oc": 403, "one": [421, 423, 424], "onli": 413, "open": [41, 54, 395, 396, 398, 400, 406], "open_cbc": 208, "open_concentr": 138, "open_dataset": 42, "open_dv": 209, "open_flow_budget": 139, "open_hd": 210, "open_head": 140, "open_projectfile_data": 50, "open_subdomain": 43, "open_transport_budget": 141, "option": 440, "other": 433, "out": [420, 421], "outer": 387, "output": [1, 362, 365, 398, 403, 433, 434], "outputcontrol": [151, 347], "over": [421, 422], "overview": 440, "packag": [2, 365, 403, 406, 429, 439, 440], "pain": 429, "panda": 435, "parallelkrylovflowsolv": 348, "parallelkrylovtransportsolv": 349, "paramet": 398, "part": [421, 422], "partit": [397, 404], "period": 387, "pip": 431, "pipelin": 372, "pitfal": 437, "pixi": [374, 431], "plot": [415, 417, 421, 423, 424], "plot_map": 325, "pocket": 383, "point": [368, 403, 410, 413, 421, 422, 424, 435], "points_in_bound": 299, "points_indic": 300, "points_set_valu": 301, "points_valu": 302, "polygon": [289, 411, 421, 422], "pond": [247, 248], "postprocess": 425, "precipitationmap": [249, 250], "preconditionedconjugategradientsolv": [27, 350], "prepar": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 367, 409], "prepare_wel_for_mf6": 107, "print_if_error": 313, "prj": [50, 51, 52], "properti": [403, 421, 422], "push": 374, "python": [419, 427, 429, 430, 431], "pythonlogg": [71, 72], "qgi": [420, 421], "question": 419, "quiver": [326, 415], "quiver_lin": 9, "quiver_linestr": 10, "raster": [290, 411, 412, 413, 421, 422, 433, 434], "rasterio": [53, 54, 55], "rasterize_cellt": 291, "rch": 403, "read": [37, 45, 365, 393], "read_ascii": 38, "read_associ": 46, "read_cbc_head": 211, "read_imod_legend": 327, "read_projectfil": 51, "read_timfil": 52, "readabl": [420, 421], "recharg": [28, 152, 153, 154, 155, 156, 157, 398, 403], "rechargehighestact": 351, "rechargelay": 352, "rechargeregridmethod": 222, "rechargetoplay": 353, "refer": [361, 433], "region": [403, 404], "regrid": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 365, 399, 439], "regrid_lik": [85, 92, 96, 102, 123, 129, 142, 150, 157, 163, 184, 189, 193, 198, 204, 242], "regridd": 260, "regular": 431, "releas": [378, 431], "remov": 0, "report": 377, "reproject": [292, 413], "resampl": 413, "resolut": [421, 422], "result": [379, 380, 383, 395, 396, 398, 400, 403, 406], "review": 373, "rise": 387, "riv": 403, "river": [29, 158, 159, 160, 161, 162, 163, 164, 354, 403, 428, 440], "riverregridmethod": 223, "run": [143, 372, 379, 380, 381, 382, 383, 384, 387, 395, 396, 398, 400, 403, 406], "saltwat": 383, "save": [44, 47, 55], "scalingfactor": [251, 252], "seawatmodel": [355, 356], "section": 368, "select": [295, 296, 297, 298, 299, 300, 301, 302, 303, 368, 421, 422, 424], "seri": 435, "set": [365, 371, 403, 429, 438], "shapefil": 412, "simul": [398, 403, 441], "simulationallocationopt": 261, "simulationdistributingopt": 262, "singl": [420, 421, 422, 423, 424], "singlelayerhorizontalflowbarrierhydrauliccharacterist": [165, 166, 167], "singlelayerhorizontalflowbarriermultipli": [168, 169, 170], "singlelayerhorizontalflowbarrierresist": [171, 172, 173, 174], "size": 437, "slice": 396, "smooth": [421, 422], "solut": [175, 401], "solutionpresetcomplex": 176, "solutionpresetmoder": 177, "solutionpresetsimpl": 178, "solver": [2, 403], "sourcesinkmix": [179, 180], "spatial_refer": 314, "specif": [413, 428], "specifi": 438, "specificstorag": [30, 181, 182, 183, 184], "specificstorageregridmethod": 224, "split": 144, "split_conduct": 164, "sprinkl": [253, 254], "stability_constraint_advect": 11, "stability_constraint_wel": 12, "standard_log_decor": 64, "start": 403, "startinghead": 31, "state": 403, "staticgridanimation3d": 320, "statist": [421, 422], "steadi": 403, "step": 372, "sto": 403, "stor": 428, "storag": [403, 428], "storagecoeffici": [32, 185, 186, 187, 188, 189], "storagecoefficientregridmethod": 225, "streamfunct": 328, "streamfunction_lin": 13, "streamfunction_linestr": 14, "streamlin": 415, "structur": [419, 420, 421], "structureddiscret": [190, 191, 192, 193], "style": 373, "sum": [421, 422], "summari": [421, 422], "support": 419, "system": 433, "test": 373, "time": [386, 389, 394, 403, 407, 414, 418, 421, 422, 423, 424, 432, 435, 438, 443], "timediscret": [194, 357], "timeoutputcontrol": 255, "timeseri": [421, 423, 424, 435], "timevaryingconstantconcentr": 358, "tl": 431, "to_datetim": 315, "to_mf6_pkg": [112, 114, 117, 130, 167, 170, 174, 205], "to_ugrid2d": 316, "top": 33, "topsystem": 440, "transform": 317, "transient": 403, "transport": [365, 371, 398, 401, 408, 439], "two": 433, "twri": 400, "ugrid": [420, 421], "ugriddataarrai": 396, "unsaturatedzoneflow": 195, "unstructur": [421, 424, 436], "unsupport": 439, "up": 429, "updat": [374, 441], "upper_active_lay": 303, "us": [428, 439], "user": 442, "util": [304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 369], "valu": [421, 422], "variabl": [420, 421, 422], "variabledensityflow": 359, "variableoutputcontrol": 256, "vector": [413, 421, 422, 424, 434], "veloc": 415, "version": [373, 374, 378, 427, 429, 431], "vertic": 384, "verticalanisotropi": 34, "verticalhydraulicconduct": 35, "verticesdiscret": [196, 197, 198], "visual": [319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 370, 395, 396, 398, 400, 403, 406, 416, 425], "visualis": [379, 380, 383], "voxel": 263, "wai": [399, 431], "waterbalance_barchart": 329, "well": [36, 199, 200, 201, 202, 203, 204, 205, 360, 387], "welldisstructur": 206, "welldisvertic": 207, "what": 428, "where": 318, "which": 431, "without": [429, 441], "wq": [330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 371, 385], "write": [39, 48, 145, 243, 396, 400, 441], "write_assoc": 49, "x": 433, "xarrai": 433, "y": 433, "yield": 428, "zonal": [421, 422], "zonal_aggregate_polygon": 293, "zonal_aggregate_rast": 294}})