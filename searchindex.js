Search.setIndex({"alltitles": {"1. Resample to a new cellsize": [[374, "resample-to-a-new-cellsize"]], "1D Solute Transport Benchmarks": [[362, null]], "2. Only reproject": [[374, "only-reproject"]], "3. Reproject and resample to a specific domain": [[374, "reproject-and-resample-to-a-specific-domain"]], "A bit of background": [[389, "a-bit-of-background"]], "A note on regridding conductivity": [[399, "a-note-on-regridding-conductivity"]], "A note on regridding transport": [[399, "a-note-on-regridding-transport"]], "API Reference": [[322, null]], "Add flow model to simulation": [[359, "add-flow-model-to-simulation"]], "Add transport model to simulation": [[359, "add-transport-model-to-simulation"]], "Added": [[0, "added"], [0, "id5"], [0, "id8"], [0, "id12"], [0, "id16"], [0, "id20"], [0, "id25"], [0, "id33"], [0, "id38"], [0, "id45"], [0, "id49"], [0, "id51"], [0, "id54"], [0, "id57"], [0, "id61"], [0, "id66"], [0, "id70"], [0, "id75"], [0, "id80"], [0, "id84"], [0, "id87"], [0, "id91"], [0, "id94"], [0, "id97"], [0, "id101"], [0, "id112"]], "Adding information to the CHD package": [[364, "adding-information-to-the-chd-package"]], "Adding information to the DIS package": [[364, "adding-information-to-the-dis-package"]], "Adding information to the DRN package": [[364, "adding-information-to-the-drn-package"]], "Adding information to the IC package": [[364, "adding-information-to-the-ic-package"]], "Adding information to the NPF package": [[364, "adding-information-to-the-npf-package"]], "Adding information to the OC package": [[364, "adding-information-to-the-oc-package"]], "Adding information to the RCH package": [[364, "adding-information-to-the-rch-package"]], "Adding information to the RIV package": [[364, "adding-information-to-the-riv-package"]], "Adding information to the STO package": [[364, "adding-information-to-the-sto-package"]], "Allocate river cells": [[400, "allocate-river-cells"]], "Anaconda, Miniconda, Miniforge": [[389, "anaconda-miniconda-miniforge"]], "Arithmetic": [[382, "arithmetic"], [383, "arithmetic"]], "Assign coordinates to output": [[359, "assign-coordinates-to-output"]], "Assign dates to head": [[364, "assign-dates-to-head"]], "Assign time discretization": [[364, "assign-time-discretization"]], "Attach the model information to a simulation": [[364, "attach-the-model-information-to-a-simulation"]], "Automated testing": [[334, "automated-testing"]], "Basics": [[398, "basics"]], "Boundary Conditions": [[340, "boundary-conditions"], [341, "boundary-conditions"], [343, "boundary-conditions"], [344, "boundary-conditions"], [345, "boundary-conditions"], [398, "boundary-conditions"]], "Boundary conditions": [[348, "boundary-conditions"]], "Build": [[340, "build"], [341, "build"], [342, "build"], [343, "build"], [344, "build"], [345, "build"], [348, "build"]], "Building documentation and examples": [[336, null]], "Buoyancy": [[359, "buoyancy"]], "Calculating flow velocity": [[376, "calculating-flow-velocity"]], "Change cellsize (and extent)": [[382, "change-cellsize-and-extent"], [383, "change-cellsize-and-extent"]], "Change time resolution": [[382, "change-time-resolution"], [383, "change-time-resolution"]], "Changed": [[0, "changed"], [0, "id4"], [0, "id9"], [0, "id13"], [0, "id18"], [0, "id21"], [0, "id28"], [0, "id32"], [0, "id34"], [0, "id37"], [0, "id41"], [0, "id44"], [0, "id47"], [0, "id59"], [0, "id65"], [0, "id69"], [0, "id76"], [0, "id79"], [0, "id83"], [0, "id88"], [0, "id92"], [0, "id98"], [0, "id106"], [0, "id111"]], "Changelog": [[0, null]], "Chunk size and memory layout": [[397, "chunk-size-and-memory-layout"]], "Circle": [[357, null]], "Circle partitioned": [[358, null]], "Cleaning data without a MODFLOW6 simulation": [[401, "cleaning-data-without-a-modflow6-simulation"]], "Code review": [[334, "code-review"]], "Code style": [[334, "code-style"]], "Comparison with histograms": [[399, "comparison-with-histograms"]], "Computation times": [[347, null], [350, null], [355, null], [368, null], [375, null], [379, null], [392, null], [403, null]], "Conditional evaluation": [[382, "conditional-evaluation"], [383, "conditional-evaluation"]], "Constant head edge": [[364, "constant-head-edge"]], "Constant head package - CHD": [[364, "constant-head-package-chd"]], "Contributing Code": [[334, null]], "Conversion to raster": [[394, "conversion-to-raster"]], "Convert structured data to UGRID netCDF": [[381, "convert-structured-data-to-ugrid-netcdf"], [382, "convert-structured-data-to-ugrid-netcdf"]], "Coordinate reference systems (CRS)": [[393, "coordinate-reference-systems-crs"]], "Coupled MetaSWAP - Modflow6 model": [[353, null]], "Create DataArrays": [[361, "create-dataarrays"], [367, "create-dataarrays"]], "Create UgridDataArray": [[357, "create-ugriddataarray"]], "Create a mesh": [[357, "create-a-mesh"], [359, "create-a-mesh"]], "Create an empty raster": [[382, "create-an-empty-raster"], [383, "create-an-empty-raster"]], "Create grid coordinates": [[361, "create-grid-coordinates"], [367, "create-grid-coordinates"]], "Create the container": [[333, "create-the-container"]], "Creating an example file": [[354, "creating-an-example-file"]], "Data In/Out": [[381, null], [382, "data-in-out"]], "Data cleanup": [[401, null]], "Data modification": [[382, "data-modification"], [383, null]], "Data structures": [[380, "data-structures"]], "Debugging Continuous Integration": [[333, null]], "Delayed computation and (i)MODFLOW files": [[397, "delayed-computation-and-i-modflow-files"]], "Dependencies": [[380, "dependencies"], [391, "dependencies"]], "Dependency conflicts": [[389, "dependency-conflicts"]], "Deprecated": [[0, "deprecated"], [0, "id105"], [0, "id110"]], "Developing": [[338, null]], "Developing examples": [[337, null]], "Different ways to regrid models": [[360, null]], "Discretization": [[326, "discretization"], [340, "discretization"], [341, "discretization"], [342, "discretization"], [343, "discretization"], [345, "discretization"], [348, "discretization"]], "Distribute conductance": [[400, "distribute-conductance"]], "Docker build image": [[335, null]], "Dockerfile": [[335, "dockerfile"]], "Drainage package - DRN": [[364, "drainage-package-drn"]], "Elder": [[340, null]], "Evaluate model output": [[1, null]], "Example data": [[400, "example-data"]], "Example models": [[363, null]], "Examples": [[351, null]], "Experienced": [[391, "experienced"]], "Extract head at points": [[364, "extract-head-at-points"]], "FAQ": [[386, null]], "Fill/Interpolate nodata": [[382, "fill-interpolate-nodata"], [382, "id3"], [383, "fill-interpolate-nodata"], [385, "fill-interpolate-nodata"]], "Fixed": [[0, "fixed"], [0, "id3"], [0, "id7"], [0, "id10"], [0, "id14"], [0, "id17"], [0, "id22"], [0, "id24"], [0, "id27"], [0, "id31"], [0, "id36"], [0, "id42"], [0, "id48"], [0, "id52"], [0, "id55"], [0, "id58"], [0, "id62"], [0, "id64"], [0, "id68"], [0, "id72"], [0, "id74"], [0, "id81"], [0, "id85"], [0, "id89"], [0, "id95"], [0, "id102"], [0, "id107"], [0, "id113"]], "Flow": [[332, "flow"]], "Flow Packages": [[326, "flow-packages"]], "Flow velocities and streamlines": [[376, null]], "Force loading into memory / dask array to numpy array": [[382, "force-loading-into-memory-dask-array-to-numpy-array"], [383, "force-loading-into-memory-dask-array-to-numpy-array"]], "Freshwater Lens": [[341, null]], "Freshwater lens (circle)": [[359, null]], "General": [[388, "general"]], "General Questions": [[380, null]], "Generate a mesh": [[382, "generate-a-mesh"], [385, "generate-a-mesh"]], "Get a single value (e.g. a summary statistic)": [[382, "get-a-single-value-e-g-a-summary-statistic"], [383, "get-a-single-value-e-g-a-summary-statistic"]], "Grid": [[2, "grid"]], "Groundwater Modeling with iMOD": [[388, null]], "Head point interpolation": [[371, null]], "Henry": [[342, null], [356, null]], "Horizontal Flow Barrier": [[348, "horizontal-flow-barrier"]], "How do I \u2026": [[382, null]], "How is imod-python different from FloPy?": [[380, "how-is-imod-python-different-from-flopy"]], "How to build": [[335, "how-to-build"]], "How to release a new version": [[339, null]], "Hydraulic conductivity": [[364, "hydraulic-conductivity"]], "Hydrocoin": [[343, null]], "Hydrogeology": [[343, "hydrogeology"], [348, "hydrogeology"]], "If-then-else": [[382, "if-then-else"], [383, "if-then-else"]], "Import IDF file": [[381, "import-idf-file"], [382, "import-idf-file"]], "Import IPF file": [[381, "import-ipf-file"], [382, "import-ipf-file"]], "Import a single netCDF variable as DataArray": [[381, "import-a-single-netcdf-variable-as-dataarray"], [382, "import-a-single-netcdf-variable-as-dataarray"]], "Import drainage information": [[364, "import-drainage-information"]], "Import heads results": [[364, "import-heads-results"]], "Import multiple IDF files": [[381, "import-multiple-idf-files"], [382, "import-multiple-idf-files"]], "Import netCDF file as Dataset": [[381, "import-netcdf-file-as-dataset"], [382, "import-netcdf-file-as-dataset"]], "Import river information": [[364, "import-river-information"]], "Increase the extent of a raster": [[382, "increase-the-extent-of-a-raster"], [383, "increase-the-extent-of-a-raster"]], "Initial Conditions": [[340, "initial-conditions"], [341, "initial-conditions"], [344, "initial-conditions"], [345, "initial-conditions"]], "Initial conditions": [[343, "initial-conditions"], [348, "initial-conditions"]], "Initial conditions package - IC": [[364, "initial-conditions-package-ic"]], "Input and output": [[393, "input-and-output"], [394, "input-and-output"]], "Input/output": [[323, null]], "Installing": [[391, null]], "Installing Python and packages": [[389, null]], "Installing Python packages \u2013 without the agonizing pain": [[389, "installing-python-packages-without-the-agonizing-pain"]], "Installing a development version of iMOD Python": [[389, "installing-a-development-version-of-imod-python"]], "Installing the latest development version": [[391, "installing-the-latest-development-version"]], "Installing with Deltaforge": [[391, "installing-with-deltaforge"]], "Installing with conda": [[391, "installing-with-conda"]], "Installing with pip": [[391, "installing-with-pip"]], "Installing with pixi": [[391, "installing-with-pixi"]], "Known Issues": [[387, null]], "Lake package example": [[367, null]], "Large data": [[380, "large-data"]], "Lazy evaluation": [[397, null]], "Load data": [[364, "load-data"]], "Logging": [[324, null]], "MODFLOW6": [[326, null], [366, null], [388, "modflow6"]], "MODFLOW6 package": [[400, "modflow6-package"]], "Make data readable by QGIS": [[381, "make-data-readable-by-qgis"], [382, "make-data-readable-by-qgis"]], "MetaMod": [[325, null]], "MetaSWAP": [[327, null], [352, null]], "Model": [[2, "model"], [332, "model"]], "Model Creation": [[348, null]], "Model objects & methods": [[326, "model-objects-methods"]], "Model settings": [[326, "model-settings"]], "Model simulation": [[364, "model-simulation"]], "Model time discretization": [[398, null]], "Modflow 6 versions": [[387, "modflow-6-versions"]], "More dimensions": [[393, "more-dimensions"]], "New": [[391, "new"]], "Node property flow package - NPF": [[364, "node-property-flow-package-npf"]], "Obtain the image": [[333, "obtain-the-image"]], "Obtaining the final (i)domain": [[399, "obtaining-the-final-i-domain"]], "Open the results": [[356, "open-the-results"], [357, "open-the-results"], [359, "open-the-results"], [361, "open-the-results"], [367, "open-the-results"]], "Other raster formats": [[393, "other-raster-formats"]], "Output Control package - OC": [[364, "output-control-package-oc"]], "Overview allocation options": [[400, "overview-allocation-options"]], "Packages": [[2, "packages"]], "Parameters": [[359, "parameters"]], "Partitioning a regional model": [[365, null]], "Periodic central ditch": [[348, "periodic-central-ditch"]], "Pitfalls": [[397, "pitfalls"]], "Plot a timeseries for a single cell": [[382, "plot-a-timeseries-for-a-single-cell"], [382, "id1"], [384, null], [385, "plot-a-timeseries-for-a-single-cell"]], "Plot head of one layer at one time": [[382, "plot-head-of-one-layer-at-one-time"], [382, "id2"], [384, "plot-head-of-one-layer-at-one-time"], [385, "plot-head-of-one-layer-at-one-time"]], "Plot maps": [[378, null]], "Polygonize raster": [[372, null]], "Prepare": [[370, null]], "Prepare model input": [[328, null]], "Pushing the image": [[335, "pushing-the-image"]], "Quiver plot": [[376, "quiver-plot"]], "Raster data and xarray": [[393, null]], "Rasterize polygon data": [[382, "rasterize-polygon-data"], [383, "rasterize-polygon-data"]], "Rasterize shapefiles": [[373, null]], "Read Output": [[326, "read-output"]], "Reading existing MetaSWAP input": [[354, null]], "Reading the .inp file": [[354, "reading-the-inp-file"]], "Recharge": [[359, "recharge"], [364, "recharge"]], "Recharge - Steady state": [[364, "recharge-steady-state"]], "Recharge - Transient": [[364, "recharge-transient"]], "Regional model": [[364, null]], "Regrid": [[326, "regrid"]], "Regrid Method Settings": [[326, "regrid-method-settings"]], "Regridding": [[399, null]], "Regridding boundary conditions": [[399, "regridding-boundary-conditions"]], "Regridding using default methods": [[399, "regridding-using-default-methods"]], "Regridding using non-default methods": [[399, "regridding-using-non-default-methods"]], "Removed": [[0, "removed"], [0, "id39"], [0, "id77"], [0, "id99"], [0, "id104"], [0, "id109"]], "Reporting bugs": [[338, "reporting-bugs"]], "Reproject data": [[374, null]], "Reproject points": [[374, "reproject-points"]], "Reproject raster dataset": [[374, "reproject-raster-dataset"]], "Reproject vector dataset": [[374, "reproject-vector-dataset"]], "Results visualization": [[364, "results-visualization"]], "Rising outer ditches": [[348, "rising-outer-ditches"]], "River package - RIV": [[364, "river-package-riv"]], "Run": [[340, "run"], [341, "run"], [342, "run"], [343, "run"], [344, "run"], [345, "run"], [348, "run"]], "Run the model": [[356, "run-the-model"], [357, "run-the-model"], [359, "run-the-model"], [361, "run-the-model"], [364, "run-the-model"], [367, "run-the-model"]], "Running the pipeline steps inside the docker build container": [[333, "running-the-pipeline-steps-inside-the-docker-build-container"]], "Running the pipeline steps locally": [[333, "running-the-pipeline-steps-locally"]], "Saltwater Pocket": [[344, null]], "Select a single variable from a dataset": [[382, "select-a-single-variable-from-a-dataset"], [383, "select-a-single-variable-from-a-dataset"]], "Select along a single layer": [[382, "select-along-a-single-layer"], [383, "select-along-a-single-layer"]], "Select part of the data": [[382, "select-part-of-the-data"], [383, "select-part-of-the-data"]], "Select points (from a vector dataset)": [[382, "select-points-from-a-vector-dataset"], [382, "id4"], [383, "select-points-from-a-vector-dataset"], [385, "select-points-from-a-vector-dataset"]], "Select points and cross sections": [[329, null]], "Setting up an environment": [[389, "setting-up-an-environment"]], "Settings": [[332, "settings"]], "Slice the model domain": [[357, "slice-the-model-domain"]], "Smooth data": [[382, "smooth-data"], [383, "smooth-data"]], "Solver": [[2, "solver"]], "Solver settings": [[364, "solver-settings"]], "Specifying extra settings": [[398, "specifying-extra-settings"]], "Starting heads interpolation": [[364, "starting-heads-interpolation"]], "Storage package - STO": [[364, "storage-package-sto"]], "Streamline function": [[376, "streamline-function"]], "Sum properties over layers": [[382, "sum-properties-over-layers"], [383, "sum-properties-over-layers"]], "Supported models": [[380, "supported-models"]], "TWRI": [[361, null]], "The cleanup method": [[401, "the-cleanup-method"]], "Time series data and Pandas": [[395, null]], "Timeseries at point locations": [[395, "timeseries-at-point-locations"]], "Topsystem: from 2D map to 3D model": [[400, null]], "Transport": [[332, "transport"]], "Transport 2d example": [[369, null]], "Transport Packages": [[326, "transport-packages"]], "Two dimensions: x, y": [[393, "two-dimensions-x-y"]], "Unstructured": [[382, "unstructured"], [385, null]], "Unstructured Grids": [[396, null]], "Unsupported packages": [[399, "unsupported-packages"]], "Update existing model with new data": [[401, "update-existing-model-with-new-data"]], "Updating the Pixi version": [[335, "updating-the-pixi-version"]], "Use a river infiltration factor in MODFLOW6": [[388, "use-a-river-infiltration-factor-in-modflow6"]], "User Guide": [[402, null]], "Utilities": [[330, null]], "Vector data and Geopandas": [[394, null]], "Version control": [[334, "version-control"]], "Vertical Interface": [[345, null]], "Visualise results": [[340, "visualise-results"], [341, "visualise-results"], [344, "visualise-results"]], "Visualization": [[377, null]], "Visualize": [[331, null]], "Visualize the results": [[356, "visualize-the-results"], [357, "visualize-the-results"], [359, "visualize-the-results"], [361, "visualize-the-results"], [367, "visualize-the-results"]], "Ways to install iMOD Python": [[391, "ways-to-install-imod-python"]], "Wells": [[348, "wells"]], "What are specific yield, specific storage, storage coefficient (storativity)?": [[388, "what-are-specific-yield-specific-storage-storage-coefficient-storativity"]], "Which Python?": [[391, "which-python"]], "Write the model": [[357, "write-the-model"], [361, "write-the-model"]], "Writing the cleaned model": [[401, "writing-the-cleaned-model"]], "Zonal statistics": [[382, "zonal-statistics"], [383, "zonal-statistics"]], "[0.10.0] - 2020-05-23": [[0, "id82"]], "[0.10.1] - 2020-10-19": [[0, "id78"]], "[0.11.0] - 2021-12-21": [[0, "id73"]], "[0.11.1] - 2021-12-23": [[0, "id71"]], "[0.11.4] - 2022-09-05": [[0, "id67"]], "[0.11.5] - 2022-12-15": [[0, "id63"]], "[0.11.6] - 2023-02-01": [[0, "id60"]], "[0.12.0] - 2023-03-17": [[0, "id56"]], "[0.13.0] - 2023-05-02": [[0, "id53"]], "[0.13.1] - 2023-05-05": [[0, "id50"]], "[0.13.2] - 2023-07-26": [[0, "id46"]], "[0.14.0] - 2023-09-06": [[0, "id43"]], "[0.14.1] - 2023-09-07": [[0, "id40"]], "[0.15.0] - 2023-11-25": [[0, "id35"]], "[0.15.1] - 2023-12-22": [[0, "id30"]], "[0.15.2] - 2024-02-16": [[0, "id26"]], "[0.15.3] - 2024-02-22": [[0, "id23"]], "[0.16.0] - 2024-03-29": [[0, "id19"]], "[0.17.0] - 2024-05-13": [[0, "id15"]], "[0.17.1] - 2024-05-16": [[0, "id11"]], "[0.17.2] - 2024-09-17": [[0, "id6"]], "[0.18.0] - 2024-11-11": [[0, "id2"]], "[0.18.1] - 2024-11-20": [[0, "id1"]], "[0.5.0] - 2019-02-26": [[0, "id108"]], "[0.6.0] - 2019-03-15": [[0, "id103"]], "[0.6.1] - 2019-04-17": [[0, "id100"]], "[0.7.0] - 2019-07-23": [[0, "id96"]], "[0.7.1] - 2019-08-07": [[0, "id93"]], "[0.8.0] - 2019-10-14": [[0, "id90"]], "[0.9.0] - 2020-01-19": [[0, "id86"]], "iMOD Python: make massive MODFLOW models": [[390, null]], "iMOD-WQ": [[332, null], [346, null]], "iMODFLOW": [[2, null], [349, null]], "icelltype": [[364, "icelltype"]], "imod.couplers.metamod.MetaMod": [[73, null]], "imod.evaluate.calculate_gxg": [[3, null]], "imod.evaluate.convert_pointwaterhead_freshwaterhead": [[4, null]], "imod.evaluate.facebudget": [[5, null]], "imod.evaluate.flow_velocity": [[6, null]], "imod.evaluate.interpolate_value_boundaries": [[7, null]], "imod.evaluate.intra_cell_boundary_conditions": [[8, null]], "imod.evaluate.quiver_line": [[9, null]], "imod.evaluate.quiver_linestring": [[10, null]], "imod.evaluate.stability_constraint_advection": [[11, null]], "imod.evaluate.stability_constraint_wel": [[12, null]], "imod.evaluate.streamfunction_line": [[13, null]], "imod.evaluate.streamfunction_linestring": [[14, null]], "imod.flow.Bottom": [[15, null]], "imod.flow.Boundary": [[16, null]], "imod.flow.ConstantHead": [[17, null]], "imod.flow.Drain": [[18, null]], "imod.flow.EvapoTranspiration": [[19, null]], "imod.flow.GeneralHeadBoundary": [[20, null]], "imod.flow.HorizontalAnisotropy": [[21, null]], "imod.flow.HorizontalFlowBarrier": [[22, null]], "imod.flow.HorizontalHydraulicConductivity": [[23, null]], "imod.flow.ImodflowModel": [[24, null]], "imod.flow.ImodflowModel.create_time_discretization": [[25, null]], "imod.flow.MetaSwap": [[26, null]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, null]], "imod.flow.Recharge": [[28, null]], "imod.flow.River": [[29, null]], "imod.flow.SpecificStorage": [[30, null]], "imod.flow.StartingHead": [[31, null]], "imod.flow.StorageCoefficient": [[32, null]], "imod.flow.Top": [[33, null]], "imod.flow.VerticalAnisotropy": [[34, null]], "imod.flow.VerticalHydraulicConductivity": [[35, null]], "imod.flow.Well": [[36, null]], "imod.formats.gen.read": [[37, null]], "imod.formats.gen.read_ascii": [[38, null]], "imod.formats.gen.write": [[39, null]], "imod.formats.idf.header": [[40, null]], "imod.formats.idf.open": [[41, null]], "imod.formats.idf.open_dataset": [[42, null]], "imod.formats.idf.open_subdomains": [[43, null]], "imod.formats.idf.save": [[44, null]], "imod.formats.ipf.read": [[45, null]], "imod.formats.ipf.read_associated": [[46, null]], "imod.formats.ipf.save": [[47, null]], "imod.formats.ipf.write": [[48, null]], "imod.formats.ipf.write_assoc": [[49, null]], "imod.formats.prj.open_projectfile_data": [[50, null]], "imod.formats.prj.read_projectfile": [[51, null]], "imod.formats.prj.read_timfile": [[52, null]], "imod.formats.rasterio.header": [[53, null]], "imod.formats.rasterio.open": [[54, null]], "imod.formats.rasterio.save": [[55, null]], "imod.logging": [[56, null]], "imod.logging.config": [[57, null]], "imod.logging.config.LoggerType": [[58, null]], "imod.logging.config.configure": [[59, null]], "imod.logging.ilogger": [[60, null]], "imod.logging.ilogger.ILogger": [[61, null]], "imod.logging.logging_decorators": [[62, null]], "imod.logging.logging_decorators.init_log_decorator": [[63, null]], "imod.logging.logging_decorators.standard_log_decorator": [[64, null]], "imod.logging.loglevel": [[65, null]], "imod.logging.loglevel.LogLevel": [[66, null]], "imod.logging.logurulogger": [[67, null]], "imod.logging.logurulogger.LoguruLogger": [[68, null]], "imod.logging.nulllogger": [[69, null]], "imod.logging.nulllogger.NullLogger": [[70, null]], "imod.logging.pythonlogger": [[71, null]], "imod.logging.pythonlogger.PythonLogger": [[72, null]], "imod.mf6.AdvectionCentral": [[74, null]], "imod.mf6.AdvectionTVD": [[75, null]], "imod.mf6.AdvectionUpstream": [[76, null]], "imod.mf6.ApiPackage": [[77, null]], "imod.mf6.Buoyancy": [[78, null]], "imod.mf6.ConstantConcentration": [[79, null]], "imod.mf6.ConstantHead": [[80, null]], "imod.mf6.ConstantHead.from_imod5_data": [[81, null]], "imod.mf6.ConstantHead.from_imod5_shd_data": [[82, null]], "imod.mf6.ConstantHead.mask": [[83, null]], "imod.mf6.ConstantHead.regrid_like": [[84, null]], "imod.mf6.Dispersion": [[85, null]], "imod.mf6.Drainage": [[86, null]], "imod.mf6.Drainage.cleanup": [[87, null]], "imod.mf6.Drainage.from_imod5_data": [[88, null]], "imod.mf6.Drainage.mask": [[89, null]], "imod.mf6.Drainage.regrid_like": [[90, null]], "imod.mf6.Evapotranspiration": [[91, null]], "imod.mf6.Evapotranspiration.mask": [[92, null]], "imod.mf6.Evapotranspiration.regrid_like": [[93, null]], "imod.mf6.GeneralHeadBoundary": [[94, null]], "imod.mf6.GeneralHeadBoundary.cleanup": [[95, null]], "imod.mf6.GeneralHeadBoundary.from_imod5_data": [[96, null]], "imod.mf6.GeneralHeadBoundary.mask": [[97, null]], "imod.mf6.GeneralHeadBoundary.regrid_like": [[98, null]], "imod.mf6.GroundwaterFlowModel": [[99, null]], "imod.mf6.GroundwaterFlowModel.dump": [[100, null]], "imod.mf6.GroundwaterFlowModel.from_imod5_data": [[101, null]], "imod.mf6.GroundwaterFlowModel.mask_all_packages": [[102, null]], "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6": [[103, null]], "imod.mf6.GroundwaterTransportModel": [[104, null]], "imod.mf6.GroundwaterTransportModel.dump": [[105, null]], "imod.mf6.GroundwaterTransportModel.mask_all_packages": [[106, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[107, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[108, null]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[109, null]], "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg": [[110, null]], "imod.mf6.HorizontalFlowBarrierResistance": [[111, null]], "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg": [[112, null]], "imod.mf6.ImmobileStorageTransfer": [[113, null]], "imod.mf6.InitialConditions": [[114, null]], "imod.mf6.InitialConditions.from_imod5_data": [[115, null]], "imod.mf6.InitialConditions.mask": [[116, null]], "imod.mf6.InitialConditions.regrid_like": [[117, null]], "imod.mf6.LayeredWell": [[118, null]], "imod.mf6.LayeredWell.from_imod5_data": [[119, null]], "imod.mf6.LayeredWell.mask": [[120, null]], "imod.mf6.LayeredWell.regrid_like": [[121, null]], "imod.mf6.LayeredWell.to_mf6_pkg": [[122, null]], "imod.mf6.MassSourceLoading": [[123, null]], "imod.mf6.MobileStorageTransfer": [[124, null]], "imod.mf6.Modflow6Simulation": [[125, null]], "imod.mf6.Modflow6Simulation.clip_box": [[126, null]], "imod.mf6.Modflow6Simulation.create_time_discretization": [[127, null]], "imod.mf6.Modflow6Simulation.dump": [[128, null]], "imod.mf6.Modflow6Simulation.from_imod5_data": [[129, null]], "imod.mf6.Modflow6Simulation.open_concentration": [[130, null]], "imod.mf6.Modflow6Simulation.open_flow_budget": [[131, null]], "imod.mf6.Modflow6Simulation.open_head": [[132, null]], "imod.mf6.Modflow6Simulation.open_transport_budget": [[133, null]], "imod.mf6.Modflow6Simulation.regrid_like": [[134, null]], "imod.mf6.Modflow6Simulation.run": [[135, null]], "imod.mf6.Modflow6Simulation.split": [[136, null]], "imod.mf6.Modflow6Simulation.write": [[137, null]], "imod.mf6.NodePropertyFlow": [[138, null]], "imod.mf6.NodePropertyFlow.from_imod5_data": [[139, null]], "imod.mf6.NodePropertyFlow.mask": [[140, null]], "imod.mf6.NodePropertyFlow.regrid_like": [[141, null]], "imod.mf6.OutputControl": [[142, null]], "imod.mf6.Recharge": [[143, null]], "imod.mf6.Recharge.from_imod5_data": [[144, null]], "imod.mf6.Recharge.mask": [[145, null]], "imod.mf6.Recharge.regrid_like": [[146, null]], "imod.mf6.River": [[147, null]], "imod.mf6.River.cleanup": [[148, null]], "imod.mf6.River.from_imod5_data": [[149, null]], "imod.mf6.River.mask": [[150, null]], "imod.mf6.River.regrid_like": [[151, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[152, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[153, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[154, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg": [[155, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[156, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data": [[157, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg": [[158, null]], "imod.mf6.Solution": [[159, null]], "imod.mf6.SolutionPresetComplex": [[160, null]], "imod.mf6.SolutionPresetModerate": [[161, null]], "imod.mf6.SolutionPresetSimple": [[162, null]], "imod.mf6.SourceSinkMixing": [[163, null]], "imod.mf6.SourceSinkMixing.from_flow_model": [[164, null]], "imod.mf6.SpecificStorage": [[165, null]], "imod.mf6.SpecificStorage.mask": [[166, null]], "imod.mf6.SpecificStorage.regrid_like": [[167, null]], "imod.mf6.StorageCoefficient": [[168, null]], "imod.mf6.StorageCoefficient.from_imod5_data": [[169, null]], "imod.mf6.StorageCoefficient.mask": [[170, null]], "imod.mf6.StorageCoefficient.regrid_like": [[171, null]], "imod.mf6.StructuredDiscretization": [[172, null]], "imod.mf6.TimeDiscretization": [[173, null]], "imod.mf6.UnsaturatedZoneFlow": [[174, null]], "imod.mf6.VerticesDiscretization": [[175, null]], "imod.mf6.Well": [[176, null]], "imod.mf6.Well.cleanup": [[177, null]], "imod.mf6.Well.from_imod5_data": [[178, null]], "imod.mf6.Well.mask": [[179, null]], "imod.mf6.Well.regrid_like": [[180, null]], "imod.mf6.Well.to_mf6_pkg": [[181, null]], "imod.mf6.WellDisStructured": [[182, null]], "imod.mf6.WellDisVertices": [[183, null]], "imod.mf6.open_cbc": [[184, null]], "imod.mf6.open_hds": [[185, null]], "imod.mf6.read_cbc_headers": [[186, null]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[187, null]], "imod.mf6.regrid.DiscretizationRegridMethod": [[188, null]], "imod.mf6.regrid.DispersionRegridMethod": [[189, null]], "imod.mf6.regrid.DrainageRegridMethod": [[190, null]], "imod.mf6.regrid.EmptyRegridMethod": [[191, null]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[192, null]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[193, null]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[194, null]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[195, null]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[196, null]], "imod.mf6.regrid.RechargeRegridMethod": [[197, null]], "imod.mf6.regrid.RiverRegridMethod": [[198, null]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[199, null]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[200, null]], "imod.msw.AnnualCropFactors": [[201, null]], "imod.msw.CouplerMapping": [[202, null]], "imod.msw.EvapotranspirationMapping": [[203, null]], "imod.msw.GridData": [[204, null]], "imod.msw.IdfMapping": [[205, null]], "imod.msw.Infiltration": [[206, null]], "imod.msw.InitialConditionsEquilibrium": [[207, null]], "imod.msw.InitialConditionsPercolation": [[208, null]], "imod.msw.InitialConditionsRootzonePressureHead": [[209, null]], "imod.msw.InitialConditionsSavedState": [[210, null]], "imod.msw.LanduseOptions": [[211, null]], "imod.msw.MetaSwapModel": [[212, null]], "imod.msw.MeteoGrid": [[213, null]], "imod.msw.Ponding": [[214, null]], "imod.msw.PrecipitationMapping": [[215, null]], "imod.msw.ScalingFactors": [[216, null]], "imod.msw.Sprinkling": [[217, null]], "imod.msw.TimeOutputControl": [[218, null]], "imod.msw.VariableOutputControl": [[219, null]], "imod.prepare.ALLOCATION_OPTION": [[220, null]], "imod.prepare.DISTRIBUTING_OPTION": [[221, null]], "imod.prepare.LayerRegridder": [[222, null]], "imod.prepare.Regridder": [[223, null]], "imod.prepare.Voxelizer": [[224, null]], "imod.prepare.allocate_drn_cells": [[225, null]], "imod.prepare.allocate_ghb_cells": [[226, null]], "imod.prepare.allocate_rch_cells": [[227, null]], "imod.prepare.allocate_riv_cells": [[228, null]], "imod.prepare.assign_wells": [[229, null]], "imod.prepare.c_leakage": [[230, null]], "imod.prepare.c_radial": [[231, null]], "imod.prepare.celltable": [[232, null]], "imod.prepare.cleanup_drn": [[233, null]], "imod.prepare.cleanup_ghb": [[234, null]], "imod.prepare.cleanup_riv": [[235, null]], "imod.prepare.cleanup_wel": [[236, null]], "imod.prepare.create_layered_top": [[237, null]], "imod.prepare.distribute_drn_conductance": [[238, null]], "imod.prepare.distribute_ghb_conductance": [[239, null]], "imod.prepare.distribute_riv_conductance": [[240, null]], "imod.prepare.fill": [[241, null]], "imod.prepare.gdal_rasterize": [[242, null]], "imod.prepare.get_lower_active_grid_cells": [[243, null]], "imod.prepare.get_lower_active_layer_number": [[244, null]], "imod.prepare.get_upper_active_grid_cells": [[245, null]], "imod.prepare.get_upper_active_layer_number": [[246, null]], "imod.prepare.laplace_interpolate": [[247, null]], "imod.prepare.linestring_to_square_zpolygons": [[248, null]], "imod.prepare.linestring_to_trapezoid_zpolygons": [[249, null]], "imod.prepare.polygonize": [[250, null]], "imod.prepare.rasterize": [[251, null]], "imod.prepare.rasterize_celltable": [[252, null]], "imod.prepare.reproject": [[253, null]], "imod.prepare.zonal_aggregate_polygons": [[254, null]], "imod.prepare.zonal_aggregate_raster": [[255, null]], "imod.select.active_grid_boundary_xy": [[256, null]], "imod.select.cross_section_line": [[257, null]], "imod.select.cross_section_linestring": [[258, null]], "imod.select.grid_boundary_xy": [[259, null]], "imod.select.points_in_bounds": [[260, null]], "imod.select.points_indices": [[261, null]], "imod.select.points_set_values": [[262, null]], "imod.select.points_values": [[263, null]], "imod.select.upper_active_layer": [[264, null]], "imod.util.cd": [[265, null]], "imod.util.coord_reference": [[266, null]], "imod.util.empty_2d": [[267, null]], "imod.util.empty_2d_transient": [[268, null]], "imod.util.empty_3d": [[269, null]], "imod.util.empty_3d_transient": [[270, null]], "imod.util.from_mdal_compliant_ugrid2d": [[271, null]], "imod.util.ignore_warnings": [[272, null]], "imod.util.mdal_compliant_ugrid2d": [[273, null]], "imod.util.print_if_error": [[274, null]], "imod.util.spatial_reference": [[275, null]], "imod.util.to_datetime": [[276, null]], "imod.util.to_ugrid2d": [[277, null]], "imod.util.transform": [[278, null]], "imod.util.where": [[279, null]], "imod.visualize.GridAnimation3D": [[280, null]], "imod.visualize.StaticGridAnimation3D": [[281, null]], "imod.visualize.cross_section": [[282, null]], "imod.visualize.grid_3d": [[283, null]], "imod.visualize.imshow_topview": [[284, null]], "imod.visualize.line_3d": [[285, null]], "imod.visualize.plot_map": [[286, null]], "imod.visualize.quiver": [[287, null]], "imod.visualize.read_imod_legend": [[288, null]], "imod.visualize.streamfunction": [[289, null]], "imod.visualize.waterbalance_barchart": [[290, null]], "imod.wq.AdvectionFiniteDifference": [[291, null]], "imod.wq.AdvectionHybridMOC": [[292, null]], "imod.wq.AdvectionMOC": [[293, null]], "imod.wq.AdvectionModifiedMOC": [[294, null]], "imod.wq.AdvectionTVD": [[295, null]], "imod.wq.BasicFlow": [[296, null]], "imod.wq.BasicTransport": [[297, null]], "imod.wq.ConstantHead": [[298, null]], "imod.wq.Dispersion": [[299, null]], "imod.wq.Drainage": [[300, null]], "imod.wq.EvapotranspirationHighestActive": [[301, null]], "imod.wq.EvapotranspirationLayers": [[302, null]], "imod.wq.EvapotranspirationTopLayer": [[303, null]], "imod.wq.GeneralHeadBoundary": [[304, null]], "imod.wq.GeneralizedConjugateGradientSolver": [[305, null]], "imod.wq.LayerPropertyFlow": [[306, null]], "imod.wq.MassLoading": [[307, null]], "imod.wq.OutputControl": [[308, null]], "imod.wq.ParallelKrylovFlowSolver": [[309, null]], "imod.wq.ParallelKrylovTransportSolver": [[310, null]], "imod.wq.PreconditionedConjugateGradientSolver": [[311, null]], "imod.wq.RechargeHighestActive": [[312, null]], "imod.wq.RechargeLayers": [[313, null]], "imod.wq.RechargeTopLayer": [[314, null]], "imod.wq.River": [[315, null]], "imod.wq.SeawatModel": [[316, null]], "imod.wq.SeawatModel.create_time_discretization": [[317, null]], "imod.wq.TimeDiscretization": [[318, null]], "imod.wq.TimeVaryingConstantConcentration": [[319, null]], "imod.wq.VariableDensityFlow": [[320, null]], "imod.wq.Well": [[321, null]], "netCDF": [[393, "netcdf"]]}, "docnames": ["api/changelog", "api/evaluate", "api/flow", "api/generated/evaluate/imod.evaluate.calculate_gxg", "api/generated/evaluate/imod.evaluate.convert_pointwaterhead_freshwaterhead", "api/generated/evaluate/imod.evaluate.facebudget", "api/generated/evaluate/imod.evaluate.flow_velocity", "api/generated/evaluate/imod.evaluate.interpolate_value_boundaries", "api/generated/evaluate/imod.evaluate.intra_cell_boundary_conditions", "api/generated/evaluate/imod.evaluate.quiver_line", "api/generated/evaluate/imod.evaluate.quiver_linestring", "api/generated/evaluate/imod.evaluate.stability_constraint_advection", "api/generated/evaluate/imod.evaluate.stability_constraint_wel", "api/generated/evaluate/imod.evaluate.streamfunction_line", "api/generated/evaluate/imod.evaluate.streamfunction_linestring", "api/generated/flow/imod.flow.Bottom", "api/generated/flow/imod.flow.Boundary", "api/generated/flow/imod.flow.ConstantHead", "api/generated/flow/imod.flow.Drain", "api/generated/flow/imod.flow.EvapoTranspiration", "api/generated/flow/imod.flow.GeneralHeadBoundary", "api/generated/flow/imod.flow.HorizontalAnisotropy", "api/generated/flow/imod.flow.HorizontalFlowBarrier", "api/generated/flow/imod.flow.HorizontalHydraulicConductivity", "api/generated/flow/imod.flow.ImodflowModel", "api/generated/flow/imod.flow.ImodflowModel.create_time_discretization", "api/generated/flow/imod.flow.MetaSwap", "api/generated/flow/imod.flow.PreconditionedConjugateGradientSolver", "api/generated/flow/imod.flow.Recharge", "api/generated/flow/imod.flow.River", "api/generated/flow/imod.flow.SpecificStorage", "api/generated/flow/imod.flow.StartingHead", "api/generated/flow/imod.flow.StorageCoefficient", "api/generated/flow/imod.flow.Top", "api/generated/flow/imod.flow.VerticalAnisotropy", "api/generated/flow/imod.flow.VerticalHydraulicConductivity", "api/generated/flow/imod.flow.Well", "api/generated/io/imod.formats.gen.read", "api/generated/io/imod.formats.gen.read_ascii", "api/generated/io/imod.formats.gen.write", "api/generated/io/imod.formats.idf.header", "api/generated/io/imod.formats.idf.open", "api/generated/io/imod.formats.idf.open_dataset", "api/generated/io/imod.formats.idf.open_subdomains", "api/generated/io/imod.formats.idf.save", "api/generated/io/imod.formats.ipf.read", "api/generated/io/imod.formats.ipf.read_associated", "api/generated/io/imod.formats.ipf.save", "api/generated/io/imod.formats.ipf.write", "api/generated/io/imod.formats.ipf.write_assoc", "api/generated/io/imod.formats.prj.open_projectfile_data", "api/generated/io/imod.formats.prj.read_projectfile", "api/generated/io/imod.formats.prj.read_timfile", "api/generated/io/imod.formats.rasterio.header", "api/generated/io/imod.formats.rasterio.open", "api/generated/io/imod.formats.rasterio.save", "api/generated/logging/imod.logging", "api/generated/logging/imod.logging.config", "api/generated/logging/imod.logging.config.LoggerType", "api/generated/logging/imod.logging.config.configure", "api/generated/logging/imod.logging.ilogger", "api/generated/logging/imod.logging.ilogger.ILogger", "api/generated/logging/imod.logging.logging_decorators", "api/generated/logging/imod.logging.logging_decorators.init_log_decorator", "api/generated/logging/imod.logging.logging_decorators.standard_log_decorator", "api/generated/logging/imod.logging.loglevel", "api/generated/logging/imod.logging.loglevel.LogLevel", "api/generated/logging/imod.logging.logurulogger", "api/generated/logging/imod.logging.logurulogger.LoguruLogger", "api/generated/logging/imod.logging.nulllogger", "api/generated/logging/imod.logging.nulllogger.NullLogger", "api/generated/logging/imod.logging.pythonlogger", "api/generated/logging/imod.logging.pythonlogger.PythonLogger", "api/generated/metamod/imod.couplers.metamod.MetaMod", "api/generated/mf6/imod.mf6.AdvectionCentral", "api/generated/mf6/imod.mf6.AdvectionTVD", "api/generated/mf6/imod.mf6.AdvectionUpstream", "api/generated/mf6/imod.mf6.ApiPackage", "api/generated/mf6/imod.mf6.Buoyancy", "api/generated/mf6/imod.mf6.ConstantConcentration", "api/generated/mf6/imod.mf6.ConstantHead", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_data", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_shd_data", "api/generated/mf6/imod.mf6.ConstantHead.mask", "api/generated/mf6/imod.mf6.ConstantHead.regrid_like", "api/generated/mf6/imod.mf6.Dispersion", "api/generated/mf6/imod.mf6.Drainage", "api/generated/mf6/imod.mf6.Drainage.cleanup", "api/generated/mf6/imod.mf6.Drainage.from_imod5_data", "api/generated/mf6/imod.mf6.Drainage.mask", "api/generated/mf6/imod.mf6.Drainage.regrid_like", "api/generated/mf6/imod.mf6.Evapotranspiration", "api/generated/mf6/imod.mf6.Evapotranspiration.mask", "api/generated/mf6/imod.mf6.Evapotranspiration.regrid_like", "api/generated/mf6/imod.mf6.GeneralHeadBoundary", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.cleanup", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.from_imod5_data", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.mask", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.regrid_like", "api/generated/mf6/imod.mf6.GroundwaterFlowModel", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.dump", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.from_imod5_data", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.mask_all_packages", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "api/generated/mf6/imod.mf6.GroundwaterTransportModel", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.dump", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.mask_all_packages", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.ImmobileStorageTransfer", "api/generated/mf6/imod.mf6.InitialConditions", "api/generated/mf6/imod.mf6.InitialConditions.from_imod5_data", "api/generated/mf6/imod.mf6.InitialConditions.mask", "api/generated/mf6/imod.mf6.InitialConditions.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell", "api/generated/mf6/imod.mf6.LayeredWell.from_imod5_data", "api/generated/mf6/imod.mf6.LayeredWell.mask", "api/generated/mf6/imod.mf6.LayeredWell.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell.to_mf6_pkg", "api/generated/mf6/imod.mf6.MassSourceLoading", "api/generated/mf6/imod.mf6.MobileStorageTransfer", "api/generated/mf6/imod.mf6.Modflow6Simulation", "api/generated/mf6/imod.mf6.Modflow6Simulation.clip_box", "api/generated/mf6/imod.mf6.Modflow6Simulation.create_time_discretization", "api/generated/mf6/imod.mf6.Modflow6Simulation.dump", "api/generated/mf6/imod.mf6.Modflow6Simulation.from_imod5_data", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_concentration", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_flow_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_head", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_transport_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.regrid_like", "api/generated/mf6/imod.mf6.Modflow6Simulation.run", "api/generated/mf6/imod.mf6.Modflow6Simulation.split", "api/generated/mf6/imod.mf6.Modflow6Simulation.write", "api/generated/mf6/imod.mf6.NodePropertyFlow", "api/generated/mf6/imod.mf6.NodePropertyFlow.from_imod5_data", "api/generated/mf6/imod.mf6.NodePropertyFlow.mask", "api/generated/mf6/imod.mf6.NodePropertyFlow.regrid_like", "api/generated/mf6/imod.mf6.OutputControl", "api/generated/mf6/imod.mf6.Recharge", "api/generated/mf6/imod.mf6.Recharge.from_imod5_data", "api/generated/mf6/imod.mf6.Recharge.mask", "api/generated/mf6/imod.mf6.Recharge.regrid_like", "api/generated/mf6/imod.mf6.River", "api/generated/mf6/imod.mf6.River.cleanup", "api/generated/mf6/imod.mf6.River.from_imod5_data", "api/generated/mf6/imod.mf6.River.mask", "api/generated/mf6/imod.mf6.River.regrid_like", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.Solution", "api/generated/mf6/imod.mf6.SolutionPresetComplex", "api/generated/mf6/imod.mf6.SolutionPresetModerate", "api/generated/mf6/imod.mf6.SolutionPresetSimple", "api/generated/mf6/imod.mf6.SourceSinkMixing", "api/generated/mf6/imod.mf6.SourceSinkMixing.from_flow_model", "api/generated/mf6/imod.mf6.SpecificStorage", "api/generated/mf6/imod.mf6.SpecificStorage.mask", "api/generated/mf6/imod.mf6.SpecificStorage.regrid_like", "api/generated/mf6/imod.mf6.StorageCoefficient", "api/generated/mf6/imod.mf6.StorageCoefficient.from_imod5_data", "api/generated/mf6/imod.mf6.StorageCoefficient.mask", "api/generated/mf6/imod.mf6.StorageCoefficient.regrid_like", "api/generated/mf6/imod.mf6.StructuredDiscretization", "api/generated/mf6/imod.mf6.TimeDiscretization", "api/generated/mf6/imod.mf6.UnsaturatedZoneFlow", "api/generated/mf6/imod.mf6.VerticesDiscretization", "api/generated/mf6/imod.mf6.Well", "api/generated/mf6/imod.mf6.Well.cleanup", "api/generated/mf6/imod.mf6.Well.from_imod5_data", "api/generated/mf6/imod.mf6.Well.mask", "api/generated/mf6/imod.mf6.Well.regrid_like", "api/generated/mf6/imod.mf6.Well.to_mf6_pkg", "api/generated/mf6/imod.mf6.WellDisStructured", "api/generated/mf6/imod.mf6.WellDisVertices", "api/generated/mf6/imod.mf6.open_cbc", "api/generated/mf6/imod.mf6.open_hds", "api/generated/mf6/imod.mf6.read_cbc_headers", "api/generated/mf6/regrid/imod.mf6.regrid.ConstantHeadRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DiscretizationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DispersionRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DrainageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EmptyRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EvapotranspirationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.InitialConditionsRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.MobileStorageTransferRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.NodePropertyFlowRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RechargeRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RiverRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.SpecificStorageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.StorageCoefficientRegridMethod", "api/generated/msw/imod.msw.AnnualCropFactors", "api/generated/msw/imod.msw.CouplerMapping", "api/generated/msw/imod.msw.EvapotranspirationMapping", "api/generated/msw/imod.msw.GridData", "api/generated/msw/imod.msw.IdfMapping", "api/generated/msw/imod.msw.Infiltration", "api/generated/msw/imod.msw.InitialConditionsEquilibrium", "api/generated/msw/imod.msw.InitialConditionsPercolation", "api/generated/msw/imod.msw.InitialConditionsRootzonePressureHead", "api/generated/msw/imod.msw.InitialConditionsSavedState", "api/generated/msw/imod.msw.LanduseOptions", "api/generated/msw/imod.msw.MetaSwapModel", "api/generated/msw/imod.msw.MeteoGrid", "api/generated/msw/imod.msw.Ponding", "api/generated/msw/imod.msw.PrecipitationMapping", "api/generated/msw/imod.msw.ScalingFactors", "api/generated/msw/imod.msw.Sprinkling", "api/generated/msw/imod.msw.TimeOutputControl", "api/generated/msw/imod.msw.VariableOutputControl", "api/generated/prepare/imod.prepare.ALLOCATION_OPTION", "api/generated/prepare/imod.prepare.DISTRIBUTING_OPTION", "api/generated/prepare/imod.prepare.LayerRegridder", "api/generated/prepare/imod.prepare.Regridder", "api/generated/prepare/imod.prepare.Voxelizer", "api/generated/prepare/imod.prepare.allocate_drn_cells", "api/generated/prepare/imod.prepare.allocate_ghb_cells", "api/generated/prepare/imod.prepare.allocate_rch_cells", "api/generated/prepare/imod.prepare.allocate_riv_cells", "api/generated/prepare/imod.prepare.assign_wells", "api/generated/prepare/imod.prepare.c_leakage", "api/generated/prepare/imod.prepare.c_radial", "api/generated/prepare/imod.prepare.celltable", "api/generated/prepare/imod.prepare.cleanup_drn", "api/generated/prepare/imod.prepare.cleanup_ghb", "api/generated/prepare/imod.prepare.cleanup_riv", "api/generated/prepare/imod.prepare.cleanup_wel", "api/generated/prepare/imod.prepare.create_layered_top", "api/generated/prepare/imod.prepare.distribute_drn_conductance", "api/generated/prepare/imod.prepare.distribute_ghb_conductance", "api/generated/prepare/imod.prepare.distribute_riv_conductance", "api/generated/prepare/imod.prepare.fill", "api/generated/prepare/imod.prepare.gdal_rasterize", "api/generated/prepare/imod.prepare.get_lower_active_grid_cells", "api/generated/prepare/imod.prepare.get_lower_active_layer_number", "api/generated/prepare/imod.prepare.get_upper_active_grid_cells", "api/generated/prepare/imod.prepare.get_upper_active_layer_number", "api/generated/prepare/imod.prepare.laplace_interpolate", "api/generated/prepare/imod.prepare.linestring_to_square_zpolygons", "api/generated/prepare/imod.prepare.linestring_to_trapezoid_zpolygons", "api/generated/prepare/imod.prepare.polygonize", "api/generated/prepare/imod.prepare.rasterize", "api/generated/prepare/imod.prepare.rasterize_celltable", "api/generated/prepare/imod.prepare.reproject", "api/generated/prepare/imod.prepare.zonal_aggregate_polygons", "api/generated/prepare/imod.prepare.zonal_aggregate_raster", "api/generated/select/imod.select.active_grid_boundary_xy", "api/generated/select/imod.select.cross_section_line", "api/generated/select/imod.select.cross_section_linestring", "api/generated/select/imod.select.grid_boundary_xy", "api/generated/select/imod.select.points_in_bounds", "api/generated/select/imod.select.points_indices", "api/generated/select/imod.select.points_set_values", "api/generated/select/imod.select.points_values", "api/generated/select/imod.select.upper_active_layer", "api/generated/util/imod.util.cd", "api/generated/util/imod.util.coord_reference", "api/generated/util/imod.util.empty_2d", "api/generated/util/imod.util.empty_2d_transient", "api/generated/util/imod.util.empty_3d", "api/generated/util/imod.util.empty_3d_transient", "api/generated/util/imod.util.from_mdal_compliant_ugrid2d", "api/generated/util/imod.util.ignore_warnings", "api/generated/util/imod.util.mdal_compliant_ugrid2d", "api/generated/util/imod.util.print_if_error", "api/generated/util/imod.util.spatial_reference", "api/generated/util/imod.util.to_datetime", "api/generated/util/imod.util.to_ugrid2d", "api/generated/util/imod.util.transform", "api/generated/util/imod.util.where", "api/generated/visualize/imod.visualize.GridAnimation3D", "api/generated/visualize/imod.visualize.StaticGridAnimation3D", "api/generated/visualize/imod.visualize.cross_section", "api/generated/visualize/imod.visualize.grid_3d", "api/generated/visualize/imod.visualize.imshow_topview", "api/generated/visualize/imod.visualize.line_3d", "api/generated/visualize/imod.visualize.plot_map", "api/generated/visualize/imod.visualize.quiver", "api/generated/visualize/imod.visualize.read_imod_legend", "api/generated/visualize/imod.visualize.streamfunction", "api/generated/visualize/imod.visualize.waterbalance_barchart", "api/generated/wq/imod.wq.AdvectionFiniteDifference", "api/generated/wq/imod.wq.AdvectionHybridMOC", "api/generated/wq/imod.wq.AdvectionMOC", "api/generated/wq/imod.wq.AdvectionModifiedMOC", "api/generated/wq/imod.wq.AdvectionTVD", "api/generated/wq/imod.wq.BasicFlow", "api/generated/wq/imod.wq.BasicTransport", "api/generated/wq/imod.wq.ConstantHead", "api/generated/wq/imod.wq.Dispersion", "api/generated/wq/imod.wq.Drainage", "api/generated/wq/imod.wq.EvapotranspirationHighestActive", "api/generated/wq/imod.wq.EvapotranspirationLayers", "api/generated/wq/imod.wq.EvapotranspirationTopLayer", "api/generated/wq/imod.wq.GeneralHeadBoundary", "api/generated/wq/imod.wq.GeneralizedConjugateGradientSolver", "api/generated/wq/imod.wq.LayerPropertyFlow", "api/generated/wq/imod.wq.MassLoading", "api/generated/wq/imod.wq.OutputControl", "api/generated/wq/imod.wq.ParallelKrylovFlowSolver", "api/generated/wq/imod.wq.ParallelKrylovTransportSolver", "api/generated/wq/imod.wq.PreconditionedConjugateGradientSolver", "api/generated/wq/imod.wq.RechargeHighestActive", "api/generated/wq/imod.wq.RechargeLayers", "api/generated/wq/imod.wq.RechargeTopLayer", "api/generated/wq/imod.wq.River", "api/generated/wq/imod.wq.SeawatModel", "api/generated/wq/imod.wq.SeawatModel.create_time_discretization", "api/generated/wq/imod.wq.TimeDiscretization", "api/generated/wq/imod.wq.TimeVaryingConstantConcentration", "api/generated/wq/imod.wq.VariableDensityFlow", "api/generated/wq/imod.wq.Well", "api/index", "api/io", "api/logging", "api/metamod", "api/mf6", "api/msw", "api/prepare", "api/select", "api/util", "api/visualize", "api/wq", "developing/ci", "developing/contributing", "developing/docker", "developing/documentation", "developing/examples", "developing/index", "developing/releasing", "examples/imod-wq/Elder", "examples/imod-wq/FreshwaterLens", "examples/imod-wq/Henry-wq", "examples/imod-wq/Hydrocoin", "examples/imod-wq/SaltwaterPocket", "examples/imod-wq/VerticalInterface", "examples/imod-wq/index", "examples/imod-wq/sg_execution_times", "examples/imodflow/ImodflowProjectfile", "examples/imodflow/index", "examples/imodflow/sg_execution_times", "examples/index", "examples/metaswap/index", "examples/metaswap/metaswap_example", "examples/metaswap/read_metaswap_file", "examples/metaswap/sg_execution_times", "examples/mf6/Henry", "examples/mf6/circle", "examples/mf6/circle_partitioned", "examples/mf6/circle_transport", "examples/mf6/different_ways_to_regrid_models", "examples/mf6/ex01_twri", "examples/mf6/example_1d_transport", "examples/mf6/example_models", "examples/mf6/hondsrug", "examples/mf6/hondsrug_partitioning", "examples/mf6/index", "examples/mf6/lake", "examples/mf6/sg_execution_times", "examples/mf6/transport_2d", "examples/prepare/index", "examples/prepare/point_interpolation", "examples/prepare/polygonize_raster", "examples/prepare/rasterize_shp", "examples/prepare/reproject", "examples/prepare/sg_execution_times", "examples/visualize/flowvel_streamlines", "examples/visualize/index", "examples/visualize/plot_map", "examples/visualize/sg_execution_times", "faq/general", "faq/how-do-i/in-out", "faq/how-do-i/index", "faq/how-do-i/modification", "faq/how-do-i/plot", "faq/how-do-i/unstructured", "faq/index", "faq/known-issues", "faq/modeling", "faq/python", "index", "installation", "sg_execution_times", "user-guide/01-raster-data", "user-guide/02-vector-data", "user-guide/03-timeseries-data", "user-guide/05-unstructured-grids", "user-guide/06-lazy-evaluation", "user-guide/07-time-discretization", "user-guide/08-regridding", "user-guide/09-topsystem", "user-guide/10-cleanup", "user-guide/index", "user-guide/sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api\\changelog.rst", "api\\evaluate.rst", "api\\flow.rst", "api\\generated\\evaluate\\imod.evaluate.calculate_gxg.rst", "api\\generated\\evaluate\\imod.evaluate.convert_pointwaterhead_freshwaterhead.rst", "api\\generated\\evaluate\\imod.evaluate.facebudget.rst", "api\\generated\\evaluate\\imod.evaluate.flow_velocity.rst", "api\\generated\\evaluate\\imod.evaluate.interpolate_value_boundaries.rst", "api\\generated\\evaluate\\imod.evaluate.intra_cell_boundary_conditions.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_line.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_linestring.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_advection.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_wel.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_line.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_linestring.rst", "api\\generated\\flow\\imod.flow.Bottom.rst", "api\\generated\\flow\\imod.flow.Boundary.rst", "api\\generated\\flow\\imod.flow.ConstantHead.rst", "api\\generated\\flow\\imod.flow.Drain.rst", "api\\generated\\flow\\imod.flow.EvapoTranspiration.rst", "api\\generated\\flow\\imod.flow.GeneralHeadBoundary.rst", "api\\generated\\flow\\imod.flow.HorizontalAnisotropy.rst", "api\\generated\\flow\\imod.flow.HorizontalFlowBarrier.rst", "api\\generated\\flow\\imod.flow.HorizontalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.create_time_discretization.rst", "api\\generated\\flow\\imod.flow.MetaSwap.rst", "api\\generated\\flow\\imod.flow.PreconditionedConjugateGradientSolver.rst", "api\\generated\\flow\\imod.flow.Recharge.rst", "api\\generated\\flow\\imod.flow.River.rst", "api\\generated\\flow\\imod.flow.SpecificStorage.rst", "api\\generated\\flow\\imod.flow.StartingHead.rst", "api\\generated\\flow\\imod.flow.StorageCoefficient.rst", "api\\generated\\flow\\imod.flow.Top.rst", "api\\generated\\flow\\imod.flow.VerticalAnisotropy.rst", "api\\generated\\flow\\imod.flow.VerticalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.Well.rst", "api\\generated\\io\\imod.formats.gen.read.rst", "api\\generated\\io\\imod.formats.gen.read_ascii.rst", "api\\generated\\io\\imod.formats.gen.write.rst", "api\\generated\\io\\imod.formats.idf.header.rst", "api\\generated\\io\\imod.formats.idf.open.rst", "api\\generated\\io\\imod.formats.idf.open_dataset.rst", "api\\generated\\io\\imod.formats.idf.open_subdomains.rst", "api\\generated\\io\\imod.formats.idf.save.rst", "api\\generated\\io\\imod.formats.ipf.read.rst", "api\\generated\\io\\imod.formats.ipf.read_associated.rst", "api\\generated\\io\\imod.formats.ipf.save.rst", "api\\generated\\io\\imod.formats.ipf.write.rst", "api\\generated\\io\\imod.formats.ipf.write_assoc.rst", "api\\generated\\io\\imod.formats.prj.open_projectfile_data.rst", "api\\generated\\io\\imod.formats.prj.read_projectfile.rst", "api\\generated\\io\\imod.formats.prj.read_timfile.rst", "api\\generated\\io\\imod.formats.rasterio.header.rst", "api\\generated\\io\\imod.formats.rasterio.open.rst", "api\\generated\\io\\imod.formats.rasterio.save.rst", "api\\generated\\logging\\imod.logging.rst", "api\\generated\\logging\\imod.logging.config.rst", "api\\generated\\logging\\imod.logging.config.LoggerType.rst", "api\\generated\\logging\\imod.logging.config.configure.rst", "api\\generated\\logging\\imod.logging.ilogger.rst", "api\\generated\\logging\\imod.logging.ilogger.ILogger.rst", "api\\generated\\logging\\imod.logging.logging_decorators.rst", "api\\generated\\logging\\imod.logging.logging_decorators.init_log_decorator.rst", "api\\generated\\logging\\imod.logging.logging_decorators.standard_log_decorator.rst", "api\\generated\\logging\\imod.logging.loglevel.rst", "api\\generated\\logging\\imod.logging.loglevel.LogLevel.rst", "api\\generated\\logging\\imod.logging.logurulogger.rst", "api\\generated\\logging\\imod.logging.logurulogger.LoguruLogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.NullLogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.PythonLogger.rst", "api\\generated\\metamod\\imod.couplers.metamod.MetaMod.rst", "api\\generated\\mf6\\imod.mf6.AdvectionCentral.rst", "api\\generated\\mf6\\imod.mf6.AdvectionTVD.rst", "api\\generated\\mf6\\imod.mf6.AdvectionUpstream.rst", "api\\generated\\mf6\\imod.mf6.ApiPackage.rst", "api\\generated\\mf6\\imod.mf6.Buoyancy.rst", "api\\generated\\mf6\\imod.mf6.ConstantConcentration.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_shd_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.mask.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Dispersion.rst", "api\\generated\\mf6\\imod.mf6.Drainage.rst", "api\\generated\\mf6\\imod.mf6.Drainage.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Drainage.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Drainage.mask.rst", "api\\generated\\mf6\\imod.mf6.Drainage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.mask.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.cleanup.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.mask.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.ImmobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.mask.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.mask.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.MassSourceLoading.rst", "api\\generated\\mf6\\imod.mf6.MobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.create_time_discretization.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.dump.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_concentration.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_flow_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_head.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_transport_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.run.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.split.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.write.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.mask.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.OutputControl.rst", "api\\generated\\mf6\\imod.mf6.Recharge.rst", "api\\generated\\mf6\\imod.mf6.Recharge.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Recharge.mask.rst", "api\\generated\\mf6\\imod.mf6.Recharge.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.River.rst", "api\\generated\\mf6\\imod.mf6.River.cleanup.rst", "api\\generated\\mf6\\imod.mf6.River.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.River.mask.rst", "api\\generated\\mf6\\imod.mf6.River.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.Solution.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetComplex.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetModerate.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetSimple.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.from_flow_model.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.mask.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.mask.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.rst", "api\\generated\\mf6\\imod.mf6.TimeDiscretization.rst", "api\\generated\\mf6\\imod.mf6.UnsaturatedZoneFlow.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.rst", "api\\generated\\mf6\\imod.mf6.Well.rst", "api\\generated\\mf6\\imod.mf6.Well.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Well.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Well.mask.rst", "api\\generated\\mf6\\imod.mf6.Well.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Well.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.WellDisStructured.rst", "api\\generated\\mf6\\imod.mf6.WellDisVertices.rst", "api\\generated\\mf6\\imod.mf6.open_cbc.rst", "api\\generated\\mf6\\imod.mf6.open_hds.rst", "api\\generated\\mf6\\imod.mf6.read_cbc_headers.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.ConstantHeadRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DiscretizationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DispersionRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DrainageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EmptyRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EvapotranspirationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.InitialConditionsRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.MobileStorageTransferRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.NodePropertyFlowRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RechargeRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RiverRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.SpecificStorageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.StorageCoefficientRegridMethod.rst", "api\\generated\\msw\\imod.msw.AnnualCropFactors.rst", "api\\generated\\msw\\imod.msw.CouplerMapping.rst", "api\\generated\\msw\\imod.msw.EvapotranspirationMapping.rst", "api\\generated\\msw\\imod.msw.GridData.rst", "api\\generated\\msw\\imod.msw.IdfMapping.rst", "api\\generated\\msw\\imod.msw.Infiltration.rst", "api\\generated\\msw\\imod.msw.InitialConditionsEquilibrium.rst", "api\\generated\\msw\\imod.msw.InitialConditionsPercolation.rst", "api\\generated\\msw\\imod.msw.InitialConditionsRootzonePressureHead.rst", "api\\generated\\msw\\imod.msw.InitialConditionsSavedState.rst", "api\\generated\\msw\\imod.msw.LanduseOptions.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.rst", "api\\generated\\msw\\imod.msw.MeteoGrid.rst", "api\\generated\\msw\\imod.msw.Ponding.rst", "api\\generated\\msw\\imod.msw.PrecipitationMapping.rst", "api\\generated\\msw\\imod.msw.ScalingFactors.rst", "api\\generated\\msw\\imod.msw.Sprinkling.rst", "api\\generated\\msw\\imod.msw.TimeOutputControl.rst", "api\\generated\\msw\\imod.msw.VariableOutputControl.rst", "api\\generated\\prepare\\imod.prepare.ALLOCATION_OPTION.rst", "api\\generated\\prepare\\imod.prepare.DISTRIBUTING_OPTION.rst", "api\\generated\\prepare\\imod.prepare.LayerRegridder.rst", "api\\generated\\prepare\\imod.prepare.Regridder.rst", "api\\generated\\prepare\\imod.prepare.Voxelizer.rst", "api\\generated\\prepare\\imod.prepare.allocate_drn_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_ghb_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_rch_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_riv_cells.rst", "api\\generated\\prepare\\imod.prepare.assign_wells.rst", "api\\generated\\prepare\\imod.prepare.c_leakage.rst", "api\\generated\\prepare\\imod.prepare.c_radial.rst", "api\\generated\\prepare\\imod.prepare.celltable.rst", "api\\generated\\prepare\\imod.prepare.cleanup_drn.rst", "api\\generated\\prepare\\imod.prepare.cleanup_ghb.rst", "api\\generated\\prepare\\imod.prepare.cleanup_riv.rst", "api\\generated\\prepare\\imod.prepare.cleanup_wel.rst", "api\\generated\\prepare\\imod.prepare.create_layered_top.rst", "api\\generated\\prepare\\imod.prepare.distribute_drn_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_ghb_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_riv_conductance.rst", "api\\generated\\prepare\\imod.prepare.fill.rst", "api\\generated\\prepare\\imod.prepare.gdal_rasterize.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.laplace_interpolate.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_square_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_trapezoid_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.polygonize.rst", "api\\generated\\prepare\\imod.prepare.rasterize.rst", "api\\generated\\prepare\\imod.prepare.rasterize_celltable.rst", "api\\generated\\prepare\\imod.prepare.reproject.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_polygons.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_raster.rst", "api\\generated\\select\\imod.select.active_grid_boundary_xy.rst", "api\\generated\\select\\imod.select.cross_section_line.rst", "api\\generated\\select\\imod.select.cross_section_linestring.rst", "api\\generated\\select\\imod.select.grid_boundary_xy.rst", "api\\generated\\select\\imod.select.points_in_bounds.rst", "api\\generated\\select\\imod.select.points_indices.rst", "api\\generated\\select\\imod.select.points_set_values.rst", "api\\generated\\select\\imod.select.points_values.rst", "api\\generated\\select\\imod.select.upper_active_layer.rst", "api\\generated\\util\\imod.util.cd.rst", "api\\generated\\util\\imod.util.coord_reference.rst", "api\\generated\\util\\imod.util.empty_2d.rst", "api\\generated\\util\\imod.util.empty_2d_transient.rst", "api\\generated\\util\\imod.util.empty_3d.rst", "api\\generated\\util\\imod.util.empty_3d_transient.rst", "api\\generated\\util\\imod.util.from_mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.ignore_warnings.rst", "api\\generated\\util\\imod.util.mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.print_if_error.rst", "api\\generated\\util\\imod.util.spatial_reference.rst", "api\\generated\\util\\imod.util.to_datetime.rst", "api\\generated\\util\\imod.util.to_ugrid2d.rst", "api\\generated\\util\\imod.util.transform.rst", "api\\generated\\util\\imod.util.where.rst", "api\\generated\\visualize\\imod.visualize.GridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.StaticGridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.cross_section.rst", "api\\generated\\visualize\\imod.visualize.grid_3d.rst", "api\\generated\\visualize\\imod.visualize.imshow_topview.rst", "api\\generated\\visualize\\imod.visualize.line_3d.rst", "api\\generated\\visualize\\imod.visualize.plot_map.rst", "api\\generated\\visualize\\imod.visualize.quiver.rst", "api\\generated\\visualize\\imod.visualize.read_imod_legend.rst", "api\\generated\\visualize\\imod.visualize.streamfunction.rst", "api\\generated\\visualize\\imod.visualize.waterbalance_barchart.rst", "api\\generated\\wq\\imod.wq.AdvectionFiniteDifference.rst", "api\\generated\\wq\\imod.wq.AdvectionHybridMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionModifiedMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionTVD.rst", "api\\generated\\wq\\imod.wq.BasicFlow.rst", "api\\generated\\wq\\imod.wq.BasicTransport.rst", "api\\generated\\wq\\imod.wq.ConstantHead.rst", "api\\generated\\wq\\imod.wq.Dispersion.rst", "api\\generated\\wq\\imod.wq.Drainage.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationHighestActive.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationLayers.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationTopLayer.rst", "api\\generated\\wq\\imod.wq.GeneralHeadBoundary.rst", "api\\generated\\wq\\imod.wq.GeneralizedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.LayerPropertyFlow.rst", "api\\generated\\wq\\imod.wq.MassLoading.rst", "api\\generated\\wq\\imod.wq.OutputControl.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovFlowSolver.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovTransportSolver.rst", "api\\generated\\wq\\imod.wq.PreconditionedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.RechargeHighestActive.rst", "api\\generated\\wq\\imod.wq.RechargeLayers.rst", "api\\generated\\wq\\imod.wq.RechargeTopLayer.rst", "api\\generated\\wq\\imod.wq.River.rst", "api\\generated\\wq\\imod.wq.SeawatModel.rst", "api\\generated\\wq\\imod.wq.SeawatModel.create_time_discretization.rst", "api\\generated\\wq\\imod.wq.TimeDiscretization.rst", "api\\generated\\wq\\imod.wq.TimeVaryingConstantConcentration.rst", "api\\generated\\wq\\imod.wq.VariableDensityFlow.rst", "api\\generated\\wq\\imod.wq.Well.rst", "api\\index.rst", "api\\io.rst", "api\\logging.rst", "api\\metamod.rst", "api\\mf6.rst", "api\\msw.rst", "api\\prepare.rst", "api\\select.rst", "api\\util.rst", "api\\visualize.rst", "api\\wq.rst", "developing\\ci.rst", "developing\\contributing.rst", "developing\\docker.rst", "developing\\documentation.rst", "developing\\examples.rst", "developing\\index.rst", "developing\\releasing.rst", "examples\\imod-wq\\Elder.rst", "examples\\imod-wq\\FreshwaterLens.rst", "examples\\imod-wq\\Henry-wq.rst", "examples\\imod-wq\\Hydrocoin.rst", "examples\\imod-wq\\SaltwaterPocket.rst", "examples\\imod-wq\\VerticalInterface.rst", "examples\\imod-wq\\index.rst", "examples\\imod-wq\\sg_execution_times.rst", "examples\\imodflow\\ImodflowProjectfile.rst", "examples\\imodflow\\index.rst", "examples\\imodflow\\sg_execution_times.rst", "examples\\index.rst", "examples\\metaswap\\index.rst", "examples\\metaswap\\metaswap_example.rst", "examples\\metaswap\\read_metaswap_file.rst", "examples\\metaswap\\sg_execution_times.rst", "examples\\mf6\\Henry.rst", "examples\\mf6\\circle.rst", "examples\\mf6\\circle_partitioned.rst", "examples\\mf6\\circle_transport.rst", "examples\\mf6\\different_ways_to_regrid_models.rst", "examples\\mf6\\ex01_twri.rst", "examples\\mf6\\example_1d_transport.rst", "examples\\mf6\\example_models.rst", "examples\\mf6\\hondsrug.rst", "examples\\mf6\\hondsrug_partitioning.rst", "examples\\mf6\\index.rst", "examples\\mf6\\lake.rst", "examples\\mf6\\sg_execution_times.rst", "examples\\mf6\\transport_2d.rst", "examples\\prepare\\index.rst", "examples\\prepare\\point_interpolation.rst", "examples\\prepare\\polygonize_raster.rst", "examples\\prepare\\rasterize_shp.rst", "examples\\prepare\\reproject.rst", "examples\\prepare\\sg_execution_times.rst", "examples\\visualize\\flowvel_streamlines.rst", "examples\\visualize\\index.rst", "examples\\visualize\\plot_map.rst", "examples\\visualize\\sg_execution_times.rst", "faq\\general.rst", "faq\\how-do-i\\in-out.rst", "faq\\how-do-i\\index.rst", "faq\\how-do-i\\modification.rst", "faq\\how-do-i\\plot.rst", "faq\\how-do-i\\unstructured.rst", "faq\\index.rst", "faq\\known-issues.rst", "faq\\modeling.rst", "faq\\python.rst", "index.rst", "installation.rst", "sg_execution_times.rst", "user-guide\\01-raster-data.rst", "user-guide\\02-vector-data.rst", "user-guide\\03-timeseries-data.rst", "user-guide\\05-unstructured-grids.rst", "user-guide\\06-lazy-evaluation.rst", "user-guide\\07-time-discretization.rst", "user-guide\\08-regridding.rst", "user-guide\\09-topsystem.rst", "user-guide\\10-cleanup.rst", "user-guide\\index.rst", "user-guide\\sg_execution_times.rst"], "indexentries": {"__init__() (imod.couplers.metamod.metamod method)": [[73, "imod.couplers.metamod.MetaMod.__init__", false]], "__init__() (imod.flow.bottom method)": [[15, "imod.flow.Bottom.__init__", false]], "__init__() (imod.flow.boundary method)": [[16, "imod.flow.Boundary.__init__", false]], "__init__() (imod.flow.constanthead method)": [[17, "imod.flow.ConstantHead.__init__", false]], "__init__() (imod.flow.drain method)": [[18, "imod.flow.Drain.__init__", false]], "__init__() (imod.flow.evapotranspiration method)": [[19, "imod.flow.EvapoTranspiration.__init__", false]], "__init__() (imod.flow.generalheadboundary method)": [[20, "imod.flow.GeneralHeadBoundary.__init__", false]], "__init__() (imod.flow.horizontalanisotropy method)": [[21, "imod.flow.HorizontalAnisotropy.__init__", false]], "__init__() (imod.flow.horizontalflowbarrier method)": [[22, "imod.flow.HorizontalFlowBarrier.__init__", false]], "__init__() (imod.flow.horizontalhydraulicconductivity method)": [[23, "imod.flow.HorizontalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.imodflowmodel method)": [[24, "imod.flow.ImodflowModel.__init__", false]], "__init__() (imod.flow.metaswap method)": [[26, "imod.flow.MetaSwap.__init__", false]], "__init__() (imod.flow.preconditionedconjugategradientsolver method)": [[27, "imod.flow.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.flow.recharge method)": [[28, "imod.flow.Recharge.__init__", false]], "__init__() (imod.flow.river method)": [[29, "imod.flow.River.__init__", false]], "__init__() (imod.flow.specificstorage method)": [[30, "imod.flow.SpecificStorage.__init__", false]], "__init__() (imod.flow.startinghead method)": [[31, "imod.flow.StartingHead.__init__", false]], "__init__() (imod.flow.storagecoefficient method)": [[32, "imod.flow.StorageCoefficient.__init__", false]], "__init__() (imod.flow.top method)": [[33, "imod.flow.Top.__init__", false]], "__init__() (imod.flow.verticalanisotropy method)": [[34, "imod.flow.VerticalAnisotropy.__init__", false]], "__init__() (imod.flow.verticalhydraulicconductivity method)": [[35, "imod.flow.VerticalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.well method)": [[36, "imod.flow.Well.__init__", false]], "__init__() (imod.logging.config.loggertype method)": [[58, "imod.logging.config.LoggerType.__init__", false]], "__init__() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.__init__", false]], "__init__() (imod.logging.loglevel.loglevel method)": [[66, "imod.logging.loglevel.LogLevel.__init__", false]], "__init__() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.__init__", false]], "__init__() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.__init__", false]], "__init__() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.__init__", false]], "__init__() (imod.mf6.advectioncentral method)": [[74, "imod.mf6.AdvectionCentral.__init__", false]], "__init__() (imod.mf6.advectiontvd method)": [[75, "imod.mf6.AdvectionTVD.__init__", false]], "__init__() (imod.mf6.advectionupstream method)": [[76, "imod.mf6.AdvectionUpstream.__init__", false]], "__init__() (imod.mf6.apipackage method)": [[77, "imod.mf6.ApiPackage.__init__", false]], "__init__() (imod.mf6.buoyancy method)": [[78, "imod.mf6.Buoyancy.__init__", false]], "__init__() (imod.mf6.constantconcentration method)": [[79, "imod.mf6.ConstantConcentration.__init__", false]], "__init__() (imod.mf6.constanthead method)": [[80, "imod.mf6.ConstantHead.__init__", false]], "__init__() (imod.mf6.dispersion method)": [[85, "imod.mf6.Dispersion.__init__", false]], "__init__() (imod.mf6.drainage method)": [[86, "imod.mf6.Drainage.__init__", false]], "__init__() (imod.mf6.evapotranspiration method)": [[91, "imod.mf6.Evapotranspiration.__init__", false]], "__init__() (imod.mf6.generalheadboundary method)": [[94, "imod.mf6.GeneralHeadBoundary.__init__", false]], "__init__() (imod.mf6.groundwaterflowmodel method)": [[99, "imod.mf6.GroundwaterFlowModel.__init__", false]], "__init__() (imod.mf6.groundwatertransportmodel method)": [[104, "imod.mf6.GroundwaterTransportModel.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[107, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.horizontalflowbarriermultiplier method)": [[109, "imod.mf6.HorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierresistance method)": [[111, "imod.mf6.HorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.immobilestoragetransfer method)": [[113, "imod.mf6.ImmobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.initialconditions method)": [[114, "imod.mf6.InitialConditions.__init__", false]], "__init__() (imod.mf6.layeredwell method)": [[118, "imod.mf6.LayeredWell.__init__", false]], "__init__() (imod.mf6.masssourceloading method)": [[123, "imod.mf6.MassSourceLoading.__init__", false]], "__init__() (imod.mf6.mobilestoragetransfer method)": [[124, "imod.mf6.MobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.modflow6simulation method)": [[125, "imod.mf6.Modflow6Simulation.__init__", false]], "__init__() (imod.mf6.nodepropertyflow method)": [[138, "imod.mf6.NodePropertyFlow.__init__", false]], "__init__() (imod.mf6.outputcontrol method)": [[142, "imod.mf6.OutputControl.__init__", false]], "__init__() (imod.mf6.recharge method)": [[143, "imod.mf6.Recharge.__init__", false]], "__init__() (imod.mf6.regrid.constantheadregridmethod method)": [[187, "imod.mf6.regrid.ConstantHeadRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.discretizationregridmethod method)": [[188, "imod.mf6.regrid.DiscretizationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.dispersionregridmethod method)": [[189, "imod.mf6.regrid.DispersionRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.drainageregridmethod method)": [[190, "imod.mf6.regrid.DrainageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.emptyregridmethod method)": [[191, "imod.mf6.regrid.EmptyRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.evapotranspirationregridmethod method)": [[192, "imod.mf6.regrid.EvapotranspirationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.generalheadboundaryregridmethod method)": [[193, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.initialconditionsregridmethod method)": [[194, "imod.mf6.regrid.InitialConditionsRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.mobilestoragetransferregridmethod method)": [[195, "imod.mf6.regrid.MobileStorageTransferRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.nodepropertyflowregridmethod method)": [[196, "imod.mf6.regrid.NodePropertyFlowRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.rechargeregridmethod method)": [[197, "imod.mf6.regrid.RechargeRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.riverregridmethod method)": [[198, "imod.mf6.regrid.RiverRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.specificstorageregridmethod method)": [[199, "imod.mf6.regrid.SpecificStorageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.storagecoefficientregridmethod method)": [[200, "imod.mf6.regrid.StorageCoefficientRegridMethod.__init__", false]], "__init__() (imod.mf6.river method)": [[147, "imod.mf6.River.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[152, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[154, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[156, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.solution method)": [[159, "imod.mf6.Solution.__init__", false]], "__init__() (imod.mf6.sourcesinkmixing method)": [[163, "imod.mf6.SourceSinkMixing.__init__", false]], "__init__() (imod.mf6.specificstorage method)": [[165, "imod.mf6.SpecificStorage.__init__", false]], "__init__() (imod.mf6.storagecoefficient method)": [[168, "imod.mf6.StorageCoefficient.__init__", false]], "__init__() (imod.mf6.structureddiscretization method)": [[172, "imod.mf6.StructuredDiscretization.__init__", false]], "__init__() (imod.mf6.timediscretization method)": [[173, "imod.mf6.TimeDiscretization.__init__", false]], "__init__() (imod.mf6.unsaturatedzoneflow method)": [[174, "imod.mf6.UnsaturatedZoneFlow.__init__", false]], "__init__() (imod.mf6.verticesdiscretization method)": [[175, "imod.mf6.VerticesDiscretization.__init__", false]], "__init__() (imod.mf6.well method)": [[176, "imod.mf6.Well.__init__", false]], "__init__() (imod.mf6.welldisstructured method)": [[182, "imod.mf6.WellDisStructured.__init__", false]], "__init__() (imod.mf6.welldisvertices method)": [[183, "imod.mf6.WellDisVertices.__init__", false]], "__init__() (imod.msw.annualcropfactors method)": [[201, "imod.msw.AnnualCropFactors.__init__", false]], "__init__() (imod.msw.couplermapping method)": [[202, "imod.msw.CouplerMapping.__init__", false]], "__init__() (imod.msw.evapotranspirationmapping method)": [[203, "imod.msw.EvapotranspirationMapping.__init__", false]], "__init__() (imod.msw.griddata method)": [[204, "imod.msw.GridData.__init__", false]], "__init__() (imod.msw.idfmapping method)": [[205, "imod.msw.IdfMapping.__init__", false]], "__init__() (imod.msw.infiltration method)": [[206, "imod.msw.Infiltration.__init__", false]], "__init__() (imod.msw.initialconditionsequilibrium method)": [[207, "imod.msw.InitialConditionsEquilibrium.__init__", false]], "__init__() (imod.msw.initialconditionspercolation method)": [[208, "imod.msw.InitialConditionsPercolation.__init__", false]], "__init__() (imod.msw.initialconditionsrootzonepressurehead method)": [[209, "imod.msw.InitialConditionsRootzonePressureHead.__init__", false]], "__init__() (imod.msw.initialconditionssavedstate method)": [[210, "imod.msw.InitialConditionsSavedState.__init__", false]], "__init__() (imod.msw.landuseoptions method)": [[211, "imod.msw.LanduseOptions.__init__", false]], "__init__() (imod.msw.metaswapmodel method)": [[212, "imod.msw.MetaSwapModel.__init__", false]], "__init__() (imod.msw.meteogrid method)": [[213, "imod.msw.MeteoGrid.__init__", false]], "__init__() (imod.msw.ponding method)": [[214, "imod.msw.Ponding.__init__", false]], "__init__() (imod.msw.precipitationmapping method)": [[215, "imod.msw.PrecipitationMapping.__init__", false]], "__init__() (imod.msw.scalingfactors method)": [[216, "imod.msw.ScalingFactors.__init__", false]], "__init__() (imod.msw.sprinkling method)": [[217, "imod.msw.Sprinkling.__init__", false]], "__init__() (imod.msw.timeoutputcontrol method)": [[218, "imod.msw.TimeOutputControl.__init__", false]], "__init__() (imod.msw.variableoutputcontrol method)": [[219, "imod.msw.VariableOutputControl.__init__", false]], "__init__() (imod.prepare.allocation_option method)": [[220, "imod.prepare.ALLOCATION_OPTION.__init__", false]], "__init__() (imod.prepare.distributing_option method)": [[221, "imod.prepare.DISTRIBUTING_OPTION.__init__", false]], "__init__() (imod.prepare.layerregridder method)": [[222, "imod.prepare.LayerRegridder.__init__", false]], "__init__() (imod.prepare.regridder method)": [[223, "imod.prepare.Regridder.__init__", false]], "__init__() (imod.prepare.voxelizer method)": [[224, "imod.prepare.Voxelizer.__init__", false]], "__init__() (imod.visualize.gridanimation3d method)": [[280, "imod.visualize.GridAnimation3D.__init__", false]], "__init__() (imod.visualize.staticgridanimation3d method)": [[281, "imod.visualize.StaticGridAnimation3D.__init__", false]], "__init__() (imod.wq.advectionfinitedifference method)": [[291, "imod.wq.AdvectionFiniteDifference.__init__", false]], "__init__() (imod.wq.advectionhybridmoc method)": [[292, "imod.wq.AdvectionHybridMOC.__init__", false]], "__init__() (imod.wq.advectionmoc method)": [[293, "imod.wq.AdvectionMOC.__init__", false]], "__init__() (imod.wq.advectionmodifiedmoc method)": [[294, "imod.wq.AdvectionModifiedMOC.__init__", false]], "__init__() (imod.wq.advectiontvd method)": [[295, "imod.wq.AdvectionTVD.__init__", false]], "__init__() (imod.wq.basicflow method)": [[296, "imod.wq.BasicFlow.__init__", false]], "__init__() (imod.wq.basictransport method)": [[297, "imod.wq.BasicTransport.__init__", false]], "__init__() (imod.wq.constanthead method)": [[298, "imod.wq.ConstantHead.__init__", false]], "__init__() (imod.wq.dispersion method)": [[299, "imod.wq.Dispersion.__init__", false]], "__init__() (imod.wq.drainage method)": [[300, "imod.wq.Drainage.__init__", false]], "__init__() (imod.wq.evapotranspirationhighestactive method)": [[301, "imod.wq.EvapotranspirationHighestActive.__init__", false]], "__init__() (imod.wq.evapotranspirationlayers method)": [[302, "imod.wq.EvapotranspirationLayers.__init__", false]], "__init__() (imod.wq.evapotranspirationtoplayer method)": [[303, "imod.wq.EvapotranspirationTopLayer.__init__", false]], "__init__() (imod.wq.generalheadboundary method)": [[304, "imod.wq.GeneralHeadBoundary.__init__", false]], "__init__() (imod.wq.generalizedconjugategradientsolver method)": [[305, "imod.wq.GeneralizedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.layerpropertyflow method)": [[306, "imod.wq.LayerPropertyFlow.__init__", false]], "__init__() (imod.wq.massloading method)": [[307, "imod.wq.MassLoading.__init__", false]], "__init__() (imod.wq.outputcontrol method)": [[308, "imod.wq.OutputControl.__init__", false]], "__init__() (imod.wq.parallelkrylovflowsolver method)": [[309, "imod.wq.ParallelKrylovFlowSolver.__init__", false]], "__init__() (imod.wq.parallelkrylovtransportsolver method)": [[310, "imod.wq.ParallelKrylovTransportSolver.__init__", false]], "__init__() (imod.wq.preconditionedconjugategradientsolver method)": [[311, "imod.wq.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.rechargehighestactive method)": [[312, "imod.wq.RechargeHighestActive.__init__", false]], "__init__() (imod.wq.rechargelayers method)": [[313, "imod.wq.RechargeLayers.__init__", false]], "__init__() (imod.wq.rechargetoplayer method)": [[314, "imod.wq.RechargeTopLayer.__init__", false]], "__init__() (imod.wq.river method)": [[315, "imod.wq.River.__init__", false]], "__init__() (imod.wq.seawatmodel method)": [[316, "imod.wq.SeawatModel.__init__", false]], "__init__() (imod.wq.timediscretization method)": [[318, "imod.wq.TimeDiscretization.__init__", false]], "__init__() (imod.wq.timevaryingconstantconcentration method)": [[319, "imod.wq.TimeVaryingConstantConcentration.__init__", false]], "__init__() (imod.wq.variabledensityflow method)": [[320, "imod.wq.VariableDensityFlow.__init__", false]], "__init__() (imod.wq.well method)": [[321, "imod.wq.Well.__init__", false]], "active_grid_boundary_xy() (in module imod.select)": [[256, "imod.select.active_grid_boundary_xy", false]], "advectioncentral (class in imod.mf6)": [[74, "imod.mf6.AdvectionCentral", false]], "advectionfinitedifference (class in imod.wq)": [[291, "imod.wq.AdvectionFiniteDifference", false]], "advectionhybridmoc (class in imod.wq)": [[292, "imod.wq.AdvectionHybridMOC", false]], "advectionmoc (class in imod.wq)": [[293, "imod.wq.AdvectionMOC", false]], "advectionmodifiedmoc (class in imod.wq)": [[294, "imod.wq.AdvectionModifiedMOC", false]], "advectiontvd (class in imod.mf6)": [[75, "imod.mf6.AdvectionTVD", false]], "advectiontvd (class in imod.wq)": [[295, "imod.wq.AdvectionTVD", false]], "advectionupstream (class in imod.mf6)": [[76, "imod.mf6.AdvectionUpstream", false]], "allocate_drn_cells() (in module imod.prepare)": [[225, "imod.prepare.allocate_drn_cells", false]], "allocate_ghb_cells() (in module imod.prepare)": [[226, "imod.prepare.allocate_ghb_cells", false]], "allocate_rch_cells() (in module imod.prepare)": [[227, "imod.prepare.allocate_rch_cells", false]], "allocate_riv_cells() (in module imod.prepare)": [[228, "imod.prepare.allocate_riv_cells", false]], "allocation_option (class in imod.prepare)": [[220, "imod.prepare.ALLOCATION_OPTION", false]], "annualcropfactors (class in imod.msw)": [[201, "imod.msw.AnnualCropFactors", false]], "apipackage (class in imod.mf6)": [[77, "imod.mf6.ApiPackage", false]], "assign_wells() (in module imod.prepare)": [[229, "imod.prepare.assign_wells", false]], "basicflow (class in imod.wq)": [[296, "imod.wq.BasicFlow", false]], "basictransport (class in imod.wq)": [[297, "imod.wq.BasicTransport", false]], "bottom (class in imod.flow)": [[15, "imod.flow.Bottom", false]], "boundary (class in imod.flow)": [[16, "imod.flow.Boundary", false]], "buoyancy (class in imod.mf6)": [[78, "imod.mf6.Buoyancy", false]], "c_leakage() (in module imod.prepare)": [[230, "imod.prepare.c_leakage", false]], "c_radial() (in module imod.prepare)": [[231, "imod.prepare.c_radial", false]], "calculate_gxg() (in module imod.evaluate)": [[3, "imod.evaluate.calculate_gxg", false]], "cd() (in module imod.util)": [[265, "imod.util.cd", false]], "cell_max_nparticles (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.cell_max_nparticles", false]], "cell_min_nparticles (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.cell_min_nparticles", false]], "celltable() (in module imod.prepare)": [[232, "imod.prepare.celltable", false]], "check (imod.wq.seawatmodel attribute)": [[316, "imod.wq.SeawatModel.check", false]], "cleanup() (imod.mf6.drainage method)": [[87, "imod.mf6.Drainage.cleanup", false]], "cleanup() (imod.mf6.generalheadboundary method)": [[95, "imod.mf6.GeneralHeadBoundary.cleanup", false]], "cleanup() (imod.mf6.river method)": [[148, "imod.mf6.River.cleanup", false]], "cleanup() (imod.mf6.well method)": [[177, "imod.mf6.Well.cleanup", false]], "cleanup_drn() (in module imod.prepare)": [[233, "imod.prepare.cleanup_drn", false]], "cleanup_ghb() (in module imod.prepare)": [[234, "imod.prepare.cleanup_ghb", false]], "cleanup_riv() (in module imod.prepare)": [[235, "imod.prepare.cleanup_riv", false]], "cleanup_wel() (in module imod.prepare)": [[236, "imod.prepare.cleanup_wel", false]], "clip_box() (imod.mf6.modflow6simulation method)": [[126, "imod.mf6.Modflow6Simulation.clip_box", false]], "configure() (in module imod.logging.config)": [[59, "imod.logging.config.configure", false]], "constantconcentration (class in imod.mf6)": [[79, "imod.mf6.ConstantConcentration", false]], "constanthead (class in imod.flow)": [[17, "imod.flow.ConstantHead", false]], "constanthead (class in imod.mf6)": [[80, "imod.mf6.ConstantHead", false]], "constanthead (class in imod.wq)": [[298, "imod.wq.ConstantHead", false]], "constantheadregridmethod (class in imod.mf6.regrid)": [[187, "imod.mf6.regrid.ConstantHeadRegridMethod", false]], "convert_pointwaterhead_freshwaterhead() (in module imod.evaluate)": [[4, "imod.evaluate.convert_pointwaterhead_freshwaterhead", false]], "coord_reference() (in module imod.util)": [[266, "imod.util.coord_reference", false]], "couplermapping (class in imod.msw)": [[202, "imod.msw.CouplerMapping", false]], "courant (imod.wq.advectionfinitedifference attribute)": [[291, "imod.wq.AdvectionFiniteDifference.courant", false]], "courant (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.courant", false]], "courant (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.courant", false]], "courant (imod.wq.advectionmodifiedmoc attribute)": [[294, "imod.wq.AdvectionModifiedMOC.courant", false]], "courant (imod.wq.advectiontvd attribute)": [[295, "imod.wq.AdvectionTVD.courant", false]], "create_layered_top() (in module imod.prepare)": [[237, "imod.prepare.create_layered_top", false]], "create_time_discretization() (imod.flow.imodflowmodel method)": [[25, "imod.flow.ImodflowModel.create_time_discretization", false]], "create_time_discretization() (imod.mf6.modflow6simulation method)": [[127, "imod.mf6.Modflow6Simulation.create_time_discretization", false]], "create_time_discretization() (imod.wq.seawatmodel method)": [[317, "imod.wq.SeawatModel.create_time_discretization", false]], "critical (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.CRITICAL", false]], "critical() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.critical", false]], "critical() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.critical", false]], "critical() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.critical", false]], "critical() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.critical", false]], "cross_section() (in module imod.visualize)": [[282, "imod.visualize.cross_section", false]], "cross_section_line() (in module imod.select)": [[257, "imod.select.cross_section_line", false]], "cross_section_linestring() (in module imod.select)": [[258, "imod.select.cross_section_linestring", false]], "dceps (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.dceps", false]], "dchmoc (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.dchmoc", false]], "dconcentration_epsilon (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.dconcentration_epsilon", false]], "dconcentration_epsilon (imod.wq.advectionmodifiedmoc attribute)": [[294, "imod.wq.AdvectionModifiedMOC.dconcentration_epsilon", false]], "debug (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.DEBUG", false]], "debug() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.debug", false]], "debug() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.debug", false]], "debug() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.debug", false]], "debug() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.debug", false]], "discretizationregridmethod (class in imod.mf6.regrid)": [[188, "imod.mf6.regrid.DiscretizationRegridMethod", false]], "dispersion (class in imod.mf6)": [[85, "imod.mf6.Dispersion", false]], "dispersion (class in imod.wq)": [[299, "imod.wq.Dispersion", false]], "dispersionregridmethod (class in imod.mf6.regrid)": [[189, "imod.mf6.regrid.DispersionRegridMethod", false]], "distribute_drn_conductance() (in module imod.prepare)": [[238, "imod.prepare.distribute_drn_conductance", false]], "distribute_ghb_conductance() (in module imod.prepare)": [[239, "imod.prepare.distribute_ghb_conductance", false]], "distribute_riv_conductance() (in module imod.prepare)": [[240, "imod.prepare.distribute_riv_conductance", false]], "distributing_option (class in imod.prepare)": [[221, "imod.prepare.DISTRIBUTING_OPTION", false]], "drain (class in imod.flow)": [[18, "imod.flow.Drain", false]], "drainage (class in imod.mf6)": [[86, "imod.mf6.Drainage", false]], "drainage (class in imod.wq)": [[300, "imod.wq.Drainage", false]], "drainageregridmethod (class in imod.mf6.regrid)": [[190, "imod.mf6.regrid.DrainageRegridMethod", false]], "dump() (imod.mf6.groundwaterflowmodel method)": [[100, "imod.mf6.GroundwaterFlowModel.dump", false]], "dump() (imod.mf6.groundwatertransportmodel method)": [[105, "imod.mf6.GroundwaterTransportModel.dump", false]], "dump() (imod.mf6.modflow6simulation method)": [[128, "imod.mf6.Modflow6Simulation.dump", false]], "empty_2d() (in module imod.util)": [[267, "imod.util.empty_2d", false]], "empty_2d_transient() (in module imod.util)": [[268, "imod.util.empty_2d_transient", false]], "empty_3d() (in module imod.util)": [[269, "imod.util.empty_3d", false]], "empty_3d_transient() (in module imod.util)": [[270, "imod.util.empty_3d_transient", false]], "emptyregridmethod (class in imod.mf6.regrid)": [[191, "imod.mf6.regrid.EmptyRegridMethod", false]], "error (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.ERROR", false]], "error() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.error", false]], "error() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.error", false]], "error() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.error", false]], "error() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.error", false]], "evapotranspiration (class in imod.flow)": [[19, "imod.flow.EvapoTranspiration", false]], "evapotranspiration (class in imod.mf6)": [[91, "imod.mf6.Evapotranspiration", false]], "evapotranspirationhighestactive (class in imod.wq)": [[301, "imod.wq.EvapotranspirationHighestActive", false]], "evapotranspirationlayers (class in imod.wq)": [[302, "imod.wq.EvapotranspirationLayers", false]], "evapotranspirationmapping (class in imod.msw)": [[203, "imod.msw.EvapotranspirationMapping", false]], "evapotranspirationregridmethod (class in imod.mf6.regrid)": [[192, "imod.mf6.regrid.EvapotranspirationRegridMethod", false]], "evapotranspirationtoplayer (class in imod.wq)": [[303, "imod.wq.EvapotranspirationTopLayer", false]], "extra_overlap (imod.prepare.regridder attribute)": [[223, "imod.prepare.Regridder.extra_overlap", false]], "facebudget() (in module imod.evaluate)": [[5, "imod.evaluate.facebudget", false]], "fill() (in module imod.prepare)": [[241, "imod.prepare.fill", false]], "flow_velocity() (in module imod.evaluate)": [[6, "imod.evaluate.flow_velocity", false]], "from_flow_model() (imod.mf6.sourcesinkmixing static method)": [[164, "imod.mf6.SourceSinkMixing.from_flow_model", false]], "from_imod5_data() (imod.mf6.constanthead class method)": [[81, "imod.mf6.ConstantHead.from_imod5_data", false]], "from_imod5_data() (imod.mf6.drainage class method)": [[88, "imod.mf6.Drainage.from_imod5_data", false]], "from_imod5_data() (imod.mf6.generalheadboundary class method)": [[96, "imod.mf6.GeneralHeadBoundary.from_imod5_data", false]], "from_imod5_data() (imod.mf6.groundwaterflowmodel class method)": [[101, "imod.mf6.GroundwaterFlowModel.from_imod5_data", false]], "from_imod5_data() (imod.mf6.initialconditions class method)": [[115, "imod.mf6.InitialConditions.from_imod5_data", false]], "from_imod5_data() (imod.mf6.layeredwell class method)": [[119, "imod.mf6.LayeredWell.from_imod5_data", false]], "from_imod5_data() (imod.mf6.modflow6simulation class method)": [[129, "imod.mf6.Modflow6Simulation.from_imod5_data", false]], "from_imod5_data() (imod.mf6.nodepropertyflow class method)": [[139, "imod.mf6.NodePropertyFlow.from_imod5_data", false]], "from_imod5_data() (imod.mf6.recharge class method)": [[144, "imod.mf6.Recharge.from_imod5_data", false]], "from_imod5_data() (imod.mf6.river class method)": [[149, "imod.mf6.River.from_imod5_data", false]], "from_imod5_data() (imod.mf6.singlelayerhorizontalflowbarrierresistance class method)": [[157, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", false]], "from_imod5_data() (imod.mf6.storagecoefficient class method)": [[169, "imod.mf6.StorageCoefficient.from_imod5_data", false]], "from_imod5_data() (imod.mf6.well class method)": [[178, "imod.mf6.Well.from_imod5_data", false]], "from_imod5_shd_data() (imod.mf6.constanthead class method)": [[82, "imod.mf6.ConstantHead.from_imod5_shd_data", false]], "from_mdal_compliant_ugrid2d() (in module imod.util)": [[271, "imod.util.from_mdal_compliant_ugrid2d", false]], "gdal_rasterize() (in module imod.prepare)": [[242, "imod.prepare.gdal_rasterize", false]], "generalheadboundary (class in imod.flow)": [[20, "imod.flow.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.mf6)": [[94, "imod.mf6.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.wq)": [[304, "imod.wq.GeneralHeadBoundary", false]], "generalheadboundaryregridmethod (class in imod.mf6.regrid)": [[193, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", false]], "generalizedconjugategradientsolver (class in imod.wq)": [[305, "imod.wq.GeneralizedConjugateGradientSolver", false]], "get_lower_active_grid_cells() (in module imod.prepare)": [[243, "imod.prepare.get_lower_active_grid_cells", false]], "get_lower_active_layer_number() (in module imod.prepare)": [[244, "imod.prepare.get_lower_active_layer_number", false]], "get_upper_active_grid_cells() (in module imod.prepare)": [[245, "imod.prepare.get_upper_active_grid_cells", false]], "get_upper_active_layer_number() (in module imod.prepare)": [[246, "imod.prepare.get_upper_active_layer_number", false]], "grid_3d() (in module imod.visualize)": [[283, "imod.visualize.grid_3d", false]], "grid_boundary_xy() (in module imod.select)": [[259, "imod.select.grid_boundary_xy", false]], "gridanimation3d (class in imod.visualize)": [[280, "imod.visualize.GridAnimation3D", false]], "griddata (class in imod.msw)": [[204, "imod.msw.GridData", false]], "groundwaterflowmodel (class in imod.mf6)": [[99, "imod.mf6.GroundwaterFlowModel", false]], "groundwatertransportmodel (class in imod.mf6)": [[104, "imod.mf6.GroundwaterTransportModel", false]], "header() (in module imod.formats.idf)": [[40, "imod.formats.idf.header", false]], "header() (in module imod.formats.rasterio)": [[53, "imod.formats.rasterio.header", false]], "horizontalanisotropy (class in imod.flow)": [[21, "imod.flow.HorizontalAnisotropy", false]], "horizontalflowbarrier (class in imod.flow)": [[22, "imod.flow.HorizontalFlowBarrier", false]], "horizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[107, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", false]], "horizontalflowbarriermultiplier (class in imod.mf6)": [[109, "imod.mf6.HorizontalFlowBarrierMultiplier", false]], "horizontalflowbarrierresistance (class in imod.mf6)": [[111, "imod.mf6.HorizontalFlowBarrierResistance", false]], "horizontalhydraulicconductivity (class in imod.flow)": [[23, "imod.flow.HorizontalHydraulicConductivity", false]], "idfmapping (class in imod.msw)": [[205, "imod.msw.IdfMapping", false]], "ignore_warnings() (in module imod.util)": [[272, "imod.util.ignore_warnings", false]], "ilogger (class in imod.logging.ilogger)": [[61, "imod.logging.ilogger.ILogger", false]], "immobilestoragetransfer (class in imod.mf6)": [[113, "imod.mf6.ImmobileStorageTransfer", false]], "imod.logging": [[56, "module-imod.logging", false]], "imod.logging.config": [[57, "module-imod.logging.config", false]], "imod.logging.ilogger": [[60, "module-imod.logging.ilogger", false]], "imod.logging.logging_decorators": [[62, "module-imod.logging.logging_decorators", false]], "imod.logging.loglevel": [[65, "module-imod.logging.loglevel", false]], "imod.logging.logurulogger": [[67, "module-imod.logging.logurulogger", false]], "imod.logging.nulllogger": [[69, "module-imod.logging.nulllogger", false]], "imod.logging.pythonlogger": [[71, "module-imod.logging.pythonlogger", false]], "imodflowmodel (class in imod.flow)": [[24, "imod.flow.ImodflowModel", false]], "imshow_topview() (in module imod.visualize)": [[284, "imod.visualize.imshow_topview", false]], "infiltration (class in imod.msw)": [[206, "imod.msw.Infiltration", false]], "info (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.INFO", false]], "info() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.info", false]], "info() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.info", false]], "info() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.info", false]], "info() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.info", false]], "init_log_decorator() (in module imod.logging.logging_decorators)": [[63, "imod.logging.logging_decorators.init_log_decorator", false]], "initialconditions (class in imod.mf6)": [[114, "imod.mf6.InitialConditions", false]], "initialconditionsequilibrium (class in imod.msw)": [[207, "imod.msw.InitialConditionsEquilibrium", false]], "initialconditionspercolation (class in imod.msw)": [[208, "imod.msw.InitialConditionsPercolation", false]], "initialconditionsregridmethod (class in imod.mf6.regrid)": [[194, "imod.mf6.regrid.InitialConditionsRegridMethod", false]], "initialconditionsrootzonepressurehead (class in imod.msw)": [[209, "imod.msw.InitialConditionsRootzonePressureHead", false]], "initialconditionssavedstate (class in imod.msw)": [[210, "imod.msw.InitialConditionsSavedState", false]], "interpolate_value_boundaries() (in module imod.evaluate)": [[7, "imod.evaluate.interpolate_value_boundaries", false]], "intra_cell_boundary_conditions() (in module imod.evaluate)": [[8, "imod.evaluate.intra_cell_boundary_conditions", false]], "landuseoptions (class in imod.msw)": [[211, "imod.msw.LanduseOptions", false]], "laplace_interpolate() (in module imod.prepare)": [[247, "imod.prepare.laplace_interpolate", false]], "layeredwell (class in imod.mf6)": [[118, "imod.mf6.LayeredWell", false]], "layerpropertyflow (class in imod.wq)": [[306, "imod.wq.LayerPropertyFlow", false]], "layerregridder (class in imod.prepare)": [[222, "imod.prepare.LayerRegridder", false]], "line_3d() (in module imod.visualize)": [[285, "imod.visualize.line_3d", false]], "linestring_to_square_zpolygons() (in module imod.prepare)": [[248, "imod.prepare.linestring_to_square_zpolygons", false]], "linestring_to_trapezoid_zpolygons() (in module imod.prepare)": [[249, "imod.prepare.linestring_to_trapezoid_zpolygons", false]], "log() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.log", false]], "log() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.log", false]], "log() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.log", false]], "log() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.log", false]], "loggertype (class in imod.logging.config)": [[58, "imod.logging.config.LoggerType", false]], "loglevel (class in imod.logging.loglevel)": [[66, "imod.logging.loglevel.LogLevel", false]], "loguru (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.LOGURU", false]], "logurulogger (class in imod.logging.logurulogger)": [[68, "imod.logging.logurulogger.LoguruLogger", false]], "mask() (imod.mf6.constanthead method)": [[83, "imod.mf6.ConstantHead.mask", false]], "mask() (imod.mf6.drainage method)": [[89, "imod.mf6.Drainage.mask", false]], "mask() (imod.mf6.evapotranspiration method)": [[92, "imod.mf6.Evapotranspiration.mask", false]], "mask() (imod.mf6.generalheadboundary method)": [[97, "imod.mf6.GeneralHeadBoundary.mask", false]], "mask() (imod.mf6.initialconditions method)": [[116, "imod.mf6.InitialConditions.mask", false]], "mask() (imod.mf6.layeredwell method)": [[120, "imod.mf6.LayeredWell.mask", false]], "mask() (imod.mf6.nodepropertyflow method)": [[140, "imod.mf6.NodePropertyFlow.mask", false]], "mask() (imod.mf6.recharge method)": [[145, "imod.mf6.Recharge.mask", false]], "mask() (imod.mf6.river method)": [[150, "imod.mf6.River.mask", false]], "mask() (imod.mf6.specificstorage method)": [[166, "imod.mf6.SpecificStorage.mask", false]], "mask() (imod.mf6.storagecoefficient method)": [[170, "imod.mf6.StorageCoefficient.mask", false]], "mask() (imod.mf6.well method)": [[179, "imod.mf6.Well.mask", false]], "mask_all_packages() (imod.mf6.groundwaterflowmodel method)": [[102, "imod.mf6.GroundwaterFlowModel.mask_all_packages", false]], "mask_all_packages() (imod.mf6.groundwatertransportmodel method)": [[106, "imod.mf6.GroundwaterTransportModel.mask_all_packages", false]], "massloading (class in imod.wq)": [[307, "imod.wq.MassLoading", false]], "masssourceloading (class in imod.mf6)": [[123, "imod.mf6.MassSourceLoading", false]], "max_nparticles (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.max_nparticles", false]], "max_particles (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.max_particles", false]], "mdal_compliant_ugrid2d() (in module imod.util)": [[273, "imod.util.mdal_compliant_ugrid2d", false]], "metamod (class in imod.couplers.metamod)": [[73, "imod.couplers.metamod.MetaMod", false]], "metaswap (class in imod.flow)": [[26, "imod.flow.MetaSwap", false]], "metaswapmodel (class in imod.msw)": [[212, "imod.msw.MetaSwapModel", false]], "meteogrid (class in imod.msw)": [[213, "imod.msw.MeteoGrid", false]], "method (imod.prepare.layerregridder attribute)": [[222, "imod.prepare.LayerRegridder.method", false]], "method (imod.prepare.regridder attribute)": [[223, "imod.prepare.Regridder.method", false]], "method (imod.prepare.voxelizer attribute)": [[224, "imod.prepare.Voxelizer.method", false]], "mobilestoragetransfer (class in imod.mf6)": [[124, "imod.mf6.MobileStorageTransfer", false]], "mobilestoragetransferregridmethod (class in imod.mf6.regrid)": [[195, "imod.mf6.regrid.MobileStorageTransferRegridMethod", false]], "modelname (imod.flow.imodflowmodel attribute)": [[24, "imod.flow.ImodflowModel.modelname", false]], "modelname (imod.wq.seawatmodel attribute)": [[316, "imod.wq.SeawatModel.modelname", false]], "modflow6simulation (class in imod.mf6)": [[125, "imod.mf6.Modflow6Simulation", false]], "module": [[56, "module-imod.logging", false], [57, "module-imod.logging.config", false], [60, "module-imod.logging.ilogger", false], [62, "module-imod.logging.logging_decorators", false], [65, "module-imod.logging.loglevel", false], [67, "module-imod.logging.logurulogger", false], [69, "module-imod.logging.nulllogger", false], [71, "module-imod.logging.pythonlogger", false]], "ndim_regrid (imod.prepare.regridder attribute)": [[223, "imod.prepare.Regridder.ndim_regrid", false]], "nodepropertyflow (class in imod.mf6)": [[138, "imod.mf6.NodePropertyFlow", false]], "nodepropertyflowregridmethod (class in imod.mf6.regrid)": [[196, "imod.mf6.regrid.NodePropertyFlowRegridMethod", false]], "nparticles_advection (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.nparticles_advection", false]], "nparticles_no_advection (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.nparticles_no_advection", false]], "nph (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.nph", false]], "npl (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.npl", false]], "nplane (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.nplane", false]], "nplane (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.nplane", false]], "npmax (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.npmax", false]], "npmin (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.npmin", false]], "null (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.NULL", false]], "nulllogger (class in imod.logging.nulllogger)": [[70, "imod.logging.nulllogger.NullLogger", false]], "open() (in module imod.formats.idf)": [[41, "imod.formats.idf.open", false]], "open() (in module imod.formats.rasterio)": [[54, "imod.formats.rasterio.open", false]], "open_cbc() (in module imod.mf6)": [[184, "imod.mf6.open_cbc", false]], "open_concentration() (imod.mf6.modflow6simulation method)": [[130, "imod.mf6.Modflow6Simulation.open_concentration", false]], "open_dataset() (in module imod.formats.idf)": [[42, "imod.formats.idf.open_dataset", false]], "open_flow_budget() (imod.mf6.modflow6simulation method)": [[131, "imod.mf6.Modflow6Simulation.open_flow_budget", false]], "open_hds() (in module imod.mf6)": [[185, "imod.mf6.open_hds", false]], "open_head() (imod.mf6.modflow6simulation method)": [[132, "imod.mf6.Modflow6Simulation.open_head", false]], "open_projectfile_data() (in module imod.formats.prj)": [[50, "imod.formats.prj.open_projectfile_data", false]], "open_subdomains() (in module imod.formats.idf)": [[43, "imod.formats.idf.open_subdomains", false]], "open_transport_budget() (imod.mf6.modflow6simulation method)": [[133, "imod.mf6.Modflow6Simulation.open_transport_budget", false]], "outputcontrol (class in imod.mf6)": [[142, "imod.mf6.OutputControl", false]], "outputcontrol (class in imod.wq)": [[308, "imod.wq.OutputControl", false]], "parallelkrylovflowsolver (class in imod.wq)": [[309, "imod.wq.ParallelKrylovFlowSolver", false]], "parallelkrylovtransportsolver (class in imod.wq)": [[310, "imod.wq.ParallelKrylovTransportSolver", false]], "plot_map() (in module imod.visualize)": [[286, "imod.visualize.plot_map", false]], "points_in_bounds() (in module imod.select)": [[260, "imod.select.points_in_bounds", false]], "points_indices() (in module imod.select)": [[261, "imod.select.points_indices", false]], "points_set_values() (in module imod.select)": [[262, "imod.select.points_set_values", false]], "points_values() (in module imod.select)": [[263, "imod.select.points_values", false]], "polygonize() (in module imod.prepare)": [[250, "imod.prepare.polygonize", false]], "ponding (class in imod.msw)": [[214, "imod.msw.Ponding", false]], "precipitationmapping (class in imod.msw)": [[215, "imod.msw.PrecipitationMapping", false]], "preconditionedconjugategradientsolver (class in imod.flow)": [[27, "imod.flow.PreconditionedConjugateGradientSolver", false]], "preconditionedconjugategradientsolver (class in imod.wq)": [[311, "imod.wq.PreconditionedConjugateGradientSolver", false]], "prepare_wel_for_mf6() (imod.mf6.groundwaterflowmodel method)": [[103, "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", false]], "print_if_error() (in module imod.util)": [[274, "imod.util.print_if_error", false]], "python (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.PYTHON", false]], "pythonlogger (class in imod.logging.pythonlogger)": [[72, "imod.logging.pythonlogger.PythonLogger", false]], "quiver() (in module imod.visualize)": [[287, "imod.visualize.quiver", false]], "quiver_line() (in module imod.evaluate)": [[9, "imod.evaluate.quiver_line", false]], "quiver_linestring() (in module imod.evaluate)": [[10, "imod.evaluate.quiver_linestring", false]], "rasterize() (in module imod.prepare)": [[251, "imod.prepare.rasterize", false]], "rasterize_celltable() (in module imod.prepare)": [[252, "imod.prepare.rasterize_celltable", false]], "read() (in module imod.formats.gen)": [[37, "imod.formats.gen.read", false]], "read() (in module imod.formats.ipf)": [[45, "imod.formats.ipf.read", false]], "read_ascii() (in module imod.formats.gen)": [[38, "imod.formats.gen.read_ascii", false]], "read_associated() (in module imod.formats.ipf)": [[46, "imod.formats.ipf.read_associated", false]], "read_cbc_headers() (in module imod.mf6)": [[186, "imod.mf6.read_cbc_headers", false]], "read_imod_legend() (in module imod.visualize)": [[288, "imod.visualize.read_imod_legend", false]], "read_projectfile() (in module imod.formats.prj)": [[51, "imod.formats.prj.read_projectfile", false]], "read_timfile() (in module imod.formats.prj)": [[52, "imod.formats.prj.read_timfile", false]], "recharge (class in imod.flow)": [[28, "imod.flow.Recharge", false]], "recharge (class in imod.mf6)": [[143, "imod.mf6.Recharge", false]], "rechargehighestactive (class in imod.wq)": [[312, "imod.wq.RechargeHighestActive", false]], "rechargelayers (class in imod.wq)": [[313, "imod.wq.RechargeLayers", false]], "rechargeregridmethod (class in imod.mf6.regrid)": [[197, "imod.mf6.regrid.RechargeRegridMethod", false]], "rechargetoplayer (class in imod.wq)": [[314, "imod.wq.RechargeTopLayer", false]], "regrid_like() (imod.mf6.constanthead method)": [[84, "imod.mf6.ConstantHead.regrid_like", false]], "regrid_like() (imod.mf6.drainage method)": [[90, "imod.mf6.Drainage.regrid_like", false]], "regrid_like() (imod.mf6.evapotranspiration method)": [[93, "imod.mf6.Evapotranspiration.regrid_like", false]], "regrid_like() (imod.mf6.generalheadboundary method)": [[98, "imod.mf6.GeneralHeadBoundary.regrid_like", false]], "regrid_like() (imod.mf6.initialconditions method)": [[117, "imod.mf6.InitialConditions.regrid_like", false]], "regrid_like() (imod.mf6.layeredwell method)": [[121, "imod.mf6.LayeredWell.regrid_like", false]], "regrid_like() (imod.mf6.modflow6simulation method)": [[134, "imod.mf6.Modflow6Simulation.regrid_like", false]], "regrid_like() (imod.mf6.nodepropertyflow method)": [[141, "imod.mf6.NodePropertyFlow.regrid_like", false]], "regrid_like() (imod.mf6.recharge method)": [[146, "imod.mf6.Recharge.regrid_like", false]], "regrid_like() (imod.mf6.river method)": [[151, "imod.mf6.River.regrid_like", false]], "regrid_like() (imod.mf6.specificstorage method)": [[167, "imod.mf6.SpecificStorage.regrid_like", false]], "regrid_like() (imod.mf6.storagecoefficient method)": [[171, "imod.mf6.StorageCoefficient.regrid_like", false]], "regrid_like() (imod.mf6.well method)": [[180, "imod.mf6.Well.regrid_like", false]], "regridder (class in imod.prepare)": [[223, "imod.prepare.Regridder", false]], "reproject() (in module imod.prepare)": [[253, "imod.prepare.reproject", false]], "river (class in imod.flow)": [[29, "imod.flow.River", false]], "river (class in imod.mf6)": [[147, "imod.mf6.River", false]], "river (class in imod.wq)": [[315, "imod.wq.River", false]], "riverregridmethod (class in imod.mf6.regrid)": [[198, "imod.mf6.regrid.RiverRegridMethod", false]], "run() (imod.mf6.modflow6simulation method)": [[135, "imod.mf6.Modflow6Simulation.run", false]], "save() (in module imod.formats.idf)": [[44, "imod.formats.idf.save", false]], "save() (in module imod.formats.ipf)": [[47, "imod.formats.ipf.save", false]], "save() (in module imod.formats.rasterio)": [[55, "imod.formats.rasterio.save", false]], "scalingfactors (class in imod.msw)": [[216, "imod.msw.ScalingFactors", false]], "seawatmodel (class in imod.wq)": [[316, "imod.wq.SeawatModel", false]], "singlelayerhorizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[152, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", false]], "singlelayerhorizontalflowbarriermultiplier (class in imod.mf6)": [[154, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", false]], "singlelayerhorizontalflowbarrierresistance (class in imod.mf6)": [[156, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", false]], "sink_nparticles (imod.wq.advectionmodifiedmoc attribute)": [[294, "imod.wq.AdvectionModifiedMOC.sink_nparticles", false]], "sink_particle_placement (imod.wq.advectionmodifiedmoc attribute)": [[294, "imod.wq.AdvectionModifiedMOC.sink_particle_placement", false]], "solution (class in imod.mf6)": [[159, "imod.mf6.Solution", false]], "solutionpresetcomplex() (in module imod.mf6)": [[160, "imod.mf6.SolutionPresetComplex", false]], "solutionpresetmoderate() (in module imod.mf6)": [[161, "imod.mf6.SolutionPresetModerate", false]], "solutionpresetsimple() (in module imod.mf6)": [[162, "imod.mf6.SolutionPresetSimple", false]], "sourcesinkmixing (class in imod.mf6)": [[163, "imod.mf6.SourceSinkMixing", false]], "spatial_reference() (in module imod.util)": [[275, "imod.util.spatial_reference", false]], "specificstorage (class in imod.flow)": [[30, "imod.flow.SpecificStorage", false]], "specificstorage (class in imod.mf6)": [[165, "imod.mf6.SpecificStorage", false]], "specificstorageregridmethod (class in imod.mf6.regrid)": [[199, "imod.mf6.regrid.SpecificStorageRegridMethod", false]], "split() (imod.mf6.modflow6simulation method)": [[136, "imod.mf6.Modflow6Simulation.split", false]], "sprinkling (class in imod.msw)": [[217, "imod.msw.Sprinkling", false]], "stability_constraint_advection() (in module imod.evaluate)": [[11, "imod.evaluate.stability_constraint_advection", false]], "stability_constraint_wel() (in module imod.evaluate)": [[12, "imod.evaluate.stability_constraint_wel", false]], "standard_log_decorator() (in module imod.logging.logging_decorators)": [[64, "imod.logging.logging_decorators.standard_log_decorator", false]], "startinghead (class in imod.flow)": [[31, "imod.flow.StartingHead", false]], "staticgridanimation3d (class in imod.visualize)": [[281, "imod.visualize.StaticGridAnimation3D", false]], "storagecoefficient (class in imod.flow)": [[32, "imod.flow.StorageCoefficient", false]], "storagecoefficient (class in imod.mf6)": [[168, "imod.mf6.StorageCoefficient", false]], "storagecoefficientregridmethod (class in imod.mf6.regrid)": [[200, "imod.mf6.regrid.StorageCoefficientRegridMethod", false]], "streamfunction() (in module imod.visualize)": [[289, "imod.visualize.streamfunction", false]], "streamfunction_line() (in module imod.evaluate)": [[13, "imod.evaluate.streamfunction_line", false]], "streamfunction_linestring() (in module imod.evaluate)": [[14, "imod.evaluate.streamfunction_linestring", false]], "structureddiscretization (class in imod.mf6)": [[172, "imod.mf6.StructuredDiscretization", false]], "timediscretization (class in imod.mf6)": [[173, "imod.mf6.TimeDiscretization", false]], "timediscretization (class in imod.wq)": [[318, "imod.wq.TimeDiscretization", false]], "timeoutputcontrol (class in imod.msw)": [[218, "imod.msw.TimeOutputControl", false]], "timevaryingconstantconcentration (class in imod.wq)": [[319, "imod.wq.TimeVaryingConstantConcentration", false]], "to_datetime() (in module imod.util)": [[276, "imod.util.to_datetime", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[108, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarriermultiplier method)": [[110, "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierresistance method)": [[112, "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.layeredwell method)": [[122, "imod.mf6.LayeredWell.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[153, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[155, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[158, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.well method)": [[181, "imod.mf6.Well.to_mf6_pkg", false]], "to_ugrid2d() (in module imod.util)": [[277, "imod.util.to_ugrid2d", false]], "top (class in imod.flow)": [[33, "imod.flow.Top", false]], "tracking (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.tracking", false]], "tracking (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.tracking", false]], "tracking (imod.wq.advectionmodifiedmoc attribute)": [[294, "imod.wq.AdvectionModifiedMOC.tracking", false]], "transform() (in module imod.util)": [[278, "imod.util.transform", false]], "unsaturatedzoneflow (class in imod.mf6)": [[174, "imod.mf6.UnsaturatedZoneFlow", false]], "upper_active_layer() (in module imod.select)": [[264, "imod.select.upper_active_layer", false]], "use_relative_weights (imod.prepare.regridder attribute)": [[223, "imod.prepare.Regridder.use_relative_weights", false]], "variabledensityflow (class in imod.wq)": [[320, "imod.wq.VariableDensityFlow", false]], "variableoutputcontrol (class in imod.msw)": [[219, "imod.msw.VariableOutputControl", false]], "verticalanisotropy (class in imod.flow)": [[34, "imod.flow.VerticalAnisotropy", false]], "verticalhydraulicconductivity (class in imod.flow)": [[35, "imod.flow.VerticalHydraulicConductivity", false]], "verticesdiscretization (class in imod.mf6)": [[175, "imod.mf6.VerticesDiscretization", false]], "voxelizer (class in imod.prepare)": [[224, "imod.prepare.Voxelizer", false]], "warning (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.WARNING", false]], "warning() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.warning", false]], "warning() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.warning", false]], "warning() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.warning", false]], "warning() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.warning", false]], "waterbalance_barchart() (in module imod.visualize)": [[290, "imod.visualize.waterbalance_barchart", false]], "weighting (imod.wq.advectionfinitedifference attribute)": [[291, "imod.wq.AdvectionFiniteDifference.weighting", false]], "weighting_factor (imod.wq.advectionhybridmoc attribute)": [[292, "imod.wq.AdvectionHybridMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmoc attribute)": [[293, "imod.wq.AdvectionMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmodifiedmoc attribute)": [[294, "imod.wq.AdvectionModifiedMOC.weighting_factor", false]], "well (class in imod.flow)": [[36, "imod.flow.Well", false]], "well (class in imod.mf6)": [[176, "imod.mf6.Well", false]], "well (class in imod.wq)": [[321, "imod.wq.Well", false]], "welldisstructured (class in imod.mf6)": [[182, "imod.mf6.WellDisStructured", false]], "welldisvertices (class in imod.mf6)": [[183, "imod.mf6.WellDisVertices", false]], "where() (in module imod.util)": [[279, "imod.util.where", false]], "write() (imod.mf6.modflow6simulation method)": [[137, "imod.mf6.Modflow6Simulation.write", false]], "write() (in module imod.formats.gen)": [[39, "imod.formats.gen.write", false]], "write() (in module imod.formats.ipf)": [[48, "imod.formats.ipf.write", false]], "write_assoc() (in module imod.formats.ipf)": [[49, "imod.formats.ipf.write_assoc", false]], "zonal_aggregate_polygons() (in module imod.prepare)": [[254, "imod.prepare.zonal_aggregate_polygons", false]], "zonal_aggregate_raster() (in module imod.prepare)": [[255, "imod.prepare.zonal_aggregate_raster", false]]}, "objects": {"imod": [[56, 4, 0, "-", "logging"]], "imod.couplers.metamod": [[73, 0, 1, "", "MetaMod"]], "imod.couplers.metamod.MetaMod": [[73, 1, 1, "", "__init__"]], "imod.evaluate": [[3, 2, 1, "", "calculate_gxg"], [4, 2, 1, "", "convert_pointwaterhead_freshwaterhead"], [5, 2, 1, "", "facebudget"], [6, 2, 1, "", "flow_velocity"], [7, 2, 1, "", "interpolate_value_boundaries"], [8, 2, 1, "", "intra_cell_boundary_conditions"], [9, 2, 1, "", "quiver_line"], [10, 2, 1, "", "quiver_linestring"], [11, 2, 1, "", "stability_constraint_advection"], [12, 2, 1, "", "stability_constraint_wel"], [13, 2, 1, "", "streamfunction_line"], [14, 2, 1, "", "streamfunction_linestring"]], "imod.flow": [[15, 0, 1, "", "Bottom"], [16, 0, 1, "", "Boundary"], [17, 0, 1, "", "ConstantHead"], [18, 0, 1, "", "Drain"], [19, 0, 1, "", "EvapoTranspiration"], [20, 0, 1, "", "GeneralHeadBoundary"], [21, 0, 1, "", "HorizontalAnisotropy"], [22, 0, 1, "", "HorizontalFlowBarrier"], [23, 0, 1, "", "HorizontalHydraulicConductivity"], [24, 0, 1, "", "ImodflowModel"], [26, 0, 1, "", "MetaSwap"], [27, 0, 1, "", "PreconditionedConjugateGradientSolver"], [28, 0, 1, "", "Recharge"], [29, 0, 1, "", "River"], [30, 0, 1, "", "SpecificStorage"], [31, 0, 1, "", "StartingHead"], [32, 0, 1, "", "StorageCoefficient"], [33, 0, 1, "", "Top"], [34, 0, 1, "", "VerticalAnisotropy"], [35, 0, 1, "", "VerticalHydraulicConductivity"], [36, 0, 1, "", "Well"]], "imod.flow.Bottom": [[15, 1, 1, "", "__init__"]], "imod.flow.Boundary": [[16, 1, 1, "", "__init__"]], "imod.flow.ConstantHead": [[17, 1, 1, "", "__init__"]], "imod.flow.Drain": [[18, 1, 1, "", "__init__"]], "imod.flow.EvapoTranspiration": [[19, 1, 1, "", "__init__"]], "imod.flow.GeneralHeadBoundary": [[20, 1, 1, "", "__init__"]], "imod.flow.HorizontalAnisotropy": [[21, 1, 1, "", "__init__"]], "imod.flow.HorizontalFlowBarrier": [[22, 1, 1, "", "__init__"]], "imod.flow.HorizontalHydraulicConductivity": [[23, 1, 1, "", "__init__"]], "imod.flow.ImodflowModel": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "create_time_discretization"], [24, 3, 1, "", "modelname"]], "imod.flow.MetaSwap": [[26, 1, 1, "", "__init__"]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, 1, 1, "", "__init__"]], "imod.flow.Recharge": [[28, 1, 1, "", "__init__"]], "imod.flow.River": [[29, 1, 1, "", "__init__"]], "imod.flow.SpecificStorage": [[30, 1, 1, "", "__init__"]], "imod.flow.StartingHead": [[31, 1, 1, "", "__init__"]], "imod.flow.StorageCoefficient": [[32, 1, 1, "", "__init__"]], "imod.flow.Top": [[33, 1, 1, "", "__init__"]], "imod.flow.VerticalAnisotropy": [[34, 1, 1, "", "__init__"]], "imod.flow.VerticalHydraulicConductivity": [[35, 1, 1, "", "__init__"]], "imod.flow.Well": [[36, 1, 1, "", "__init__"]], "imod.formats.gen": [[37, 2, 1, "", "read"], [38, 2, 1, "", "read_ascii"], [39, 2, 1, "", "write"]], "imod.formats.idf": [[40, 2, 1, "", "header"], [41, 2, 1, "", "open"], [42, 2, 1, "", "open_dataset"], [43, 2, 1, "", "open_subdomains"], [44, 2, 1, "", "save"]], "imod.formats.ipf": [[45, 2, 1, "", "read"], [46, 2, 1, "", "read_associated"], [47, 2, 1, "", "save"], [48, 2, 1, "", "write"], [49, 2, 1, "", "write_assoc"]], "imod.formats.prj": [[50, 2, 1, "", "open_projectfile_data"], [51, 2, 1, "", "read_projectfile"], [52, 2, 1, "", "read_timfile"]], "imod.formats.rasterio": [[53, 2, 1, "", "header"], [54, 2, 1, "", "open"], [55, 2, 1, "", "save"]], "imod.logging": [[57, 4, 0, "-", "config"], [60, 4, 0, "-", "ilogger"], [62, 4, 0, "-", "logging_decorators"], [65, 4, 0, "-", "loglevel"], [67, 4, 0, "-", "logurulogger"], [69, 4, 0, "-", "nulllogger"], [71, 4, 0, "-", "pythonlogger"]], "imod.logging.config": [[58, 0, 1, "", "LoggerType"], [59, 2, 1, "", "configure"]], "imod.logging.config.LoggerType": [[58, 3, 1, "", "LOGURU"], [58, 3, 1, "", "NULL"], [58, 3, 1, "", "PYTHON"], [58, 1, 1, "", "__init__"]], "imod.logging.ilogger": [[61, 0, 1, "", "ILogger"]], "imod.logging.ilogger.ILogger": [[61, 1, 1, "", "__init__"], [61, 1, 1, "", "critical"], [61, 1, 1, "", "debug"], [61, 1, 1, "", "error"], [61, 1, 1, "", "info"], [61, 1, 1, "", "log"], [61, 1, 1, "", "warning"]], "imod.logging.logging_decorators": [[63, 2, 1, "", "init_log_decorator"], [64, 2, 1, "", "standard_log_decorator"]], "imod.logging.loglevel": [[66, 0, 1, "", "LogLevel"]], "imod.logging.loglevel.LogLevel": [[66, 3, 1, "", "CRITICAL"], [66, 3, 1, "", "DEBUG"], [66, 3, 1, "", "ERROR"], [66, 3, 1, "", "INFO"], [66, 3, 1, "", "WARNING"], [66, 1, 1, "", "__init__"]], "imod.logging.logurulogger": [[68, 0, 1, "", "LoguruLogger"]], "imod.logging.logurulogger.LoguruLogger": [[68, 1, 1, "", "__init__"], [68, 1, 1, "", "critical"], [68, 1, 1, "", "debug"], [68, 1, 1, "", "error"], [68, 1, 1, "", "info"], [68, 1, 1, "", "log"], [68, 1, 1, "", "warning"]], "imod.logging.nulllogger": [[70, 0, 1, "", "NullLogger"]], "imod.logging.nulllogger.NullLogger": [[70, 1, 1, "", "__init__"], [70, 1, 1, "", "critical"], [70, 1, 1, "", "debug"], [70, 1, 1, "", "error"], [70, 1, 1, "", "info"], [70, 1, 1, "", "log"], [70, 1, 1, "", "warning"]], "imod.logging.pythonlogger": [[72, 0, 1, "", "PythonLogger"]], "imod.logging.pythonlogger.PythonLogger": [[72, 1, 1, "", "__init__"], [72, 1, 1, "", "critical"], [72, 1, 1, "", "debug"], [72, 1, 1, "", "error"], [72, 1, 1, "", "info"], [72, 1, 1, "", "log"], [72, 1, 1, "", "warning"]], "imod.mf6": [[74, 0, 1, "", "AdvectionCentral"], [75, 0, 1, "", "AdvectionTVD"], [76, 0, 1, "", "AdvectionUpstream"], [77, 0, 1, "", "ApiPackage"], [78, 0, 1, "", "Buoyancy"], [79, 0, 1, "", "ConstantConcentration"], [80, 0, 1, "", "ConstantHead"], [85, 0, 1, "", "Dispersion"], [86, 0, 1, "", "Drainage"], [91, 0, 1, "", "Evapotranspiration"], [94, 0, 1, "", "GeneralHeadBoundary"], [99, 0, 1, "", "GroundwaterFlowModel"], [104, 0, 1, "", "GroundwaterTransportModel"], [107, 0, 1, "", "HorizontalFlowBarrierHydraulicCharacteristic"], [109, 0, 1, "", "HorizontalFlowBarrierMultiplier"], [111, 0, 1, "", "HorizontalFlowBarrierResistance"], [113, 0, 1, "", "ImmobileStorageTransfer"], [114, 0, 1, "", "InitialConditions"], [118, 0, 1, "", "LayeredWell"], [123, 0, 1, "", "MassSourceLoading"], [124, 0, 1, "", "MobileStorageTransfer"], [125, 0, 1, "", "Modflow6Simulation"], [138, 0, 1, "", "NodePropertyFlow"], [142, 0, 1, "", "OutputControl"], [143, 0, 1, "", "Recharge"], [147, 0, 1, "", "River"], [152, 0, 1, "", "SingleLayerHorizontalFlowBarrierHydraulicCharacteristic"], [154, 0, 1, "", "SingleLayerHorizontalFlowBarrierMultiplier"], [156, 0, 1, "", "SingleLayerHorizontalFlowBarrierResistance"], [159, 0, 1, "", "Solution"], [160, 2, 1, "", "SolutionPresetComplex"], [161, 2, 1, "", "SolutionPresetModerate"], [162, 2, 1, "", "SolutionPresetSimple"], [163, 0, 1, "", "SourceSinkMixing"], [165, 0, 1, "", "SpecificStorage"], [168, 0, 1, "", "StorageCoefficient"], [172, 0, 1, "", "StructuredDiscretization"], [173, 0, 1, "", "TimeDiscretization"], [174, 0, 1, "", "UnsaturatedZoneFlow"], [175, 0, 1, "", "VerticesDiscretization"], [176, 0, 1, "", "Well"], [182, 0, 1, "", "WellDisStructured"], [183, 0, 1, "", "WellDisVertices"], [184, 2, 1, "", "open_cbc"], [185, 2, 1, "", "open_hds"], [186, 2, 1, "", "read_cbc_headers"]], "imod.mf6.AdvectionCentral": [[74, 1, 1, "", "__init__"]], "imod.mf6.AdvectionTVD": [[75, 1, 1, "", "__init__"]], "imod.mf6.AdvectionUpstream": [[76, 1, 1, "", "__init__"]], "imod.mf6.ApiPackage": [[77, 1, 1, "", "__init__"]], "imod.mf6.Buoyancy": [[78, 1, 1, "", "__init__"]], "imod.mf6.ConstantConcentration": [[79, 1, 1, "", "__init__"]], "imod.mf6.ConstantHead": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "from_imod5_data"], [82, 1, 1, "", "from_imod5_shd_data"], [83, 1, 1, "", "mask"], [84, 1, 1, "", "regrid_like"]], "imod.mf6.Dispersion": [[85, 1, 1, "", "__init__"]], "imod.mf6.Drainage": [[86, 1, 1, "", "__init__"], [87, 1, 1, "", "cleanup"], [88, 1, 1, "", "from_imod5_data"], [89, 1, 1, "", "mask"], [90, 1, 1, "", "regrid_like"]], "imod.mf6.Evapotranspiration": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "mask"], [93, 1, 1, "", "regrid_like"]], "imod.mf6.GeneralHeadBoundary": [[94, 1, 1, "", "__init__"], [95, 1, 1, "", "cleanup"], [96, 1, 1, "", "from_imod5_data"], [97, 1, 1, "", "mask"], [98, 1, 1, "", "regrid_like"]], "imod.mf6.GroundwaterFlowModel": [[99, 1, 1, "", "__init__"], [100, 1, 1, "", "dump"], [101, 1, 1, "", "from_imod5_data"], [102, 1, 1, "", "mask_all_packages"], [103, 1, 1, "", "prepare_wel_for_mf6"]], "imod.mf6.GroundwaterTransportModel": [[104, 1, 1, "", "__init__"], [105, 1, 1, "", "dump"], [106, 1, 1, "", "mask_all_packages"]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[107, 1, 1, "", "__init__"], [108, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[109, 1, 1, "", "__init__"], [110, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierResistance": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.ImmobileStorageTransfer": [[113, 1, 1, "", "__init__"]], "imod.mf6.InitialConditions": [[114, 1, 1, "", "__init__"], [115, 1, 1, "", "from_imod5_data"], [116, 1, 1, "", "mask"], [117, 1, 1, "", "regrid_like"]], "imod.mf6.LayeredWell": [[118, 1, 1, "", "__init__"], [119, 1, 1, "", "from_imod5_data"], [120, 1, 1, "", "mask"], [121, 1, 1, "", "regrid_like"], [122, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.MassSourceLoading": [[123, 1, 1, "", "__init__"]], "imod.mf6.MobileStorageTransfer": [[124, 1, 1, "", "__init__"]], "imod.mf6.Modflow6Simulation": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "clip_box"], [127, 1, 1, "", "create_time_discretization"], [128, 1, 1, "", "dump"], [129, 1, 1, "", "from_imod5_data"], [130, 1, 1, "", "open_concentration"], [131, 1, 1, "", "open_flow_budget"], [132, 1, 1, "", "open_head"], [133, 1, 1, "", "open_transport_budget"], [134, 1, 1, "", "regrid_like"], [135, 1, 1, "", "run"], [136, 1, 1, "", "split"], [137, 1, 1, "", "write"]], "imod.mf6.NodePropertyFlow": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "from_imod5_data"], [140, 1, 1, "", "mask"], [141, 1, 1, "", "regrid_like"]], "imod.mf6.OutputControl": [[142, 1, 1, "", "__init__"]], "imod.mf6.Recharge": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "from_imod5_data"], [145, 1, 1, "", "mask"], [146, 1, 1, "", "regrid_like"]], "imod.mf6.River": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "cleanup"], [149, 1, 1, "", "from_imod5_data"], [150, 1, 1, "", "mask"], [151, 1, 1, "", "regrid_like"]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "from_imod5_data"], [158, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.Solution": [[159, 1, 1, "", "__init__"]], "imod.mf6.SourceSinkMixing": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "from_flow_model"]], "imod.mf6.SpecificStorage": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "mask"], [167, 1, 1, "", "regrid_like"]], "imod.mf6.StorageCoefficient": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "from_imod5_data"], [170, 1, 1, "", "mask"], [171, 1, 1, "", "regrid_like"]], "imod.mf6.StructuredDiscretization": [[172, 1, 1, "", "__init__"]], "imod.mf6.TimeDiscretization": [[173, 1, 1, "", "__init__"]], "imod.mf6.UnsaturatedZoneFlow": [[174, 1, 1, "", "__init__"]], "imod.mf6.VerticesDiscretization": [[175, 1, 1, "", "__init__"]], "imod.mf6.Well": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "cleanup"], [178, 1, 1, "", "from_imod5_data"], [179, 1, 1, "", "mask"], [180, 1, 1, "", "regrid_like"], [181, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.WellDisStructured": [[182, 1, 1, "", "__init__"]], "imod.mf6.WellDisVertices": [[183, 1, 1, "", "__init__"]], "imod.mf6.regrid": [[187, 0, 1, "", "ConstantHeadRegridMethod"], [188, 0, 1, "", "DiscretizationRegridMethod"], [189, 0, 1, "", "DispersionRegridMethod"], [190, 0, 1, "", "DrainageRegridMethod"], [191, 0, 1, "", "EmptyRegridMethod"], [192, 0, 1, "", "EvapotranspirationRegridMethod"], [193, 0, 1, "", "GeneralHeadBoundaryRegridMethod"], [194, 0, 1, "", "InitialConditionsRegridMethod"], [195, 0, 1, "", "MobileStorageTransferRegridMethod"], [196, 0, 1, "", "NodePropertyFlowRegridMethod"], [197, 0, 1, "", "RechargeRegridMethod"], [198, 0, 1, "", "RiverRegridMethod"], [199, 0, 1, "", "SpecificStorageRegridMethod"], [200, 0, 1, "", "StorageCoefficientRegridMethod"]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[187, 1, 1, "", "__init__"]], "imod.mf6.regrid.DiscretizationRegridMethod": [[188, 1, 1, "", "__init__"]], "imod.mf6.regrid.DispersionRegridMethod": [[189, 1, 1, "", "__init__"]], "imod.mf6.regrid.DrainageRegridMethod": [[190, 1, 1, "", "__init__"]], "imod.mf6.regrid.EmptyRegridMethod": [[191, 1, 1, "", "__init__"]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[192, 1, 1, "", "__init__"]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[193, 1, 1, "", "__init__"]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[194, 1, 1, "", "__init__"]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[195, 1, 1, "", "__init__"]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[196, 1, 1, "", "__init__"]], "imod.mf6.regrid.RechargeRegridMethod": [[197, 1, 1, "", "__init__"]], "imod.mf6.regrid.RiverRegridMethod": [[198, 1, 1, "", "__init__"]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[199, 1, 1, "", "__init__"]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[200, 1, 1, "", "__init__"]], "imod.msw": [[201, 0, 1, "", "AnnualCropFactors"], [202, 0, 1, "", "CouplerMapping"], [203, 0, 1, "", "EvapotranspirationMapping"], [204, 0, 1, "", "GridData"], [205, 0, 1, "", "IdfMapping"], [206, 0, 1, "", "Infiltration"], [207, 0, 1, "", "InitialConditionsEquilibrium"], [208, 0, 1, "", "InitialConditionsPercolation"], [209, 0, 1, "", "InitialConditionsRootzonePressureHead"], [210, 0, 1, "", "InitialConditionsSavedState"], [211, 0, 1, "", "LanduseOptions"], [212, 0, 1, "", "MetaSwapModel"], [213, 0, 1, "", "MeteoGrid"], [214, 0, 1, "", "Ponding"], [215, 0, 1, "", "PrecipitationMapping"], [216, 0, 1, "", "ScalingFactors"], [217, 0, 1, "", "Sprinkling"], [218, 0, 1, "", "TimeOutputControl"], [219, 0, 1, "", "VariableOutputControl"]], "imod.msw.AnnualCropFactors": [[201, 1, 1, "", "__init__"]], "imod.msw.CouplerMapping": [[202, 1, 1, "", "__init__"]], "imod.msw.EvapotranspirationMapping": [[203, 1, 1, "", "__init__"]], "imod.msw.GridData": [[204, 1, 1, "", "__init__"]], "imod.msw.IdfMapping": [[205, 1, 1, "", "__init__"]], "imod.msw.Infiltration": [[206, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsEquilibrium": [[207, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsPercolation": [[208, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsRootzonePressureHead": [[209, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsSavedState": [[210, 1, 1, "", "__init__"]], "imod.msw.LanduseOptions": [[211, 1, 1, "", "__init__"]], "imod.msw.MetaSwapModel": [[212, 1, 1, "", "__init__"]], "imod.msw.MeteoGrid": [[213, 1, 1, "", "__init__"]], "imod.msw.Ponding": [[214, 1, 1, "", "__init__"]], "imod.msw.PrecipitationMapping": [[215, 1, 1, "", "__init__"]], "imod.msw.ScalingFactors": [[216, 1, 1, "", "__init__"]], "imod.msw.Sprinkling": [[217, 1, 1, "", "__init__"]], "imod.msw.TimeOutputControl": [[218, 1, 1, "", "__init__"]], "imod.msw.VariableOutputControl": [[219, 1, 1, "", "__init__"]], "imod.prepare": [[220, 0, 1, "", "ALLOCATION_OPTION"], [221, 0, 1, "", "DISTRIBUTING_OPTION"], [222, 0, 1, "", "LayerRegridder"], [223, 0, 1, "", "Regridder"], [224, 0, 1, "", "Voxelizer"], [225, 2, 1, "", "allocate_drn_cells"], [226, 2, 1, "", "allocate_ghb_cells"], [227, 2, 1, "", "allocate_rch_cells"], [228, 2, 1, "", "allocate_riv_cells"], [229, 2, 1, "", "assign_wells"], [230, 2, 1, "", "c_leakage"], [231, 2, 1, "", "c_radial"], [232, 2, 1, "", "celltable"], [233, 2, 1, "", "cleanup_drn"], [234, 2, 1, "", "cleanup_ghb"], [235, 2, 1, "", "cleanup_riv"], [236, 2, 1, "", "cleanup_wel"], [237, 2, 1, "", "create_layered_top"], [238, 2, 1, "", "distribute_drn_conductance"], [239, 2, 1, "", "distribute_ghb_conductance"], [240, 2, 1, "", "distribute_riv_conductance"], [241, 2, 1, "", "fill"], [242, 2, 1, "", "gdal_rasterize"], [243, 2, 1, "", "get_lower_active_grid_cells"], [244, 2, 1, "", "get_lower_active_layer_number"], [245, 2, 1, "", "get_upper_active_grid_cells"], [246, 2, 1, "", "get_upper_active_layer_number"], [247, 2, 1, "", "laplace_interpolate"], [248, 2, 1, "", "linestring_to_square_zpolygons"], [249, 2, 1, "", "linestring_to_trapezoid_zpolygons"], [250, 2, 1, "", "polygonize"], [251, 2, 1, "", "rasterize"], [252, 2, 1, "", "rasterize_celltable"], [253, 2, 1, "", "reproject"], [254, 2, 1, "", "zonal_aggregate_polygons"], [255, 2, 1, "", "zonal_aggregate_raster"]], "imod.prepare.ALLOCATION_OPTION": [[220, 1, 1, "", "__init__"]], "imod.prepare.DISTRIBUTING_OPTION": [[221, 1, 1, "", "__init__"]], "imod.prepare.LayerRegridder": [[222, 1, 1, "", "__init__"], [222, 3, 1, "", "method"]], "imod.prepare.Regridder": [[223, 1, 1, "", "__init__"], [223, 3, 1, "", "extra_overlap"], [223, 3, 1, "", "method"], [223, 3, 1, "", "ndim_regrid"], [223, 3, 1, "", "use_relative_weights"]], "imod.prepare.Voxelizer": [[224, 1, 1, "", "__init__"], [224, 3, 1, "", "method"]], "imod.select": [[256, 2, 1, "", "active_grid_boundary_xy"], [257, 2, 1, "", "cross_section_line"], [258, 2, 1, "", "cross_section_linestring"], [259, 2, 1, "", "grid_boundary_xy"], [260, 2, 1, "", "points_in_bounds"], [261, 2, 1, "", "points_indices"], [262, 2, 1, "", "points_set_values"], [263, 2, 1, "", "points_values"], [264, 2, 1, "", "upper_active_layer"]], "imod.util": [[265, 2, 1, "", "cd"], [266, 2, 1, "", "coord_reference"], [267, 2, 1, "", "empty_2d"], [268, 2, 1, "", "empty_2d_transient"], [269, 2, 1, "", "empty_3d"], [270, 2, 1, "", "empty_3d_transient"], [271, 2, 1, "", "from_mdal_compliant_ugrid2d"], [272, 2, 1, "", "ignore_warnings"], [273, 2, 1, "", "mdal_compliant_ugrid2d"], [274, 2, 1, "", "print_if_error"], [275, 2, 1, "", "spatial_reference"], [276, 2, 1, "", "to_datetime"], [277, 2, 1, "", "to_ugrid2d"], [278, 2, 1, "", "transform"], [279, 2, 1, "", "where"]], "imod.visualize": [[280, 0, 1, "", "GridAnimation3D"], [281, 0, 1, "", "StaticGridAnimation3D"], [282, 2, 1, "", "cross_section"], [283, 2, 1, "", "grid_3d"], [284, 2, 1, "", "imshow_topview"], [285, 2, 1, "", "line_3d"], [286, 2, 1, "", "plot_map"], [287, 2, 1, "", "quiver"], [288, 2, 1, "", "read_imod_legend"], [289, 2, 1, "", "streamfunction"], [290, 2, 1, "", "waterbalance_barchart"]], "imod.visualize.GridAnimation3D": [[280, 1, 1, "", "__init__"]], "imod.visualize.StaticGridAnimation3D": [[281, 1, 1, "", "__init__"]], "imod.wq": [[291, 0, 1, "", "AdvectionFiniteDifference"], [292, 0, 1, "", "AdvectionHybridMOC"], [293, 0, 1, "", "AdvectionMOC"], [294, 0, 1, "", "AdvectionModifiedMOC"], [295, 0, 1, "", "AdvectionTVD"], [296, 0, 1, "", "BasicFlow"], [297, 0, 1, "", "BasicTransport"], [298, 0, 1, "", "ConstantHead"], [299, 0, 1, "", "Dispersion"], [300, 0, 1, "", "Drainage"], [301, 0, 1, "", "EvapotranspirationHighestActive"], [302, 0, 1, "", "EvapotranspirationLayers"], [303, 0, 1, "", "EvapotranspirationTopLayer"], [304, 0, 1, "", "GeneralHeadBoundary"], [305, 0, 1, "", "GeneralizedConjugateGradientSolver"], [306, 0, 1, "", "LayerPropertyFlow"], [307, 0, 1, "", "MassLoading"], [308, 0, 1, "", "OutputControl"], [309, 0, 1, "", "ParallelKrylovFlowSolver"], [310, 0, 1, "", "ParallelKrylovTransportSolver"], [311, 0, 1, "", "PreconditionedConjugateGradientSolver"], [312, 0, 1, "", "RechargeHighestActive"], [313, 0, 1, "", "RechargeLayers"], [314, 0, 1, "", "RechargeTopLayer"], [315, 0, 1, "", "River"], [316, 0, 1, "", "SeawatModel"], [318, 0, 1, "", "TimeDiscretization"], [319, 0, 1, "", "TimeVaryingConstantConcentration"], [320, 0, 1, "", "VariableDensityFlow"], [321, 0, 1, "", "Well"]], "imod.wq.AdvectionFiniteDifference": [[291, 1, 1, "", "__init__"], [291, 3, 1, "", "courant"], [291, 3, 1, "", "weighting"]], "imod.wq.AdvectionHybridMOC": [[292, 1, 1, "", "__init__"], [292, 3, 1, "", "courant"], [292, 3, 1, "", "dceps"], [292, 3, 1, "", "dchmoc"], [292, 3, 1, "", "max_particles"], [292, 3, 1, "", "nph"], [292, 3, 1, "", "npl"], [292, 3, 1, "", "nplane"], [292, 3, 1, "", "npmax"], [292, 3, 1, "", "npmin"], [292, 3, 1, "", "tracking"], [292, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionMOC": [[293, 1, 1, "", "__init__"], [293, 3, 1, "", "cell_max_nparticles"], [293, 3, 1, "", "cell_min_nparticles"], [293, 3, 1, "", "courant"], [293, 3, 1, "", "dconcentration_epsilon"], [293, 3, 1, "", "max_nparticles"], [293, 3, 1, "", "nparticles_advection"], [293, 3, 1, "", "nparticles_no_advection"], [293, 3, 1, "", "nplane"], [293, 3, 1, "", "tracking"], [293, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionModifiedMOC": [[294, 1, 1, "", "__init__"], [294, 3, 1, "", "courant"], [294, 3, 1, "", "dconcentration_epsilon"], [294, 3, 1, "", "sink_nparticles"], [294, 3, 1, "", "sink_particle_placement"], [294, 3, 1, "", "tracking"], [294, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionTVD": [[295, 1, 1, "", "__init__"], [295, 3, 1, "", "courant"]], "imod.wq.BasicFlow": [[296, 1, 1, "", "__init__"]], "imod.wq.BasicTransport": [[297, 1, 1, "", "__init__"]], "imod.wq.ConstantHead": [[298, 1, 1, "", "__init__"]], "imod.wq.Dispersion": [[299, 1, 1, "", "__init__"]], "imod.wq.Drainage": [[300, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationHighestActive": [[301, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationLayers": [[302, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationTopLayer": [[303, 1, 1, "", "__init__"]], "imod.wq.GeneralHeadBoundary": [[304, 1, 1, "", "__init__"]], "imod.wq.GeneralizedConjugateGradientSolver": [[305, 1, 1, "", "__init__"]], "imod.wq.LayerPropertyFlow": [[306, 1, 1, "", "__init__"]], "imod.wq.MassLoading": [[307, 1, 1, "", "__init__"]], "imod.wq.OutputControl": [[308, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovFlowSolver": [[309, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovTransportSolver": [[310, 1, 1, "", "__init__"]], "imod.wq.PreconditionedConjugateGradientSolver": [[311, 1, 1, "", "__init__"]], "imod.wq.RechargeHighestActive": [[312, 1, 1, "", "__init__"]], "imod.wq.RechargeLayers": [[313, 1, 1, "", "__init__"]], "imod.wq.RechargeTopLayer": [[314, 1, 1, "", "__init__"]], "imod.wq.River": [[315, 1, 1, "", "__init__"]], "imod.wq.SeawatModel": [[316, 1, 1, "", "__init__"], [316, 3, 1, "", "check"], [317, 1, 1, "", "create_time_discretization"], [316, 3, 1, "", "modelname"]], "imod.wq.TimeDiscretization": [[318, 1, 1, "", "__init__"]], "imod.wq.TimeVaryingConstantConcentration": [[319, 1, 1, "", "__init__"]], "imod.wq.VariableDensityFlow": [[320, 1, 1, "", "__init__"]], "imod.wq.Well": [[321, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:module"}, "terms": {"": [0, 9, 10, 12, 13, 14, 23, 32, 35, 36, 41, 44, 54, 55, 56, 103, 114, 132, 138, 164, 168, 169, 184, 185, 214, 223, 224, 226, 231, 241, 257, 258, 261, 276, 279, 287, 291, 292, 293, 294, 295, 321, 322, 337, 338, 343, 345, 348, 354, 356, 357, 360, 364, 369, 374, 376, 380, 382, 383, 388, 389, 393, 397, 398, 399, 400, 401], "0": [4, 5, 6, 8, 11, 12, 16, 21, 26, 27, 32, 44, 45, 48, 51, 55, 61, 68, 70, 72, 78, 83, 89, 91, 92, 94, 97, 102, 106, 107, 109, 111, 114, 116, 118, 119, 123, 126, 138, 140, 143, 145, 147, 149, 150, 152, 154, 156, 159, 165, 166, 168, 169, 170, 172, 173, 174, 176, 178, 182, 183, 206, 211, 214, 220, 221, 223, 229, 232, 233, 234, 235, 236, 247, 248, 249, 253, 255, 258, 260, 261, 262, 263, 264, 280, 281, 282, 283, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 305, 306, 309, 310, 311, 318, 320, 322, 333, 335, 340, 341, 342, 343, 344, 345, 347, 348, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 388, 391, 392, 393, 394, 397, 398, 399, 400, 401, 403], "00": [3, 340, 341, 343, 344, 347, 348, 350, 355, 364, 368, 371, 375, 376, 379, 392, 398, 399, 403], "000": [276, 355, 368, 392, 403], "000000": 371, "000000000": [348, 364, 371, 376, 398, 399], "000000002": 364, "00001157407405": 399, "0000864": 344, "0001": [27, 159, 292, 306, 309, 311, 340, 341, 342, 343, 344, 345, 361, 363], "0003": 364, "00078071": 364, "00078091": 364, "00078183": 364, "00082746": 364, "00083373": [364, 399], "000834": 399, "0008352": 364, "00084055": 364, "0008475": 343, "00084771": 364, "00085378": 364, "00086102": 364, "00088318": 364, "0008994": 364, "00089943": 364, "00090591": 364, "0009065": 364, "0009093": 364, "0009098": 364, "0009125": 364, "00091255": 364, "000913": 364, "000918": 399, "00091826": [364, 399], "00097932": 364, "00098031": 364, "00098196": 364, "001": [159, 306, 341, 344, 348, 357, 359, 361, 362, 363, 364, 367, 369, 371], "00158879": 364, "00159777": 364, "00160275": 364, "00160428": 364, "00160856": 364, "00160863": 364, "00161301": 364, "00161518": 364, "00161658": 364, "0016166": 364, "00161772": 364, "00161827": 364, "00161909": 364, "0016207": 364, "00162071": 364, "00162122": 364, "00162407": 364, "0016263": 364, "00162744": 364, "00163142": 364, "00163613": 364, "00163785": 364, "00163787": 364, "001638": 399, "00163841": 364, "00163919": 364, "00164029": 364, "00164151": 364, "00164618": 364, "00164895": 364, "00166721": 364, "00167463": 364, "0016792": 364, "00167949": 364, "00168478": 364, "00168655": 364, "00168658": 364, "001689": 364, "00169": 364, "00169032": 364, "00169166": 364, "00169605": 364, "00169624": 364, "00169678": 364, "00169771": 364, "00169961": 364, "00170712": 364, "00170842": 364, "001712": 364, "00171206": 364, "00171221": 364, "00172136": 364, "00173": 364, "00173005": 364, "00173329": 364, "0017413": 364, "00174276": 364, "00174685": 364, "00174713": 364, "001752": 364, "00175232": 364, "00175247": 364, "00175276": 364, "00175411": 364, "00175477": 364, "0017549": 364, "00175632": 364, "00175832": 364, "00175834": 364, "00176321": 364, "00176362": 364, "00176593": 364, "0017666": 364, "00176716": 364, "00176909": 364, "00177083": 364, "00177297": 364, "00177411": 364, "00177807": 364, "00177865": 364, "00178251": 364, "00179237": 364, "00179266": 364, "00180298": 364, "001803": 364, "001825": 364, "00182535": 364, "00182747": 364, "00183059": 364, "00183236": 364, "00183427": 364, "00183771": 364, "00184691": 364, "00185661": 364, "00186046": 364, "00186831": 364, "00187044": 364, "00188156": 364, "00188612": 364, "00189647": 364, "00189853": 364, "0019": 364, "00190413": 364, "001906": 364, "001907": 364, "00190719": 364, "00190866": 364, "001912": 364, "00191231": 364, "00191248": 364, "00191336": 364, "00191589": 364, "001916": 364, "001917": 364, "00191725": 364, "00191761": 364, "00191962": 364, "0019212": 364, "00192603": 364, "0019277": 364, "00193016": 364, "0019308": 364, "00193096": 364, "00194384": 364, "00194592": 364, "00194606": 364, "001961": 364, "001982": 399, "00198224": 364, "002": [159, 356, 362], "00203658": 364, "00203995": 364, "002041": 364, "00204444": 364, "00204451": 364, "00204493": 364, "0020481": 364, "0020491": 364, "00205102": 364, "00217596": 364, "00217812": 364, "00218172": 364, "0021932": 364, "00219364": 364, "00219559": 364, "00220936": 364, "00221006": 364, "00221065": 364, "00221361": 364, "00221743": 364, "00222133": 364, "002221arrai": 364, "00222806": 364, "00223096": 364, "00223372": 364, "002234": 364, "00223808": 364, "00224485": 364, "00224585": 364, "002247": 364, "00224736": 364, "00225167": 364, "00226806": 364, "00226807": 364, "00227892": 364, "0022924": 364, "00229702": 364, "00230603": 364, "00231468": 364, "00231699": 364, "00232221": 364, "0023817": 364, "002382arrai": 364, "00242177": 364, "00247561": 364, "00247603": 364, "00247622": 364, "00248376": 364, "00248442": 364, "00248449": 364, "00249076": 364, "00249155": 364, "00249192": 364, "003658": 400, "0056": 399, "007": 345, "007232": 400, "00762653": 400, "009": 374, "01": [25, 44, 55, 78, 118, 127, 129, 142, 159, 176, 229, 247, 297, 299, 317, 320, 322, 340, 341, 342, 343, 344, 345, 347, 348, 356, 357, 359, 361, 362, 363, 364, 367, 368, 369, 371, 379, 382, 383, 384, 385, 392, 393, 398, 399, 403], "01089": 400, "0108900045784": 400, "01161366e": 399, "0125": [344, 345], "01326780e": 399, "014": 400, "014464": 400, "01597916": 400, "01724138": 400, "01arrai": 348, "01t00": [340, 341, 343, 344, 348, 398], "01xarrai": 348, "02": [127, 142, 322, 340, 345, 347, 348, 357, 361, 363, 367, 368, 371, 382, 383, 392, 394, 398, 399, 400, 403], "02017498e": 399, "02150538": 400, "022981": 400, "023": [371, 375, 392], "025": 78, "02609539": 400, "02678776e": 399, "02arrai": 398, "02d": [44, 55], "02t00": 398, "02xarrai": 398, "03": [118, 159, 176, 322, 342, 347, 348, 357, 361, 363, 364, 367, 368, 379, 392, 395, 400, 401, 403], "03195832": 400, "03195833": 400, "03225806": 400, "03448276": 400, "037": [392, 401, 403], "03830185e": 399, "03838577e": 399, "03arrai": [364, 400], "04": [322, 348, 361, 363, 367, 368, 371, 376, 392, 393, 398], "040467": 394, "042497": 400, "045454545": 343, "046": 399, "046072": 400, "0471248271865": 400, "047125": 400, "04793749": 400, "04804630e": 399, "04805851e": 399, "048676": 400, "04867641771818": 400, "04973": 400, "04arrai": 398, "04t00": 398, "05": [119, 159, 176, 178, 229, 236, 292, 293, 294, 299, 322, 348, 354, 364, 367, 371, 375, 376, 379, 388, 392, 393, 396, 399, 400, 401, 403], "05172414": 400, "05299568e": 399, "053": 374, "053304": 400, "05376344": 400, "05433397e": 399, "05435915e": 399, "054636": 400, "0571b0": 290, "05957603e": 399, "05arrai": [354, 364, 376, 393, 399, 400, 401], "05t01": 344, "06": [305, 310, 322, 348, 367, 371, 392, 397, 398, 403], "06107712e": 399, "06316519e": 399, "06320744e": 399, "063594": 394, "06391665": 400, "06451613": 400, "066": [362, 368, 392], "06758380e": 399, "06817684e": 399, "06821775e": 399, "06896552": 400, "06arrai": 399, "07": [322, 348, 371, 375, 392, 393, 398, 403], "07140017": 400, "072": 399, "072821": 400, "07375240e": 399, "07408428e": 399, "07412310e": 399, "07526882": 400, "07691193e": 399, "078": [392, 398, 399, 403], "07891464e": 399, "07901382e": 399, "07952986e": 399, "07958746e": 399, "07989581": 400, "0799999": 401, "08": [322, 347, 348, 392, 399, 400, 403], "081337": 400, "084911": 400, "084911240260034": 400, "0862069": 400, "088": 399, "088569": 400, "0896": 399, "09": [322, 348, 368, 371, 392, 400, 403], "09063745": 400, "090909091": 343, "0912": 399, "092": 399, "092143": 400, "093": 403, "09587497": 400, "09587498": 400, "095e": [376, 393], "09677419": 400, "096965": 400, "098": [343, 347, 356, 368, 392], "09970045": 400, "0arrai": [348, 354, 357, 364, 376, 393, 398, 399, 400, 401], "0d": 0, "0e": [27, 293, 294, 310, 311, 340, 341, 342, 343, 344, 345, 356, 357, 359, 361, 362, 363, 364, 367, 369, 388], "0e20": [44, 47, 49, 306], "0e30": [296, 297], "0x00000289ac85f010": 393, "0x00000289aca1acd0": 393, "0x00000289adb70a50": 393, "0x00000289adb7d0d0": 393, "0x00000289adbb7210": 393, "0x00000289adbf42d0": 393, "0x00000289adbf4610": 393, "0x00000289adbf4a90": 393, "0x00000289adbf6610": 393, "0x00000289adbf6890": 393, "0x00000289adbf7990": 393, "0x00000289adbf7a50": 393, "0x00000289adc20b10": 393, "0x00000289adca7090": 393, "0x00000289add4ae50": 345, "0x00000289addb4cd0": 393, "0x00000289ade4a710": 393, "0x00000289ade4aa10": 393, "0x00000289ae92a090": 364, "0x00000289ae936790": 367, "0x00000289ae961a10": 364, "0x00000289ae9d1510": 359, "0x00000289aebe0190": 364, "0x00000289aec02950": 344, "0x00000289aecadc50": 360, "0x00000289aecc6750": 358, "0x00000289af53c110": 343, "0x00000289af54bd50": 371, "0x00000289af66c490": 369, "0x00000289af76dc10": 356, "0x00000289af783850": 340, "0x00000289af78e890": 343, "0x00000289afd4bf10": 372, "0x00000289afdf45d0": 376, "0x00000289afebf7d0": 364, "0x00000289aff9b110": 343, "0x00000289aff9b990": 341, "0x00000289affdb190": 344, "0x00000289b008fa90": 371, "0x00000289b00a1310": 369, "0x00000289b00da4d0": 367, "0x00000289b01f1a50": 364, "0x00000289b031d1d0": 364, "0x00000289b032ea50": 364, "0x00000289b03445d0": 361, "0x00000289b037f510": 360, "0x00000289b03e6890": 362, "0x00000289b04818d0": 371, "0x00000289b04f5810": 374, "0x00000289b05bf310": 364, "0x00000289b05dc510": 360, "0x00000289b2ba0dd0": 362, "0x00000289b2dc9710": 362, "0x00000289b2e10e50": 364, "0x00000289b2e4a610": 360, "0x00000289b2e5b090": 362, "0x00000289b2e83d50": 374, "0x00000289b31a1cd0": 373, "0x00000289b3495150": 343, "0x00000289b5f44390": 376, "0x00000289b6033550": 373, "0x00000289b74d1910": 341, "0x00000289b764b450": 341, "0x00000289b8661910": 343, "0x00000289b8661f50": 364, "0x00000289b86c4450": 399, "0x00000289b8c7db50": 400, "0x00000289b9d961d0": 340, "0x00000289b9e18110": 400, "0x00000289b9eac090": 343, "0x00000289b9f676d0": 356, "0x00000289ba0691d0": 345, "0x00000289ba0c9710": 340, "0x00000289bdb0a0d0": 340, "0x00000289bdba9910": 354, "0xarrai": [348, 376, 398, 399], "1": [3, 5, 11, 12, 21, 26, 27, 29, 30, 44, 47, 49, 50, 51, 55, 58, 66, 78, 81, 82, 83, 89, 91, 92, 97, 102, 106, 116, 118, 119, 131, 138, 140, 143, 145, 149, 150, 152, 154, 156, 159, 166, 170, 172, 173, 174, 176, 178, 184, 186, 211, 220, 221, 225, 226, 227, 228, 229, 233, 234, 235, 237, 247, 248, 255, 258, 260, 261, 262, 263, 264, 274, 280, 282, 283, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 305, 306, 309, 310, 311, 314, 318, 319, 320, 322, 340, 341, 342, 343, 344, 345, 348, 350, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 376, 378, 380, 382, 383, 384, 385, 387, 388, 389, 393, 394, 397, 398, 399, 400, 401], "10": [26, 27, 66, 77, 107, 109, 111, 113, 159, 248, 249, 262, 289, 292, 293, 305, 310, 311, 322, 341, 342, 343, 345, 348, 354, 356, 357, 359, 361, 362, 363, 364, 366, 367, 368, 369, 371, 376, 382, 383, 391, 392, 393, 394, 399, 400, 401, 403], "100": [27, 159, 253, 276, 309, 311, 342, 348, 354, 356, 357, 359, 361, 362, 363, 364, 367, 369, 371, 373, 374, 376, 380, 382, 385, 392, 399, 400], "1000": [4, 26, 78, 126, 152, 154, 156, 214, 309, 311, 320, 356, 359, 364, 369, 394], "10000": [5, 232, 254, 255], "100000": 394, "10000038": 401, "100_000": [253, 393], "101": 362, "101000": 394, "1016": [77, 345, 400], "102": 376, "102000": 394, "102150": 372, "1022": 393, "1025": [320, 356, 359], "102550": 372, "1029": 343, "103000": 394, "103150": 372, "103350": 372, "10344828": 400, "1035": 400, "103736": 376, "104": 159, "104000": 394, "10412979e": 399, "10419674e": 399, "1048": 399, "104b": [393, 399], "105": [359, 376], "1050": 400, "105000": 394, "105257": 77, "10539465e": 399, "10544491e": 399, "105e": [376, 393], "106": [159, 400], "106000": 394, "107": 376, "107000": 394, "1073": 400, "10752688": 400, "108000": 394, "108750": 372, "108774": 394, "1088": 400, "109": [340, 347, 392], "109000": 394, "109150": 372, "10_000": 5, "10kb": 357, "10mb": 364, "11": [262, 322, 348, 363, 364, 371, 376, 393, 394, 399, 400, 401], "110": 376, "110000": 394, "1104": 400, "110_000": 393, "111": [26, 348], "111000": 394, "111378": 394, "111380": 394, "11185414": 400, "112": 376, "112000": 394, "112096": 394, "112098": 394, "1126": 400, "113000": 394, "114000": 394, "1141": 400, "114750": [376, 393], "114850": [376, 393], "114950": [376, 393], "115": [359, 376, 394], "1150": 362, "115000": 394, "11500013": 400, "115050": [376, 393], "115150": [376, 393], "115250": [376, 393], "115350": [376, 393], "11541767e": 399, "115450": [376, 393], "11550407e": 399, "115550": [376, 393], "115650": [372, 373, 374, 376, 393], "115926": 394, "115938": 394, "116000": 394, "1163": 400, "117": 376, "117000": 394, "117297": 394, "117298": 394, "117599": 399, "1179": 400, "118000": 394, "119000": 394, "1194": 400, "11999989": 400, "11kb": 364, "11layer": 348, "11mb": [376, 399], "12": [21, 260, 262, 322, 341, 348, 354, 360, 363, 364, 368, 371, 376, 392, 393, 394, 399, 400, 401], "120": [340, 354, 376], "120176": 400, "120333": 400, "12068966": 400, "12087021e": 399, "12099190e": 399, "120_000": 394, "121": 340, "1218": 400, "122": 376, "1232": [399, 400], "123e": 357, "125": [357, 359, 376, 399], "12500": 361, "1251": 399, "1252": 400, "125coordin": 399, "125dask": 399, "125nan": 399, "126": 357, "127": [357, 376], "1271": 400, "127409": 400, "1278333": 400, "1285": 400, "129": 400, "12960052": 400, "13": [322, 341, 363, 364, 371, 376, 393, 394, 399, 400, 401], "130": 376, "1300000": 393, "1309": 400, "130983": 400, "132152": 374, "1324": 400, "1340": 400, "134641": 400, "135": [359, 376], "1359": 371, "1362": 400, "136363636": 343, "136b": 364, "13754582e": 399, "1377": 400, "13793103": 400, "138": 369, "13978495": 400, "1399": 400, "139b": 398, "13arrai": [364, 393, 399, 401], "13coordin": [393, 399, 401], "13kb": 364, "13nan": 364, "13time": 399, "13xarrai": [364, 393], "13y": [364, 393, 399], "14": [3, 21, 322, 357, 363, 364, 376, 394, 400], "140": 376, "14000034": 400, "140b": 398, "1415": 400, "142": 159, "143": 159, "1430": 400, "14381246": 400, "144": 400, "145": [359, 376], "14511347": 400, "1454": 400, "1468": 400, "147": 159, "1487": 400, "14964905e": 399, "14991608e": 399, "14th": 3, "15": [107, 109, 111, 249, 306, 307, 322, 341, 343, 356, 357, 359, 360, 361, 362, 363, 364, 367, 371, 376, 378, 380, 394, 400], "150": [27, 309, 311, 340, 341, 342, 343, 344, 345, 348, 354, 369, 371, 376, 400], "1500": 400, "15040016": 400, "15053763": 400, "1507": 400, "1521": 400, "152397": 393, "1545": 400, "155": 376, "15517241": 400, "155578": 394, "156": 399, "1560": 400, "156e": [376, 393], "157": 357, "1574074074074073e": 399, "157407e": 399, "1576": 400, "157e": 399, "158": 399, "15840006": 400, "159": [340, 399], "159016": 400, "15979162": 400, "1598": 400, "16": [292, 293, 322, 344, 360, 364, 365, 368, 371, 376, 392, 394, 399, 400], "160": [340, 376], "160b": 400, "161": 399, "1613": 400, "162": 400, "1635": 400, "165": [376, 394], "1651": 400, "166": 399, "166248": 400, "1666": 400, "1678": [41, 54], "1679": 42, "1690": 400, "169822": 400, "16982248058866": 400, "16b": [348, 357, 364, 398, 399], "16mb": [400, 401], "17": [173, 322, 357, 364, 368, 376, 378, 394, 400], "170": 376, "170174": 400, "1704": 400, "1708": 340, "172": 104, "17204301": 400, "1723": 400, "17241379": 400, "173": 399, "17348": 400, "1743": 400, "175": [376, 399], "1757": 400, "17577079": 400, "177": 364, "177892": 374, "178": 364, "1781": 400, "179": 364, "1796": 400, "17x": 364, "18": [322, 371, 376, 394, 400], "180": [21, 354, 364, 376], "181": 364, "1811": 400, "181818182": 343, "182": [364, 400], "1827957": 400, "183": 400, "1834": 400, "1849": 400, "185": 376, "186": 399, "187": [345, 347, 392, 394, 399], "1870": 400, "187935": 371, "188": 399, "1887": 400, "18965517": 400, "1899": 50, "19": [322, 371, 376, 394, 399, 400, 401], "190": 376, "1900": [50, 341], "1902": 400, "190894": 394, "19174995": 400, "19246": 374, "1926": 400, "192689": 394, "1940": 400, "194318": 400, "195": 376, "19585562e": 399, "1959": 400, "196b": 376, "197": 400, "197855": 400, "1979": [376, 400], "198": 399, "1984": 399, "19840002": 400, "1988": 361, "198arrai": 399, "1990": [159, 306], "1992": 159, "1993": 400, "1996": 361, "1997": 343, "1999": [11, 12, 369], "1arrai": [354, 364, 393, 399], "1b": [398, 399, 400, 401], "1d": [0, 7, 266, 267, 268, 269, 270, 275, 299, 348, 366, 368, 382, 383, 392], "1d_tpt_benchmark": 362, "1e": [44, 47, 48, 49, 107, 152, 292, 293, 294, 296, 297, 305, 306, 310, 357, 359, 364], "1e3": [111, 156, 248, 249], "1kb": [348, 357, 399, 400], "1layer": 357, "1mb": [399, 400], "1st": [292, 293, 294], "1xarrai": 364, "1y": 398, "2": [9, 13, 21, 26, 27, 44, 47, 49, 50, 55, 78, 80, 86, 91, 94, 99, 104, 107, 109, 111, 118, 142, 143, 147, 152, 154, 156, 159, 174, 176, 182, 209, 211, 216, 220, 221, 257, 260, 261, 262, 263, 280, 292, 293, 294, 305, 306, 313, 318, 322, 333, 340, 343, 348, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 371, 372, 376, 378, 379, 382, 383, 387, 388, 389, 391, 393, 394, 397, 398, 399, 400, 401], "20": [44, 47, 48, 49, 66, 107, 109, 111, 159, 248, 249, 306, 322, 341, 343, 354, 356, 360, 361, 363, 371, 376, 394, 400], "200": [253, 361, 363, 364, 367, 372, 373, 376, 393, 399, 400, 401], "2000": [3, 25, 118, 127, 142, 176, 317, 320, 340, 341, 342, 343, 344, 345, 357, 359, 361, 362, 363, 364, 367, 398], "2000d": 362, "2001": [25, 41, 54, 129, 317, 342], "2002": [4, 129, 369], "2003": [129, 340, 345], "2004": 345, "2005": [23, 35, 159, 174, 360, 361, 364], "2007": 371, "2008": [26, 371], "2009": [364, 399], "200_000": 253, "200coordin": 400, "200layer": [393, 399, 400, 401], "200x": [364, 393, 399, 400], "201": 374, "2010": [343, 364, 399], "2011": [364, 371], "2012": [364, 371], "2013": [364, 367], "2014": [364, 371], "2015": 364, "2016": [26, 371], "2017": [348, 400], "2017a": 26, "2017b": 26, "2018": 348, "2019": 322, "202": 123, "2020": [322, 340, 356, 382, 383, 384, 385, 389], "2021": [77, 322], "2022": 322, "2023": 322, "2024": 322, "2030": 359, "2032": 400, "20356822": 400, "2047": 400, "205": 376, "2050": 394, "205088": 400, "20539975": 400, "20689655": 400, "2070": 400, "20772911": 400, "2085": 400, "20898857e": 399, "20933380e": 399, "20arrai": 400, "20coordin": 400, "20xarrai": 400, "20y": 400, "21": [322, 344, 360, 365, 368, 376, 392, 394, 398, 399, 400], "210": 376, "2106": 400, "211": 357, "211782": 371, "212": 357, "2123": 400, "21232": 400, "213": 357, "2138": 400, "214": 357, "215": [357, 376], "21505376": 400, "215arrai": 357, "215xarrai": 357, "216": 357, "2162": 400, "21656537": 400, "216b": 364, "216dask": 357, "216kb": 393, "2176": 400, "218": [376, 393], "218462": 400, "218x": [376, 393], "2195": 400, "2195519960724": 400, "219552": 400, "21kb": 348, "21mb": [393, 399], "22": [322, 371, 376, 394, 399, 400], "220": [376, 400], "2212": 399, "2215": 400, "2229": 400, "22370827": 400, "22413793": 400, "224736": 371, "225": 376, "22500": 361, "225211": 371, "2253": [343, 400], "22580645": 400, "225_500": 371, "2261": [41, 54, 119, 178, 343], "226134": 371, "2262": 42, "226410": 371, "226509": 371, "2268": 400, "226a": 335, "2272": 399, "227272727": 343, "2283": 400, "2295": 0, "2296": 0, "22996807": 400, "23": [322, 364, 376, 394, 399, 400], "230": [354, 376], "230500": 364, "2306": 400, "230_000": 364, "23147655": 400, "231500": 364, "2321": 400, "232500": 364, "233500": 364, "2342": 400, "234500": 364, "235": [376, 400], "235500": 364, "2359": 400, "236500": 364, "236695": 400, "2374": 400, "237500": [364, 399], "237512": [364, 393, 399, 400, 401], "237537": [364, 393, 399, 400, 401], "237550": 399, "237562": [364, 393, 399, 400, 401], "237587": [364, 393, 399, 400, 401], "237612": [364, 393, 399, 400, 401], "237637": [364, 393, 399, 400, 401], "237650": 399, "237662": [364, 393, 399, 400, 401], "237687": [364, 393, 399, 400, 401], "237712": [364, 393, 399, 400, 401], "237737": [364, 393, 399, 400, 401], "237750": 399, "237850": 399, "237950": 399, "237_500": 364, "238050": 399, "238150": 399, "238250": 399, "238350": 399, "238450": 399, "238500": 364, "238550": 399, "238650": 399, "238725": 400, "238737": 400, "238750": 399, "238762": 400, "238787": 400, "238812": 400, "238837": 400, "238850": 399, "238862": 400, "238887": 400, "238912": 400, "238937": 400, "238950": 399, "238962": 400, "238987": 400, "239012": 400, "239037": 400, "239050": 399, "239062": 400, "239087": 400, "239112": 400, "239137": 400, "239150": 399, "239162": 400, "239187": 400, "239212": 400, "239237": 400, "239250": 399, "239262": 400, "239287": 400, "239312": 400, "239337": 400, "239350": 399, "239362": 400, "239387": 400, "239412": 400, "239437": 400, "239450": 399, "239462": 400, "239487": 400, "239500": 364, "239512": 400, "239537": 400, "239550": 399, "239562": 400, "239587": 400, "239612": 400, "239637": 400, "239650": 399, "239662": 400, "239687": 400, "23968744": 400, "2397": 400, "239712": 400, "239737": 400, "239750": 399, "239762": 400, "239787": 400, "239812": 400, "239837": 400, "239850": 399, "239862": 400, "239887": 400, "239912": 400, "239937": 400, "239950": 399, "239962": 400, "239987": 400, "24": [3, 344, 371, 376, 394, 399, 400, 401], "240": [354, 376], "240012": [364, 400], "240037": 400, "240050": 399, "240062": 400, "240087": 400, "240112": 400, "240137": 400, "240150": 399, "240162": 400, "240187": 400, "240212": 400, "240237": 400, "240250": 399, "240262": 400, "240287": 400, "240312": 400, "240337": 400, "240350": 399, "240362": 400, "240387": 400, "240412": 400, "240437": 400, "240450": 399, "240462": 400, "240487": 400, "240500": 364, "240512": 400, "240537": 400, "240550": 399, "240562": 400, "240587": 400, "240612": 400, "240637": 400, "240650": 399, "240662": 400, "240687": 400, "240712": 400, "240737": 400, "240750": 399, "240762": 400, "240787": 400, "240812": 400, "240837": 400, "240850": 399, "240862": 400, "240887": 400, "240912": 400, "240937": 400, "240950": 399, "240962": 400, "240987": 400, "240_000": [364, 371], "241012": 400, "241037": 400, "241050": [399, 400], "241150": 399, "2412": 400, "241250": 399, "241350": 399, "24137931": 400, "241450": 399, "241500": 364, "241550": 399, "241650": 399, "241750": 399, "241850": 399, "24192309": 400, "241950": 399, "242050": 399, "242150": 399, "242250": 399, "242350": 399, "242450": 399, "242500": 364, "242550": 399, "242650": 399, "24273429": 364, "242750": 399, "242850": 399, "242950": 399, "2430": 400, "243050": 399, "243150": 399, "243250": 399, "243350": 399, "243450": 399, "243500": 364, "243550": 399, "243650": 399, "243750": 399, "243850": 399, "243927": 400, "243950": 399, "244012": 364, "244050": 399, "244150": 399, "244250": 399, "244350": 399, "2444": 400, "244450": 399, "244500": 364, "244550": 399, "244650": 399, "244750": 399, "244850": 399, "24491787e": 399, "244950": 399, "244_000": 364, "245": 376, "245050": 399, "2451": 400, "245150": 399, "245250": 399, "245350": 399, "245450": 399, "245500": 364, "245550": 399, "245650": 399, "245750": 399, "245850": 399, "245950": 399, "246050": 399, "246150": 399, "246250": 399, "24633751e": 399, "246350": 399, "246450": 399, "2465": 400, "246500": 364, "246550": 399, "246650": 399, "24668083e": 399, "24672249": 364, "246750": 399, "246850": 399, "246950": 399, "247050": 399, "247150": 399, "247250": 399, "24731183": 400, "247350": 399, "247450": 399, "247500": 364, "247525": 371, "247550": 399, "247650": 399, "247750": 399, "247850": 399, "247950": 399, "248": [376, 393], "248050": 399, "2481": 376, "248150": 399, "248250": 399, "248350": 399, "248450": 399, "248500": 364, "248550": 399, "248650": 399, "248750": 399, "248850": 399, "2489": 400, "248950": 399, "249050": 399, "249150": 399, "249250": 399, "249350": 399, "249450": 399, "249500": 364, "249550": 399, "249650": 399, "249750": 399, "249762": [364, 393, 399, 400, 401], "249787": [364, 393, 399, 400, 401], "249812": [364, 393, 399, 400, 401], "249837": [364, 393, 399, 400, 401], "249850": 399, "249862": [364, 393, 399, 400, 401], "249887": [364, 393, 399, 400, 401], "249912": [364, 393, 399, 400, 401], "249937": [364, 393, 399, 400, 401], "249950": 399, "249962": [364, 393, 399, 400, 401], "249987": [364, 393, 399, 400, 401], "24b": [348, 354, 398], "24kb": 400, "25": [159, 320, 322, 354, 359, 362, 364, 371, 376, 393, 394, 399, 400, 401], "250": [152, 154, 156, 341, 348, 376, 400], "250000": 399, "2504": 400, "250500": 364, "250_000": 364, "251159": 400, "25116062": 400, "251500": 364, "2519": 400, "252500": 364, "253500": 364, "25355321": 364, "2542": 400, "254500": 364, "255500": 364, "2556666": 400, "2557": 400, "25598717": 400, "256": 399, "25620192": 364, "256500": 364, "2578": 400, "257_000": 364, "25806452": 400, "258392": 400, "25846219e": 399, "25862069": 400, "2595": 400, "25999999": 400, "25arrai": 354, "25kb": 399, "25th": 253, "26": [322, 371, 376, 394, 400, 401], "2610": 400, "26131344": 400, "2633": 400, "26336139": 364, "2648": 400, "26504986": 364, "26550211": 364, "26586366e": 399, "2666": 400, "2677002": 400, "2687": 400, "2688172": 400, "269": 371, "26985601": 364, "26992607": 400, "27": [26, 99, 341, 364, 368, 376, 392, 393, 394, 400], "270": [21, 345, 364, 368, 392], "27008811": 364, "2701": 400, "2713542": 400, "27164576": 400, "27183901": 364, "272": [392, 400, 403], "2725": 400, "272727273": 343, "274": 400, "27431479": 364, "27500": 361, "275534": 400, "27586207": 400, "276": 399, "27649525": 364, "278": [345, 399], "27823924": 364, "27883947": 400, "27time": 364, "28": [0, 3, 341, 371, 376, 394, 399, 400], "280": [340, 343], "28070347": 364, "28274798": 400, "282767": 400, "28512": [340, 343, 344, 345], "28608515": 364, "28676046": 364, "287": 345, "28762492": 400, "289": 400, "28957748": 400, "28992": [253, 286, 374], "289999": 400, "28kb": 357, "28th": 3, "29": [322, 371, 376, 394, 400, 401], "29032258": 400, "2907364": 364, "291671": 400, "29310345": 400, "294117632": 371, "29513741": 400, "297": [354, 355, 392], "297231": 400, "29728577": 364, "2arrai": 357, "2coordin": [398, 399], "2d": [0, 13, 14, 26, 221, 238, 240, 241, 250, 253, 259, 264, 267, 268, 269, 277, 283, 286, 309, 310, 340, 341, 342, 343, 344, 345, 356, 364, 366, 368, 382, 383, 392, 396, 402, 403], "2d6bb6b2": 335, "2f": [309, 310], "2gb": 335, "2kb": [348, 357, 364, 376, 393, 399, 400, 401], "2layer": [398, 399], "2mb": [364, 393, 400], "2mesh2d_nfac": 357, "2x": 398, "2y": [348, 399], "3": [3, 4, 6, 8, 11, 12, 26, 27, 47, 49, 107, 123, 152, 159, 174, 211, 221, 260, 261, 262, 263, 287, 292, 293, 294, 297, 305, 312, 322, 340, 343, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 372, 376, 378, 382, 383, 385, 387, 388, 389, 391, 393, 394, 397, 398, 399, 400, 401], "30": [27, 66, 223, 224, 280, 281, 283, 296, 297, 305, 309, 310, 311, 340, 341, 342, 343, 344, 345, 348, 354, 361, 363, 364, 371, 376, 399], "300": [290, 361, 363, 367], "30107527": 400, "30180931": 400, "302": 393, "30360409": 400, "303704": 371, "304": 343, "304463": 400, "3044632363935": 400, "305e": 364, "306": 399, "3072": 335, "308": 340, "309": 400, "30980277": 400, "30_000": 380, "30t23": [364, 399], "31": [345, 364, 369, 376, 399], "31001320e": 399, "31028404e": 399, "31034483": 400, "31123686e": 399, "312": [368, 369, 392], "3125604112": 374, "314374": 400, "315815": 400, "315e": 364, "318181818": 343, "31937456e": 399, "31958325": 400, "31arrai": [364, 376, 399], "31t00": [364, 376, 399], "31xarrai": 364, "32": [232, 292, 293, 376, 389], "3216": 399, "321606": 400, "32258065": 400, "32500": 361, "325kb": 399, "32630": 253, "32631": 374, "327": 400, "32758621": 400, "3288": 399, "3288002": 400, "328838": 400, "329": [399, 400], "32mb": 400, "33": [343, 371, 376, 400], "33000016": 400, "331": 357, "332": 368, "33302832": 400, "33333333": 400, "335": [392, 393, 403], "33556241": 400, "33594632": 400, "336": 399, "336071": 400, "339": 357, "339959": 400, "34": [333, 335, 376, 400, 401], "340": 357, "341": 357, "342": [357, 371, 400], "343303": 400, "34408602": 400, "34453869": 400, "34482759": 400, "34805989": 400, "35": [172, 297, 340, 341, 342, 343, 344, 345, 354, 356, 359, 362, 371, 376, 392, 399, 400, 403], "350": 348, "35154157": 400, "353213": 400, "35321338409926": 400, "35387764e": 399, "35398254e": 399, "35500002": 400, "35537922": 400, "35661888": 400, "3572": 360, "358": 364, "36": [371, 376, 392, 400, 401], "360446": 400, "36107755": 400, "36206897": 400, "363636364": 343, "364": 369, "364103": 400, "364103388758": 400, "3648": 399, "365": [348, 369, 399, 400], "3655914": 400, "365655": 400, "365d": 369, "36704140e": 399, "36731339e": 399, "36752074": 400, "367678": 400, "37": 376, "371": 394, "3724": [394, 399], "3744": 400, "37491": 400, "375": 394, "37500": 361, "375e": [364, 393, 399, 400, 401], "37634409": 400, "376e": [364, 393, 399, 400, 401], "3776": 400, "37846184": 400, "378e": 399, "379": 399, "37931034": 400, "37948227e": 399, "37981462e": 399, "38": [357, 376, 399, 400], "380": 400, "38137436": 400, "382142": 400, "3834999": 400, "3848": 399, "386406": 394, "387e": 400, "388e": 400, "389799": 400, "39": [376, 400, 401], "390": [371, 392, 393, 397, 403], "3915987": 400, "392b": 376, "393": 375, "39655172": 400, "39657822e": 399, "39692154e": 399, "397": 400, "399285": 400, "39947906": 400, "3arrai": [348, 354], "3coordin": [354, 398], "3d": [0, 5, 7, 15, 88, 96, 101, 115, 129, 139, 144, 149, 169, 238, 240, 241, 264, 270, 280, 281, 283, 296, 348, 361, 364, 376, 377, 380, 382, 383, 390, 392, 396, 402, 403], "3kb": 357, "3rd": [287, 318], "3xarrai": 354, "3y": 348, "4": [5, 27, 47, 49, 91, 94, 99, 104, 114, 118, 138, 142, 143, 147, 159, 172, 173, 176, 182, 183, 221, 260, 261, 262, 263, 305, 310, 311, 320, 322, 335, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 374, 375, 376, 380, 387, 388, 393, 394, 396, 398, 399, 400, 401], "40": [66, 174, 292, 293, 294, 340, 341, 344, 345, 356, 371, 376, 388, 397], "400000": 364, "400b": 399, "400kb": [399, 400], "402943": 400, "4030385": 400, "406517": 400, "407846": 394, "408": 399, "40860215": 400, "4088": 399, "409": 400, "409090909": 343, "40979767e": 399, "40993958e": 399, "40b": 393, "41": [340, 344, 345, 356, 376, 392, 399, 401], "410998257": 374, "411": 340, "413168": 400, "41375": 400, "4137931": 400, "41486168": 400, "41545822": 400, "418": 400, "41935484": 400, "41958737": 400, "41e": 400, "42": [376, 400], "420982": 400, "422": 399, "42485857e": 399, "4252": 399, "42520046": 400, "43": [376, 394], "43103448": 400, "43143739": 400, "432": 399, "4324": 399, "4326": [253, 374], "43262911e": 399, "433": 400, "43572426": 400, "437311964137": 400, "437312": 400, "43812462444505": 400, "438125": 400, "4394": 400, "4399999": 401, "44": [376, 394, 400], "44086022": 400, "441782": 400, "445357": 400, "445850": [372, 373, 374, 376, 393], "445950": [376, 393], "446050": [376, 393], "446150": [376, 393], "446250": [376, 393], "446350": [376, 393], "446450": [376, 393], "446550": [376, 393], "446650": [376, 393], "446750": [376, 393], "447126": 374, "44741655": 400, "448065": 394, "44827586": 400, "44999999": 400, "44arrai": 400, "45": [343, 359, 360, 376, 394, 399], "450": [348, 361, 363, 367], "450000": 394, "450050": 376, "450851": 394, "450_000": [393, 394], "451000": 394, "4516129": 400, "452000": 394, "452589": 400, "453000": 394, "454000": 394, "454545455": 343, "455000": 394, "456": 400, "456000": 394, "457000": 394, "457177": 376, "457215": 376, "458000": 394, "458e": [376, 393], "459000": 394, "459821": 400, "46": [114, 369, 372, 376, 394, 400], "460": 369, "460000": 394, "46072292e": 399, "460_000": 393, "461000": 394, "462000": 394, "463000": 394, "463008": 400, "463013": 394, "46339571": 400, "464": [365, 368, 392], "464000": 394, "465000": 394, "46551724": 400, "465750": 372, "465950": 372, "466": 394, "466000": 394, "4664": 399, "466627": 394, "466650": [376, 393], "466750": [372, 376, 393], "4668": 399, "466850": [376, 393], "466950": [372, 376, 393], "467000": 394, "467050": [376, 393], "467150": [372, 376, 393], "467201": 374, "467233": 394, "467250": [376, 393], "467350": [372, 376, 393], "467450": [376, 393], "467550": [372, 373, 374, 376, 393], "468000": 394, "468151": 374, "4689": 394, "46896210e": 399, "469000": 394, "46933594e": 399, "46arrai": 400, "46e": [376, 393], "46xarrai": 400, "47": [376, 394], "470000": 394, "471": 400, "471000": 394, "472000": 394, "472222222222243": 399, "472890": 371, "473": 371, "473000": 394, "474000": 394, "47500": 361, "475000": 394, "476000": 394, "477000": 394, "47761154": 400, "478000": 394, "478782": 394, "479": 374, "479000": 394, "48": 376, "480622": 400, "480_000": 394, "48275862": 400, "48387097": 400, "484": [392, 399, 403], "484196": 400, "486": [361, 368, 392, 400], "487152": 400, "487854": 400, "48b": [364, 398], "49": [371, 376], "491": 26, "491429": 400, "49462366": 400, "498": [392, 394, 403], "498579": 364, "498661": 400, "498e": 399, "4996": 399, "49976540e": 399, "49arrai": 376, "49y": 376, "4a": 320, "4arrai": 398, "4b": [320, 364, 399, 400], "4b9080cbb3354582": [364, 367, 394, 399], "4baa": 335, "4c": 320, "4d": 348, "4kb": [364, 393, 399, 400, 401], "4th": [292, 293, 294], "4y": 364, "5": [45, 118, 127, 142, 154, 159, 176, 220, 221, 232, 247, 258, 260, 261, 262, 263, 279, 280, 282, 287, 292, 293, 294, 322, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 371, 372, 374, 376, 378, 382, 383, 388, 391, 393, 394, 397, 398, 399, 400, 401], "50": [27, 66, 159, 247, 305, 309, 310, 311, 342, 348, 361, 363, 374, 376, 399], "500": [126, 152, 154, 156, 159, 356, 357, 359, 361, 362, 363, 364, 367, 369, 393, 399, 400, 401], "5000": [348, 360, 361, 363, 367, 393], "50000": 318, "5001": 364, "500coordin": 400, "500dask": [393, 399], "500fals": 400, "500layer": 399, "500nan": [364, 400], "500time": 364, "500y": [393, 399, 400, 401], "5023": 394, "505e": 364, "50761642e": 399, "50784569e": 399, "50798958": 400, "50840683e": 399, "50853882e": 399, "508670464": 371, "5094004": 400, "50_000": [318, 380], "50kb": 399, "50m": 374, "50th": 253, "50x": 399, "51": [138, 356, 400, 401], "510": 400, "511": 371, "511296": 400, "511471": 394, "5116": 399, "51160002": 400, "51496162e": 399, "51531830e": 399, "515e": 364, "51612903": 400, "517": 376, "51724138": 400, "519461": 400, "52": [368, 369, 374, 376, 392, 400, 401], "52303586468673": 400, "523036": 400, "52335644": 400, "52359343e": 399, "52396874": 400, "525": 400, "52500": 361, "52613735e": 399, "526694": 400, "52688172": 400, "52719975": 400, "52b": [364, 393, 399, 401], "53": [142, 400], "530268": 400, "5317909315": 374, "534013": 364, "53448276": 400, "536": 399, "5375": 400, "53750002": 400, "53761673": 400, "53763441": 400, "53865388624": 374, "53968716e": 399, "53994791": 400, "54064": 393, "54136038e": 399, "542414": 371, "545": 400, "5450002": 400, "545454545": 343, "54699516e": 399, "547": [342, 347, 392], "54708900e": 399, "54834080e": 399, "55": [359, 376, 400], "550": 348, "550500": 364, "550747": 394, "550_000": 364, "551500": 364, "55172414": 400, "552500": 364, "553500": 364, "554500": 364, "555500": 364, "55592707": 400, "555e": 364, "556500": 364, "557": 376, "557500": 364, "55815029e": 399, "558301": 400, "558500": 364, "559000": 399, "559012": [364, 393, 399, 400, 401], "559037": [364, 393, 399, 400, 401], "559050": 399, "559062": [364, 393, 399, 400, 401], "559087": [364, 393, 399, 400, 401], "559112": [364, 393, 399, 400, 401], "559137": [364, 393, 399, 400, 401], "55913978": 400, "559150": 399, "559162": [364, 393, 399, 400, 401], "559187": [364, 393, 399, 400, 401], "559212": [364, 393, 399, 400, 401], "559237": [364, 393, 399, 400, 401], "559250": 399, "559262": [364, 393, 399, 400, 401], "559287": [364, 393, 399, 400, 401], "559312": [364, 393, 399, 400, 401], "559337": [364, 393, 399, 400, 401], "559350": 399, "559362": [364, 393, 399, 400, 401], "559387": [364, 393, 399, 400, 401], "559412": [364, 393, 399, 400, 401], "559437": [364, 393, 399, 400, 401], "559450": 399, "559462": [364, 393, 399, 400, 401], "559487": [364, 393, 399, 400, 401], "559500": 364, "559512": [364, 393, 399, 400, 401], "559537": [364, 393, 399, 400, 401], "559550": 399, "559562": [364, 393, 399, 400, 401], "559587": [364, 393, 399, 400, 401], "559612": [364, 393, 399, 400, 401], "559637": [364, 393, 399, 400, 401], "559650": 399, "559662": [364, 393, 399, 400, 401], "559687": [364, 393, 399, 400, 401], "559712": [364, 393, 399, 400, 401], "559737": [364, 393, 399, 400, 401], "559750": 399, "559762": [364, 393, 399, 400, 401], "559787": [364, 393, 399, 400, 401], "559812": [364, 393, 399, 400, 401], "559837": [364, 393, 399, 400, 401], "559850": 399, "559862": [364, 393, 399, 400, 401], "559887": [364, 393, 399, 400, 401], "559912": [364, 393, 399, 400, 401], "559937": [364, 393, 399, 400, 401], "559950": 399, "559962": [364, 393, 399, 400, 401], "559987": [364, 393, 399, 400, 401], "559_000": [364, 371], "56": [371, 399, 400], "560012": [364, 393, 399, 400, 401], "56002688e": 399, "560037": [364, 393, 399, 400, 401], "560050": 399, "560062": [364, 393, 399, 400, 401], "560087": [364, 393, 399, 400, 401], "560112": [364, 393, 399, 400, 401], "560137": [364, 393, 399, 400, 401], "560150": 399, "560162": [364, 393, 399, 400, 401], "560187": [364, 393, 399, 400, 401], "560212": [364, 393, 399, 400, 401], "560237": [364, 393, 399, 400, 401], "560250": 399, "560262": [364, 393, 399, 400, 401], "560287": [364, 393, 399, 400, 401], "560312": [364, 393, 399, 400, 401], "560337": [364, 393, 399, 400, 401], "560350": [399, 400], "560362": [364, 393, 399, 400, 401], "560387": [364, 393, 399, 400, 401], "560412": [364, 393, 399, 400, 401], "560437": [364, 393, 399, 400, 401], "560450": 399, "560462": [364, 393, 399, 400, 401], "560487": [364, 393, 399, 400, 401], "560500": 364, "560512": [364, 393, 399, 400, 401], "560537": [364, 393, 399, 400, 401], "560550": 399, "560562": [364, 393, 399, 400, 401], "560587": [364, 393, 399, 400, 401], "560612": [364, 393, 399, 400, 401], "560637": [364, 393, 399, 400, 401], "560650": 399, "560662": [364, 393, 399, 400, 401], "560687": [364, 393, 399, 400, 401], "560712": [364, 393, 399, 400, 401], "560737": [364, 393, 399, 400, 401], "560750": 399, "560762": [364, 393, 399, 400, 401], "560787": [364, 393, 399, 400, 401], "560812": [364, 393, 399, 400, 401], "560837": [364, 393, 399, 400, 401], "560850": 399, "560862": [364, 393, 399, 400, 401], "560887": [364, 393, 399, 400, 401], "560912": [364, 393, 399, 400, 401], "560937": [364, 393, 399, 400, 401], "560950": 399, "560962": [364, 393, 399, 400, 401], "560987": [364, 393, 399, 400, 401], "560_000": [364, 393], "561012": [364, 393, 399, 400, 401], "561037": [364, 393, 399, 400, 401], "561050": 399, "561062": [364, 393, 399, 400, 401], "561087": [364, 393, 399, 400, 401], "561112": [364, 393, 399, 400, 401], "561137": [364, 393, 399, 400, 401], "561150": 399, "561162": [364, 393, 399, 400, 401], "561187": [364, 393, 399, 400, 401], "561212": [364, 393, 399, 400, 401], "561237": [364, 393, 399, 400, 401], "561250": 399, "561262": [364, 393, 399, 400, 401], "561287": [364, 393, 399, 400, 401], "561312": [364, 393, 399, 400, 401], "561337": [364, 393, 399, 400, 401], "561350": 399, "561362": [364, 393, 399, 400, 401], "561387": [364, 393, 399, 400, 401], "561412": [364, 393, 399, 400, 401], "561437": [364, 393, 399, 400, 401], "561450": 399, "561462": [364, 393, 399, 400, 401], "561487": [364, 393, 399, 400, 401], "561500": 364, "561512": [364, 393, 399, 400, 401], "561537": [364, 393, 399, 400, 401], "561550": 399, "561562": [364, 393, 399, 400, 401], "561587": [364, 393, 399, 400, 401], "561612": [364, 393, 399, 400, 401], "561637": [364, 393, 399, 400, 401], "561650": 399, "561662": [364, 393, 399, 400, 401], "561687": [364, 393, 399, 400, 401], "561712": [364, 393, 399, 400, 401], "561737": [364, 393, 399, 400, 401], "561750": 399, "561762": [364, 393, 399, 400, 401], "561787": [364, 393, 399, 400, 401], "561800": 400, "561812": [364, 393, 399, 400, 401], "561837": [364, 393, 399, 400, 401], "561850": 399, "561862": [364, 393, 399, 400, 401], "561887": [364, 393, 399, 400, 401], "561912": [364, 393, 399, 400, 401], "561937": [364, 393, 399, 400, 401], "561950": 399, "561962": [364, 393, 399, 400, 401], "561987": [364, 393, 399, 400, 401], "562012": [364, 393, 399, 400, 401], "562037": [364, 393, 399, 400, 401], "562050": 399, "562062": [364, 393, 399, 400, 401], "562087": [364, 393, 399, 400, 401], "562112": [364, 393, 399, 400, 401], "562137": [364, 393, 399, 400, 401], "562150": 399, "562162": [364, 393, 399, 400, 401], "562187": [364, 393, 399, 400, 401], "562212": [364, 393, 399, 400, 401], "562237": [364, 393, 399, 400, 401], "562250": 399, "562262": [364, 393, 399, 400, 401], "562287": [364, 393, 399, 400, 401], "562312": [364, 393, 399, 400, 401], "562337": [364, 393, 399, 400, 401], "562350": 399, "562362": [364, 393, 399, 400, 401], "562387": [364, 393, 399, 400, 401], "562412": [364, 393, 399, 400, 401], "562437": [364, 393, 399, 400, 401], "562450": 399, "562462": [364, 393, 399, 400, 401], "562487": [364, 393, 399, 400, 401], "562500": 364, "562512": [364, 393, 399, 400, 401], "562537": [364, 393, 399, 400, 401], "562550": 399, "562562": [364, 393, 399, 400, 401], "562587": [364, 393, 399, 400, 401], "562612": [364, 393, 399, 400, 401], "562637": [364, 393, 399, 400, 401], "562650": 399, "562662": [364, 393, 399, 400, 401], "562687": [364, 393, 399, 400, 401], "562712": [364, 393, 399, 400, 401], "562737": [364, 393, 399, 400, 401], "562750": 399, "562762": [364, 393, 399, 400, 401], "562787": [364, 371, 393, 399, 400, 401], "562812": [364, 393, 399, 400, 401], "562837": [364, 393, 399, 400, 401], "562850": 399, "562862": [364, 393, 399, 400, 401], "562887": [364, 393, 399, 400, 401], "562912": [364, 393, 399, 400, 401], "562937": [364, 393, 399, 400, 401], "562950": 399, "562962": [364, 393, 399, 400, 401], "562987": [364, 393, 399, 400, 401], "562_000": 364, "563": 400, "563012": [364, 393, 399, 400, 401], "563037": [364, 393, 399, 400, 401], "563050": 399, "563062": [364, 393, 399, 400, 401], "563087": [364, 393, 399, 400, 401], "563112": [364, 393, 399, 400, 401], "563137": [364, 393, 399, 400, 401], "563150": 399, "563162": [364, 393, 399, 400, 401], "563187": [364, 393, 399, 400, 401], "563212": [364, 393, 399, 400, 401], "563237": [364, 393, 399, 400, 401], "563250": 399, "563262": [364, 393, 399, 400, 401], "563287": [364, 393, 399, 400, 401], "563312": [364, 393, 399, 400, 401], "563337": [364, 393, 399, 400, 401], "563350": 399, "563362": [364, 393, 399, 400, 401], "563387": [364, 393, 399, 400, 401], "56340003": 400, "563412": [364, 393, 399, 400, 401], "563437": [364, 393, 399, 400, 401], "563450": 399, "563462": [364, 393, 399, 400, 401], "563487": [364, 393, 399, 400, 401], "563500": 364, "563512": [364, 393, 399, 400, 401], "563537": [364, 393, 399, 400, 401], "563550": 399, "563562": [364, 393, 399, 400, 401], "563571": 371, "563587": [364, 393, 399, 400, 401], "563612": [364, 393, 399, 400, 401], "563637": [364, 393, 399, 400, 401], "563650": 399, "563662": [364, 393, 399, 400, 401], "563687": [364, 393, 399, 400, 401], "563712": [364, 393, 399, 400, 401], "563737": [364, 393, 399, 400, 401], "563750": 399, "563762": [364, 393, 399, 400, 401], "563787": [364, 393, 399, 400, 401], "563800": 371, "563812": [364, 393, 399, 400, 401], "563837": [364, 393, 399, 400, 401], "563850": 399, "563862": [364, 393, 399, 400, 401], "563887": [364, 393, 399, 400, 401], "563906": 371, "563912": [364, 393, 399, 400, 401], "563937": [364, 393, 399, 400, 401], "563950": 399, "563962": [364, 393, 399, 400, 401], "563987": [364, 393, 399, 400, 401], "564000": 399, "564392": 371, "564500": 364, "564_000": [364, 371], "565217280": 371, "565500": 364, "565533": 400, "565e": 364, "566500": 364, "567_000": 364, "56896552": 400, "569108": 400, "56989247": 400, "56b": 364, "57": 376, "57024": 356, "57190623": 400, "572368": 371, "572765": 400, "5727653802364": 400, "57323608e": 399, "57339859e": 399, "574": 399, "57500": 361, "57634": 400, "578": 400, "57982802e": 399, "58": 371, "584505": 400, "5862069": 400, "58788539": 400, "59": [364, 399, 400], "590000": 371, "59039576206": 374, "590909091": 343, "59139785": 400, "592e": 399, "595": 394, "59714": 400, "5972": 399, "59arrai": 400, "59e": [364, 393, 399, 400, 401], "5arrai": [393, 398], "5d": 356, "5e": [364, 393, 399, 400, 401], "5kb": 357, "5mb": [393, 399, 401], "5th": 287, "5xarrai": [393, 398], "5y": 393, "6": [80, 81, 82, 88, 91, 94, 96, 99, 104, 107, 108, 109, 110, 111, 112, 114, 115, 118, 120, 122, 123, 135, 137, 138, 139, 142, 143, 144, 147, 152, 153, 154, 155, 156, 158, 159, 169, 172, 173, 176, 179, 181, 182, 183, 186, 202, 220, 221, 225, 226, 227, 228, 233, 234, 235, 260, 261, 262, 263, 286, 305, 310, 320, 322, 340, 341, 342, 343, 344, 345, 347, 348, 352, 356, 357, 359, 361, 363, 364, 365, 366, 367, 371, 376, 378, 390, 393, 394, 396, 398, 399, 400, 401], "60": [159, 362, 376, 399], "600": 159, "601": 400, "60215054": 400, "60344828": 400, "60386456": 400, "604": 399, "604373": 400, "604e": 400, "607947": 400, "60833979e": 399, "608649": 400, "609": [348, 350, 392], "61": 399, "611605": 400, "61290323": 400, "615179": 400, "616": 400, "6172": 399, "61737657e": 399, "618e": 400, "61984372": 400, "62": [376, 393], "62068966": 400, "6251": 360, "625149": 394, "627": [358, 368, 392], "63": [118, 176, 182, 183, 393], "632793": 400, "633": 400, "634": 399, "6344086": 400, "63479853e": 399, "635": 399, "63573351": 364, "63582288": 400, "63598": 400, "636": 399, "636363636": 343, "63793103": 400, "638e": 399, "639e": [364, 393, 399, 400, 401], "64": [0, 371, 389, 393], "640x480": [378, 400, 401], "64275829": 364, "643212": 400, "64516129": 400, "64976361": 364, "64b": 398, "64e": [299, 364, 393, 399, 400, 401], "64mb": 400, "65": [359, 376], "650": 348, "650000e": 399, "650444": 400, "650kb": 399, "651": 399, "65149546e": 399, "6516": 399, "65180204": 400, "652kb": 399, "65319374": 364, "654": 400, "654019": 400, "65517241": 400, "6558001": 400, "655e": 364, "656": 399, "6576766205017": 400, "657677": 400, "658489": 400, "65848928078788": 400, "66": 400, "66021213": 364, "6608": 399, "661": [367, 368, 392], "662": 394, "665e": 364, "66720984": 364, "66778121": 400, "669": 400, "66944365": 364, "66997651": 364, "67": [86, 376, 399, 400, 401], "670": 371, "67051889": 364, "6706604": 364, "67241379": 400, "674819": 400, "674e": [376, 393], "67500": 361, "67679977": 400, "676e": [376, 393], "67741935": 400, "67764711": 364, "67880011": 400, "679": 400, "679arrai": 400, "68": 400, "681818182": 343, "682052": 400, "682111": 364, "682634": 400, "6828": 393, "683": 379, "6834": 394, "68376037": 400, "68462064": 364, "687e": 400, "68817204": 400, "68908155e": 399, "689284": 400, "68965517": 400, "68arrai": 400, "68xarrai": 400, "69": 400, "6904": 399, "692": [347, 394, 400], "692858": 400, "696516": 400, "69973953": 400, "6arrai": 364, "6mb": 364, "6xarrai": 364, "6y": 364, "7": [3, 26, 113, 159, 174, 258, 260, 261, 262, 263, 320, 322, 343, 348, 354, 357, 361, 363, 364, 367, 371, 376, 389, 393, 394, 398, 399, 400, 401], "70": [361, 363, 364, 376], "70168152": 364, "70234778": 364, "7024": 356, "702e": 400, "703": [373, 375, 392], "70303061": 364, "706": 399, "706002": 400, "70689655": 400, "707": 400, "70967742": 400, "71": [147, 340, 341, 342, 343, 344, 345, 399, 400, 401], "710": 376, "71045101e": 399, "7124": 399, "71310349e": 399, "71318932e": 399, "713659": 400, "714": 399, "7143": 320, "71571869": 400, "716": 399, "717647": 371, "72": [376, 394, 399], "72043011": 400, "72043324e": 399, "720891": 400, "722": [374, 400], "724": 399, "72413793": 400, "725e": 400, "727272727": 343, "728": [359, 368, 392], "728123": 400, "728261": 371, "7284": 399, "72873783e": 399, "72925758e": 399, "72b": 348, "73": [394, 399, 400], "730146": 400, "731060": 371, "731697856155446": 400, "73169786": 400, "731698": 400, "73389453": 364, "73469247": 364, "734arrai": 364, "735": 364, "735356": 400, "73551559": 364, "736": 364, "737": 364, "738": 364, "73mb": 364, "74": [367, 393, 394], "7412": 399, "74137931": 400, "7425878607337": 400, "742588": 400, "744": 394, "745": [372, 375, 392], "746": 400, "74767702": 400, "74989173946": 374, "75": [94, 291, 292, 293, 295, 340, 343, 359, 376, 394], "750": 348, "75000": 360, "75015": 360, "75020": 360, "752498": 400, "75268817": 400, "75328350e": 399, "755842": 400, "75605583e": 399, "75862069": 400, "75934601e": 399, "759731": 400, "75th": 253, "76": [343, 371, 394, 400], "760": 400, "76000023": 400, "763": 399, "76307201": 400, "76344086": 400, "76365618": 400, "764": [357, 399], "766": [341, 347, 392], "766963": 400, "768": 399, "769": 26, "77": [118, 176, 371, 376, 394, 399], "7708": 400, "772727273": 343, "774195": 400, "77586207": 400, "776": [357, 368, 392], "777": [376, 379, 392], "778": 26, "77963534": 400, "779986": 400, "78": [393, 400], "780": 400, "781427": 400, "78494624": 400, "7864": 399, "787407": 364, "787419": 364, "79": [143, 337], "791338": 400, "79133800852065": 400, "792": 399, "79310345": 400, "79561451": 400, "79569892": 400, "79857": 400, "798822606ff1": 335, "799": 400, "7ec0e": [282, 286], "7layer": 364, "8": [159, 284, 299, 309, 310, 322, 335, 343, 348, 354, 361, 363, 364, 367, 371, 376, 393, 394, 399, 400, 401], "80": [292, 293, 344, 345, 354, 356, 376], "800000": 371, "800kb": 364, "802": 399, "804131": 400, "805802": 400, "806310": 371, "80645161": 400, "809445": 394, "809999": 399, "80b": 398, "81": [118, 176, 340], "81034483": 400, "81159367": 400, "812": 394, "81238127": 400, "813035": 400, "814": 400, "818": 357, "818181818": 343, "82": [118, 176, 340, 376, 399], "820267": 400, "82757283": 400, "82758621": 400, "82795699": 400, "83": [118, 176], "83600044": 400, "837": 400, "83741": 400, "838150": 371, "83870968": 400, "84": [371, 399], "842105344": 371, "843018": 394, "84355199": 400, "844": [360, 368, 392], "844642": 400, "84482759": 400, "84568357": 400, "847584": 343, "8494001c276a4b96804cde7829c04d7f": 335, "85": [359, 376, 401], "850": 348, "851874": 400, "852": 400, "854890": 394, "855": 394, "859106": 400, "85953116": 400, "86": [91, 344, 345, 371, 400, 401], "8608": 399, "86091": 394, "86206897": 400, "86359978": 400, "863636364": 343, "864": 356, "864b": 354, "865": 394, "869": 400, "87": 376, "87096774": 400, "872": 399, "875": [340, 400], "87510014": 400, "87551032": 400, "875arrai": 400, "876249": 400, "8762492488771": 400, "877339": 400, "87931034": 400, "88": 399, "88172043": 400, "883481": 400, "888": 399, "88b": 348, "890": 400, "89000003": 400, "890714": 400, "89148948": 400, "892": 394, "89221048e": 399, "8964": 393, "89655172": 400, "897946": 400, "89848566e": 399, "8arrai": 399, "8b": [348, 357, 364, 376, 393, 398, 399, 400, 401], "8mb": 400, "8xarrai": 399, "9": [159, 322, 342, 343, 348, 354, 357, 359, 363, 364, 371, 376, 382, 385, 389, 393, 394, 399, 400, 401, 403], "90": [21, 361, 363, 376], "900": 348, "90000": 394, "9000001": 400, "901483": 400, "90279961": 400, "90322581": 400, "904": 394, "905": 400, "906": [378, 379, 392], "90746864": 400, "90870237e": 399, "909090909": 343, "90950": [372, 373, 374, 376, 393], "90_000": 394, "91": [348, 393, 400], "91000": 394, "91050": [376, 393], "91150": [376, 393], "91250": [376, 393], "913": 26, "91350": [376, 393], "9137931": 400, "91397849": 400, "914": 400, "91450": [376, 393], "91550": [376, 393], "91560221e": 399, "91650": [376, 393], "91750": [376, 393], "91759992": 400, "91850": [376, 393], "92": [376, 399, 400], "92000": 394, "92048049": 400, "922": [374, 375, 392], "922321": 400, "92344781": 400, "925628": 400, "9258001": 400, "9259787643396": 400, "925979": 400, "92645": 374, "928": [376, 400], "92900181e": 399, "929553": 400, "92arrai": 400, "92c5de": 290, "93": 26, "93000": 394, "93000031": 400, "93103448": 400, "93282318e": 399, "9358001": 400, "936785": 400, "93942697": 400, "94": 393, "94000": 394, "943": 400, "94623656": 400, "94827586": 400, "94934893e": 399, "94950": 372, "95": [359, 376], "95000": 394, "9508": 400, "95150": 372, "952": 399, "95350": 372, "954545455": 343, "95540613": 400, "95569086": 400, "95698925": 400, "9576": 399, "958": 400, "96": [371, 393], "96000": 394, "96116": 400, "964818": 400, "96547222e": 399, "96551724": 400, "96773362e": 399, "968393": 400, "97": [27, 159, 309, 310, 311, 356, 357, 359, 361, 362, 363, 364, 367, 369, 376, 399], "97000": 394, "97071409e": 399, "97132": 376, "972222222222214": 354, "975468": 400, "975625": 400, "977": 394, "97849462": 400, "97wr01926": 343, "98": [26, 27, 247, 309, 310, 311, 340, 341, 342, 343, 344, 345], "98000": 394, "982": 400, "98263748545648": 374, "98275862": 400, "984": [344, 347, 392, 399], "98664236e": 399, "9874959": 400, "987arrai": 399, "98924731": 400, "99": [27, 309, 310, 311, 354, 374], "99000": 394, "99483585": 400, "996": 400, "9976": 399, "998836": 400, "999": 27, "9999": [26, 206, 214], "9999999": 0, "9nan": 348, "9x": 348, "A": [0, 9, 13, 26, 27, 29, 41, 42, 54, 58, 59, 66, 81, 82, 88, 91, 96, 101, 113, 114, 118, 119, 123, 124, 138, 143, 149, 159, 176, 178, 182, 183, 213, 223, 232, 241, 257, 264, 292, 293, 294, 300, 311, 318, 320, 335, 343, 345, 360, 364, 369, 382, 383, 393, 394, 395, 397, 400], "ATS": 159, "And": [343, 378, 389], "As": [0, 7, 119, 159, 178, 337, 356, 357, 359, 360, 361, 362, 364, 367, 380, 388, 394], "At": [0, 25, 84, 90, 93, 98, 117, 121, 127, 141, 146, 151, 167, 171, 180, 317, 389], "Be": [30, 32, 168], "But": 399, "By": [0, 55, 99, 131, 138, 159, 184, 261, 283, 351, 364, 376, 388, 393], "For": [0, 12, 25, 26, 27, 33, 77, 80, 86, 91, 94, 114, 118, 120, 127, 138, 142, 143, 147, 159, 176, 179, 182, 201, 216, 218, 219, 225, 226, 227, 228, 232, 241, 255, 280, 282, 291, 292, 293, 294, 295, 296, 297, 311, 317, 318, 320, 333, 334, 337, 343, 345, 351, 354, 357, 359, 360, 364, 366, 371, 381, 382, 383, 385, 389, 391, 393, 394, 395, 397, 398, 399, 400, 401], "If": [3, 6, 11, 12, 16, 27, 37, 41, 42, 43, 44, 45, 47, 54, 55, 56, 59, 77, 79, 80, 81, 85, 86, 91, 94, 99, 101, 104, 108, 109, 110, 112, 113, 118, 122, 123, 124, 129, 130, 133, 137, 138, 142, 143, 147, 153, 155, 158, 159, 164, 165, 168, 172, 174, 176, 181, 182, 183, 211, 214, 216, 223, 224, 225, 226, 228, 233, 234, 235, 242, 248, 253, 258, 261, 264, 266, 275, 279, 280, 282, 285, 286, 289, 292, 293, 296, 297, 300, 306, 309, 310, 318, 320, 333, 334, 335, 359, 364, 366, 374, 388, 389, 391, 397, 399], "In": [0, 5, 11, 18, 20, 26, 29, 39, 41, 44, 47, 49, 54, 55, 80, 81, 82, 118, 119, 138, 159, 174, 176, 178, 223, 224, 241, 253, 277, 283, 300, 304, 312, 313, 314, 315, 318, 334, 335, 336, 338, 343, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 374, 376, 388, 389, 393, 394, 397, 398, 399, 400, 401], "It": [0, 13, 14, 27, 44, 55, 76, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 202, 223, 224, 232, 281, 292, 293, 294, 298, 311, 335, 338, 354, 356, 359, 360, 363, 364, 365, 371, 376, 378, 382, 385, 388, 389, 390, 394, 398, 399, 401], "Its": [144, 169, 399], "NO": 159, "No": [0, 211], "Not": [47, 49, 79, 80, 86, 91, 94, 118, 123, 143, 147, 174, 176, 182, 183, 261, 337, 354, 382, 383, 389, 391], "On": [119, 178, 334, 336, 339, 391, 400], "One": [31, 66, 113, 114, 268, 270, 282, 287, 289, 296, 335, 371, 382, 385], "Or": [3, 5, 25, 127, 174, 258, 261, 317, 333], "Such": 399, "That": [360, 401], "The": [0, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 25, 26, 27, 29, 30, 31, 33, 36, 37, 41, 44, 45, 47, 49, 51, 54, 55, 58, 59, 66, 68, 70, 72, 74, 76, 77, 78, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 106, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 159, 165, 166, 167, 169, 170, 171, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 208, 211, 213, 215, 219, 221, 222, 223, 224, 232, 237, 241, 251, 253, 254, 255, 257, 258, 261, 277, 280, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 320, 321, 333, 335, 337, 339, 340, 341, 342, 343, 345, 348, 351, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 374, 376, 378, 380, 382, 383, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 402], "Their": [388, 393], "Then": [130, 131, 132, 223, 224, 365, 369, 389], "There": [5, 45, 119, 178, 333, 334, 338, 348, 363, 365, 374, 388, 395, 397, 399, 400, 401], "These": [0, 13, 14, 25, 47, 49, 84, 90, 93, 98, 101, 117, 121, 127, 129, 141, 146, 151, 167, 171, 180, 201, 204, 248, 249, 282, 286, 288, 296, 317, 337, 346, 349, 351, 352, 366, 370, 380, 389, 391, 393, 394, 395, 398, 399, 400, 401], "To": [0, 5, 26, 35, 39, 41, 44, 45, 47, 55, 59, 84, 90, 93, 98, 117, 121, 126, 127, 141, 142, 146, 151, 167, 171, 180, 232, 241, 253, 255, 261, 283, 297, 317, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 348, 357, 360, 364, 369, 373, 376, 380, 382, 383, 385, 389, 391, 393, 397, 398, 399, 400, 401], "With": [119, 138, 178, 380, 381, 382, 389, 393, 400], "_": [0, 41, 42, 43, 44, 47, 54, 55, 74, 75, 76, 77, 78, 79, 80, 85, 86, 91, 94, 107, 109, 111, 113, 114, 118, 123, 124, 138, 142, 143, 147, 152, 154, 156, 159, 163, 165, 168, 172, 173, 174, 175, 176, 182, 183, 348, 397, 399, 400], "__": [74, 75, 76, 77, 78, 79, 80, 85, 86, 91, 94, 107, 109, 111, 113, 114, 118, 123, 124, 138, 142, 143, 147, 152, 154, 156, 159, 163, 165, 168, 172, 173, 174, 175, 176, 182, 183], "__init__": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 58, 61, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 91, 94, 99, 104, 107, 109, 111, 113, 114, 118, 123, 124, 125, 138, 142, 143, 147, 152, 154, 156, 159, 163, 165, 168, 172, 173, 174, 175, 176, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 280, 281, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 339, 389], "__name__": 399, "__version__": 339, "_c": 43, "_dask": 0, "_dtype_lik": 232, "_dtypedict": [232, 251], "_l": [41, 42, 43, 44, 54, 55, 393], "_metadata_dict": 354, "_mf6io": 77, "_p": 43, "_provid": 286, "_regrid_method": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 360, 399], "_required_extra": 26, "_supportsdtyp": [232, 251], "_tricontour": 358, "_type": 232, "_valid": 0, "ab": [342, 348, 360, 361, 363, 367, 369], "abc": 232, "abil": 335, "abl": [0, 333, 359, 391, 398], "about": [138, 159, 174, 334, 340, 342, 356, 360, 364, 391], "abov": [0, 27, 138, 165, 168, 172, 220, 236, 309, 311, 333, 357, 364, 380, 391, 393, 394, 397, 399, 400], "abrupt": 306, "abruptli": 398, "absent": 273, "absolut": [27, 137, 138, 159, 223, 309, 311], "abstract": [61, 217], "acceler": [159, 305], "accept": [0, 26, 100, 105, 118, 128, 176, 254, 255, 273, 274, 282, 286, 309, 310, 371, 388, 399, 401], "access": [0, 339, 354, 393, 398], "accessor": [382, 385], "accident": 0, "accompani": 393, "accord": [0, 41, 44, 47, 49, 54, 55, 204, 229, 339, 358, 393, 401], "accordingli": [0, 102, 106], "account": [0, 21, 149, 359, 399, 400], "accumul": [218, 357], "accur": [0, 85, 282], "accuraci": [232, 247, 291, 292, 293, 294, 295], "achiev": [159, 292, 293, 294, 364, 399], "acitv": 296, "acronym": 389, "across": [225, 226, 227, 228, 241, 359, 364, 399, 400, 402], "act": [0, 389, 400], "activ": [0, 16, 26, 51, 78, 80, 81, 82, 83, 89, 92, 97, 99, 102, 106, 108, 110, 112, 113, 116, 119, 122, 124, 138, 140, 145, 150, 153, 155, 158, 159, 166, 170, 174, 178, 181, 204, 206, 220, 225, 226, 227, 228, 233, 234, 235, 238, 240, 243, 244, 245, 246, 256, 264, 296, 297, 306, 309, 310, 312, 320, 340, 341, 342, 343, 344, 345, 348, 364, 389, 391, 398, 399, 400, 401], "active_grid_boundary_xi": [0, 322], "actual": [0, 44, 55, 186, 208, 219, 397], "ad": [44, 59, 77, 78, 101, 129, 135, 138, 159, 257, 258, 277, 306, 357, 361, 363, 366, 376, 389, 397, 399, 400], "adapt": [11, 12, 159, 257, 258], "add": [0, 25, 59, 61, 68, 70, 72, 78, 85, 101, 127, 129, 135, 280, 286, 317, 334, 335, 342, 356, 357, 361, 362, 364, 366, 367, 369, 378, 389, 391, 394, 397, 398, 399, 400], "add_basemap": 286, "add_bounding_box": 280, "add_colorbar": 371, "add_default_file_handl": [56, 59, 68, 72], "add_default_stream_handl": [56, 59, 68, 72], "add_mesh": 280, "add_timemap": 0, "addit": [0, 12, 25, 39, 51, 61, 68, 70, 72, 119, 123, 127, 138, 159, 178, 219, 223, 232, 251, 317, 337, 351, 389, 393], "addition": [131, 184, 232, 389], "additional_depth": [61, 68, 70, 72], "additional_tim": [25, 127, 317, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 361, 362, 363, 364, 367, 369, 398], "address": [0, 334, 335], "adequ": [223, 224, 292, 293, 294, 305, 309, 310, 318], "adher": 0, "adjac": [26, 76, 138, 306], "adjust": [26, 216, 292, 293, 294, 318], "administr": [391, 394], "admiss": [132, 184, 185], "adv": [340, 341, 342, 343, 344, 345, 356, 359, 362, 369], "advanc": [0, 340, 366, 390], "advantag": [335, 337, 397], "advect": [11, 291, 292, 293, 294, 295, 318, 356, 359, 369], "advectiontvd": [340, 341, 342, 343, 344, 345, 356], "advectionupstream": [359, 362, 369], "advent": 294, "advic": [0, 37, 391, 399, 401], "advis": 216, "affair": 389, "affect": [0, 27, 114, 296, 311, 401], "affin": [253, 278, 380, 393], "afresh": 336, "after": [0, 3, 41, 42, 54, 77, 79, 80, 86, 91, 94, 99, 101, 104, 118, 123, 127, 129, 143, 147, 174, 176, 182, 183, 208, 232, 265, 317, 320, 335, 336, 340, 341, 342, 343, 344, 345, 364, 401], "again": [0, 41, 54, 80, 119, 178, 334, 335, 389, 397, 399, 400], "against": [8, 364, 389], "aggreg": [0, 252, 254, 255, 382, 383], "agnost": [0, 103, 118, 176], "agricultur": 364, "ahead": [364, 367, 399], "ahn": [374, 378, 393], "ahn_50m": 374, "ahn_utm": 374, "ahn_utm_50m": 374, "aim": [27, 311], "air": [174, 388], "air_entri": 174, "air_entry_potenti": 174, "al": [299, 359], "albedo": [211, 354], "algorithm": [159, 292, 293, 294, 320, 400], "alh": 85, "alias": 50, "align": [138, 233, 234, 235, 382, 383, 401], "all": [0, 3, 5, 7, 8, 11, 25, 27, 31, 41, 42, 54, 61, 74, 75, 76, 81, 82, 84, 90, 91, 93, 98, 99, 101, 102, 104, 106, 114, 117, 119, 121, 127, 129, 131, 136, 137, 138, 141, 142, 146, 151, 159, 167, 169, 171, 173, 178, 180, 184, 186, 209, 219, 233, 234, 235, 242, 261, 279, 292, 293, 296, 297, 305, 309, 311, 317, 334, 336, 337, 338, 339, 346, 348, 349, 352, 354, 357, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 377, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 397, 399, 400, 401, 402], "all_boundaries_constant_head": 357, "all_package_inst": 399, "all_touch": 242, "allo": 335, "alloc": [0, 88, 96, 101, 103, 129, 138, 149, 220, 221, 225, 226, 227, 228, 238, 239, 240, 242], "allocate_drn_cel": [0, 238, 322], "allocate_ghb_cel": [0, 322], "allocate_rch_cel": [0, 220, 322], "allocate_riv_cel": [0, 240, 322, 400], "allocation_opt": [0, 88, 96, 101, 129, 149, 225, 226, 227, 228, 238, 240, 322, 400], "allow": [0, 3, 41, 54, 80, 113, 159, 174, 216, 225, 226, 228, 291, 292, 293, 294, 295, 297, 318, 364, 365, 371, 378, 380, 389, 391, 393, 397], "alon": 364, "along": [0, 9, 10, 13, 14, 21, 85, 130, 133, 138, 241, 257, 258, 260, 267, 268, 269, 270, 306, 357, 364, 371, 376, 393], "alpha": [282, 286, 371, 378], "alreadi": [0, 80, 224, 287, 354, 369, 391, 397, 401, 402], "alright": 401, "also": [0, 21, 27, 39, 41, 44, 54, 55, 80, 86, 91, 94, 118, 132, 138, 143, 147, 159, 176, 182, 183, 184, 185, 202, 203, 215, 232, 241, 264, 291, 292, 293, 294, 295, 296, 297, 309, 311, 333, 334, 335, 336, 337, 348, 357, 359, 360, 361, 364, 365, 372, 376, 378, 380, 382, 383, 388, 389, 391, 393, 394, 397, 398, 399, 400, 401], "alter": [286, 401], "altern": [0, 41, 54, 382, 383, 389, 391], "alternative_cell_averag": [138, 399], "alterra": 26, "although": [74, 306, 356], "altogeth": [382, 383], "alv": 85, "alwai": [0, 20, 25, 32, 44, 45, 50, 100, 105, 127, 128, 138, 168, 174, 299, 304, 317, 318, 334, 380, 382, 383, 389, 393, 397, 399, 401], "ambigu": [262, 263], "amersfoort": [286, 374], "among": [77, 297, 364], "amongst": 0, "amount": [0, 26, 30, 159, 165, 306, 312, 313, 314, 359, 389, 398, 399], "amt": 138, "an": [0, 4, 5, 11, 13, 14, 21, 26, 27, 30, 39, 41, 45, 46, 47, 50, 51, 54, 56, 66, 75, 78, 80, 101, 102, 106, 108, 110, 112, 113, 115, 118, 119, 124, 129, 138, 139, 142, 144, 153, 155, 158, 159, 165, 176, 178, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 223, 229, 233, 234, 235, 242, 253, 257, 258, 260, 261, 262, 263, 267, 268, 269, 270, 278, 282, 286, 289, 297, 305, 306, 309, 310, 311, 320, 322, 333, 335, 337, 338, 341, 342, 343, 345, 348, 357, 359, 360, 361, 363, 364, 367, 371, 372, 378, 380, 386, 388, 390, 391, 393, 394, 395, 397, 398, 399, 402], "anaconda": 391, "analys": 216, "analysi": [340, 357, 364, 382, 383, 385, 390], "analyz": [401, 402], "ananaconda": 389, "angl": [21, 138, 399], "angldegx": [0, 138], "angle1": [138, 196, 399], "angle2": [138, 196, 399], "angle3": [138, 196, 399], "ani": [0, 21, 47, 48, 50, 51, 80, 83, 85, 89, 91, 92, 97, 99, 100, 105, 113, 116, 118, 119, 123, 124, 128, 138, 140, 143, 145, 147, 150, 159, 166, 169, 170, 174, 176, 178, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 229, 232, 251, 260, 262, 266, 267, 268, 269, 270, 273, 291, 292, 293, 294, 295, 306, 318, 334, 382, 383, 385, 386, 391, 397, 399, 400], "anim": [0, 280, 281, 390, 402], "anisotrop": [21, 138, 363], "anisotropi": [21, 34, 138, 306], "anisotropy_angl": 21, "anisotropy_factor": 21, "announc": [63, 64], "annoyingli": 397, "annualcropfactor": 322, "annualgrowthfactor": 354, "anoth": [8, 80, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 253, 360, 382, 383, 388, 393], "answer": 0, "anticip": [296, 297], "anymor": 0, "anyth": [58, 70, 100, 105, 128, 254, 255, 273], "anywai": 334, "anywher": [382, 383], "apart": [0, 218, 334], "api": [0, 77, 103, 251, 254, 255, 276, 337, 348, 367, 394], "apipackag": 0, "appar": 395, "append": [0, 380], "appli": [0, 4, 11, 12, 19, 25, 28, 45, 99, 102, 106, 109, 127, 138, 159, 174, 216, 287, 306, 309, 312, 313, 314, 317, 318, 320, 364, 374, 376, 395, 399], "applic": [0, 66, 299, 320], "approach": [13, 14, 159, 292, 293, 333, 397, 399], "appropri": [0, 159, 267, 268, 269, 270, 306, 382, 383, 391, 398], "approxim": [85, 232, 292, 293, 294, 305, 359, 388], "april": [0, 3, 348, 389], "aqueou": [113, 124], "aquif": [15, 23, 30, 32, 33, 34, 35, 94, 101, 113, 122, 124, 129, 165, 168, 181, 230, 286, 296, 306, 362, 364, 388, 393], "aquitard": [23, 35, 101, 129, 230, 282, 364, 393, 400], "ar": [0, 3, 4, 5, 7, 9, 10, 11, 13, 14, 22, 25, 26, 27, 31, 41, 42, 45, 47, 48, 49, 50, 51, 54, 66, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 105, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 201, 204, 206, 211, 213, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 238, 240, 241, 248, 249, 253, 257, 260, 261, 262, 263, 266, 267, 268, 269, 270, 272, 274, 275, 277, 280, 282, 286, 287, 288, 289, 292, 293, 296, 297, 306, 309, 311, 312, 313, 314, 317, 320, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 371, 373, 374, 376, 380, 382, 383, 386, 389, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402], "arang": [253, 260, 340, 341, 342, 343, 344, 345, 348, 356, 359, 360, 361, 362, 363, 367, 369, 376, 378, 394, 400], "arbitrari": [0, 5, 260], "architectur": 389, "area": [26, 29, 32, 143, 168, 201, 204, 205, 221, 232, 251, 254, 297, 312, 313, 314, 359, 364, 371, 372, 382, 383, 385, 388, 400, 401], "area_svat": 204, "areal": 364, "arg": [58, 66, 73, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 220, 221, 335], "arguabl": 388, "argument": [0, 5, 11, 45, 46, 74, 75, 76, 84, 90, 93, 98, 114, 117, 121, 131, 132, 135, 141, 146, 151, 164, 167, 171, 180, 184, 185, 211, 219, 223, 224, 232, 251, 253, 260, 261, 262, 263, 280, 282, 283, 286, 287, 289, 335, 342, 393, 400], "aris": 4, "arithmet": 306, "arm": 389, "around": [3, 292, 293, 294, 334, 351, 391, 397], "arrai": [0, 5, 22, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 106, 113, 114, 115, 116, 117, 118, 121, 124, 129, 131, 132, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 180, 182, 183, 184, 185, 201, 203, 204, 206, 211, 213, 214, 215, 216, 217, 225, 226, 227, 228, 232, 237, 238, 240, 241, 247, 260, 261, 262, 267, 268, 269, 270, 282, 286, 287, 289, 297, 299, 343, 348, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 369, 371, 376, 380, 389, 393, 397, 398, 399, 400, 401], "array_lik": [9, 13, 163, 257, 289], "array_nam": 399, "array_origin": 399, "array_regrid": 399, "arraynam": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180], "arri": 399, "arrow": 357, "articl": [338, 388, 389], "artifact": [333, 364, 367, 399], "artifici": 26, "as_index": 232, "asc": [309, 310], "ascii": [0, 37, 38, 213, 393], "asctim": 56, "asdict": 399, "ask": [0, 334, 386], "assert": 0, "assign": [0, 12, 59, 82, 103, 118, 119, 122, 137, 138, 159, 176, 178, 181, 229, 237, 283, 285, 287, 296, 306, 348, 371, 388, 398, 399, 400], "assign_coord": [283, 287, 359, 364], "assign_edge_coord": 357, "assign_wel": [0, 322], "assoc_column": [0, 47, 49], "assoc_ext": [47, 48], "assoc_kwarg": 45, "associ": [0, 45, 46, 47, 48, 49, 50, 78, 101, 119, 129, 138, 178, 356, 357, 359, 362, 369, 395, 399], "assum": [81, 82, 122, 138, 159, 174, 181, 225, 226, 228, 232, 356, 357, 359, 361, 364, 367, 397, 399], "assumpt": [13, 14, 138], "astyp": [348, 364, 371], "asymmetr": 78, "at_elev": [129, 220, 225, 226, 238, 400], "at_first_act": [220, 227, 400], "ath1": 85, "ath2": 85, "atleast": 0, "ats_outer_maximum_fract": [0, 159], "attach": [0, 356, 361, 363, 367, 393], "attempt": [80, 138, 306], "attent": 401, "attr": [41, 42, 54, 253], "attract": 389, "attribut": [0, 58, 66, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 90, 91, 93, 94, 98, 99, 104, 107, 109, 111, 113, 114, 117, 118, 121, 123, 124, 138, 141, 142, 143, 146, 147, 151, 152, 154, 156, 159, 163, 165, 167, 168, 171, 172, 173, 174, 175, 176, 180, 182, 183, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 232, 253, 258, 273, 348, 354, 357, 360, 364, 376, 380, 393, 394, 397, 398, 399, 400, 401], "atv": 85, "au": 369, "auburn": 340, "author": 335, "autmat": 286, "auto": [0, 322], "autom": 399, "automat": [0, 39, 41, 42, 44, 54, 120, 129, 130, 131, 132, 133, 142, 179, 184, 185, 280, 284, 289, 291, 292, 293, 294, 295, 296, 297, 298, 304, 320, 333, 334, 337, 348, 356, 360, 380, 391, 393, 397], "aux": [80, 86, 91, 94, 118, 143, 147, 176, 182, 183, 356, 369], "auxiliari": [0, 138], "auxiliary_variable_nam": 163, "auxmix": [80, 86, 91, 94, 118, 143, 147, 176, 182, 183], "avail": [0, 58, 66, 159, 222, 223, 224, 225, 226, 227, 228, 238, 240, 253, 333, 337, 351, 356, 357, 359, 361, 364, 367, 371, 389, 391, 395, 397, 399, 400], "averag": [3, 138, 159, 253, 360, 364, 371, 374, 382, 383, 399], "avevap": 354, "avoid": [0, 159, 214, 229, 242, 262, 263, 382, 383], "avprec": 354, "awar": 397, "awrmat": 340, "ax": [0, 21, 25, 127, 138, 282, 286, 287, 289, 290, 317, 340, 341, 342, 343, 344, 345, 357, 358, 359, 360, 364, 365, 369, 371, 372, 373, 374, 376, 378, 394, 397, 399, 400, 401], "ax0": 399, "ax1": 399, "axesimag": [364, 367, 371, 373, 374], "axi": [21, 41, 42, 54, 85, 138, 223, 282, 286, 287, 289, 360, 371, 393, 395], "axix": 380, "b": [25, 32, 127, 168, 230, 231, 253, 279, 282, 286, 317, 362, 389, 397], "b12a1745001": 371, "b12a1745002": 371, "b12a1747001": 371, "b12a1747002": 371, "b12a1748001": 371, "b12a1805001": 371, "b12a1805002": 371, "b12a1806001": 371, "ba": [0, 340, 341, 342, 343, 344, 345], "back": [0, 45, 265, 286, 356, 357, 361, 367, 389, 393, 394], "backend": 0, "background": [286, 364, 376, 380, 388, 391, 400], "backtrack": 159, "backtracking_numb": 159, "backtracking_reduction_factor": 159, "backtracking_residual_limit": 159, "backtracking_toler": 159, "backward": [114, 276], "bakker": 345, "balanc": [0, 219, 290, 292, 293, 294, 297, 309, 310, 358, 359, 399, 402], "band": 253, "bar": [159, 354], "bardelta": 159, "bare": [201, 219, 389], "bare_soil_factor": 201, "barrier": [0, 22, 107, 108, 109, 110, 111, 112, 152, 153, 154, 155, 156, 158, 248, 249], "barrier_gdf": [107, 109, 111, 152, 154, 156], "barrier_i": [152, 154, 156, 248, 249], "barrier_x": [152, 154, 156, 248, 249], "barrier_zbot": [248, 249], "barrier_zbottom": [248, 249], "barrier_ztop": [248, 249], "barycentr": [187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "base": [0, 13, 14, 21, 26, 47, 48, 50, 58, 61, 66, 68, 70, 72, 74, 84, 90, 93, 98, 108, 110, 112, 117, 120, 121, 122, 138, 141, 146, 151, 153, 155, 158, 159, 167, 171, 174, 179, 180, 181, 216, 221, 224, 236, 285, 291, 292, 293, 294, 295, 318, 338, 356, 359, 362, 363, 364, 371, 376, 380, 382, 385, 388, 389, 390, 391, 393, 394, 399], "baseexcept": 274, "basemap": [0, 286, 378], "basenam": [99, 104], "baseregridd": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180], "basi": 380, "basic": [241, 282, 296, 297, 306, 343, 354, 400, 401], "basicconfig": 56, "basicflow": [0, 340, 341, 342, 343, 344, 345], "basictransport": [0, 340, 341, 342, 343, 344, 345], "bat": 336, "batch": 0, "bbox_inch": 290, "bc": 174, "bcf": [364, 388], "bdec": 335, "bdgfff": [5, 376], "bdgflf": [5, 376], "bdgfrf": [5, 376], "becaus": [0, 142, 214, 296, 348, 354, 360, 362, 380, 389, 397, 398], "becom": [0, 44, 55, 80, 138, 292, 293, 294, 306, 388, 398, 399], "bed": [15, 230, 232, 296, 361, 400], "bed_leak": 367, "been": [0, 73, 80, 130, 131, 132, 133, 138, 164, 216, 257, 258, 261, 293, 337, 353, 356, 357, 361, 364, 371, 380, 386, 389, 393, 397, 399, 401], "befor": [0, 9, 10, 26, 41, 42, 54, 103, 122, 135, 181, 252, 258, 348, 364, 365, 371, 382, 383, 399, 400, 401], "beforehand": 12, "begin": [31, 63, 64, 88, 96, 132, 149, 184, 185, 211, 296, 297, 364, 367, 399], "behav": 23, "behavior": [0, 66, 159, 261, 262, 263, 286, 364, 367, 399], "behind": [340, 397], "being": [0, 119, 136, 159, 178, 276, 388, 399], "belong": [0, 101, 108, 110, 112, 129, 136, 153, 155, 158], "below": [3, 4, 7, 18, 27, 29, 41, 51, 54, 99, 138, 159, 165, 168, 172, 174, 220, 235, 236, 292, 293, 294, 297, 300, 309, 311, 315, 333, 335, 338, 351, 356, 359, 389, 397], "below_surfacelevel": 3, "benchmark": [340, 343, 345, 366, 368, 392], "bene": [19, 27, 28, 293, 299, 311], "benefit": 159, "best": [45, 318, 338, 359, 397, 401], "better": [0, 45, 122, 181, 292, 293, 294, 354, 360, 371, 388, 401], "between": [0, 7, 9, 10, 13, 17, 21, 23, 25, 35, 45, 74, 76, 94, 99, 113, 127, 138, 159, 174, 203, 215, 217, 221, 231, 247, 282, 286, 288, 292, 293, 294, 298, 305, 306, 310, 317, 318, 320, 337, 345, 348, 359, 360, 364, 369, 382, 383, 389, 398, 399, 401, 402], "beyond": [119, 178, 223], "bhead": [20, 94, 304], "bi": 159, "bicgstab": [159, 310, 356, 359, 362, 369], "big": [382, 383], "big_align": [382, 383], "bilinear": 253, "billion": 386, "bin": 399, "binari": [0, 37, 39, 78, 113, 130, 131, 132, 133, 137, 142, 184, 185, 337, 356, 359, 362, 364, 369, 380, 382, 385, 389], "binary_dil": [259, 357, 359, 363], "binary_eros": 364, "binaryfil": 380, "bind": [382, 385], "bisect": [309, 310], "bit": [0, 232, 397, 400], "black": [286, 357, 378, 400], "blank": [102, 106], "bloat": 337, "blob": 337, "block": [0, 50, 113, 124, 138, 174, 265, 292, 293, 337, 364, 399], "bnd": [51, 340, 341, 342, 343, 344, 345, 348], "bodi": [0, 255], "bone": 389, "bookkeep": 348, "bool": [0, 3, 5, 41, 42, 43, 51, 54, 59, 68, 72, 77, 78, 79, 80, 85, 86, 91, 94, 99, 100, 103, 104, 105, 107, 109, 111, 113, 114, 118, 122, 123, 124, 127, 128, 130, 131, 132, 134, 137, 138, 142, 143, 147, 152, 154, 156, 159, 163, 164, 165, 168, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 204, 206, 219, 223, 229, 242, 247, 260, 264, 279, 283, 286, 298, 300, 304, 305, 308, 312, 313, 314, 315, 318, 320, 321, 357, 359, 363, 364, 367, 398, 399, 400, 401], "boolean": [0, 3, 8, 165, 168, 225, 226, 227, 228, 238, 240, 243, 244, 245, 246, 253, 282, 286, 364, 382, 383], "boolfalsearrai": [398, 399, 400, 401], "booltruearrai": 399, "bor": 335, "border": 357, "border_valu": [357, 359, 363], "borehol": [47, 371, 394], "borehole1d": [47, 49], "borehole3d": [47, 49], "bot": [6, 8, 11, 12, 23, 35, 138, 283, 306, 340, 341, 342, 343, 344, 345, 364, 376], "bot_elev": 367, "both": [0, 5, 26, 27, 77, 85, 113, 124, 142, 149, 159, 211, 220, 232, 241, 254, 255, 257, 258, 261, 282, 286, 287, 289, 292, 293, 318, 339, 340, 343, 348, 360, 364, 365, 380, 388, 389, 391, 398, 399], "bottom": [0, 29, 91, 99, 108, 110, 112, 114, 122, 138, 147, 153, 155, 158, 172, 174, 175, 176, 181, 188, 220, 221, 224, 225, 226, 228, 229, 235, 236, 237, 238, 239, 240, 248, 249, 282, 283, 287, 289, 296, 315, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 361, 362, 363, 364, 367, 369, 376, 393, 399, 400, 401], "bottom_elev": [0, 29, 51, 147, 198, 221, 228, 235, 240, 315, 364, 399, 400, 401], "bottom_l": [381, 382], "bottom_l1": [381, 382], "bottom_resist": 206, "bottom_sourc": 0, "bound": [0, 29, 119, 126, 178, 236, 242, 260, 261, 262, 263, 280, 315], "boundari": [0, 5, 7, 8, 17, 18, 19, 20, 26, 28, 29, 58, 66, 79, 80, 86, 91, 94, 101, 118, 129, 143, 147, 164, 176, 182, 183, 220, 221, 223, 226, 234, 256, 259, 282, 286, 288, 296, 297, 298, 300, 304, 306, 315, 342, 356, 357, 359, 361, 362, 363, 364, 367, 369, 394, 400], "boundary_valu": 126, "boundarycondit": 0, "boundarynorm": 282, "box": [126, 280, 340], "branch": [333, 334, 339], "break": [0, 389, 391], "breviti": 354, "brief": 401, "bring": 386, "broadcast": [5, 348, 354, 400], "broader": 390, "broken": 0, "brook": 174, "brought": 401, "brows": 337, "btn": [0, 340, 341, 342, 343, 344, 345], "budget": [0, 5, 6, 11, 77, 79, 80, 86, 91, 94, 99, 104, 113, 118, 123, 124, 131, 133, 138, 142, 143, 147, 164, 165, 168, 174, 176, 182, 183, 184, 186, 219, 298, 300, 304, 306, 308, 312, 313, 314, 315, 321, 364, 376, 390], "budget_fil": [0, 142], "budget_fileout": 174, "budgetbinfil": 113, "budgetcsv_fileout": 174, "budgetcsvfil": [113, 367], "budgetzon": 5, "bug": [0, 334], "bui": 78, "build": [0, 339, 346, 349, 352, 360, 363, 364, 365, 366, 369, 389, 390, 399, 401, 402], "buildag": [364, 367, 394, 399], "builder": 333, "built": 380, "bulk": [113, 124, 362], "bulk_dens": [113, 124, 195, 362, 399], "bundl": 393, "buoyanc": [0, 356], "burden": 359, "burn": [232, 242, 251], "busi": 66, "button": [339, 366], "by_conduct": [221, 400], "by_corrected_transmiss": [221, 240, 400], "by_crosscut_thick": [221, 400], "by_crosscut_transmiss": [221, 400], "by_layer_thick": [221, 400], "by_layer_transmiss": [221, 238, 400], "bypass": [26, 335], "byte": [0, 186, 357, 393, 397, 399], "c": [0, 4, 25, 29, 127, 253, 317, 320, 335, 340, 341, 342, 343, 344, 345, 348, 362, 364, 367, 389, 394, 399, 400], "c0": [230, 232], "c1": [78, 230], "c2": 78, "c_leakag": 322, "c_radial": 322, "ca0020": 290, "cach": [0, 360, 399], "calcul": [0, 3, 5, 8, 11, 12, 21, 74, 78, 80, 99, 108, 110, 112, 138, 143, 153, 155, 158, 159, 165, 168, 173, 174, 232, 296, 297, 306, 308, 309, 312, 313, 314, 318, 320, 364, 371, 390, 395, 401], "calculate_gxg": [0, 322], "calculate_gxg_point": 0, "calendar": [50, 132, 184, 185, 364, 389], "calibr": [26, 216], "call": [0, 26, 45, 77, 78, 84, 87, 90, 93, 95, 98, 103, 117, 119, 120, 121, 127, 130, 131, 132, 133, 135, 141, 146, 148, 151, 159, 167, 171, 177, 178, 179, 180, 222, 223, 224, 232, 276, 280, 283, 292, 293, 317, 333, 334, 335, 348, 354, 364, 371, 382, 385, 389, 397, 399, 401], "callabl": [63, 64, 254, 255], "calss": [27, 311], "camera": 280, "camera_posit": 280, "campbel": 343, "can": [0, 5, 8, 11, 12, 13, 14, 17, 21, 25, 26, 27, 39, 41, 42, 45, 47, 54, 59, 66, 77, 78, 80, 81, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 99, 100, 104, 105, 107, 109, 111, 113, 114, 115, 117, 118, 120, 121, 123, 127, 128, 129, 138, 139, 141, 142, 143, 144, 146, 147, 149, 151, 152, 154, 156, 159, 165, 167, 168, 169, 171, 172, 176, 179, 180, 182, 183, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 211, 214, 219, 222, 223, 224, 225, 226, 227, 228, 232, 238, 240, 241, 242, 248, 249, 257, 258, 261, 277, 280, 282, 283, 286, 287, 289, 292, 293, 294, 297, 298, 311, 317, 318, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 369, 371, 372, 376, 380, 381, 382, 383, 385, 388, 389, 391, 393, 394, 395, 397, 398, 399, 400, 401], "canal": 394, "cannot": [39, 50, 119, 138, 159, 178, 211, 238, 240, 389, 397, 398, 399], "cap": [0, 26], "capabl": [159, 402], "capac": [26, 124, 201, 206, 211, 217], "capillari": [174, 216, 388], "captur": [391, 397], "care": [30, 32, 168, 261, 397, 399], "carri": [359, 389, 399, 401], "cartesian": [21, 253], "cartodb": 286, "case": [0, 4, 5, 41, 44, 47, 49, 54, 55, 81, 82, 118, 119, 130, 133, 138, 159, 174, 176, 178, 223, 241, 253, 274, 277, 283, 318, 334, 338, 343, 348, 354, 356, 357, 358, 359, 362, 364, 371, 374, 388, 389, 391, 393, 397, 398, 399, 401], "cat": 47, "catch": 0, "categori": [389, 394], "caus": [0, 27, 138, 214, 216, 233, 234, 235, 292, 293, 306, 311, 318, 359, 364, 367, 374, 399, 401], "caveat": 399, "cbar": 286, "cbc": [0, 131, 142, 174, 184, 186, 357], "cbc_content": 184, "cbc_grid": 357, "cbc_path": [184, 186], "cclose": [305, 310, 340, 341, 342, 343, 344, 345], "cd": [322, 340, 341, 342, 343, 344, 345, 348, 389, 391], "cdist": 0, "cell": [0, 4, 5, 7, 8, 11, 12, 16, 18, 26, 27, 29, 31, 36, 74, 76, 77, 80, 83, 89, 91, 92, 94, 97, 99, 102, 106, 108, 110, 112, 114, 116, 118, 119, 120, 122, 131, 136, 138, 140, 142, 143, 145, 150, 153, 155, 158, 159, 165, 166, 168, 169, 170, 172, 174, 176, 178, 179, 181, 183, 184, 186, 202, 203, 215, 220, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 238, 240, 241, 243, 244, 245, 246, 252, 254, 256, 264, 267, 268, 269, 270, 280, 281, 282, 283, 287, 291, 292, 293, 294, 295, 296, 297, 299, 300, 306, 309, 310, 311, 312, 313, 314, 315, 320, 321, 337, 340, 341, 342, 343, 344, 345, 348, 357, 359, 360, 361, 364, 367, 371, 383, 386, 393, 394, 396, 399, 401, 402], "cell2d": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 183], "cell_averag": 138, "cell_max_nparticl": [292, 293], "cell_min_nparticl": [292, 293], "cell_overlap": 223, "cellcentr": 360, "cellfac": 76, "cellid": [103, 122, 181], "cellsiz": [0, 9, 10, 13, 14, 26, 230, 232, 242, 253, 254, 255, 257, 376, 385], "celltabl": [0, 252, 322], "center": [74, 138, 242, 340, 357, 359, 361, 363, 364, 367], "centimet": 26, "centr": [4, 359, 362, 364, 400], "central": [74, 291, 320, 343], "centroid": [372, 399], "centroidloc": [360, 399], "certain": [0, 5, 18, 29, 37, 296, 300, 315, 371, 389, 391], "cf": 357, "cftime": [0, 36, 41, 42, 54, 321, 380], "cftimeindex": 0, "cg": [159, 357, 361, 363, 364, 367, 369], "cghb": 304, "chanc": 283, "chang": [17, 27, 30, 45, 138, 159, 165, 168, 182, 183, 265, 271, 280, 298, 299, 306, 309, 311, 320, 334, 335, 336, 339, 348, 362, 364, 374, 388, 389, 391, 398, 401, 402], "changelog": [322, 339], "chani": 306, "channel": [389, 391], "character": [361, 363, 367], "characterist": [3, 107, 152, 159, 201, 292, 293, 294], "chart": 354, "chd": [80, 81, 82, 187, 348, 357, 361, 362, 363, 367, 369, 398, 399], "chd_chd": 357, "chd_clip": 357, "chd_concentr": 369, "chd_data": 398, "chd_field": 369, "chd_locat": [357, 359, 363], "chd_time": 398, "cheatsheet": 334, "check": [0, 8, 24, 131, 159, 184, 260, 280, 291, 292, 293, 294, 295, 316, 334, 356, 364, 382, 383, 393, 399, 401], "checkout": 333, "chemic": [297, 369], "choco": 335, "chocolatei": 335, "chocolateyusewindowscompress": 335, "choic": [284, 389, 400], "choleski": [27, 305], "choos": [0, 13, 14, 211, 279, 282, 286], "chosen": [138, 225, 226, 227, 228, 241, 289, 292, 293, 318, 335, 369, 399, 400], "chunk": [0, 223, 357, 380, 393, 399], "chunksiz": [232, 254, 255, 357, 393, 399], "chunktyp": [357, 393, 399], "chunkwis": [0, 232], "ci": [333, 335], "cim": 113, "cimfil": 113, "cinact": 297, "circl": [39, 363, 366, 368, 392], "circle_partit": [358, 368, 392], "circle_transport": [359, 368, 392], "circular": [357, 358, 359], "clai": [229, 388], "clarif": 334, "class": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 57, 58, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 90, 91, 93, 94, 98, 99, 104, 107, 109, 111, 113, 114, 117, 118, 121, 123, 124, 125, 138, 141, 142, 143, 146, 147, 151, 152, 154, 156, 159, 163, 165, 167, 168, 171, 172, 173, 174, 175, 176, 180, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 280, 281, 282, 286, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 357, 360, 361], "classic": [340, 342], "classmethod": [81, 82, 88, 96, 101, 115, 119, 129, 139, 144, 149, 157, 169, 178], "clean": [0, 87, 95, 148, 177, 233, 234, 235, 236, 334, 336], "cleaned_d": 401, "cleanup": [0, 392, 402, 403], "cleanup_drn": [0, 87, 322], "cleanup_ghb": [0, 95, 322], "cleanup_riv": [0, 148, 322, 401], "cleanup_wel": [0, 177, 322], "clement": 340, "clemept": 340, "cli": 335, "cli_secret": 335, "click": [335, 366], "clip": [0, 126, 236, 357, 364, 399], "clip_box": [0, 357, 399], "clip_by_grid": 0, "clipped_half_simulation_constant_head": 357, "clockwis": 138, "clone": [333, 389, 391], "close": [114, 247, 371, 389], "closer": 393, "closur": [159, 247], "cm": [26, 174, 286], "cmap": [280, 282, 284, 356, 359, 371, 376], "cmd": 335, "coarsen": 0, "coarser": [203, 215, 399], "code": [0, 26, 118, 176, 182, 183, 232, 274, 318, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "coeffici": [26, 30, 32, 85, 113, 124, 138, 159, 168, 206, 299, 362], "coerc": 0, "col_index": [232, 252], "colleagu": [389, 401], "colleagues_river_data": 401, "collect": [25, 51, 127, 186, 232, 317, 340, 341, 343, 344, 345, 356, 360, 361, 363, 364, 367, 369, 372, 389, 390, 393, 400], "collis": 50, "colloqui": 389, "color": [282, 284, 286, 288, 290, 357, 372, 376, 378, 399], "colorbar": [282, 286, 378], "colorbrewer2": [282, 286], "colormap": [282, 286], "column": [0, 5, 9, 10, 11, 12, 13, 14, 26, 39, 45, 47, 48, 49, 103, 113, 138, 182, 209, 229, 232, 236, 242, 251, 252, 254, 255, 306, 312, 313, 341, 343, 344, 348, 360, 361, 363, 364, 367, 369, 371, 380, 382, 383, 393, 394], "column_a": 254, "column_b": 254, "column_name_in_geodatafram": [382, 383], "column_name_in_vector_data": [382, 383], "com": [0, 41, 54, 335, 389, 391], "comand": [340, 341, 342, 343, 344, 345, 348], "combin": [0, 8, 34, 35, 41, 42, 43, 45, 54, 138, 356, 359, 360, 364, 388, 393, 395], "combine_first": 364, "come": [0, 76, 337, 359, 364, 369, 382, 383, 389, 393, 394, 395, 402], "comma": [0, 113], "command": [333, 336, 340, 341, 342, 343, 344, 345, 348, 382, 385, 389, 391, 393], "comment": [0, 337], "commerci": [389, 391], "commit": [335, 337], "common": [33, 138, 233, 234, 235, 236, 241, 274, 276, 296, 388, 393, 401], "commonli": [159, 351, 388, 391, 393], "commun": [0, 174, 335, 338, 389, 391, 401], "compani": 391, "compar": [0, 29, 42, 119, 159, 178, 364, 365, 388, 393, 399, 400], "comparison": [365, 390, 401], "compat": [114, 276, 308], "compil": [41, 42, 54, 222, 223, 224, 389], "complain": 342, "complenetess": 339, "complet": [0, 55, 338, 389, 401], "complex": [348, 380, 386, 389], "compli": [0, 401], "compliant": [0, 100, 105, 128, 273, 381, 382], "complic": [45, 119, 178, 389], "compon": [0, 6, 9, 10, 13, 14, 138, 287], "componenti": 358, "compos": [44, 55], "composit": 0, "compress": 388, "comput": [0, 5, 6, 11, 12, 27, 41, 54, 80, 86, 88, 91, 94, 96, 108, 110, 112, 118, 131, 138, 143, 147, 153, 155, 158, 159, 176, 182, 183, 184, 218, 221, 223, 230, 232, 254, 255, 292, 293, 320, 348, 357, 358, 359, 362, 363, 364, 369, 372, 376, 380, 382, 383, 388, 389, 391, 393, 398, 399, 400], "computation": [292, 293, 294], "conc": [340, 341, 342, 343, 344, 345, 356, 369], "concat": 364, "concaten": [130, 133, 359, 364], "concentr": [0, 74, 76, 78, 79, 80, 86, 91, 94, 113, 114, 118, 130, 133, 142, 143, 147, 164, 176, 182, 183, 187, 190, 193, 197, 198, 233, 234, 235, 280, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 310, 312, 313, 314, 315, 319, 320, 321, 340, 341, 343, 344, 345, 356, 359, 362, 369, 399], "concentration_boundary_typ": [80, 86, 91, 94, 118, 143, 147, 163, 176, 182, 183, 356, 369], "concentration_fil": [0, 142], "concentration_l1": 0, "concept": [364, 388, 397], "conceptu": [340, 341, 342, 343, 345], "concis": 380, "concret": 397, "cond": [20, 29, 86, 94, 279, 304], "conda": [0, 339, 380, 389], "condens": 219, "condiat": 356, "condit": [0, 5, 8, 19, 27, 28, 32, 83, 89, 92, 97, 101, 114, 116, 129, 138, 140, 145, 150, 159, 164, 166, 168, 170, 209, 210, 279, 297, 342, 356, 357, 359, 361, 363, 367, 369, 400], "condition1": [382, 383], "condition2": [382, 383], "conduct": [0, 18, 20, 21, 23, 26, 29, 34, 35, 51, 86, 88, 94, 96, 101, 103, 108, 110, 112, 118, 119, 122, 129, 138, 147, 149, 153, 155, 158, 174, 176, 178, 181, 190, 193, 198, 216, 221, 223, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 300, 304, 306, 315, 320, 343, 348, 356, 357, 359, 360, 361, 363, 382, 383, 385, 388, 393, 401], "conductances_distribut": [238, 240], "conductivity_factor": 26, "config": 56, "config_run": [0, 348], "configur": [0, 56, 386, 388, 399], "confin": [15, 32, 122, 138, 165, 168, 169, 181, 296, 306, 361, 364, 388], "confirm": [366, 387], "confus": 388, "confusingli": 0, "conjug": [27, 159, 305, 311, 318], "conjunct": [159, 280], "connect": [0, 74, 99, 131, 138, 172, 184, 202, 203, 215, 335, 394, 396], "connection_length": 367, "connection_width": 367, "connectiondata": 138, "connectiontyp": 367, "consecut": 320, "consequ": [354, 364, 371, 386, 389], "conserv": [27, 293, 320], "consid": [5, 44, 55, 66, 182, 183, 233, 234, 235, 283, 292, 293, 294, 297, 299, 334, 364, 371, 376, 389, 399], "consider": [0, 388, 397], "consist": [0, 44, 55, 74, 159, 212, 348, 357, 359, 361, 362, 367, 371, 389, 393, 394, 399, 401], "consistenli": 0, "consol": 335, "constant": [0, 16, 17, 51, 77, 79, 80, 81, 82, 119, 138, 174, 178, 264, 280, 281, 296, 297, 298, 306, 318, 319, 340, 341, 342, 343, 344, 345, 348, 356, 357, 360, 361, 362, 363, 367, 369, 382, 383, 385, 388, 396, 398, 399, 400], "constant_conc": 362, "constant_concentr": 359, "constant_head": [357, 359, 361, 362, 363, 367], "constantconcentr": 297, "constanthead": [0, 187, 348, 357, 361, 362, 363, 364, 367, 369, 398, 399], "constantheadregridmethod": [0, 81, 82], "constraint": [11, 12, 291, 292, 293, 294, 295, 399], "constrast": 397, "construct": [0, 41, 54, 81, 82, 88, 96, 115, 139, 144, 149, 169, 248, 249, 258, 283, 354, 369, 400], "constructor": [0, 74, 75, 76, 280, 364, 367, 399], "consum": [382, 383, 402], "conta": [48, 357, 361], "contact": [356, 401], "contain": [0, 3, 6, 7, 8, 11, 12, 26, 45, 46, 47, 48, 49, 78, 101, 129, 131, 133, 134, 136, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 212, 213, 215, 217, 220, 221, 225, 226, 227, 228, 229, 232, 238, 240, 241, 253, 280, 282, 286, 287, 289, 290, 306, 335, 338, 348, 354, 356, 357, 363, 364, 365, 371, 376, 377, 388, 391, 393, 394, 395, 399, 400, 401], "contamin": 369, "content": [0, 47, 50, 51, 131, 174, 184, 216], "context": [0, 265, 272, 335], "contextili": [0, 286, 378], "contextmanag": 272, "continu": [66, 159, 274, 320, 334, 369, 393, 395], "contour": [13, 14, 289, 356, 359, 361, 367, 369, 376], "contourf": [356, 358, 359, 361, 367, 369], "contrast": [389, 397], "contribut": [338, 399], "control": [0, 5, 27, 77, 78, 79, 80, 85, 86, 91, 94, 99, 101, 104, 113, 118, 123, 124, 129, 131, 138, 142, 143, 147, 159, 164, 165, 168, 173, 174, 176, 182, 183, 184, 219, 241, 261, 286, 292, 306, 308, 348, 356, 367, 390, 391], "convect": 340, "conveni": [0, 232, 351, 359, 372, 373, 380, 382, 383, 393, 395, 399, 401], "convent": [41, 42, 43, 44, 54, 55, 277, 357, 393], "converg": [27, 159, 292, 293, 305, 309, 310, 311, 320, 356, 367, 388], "convers": [0, 130, 131, 132, 133, 184, 185], "convert": [0, 4, 26, 39, 45, 80, 99, 100, 103, 105, 118, 119, 122, 128, 130, 131, 132, 133, 138, 142, 149, 165, 168, 176, 178, 181, 184, 185, 199, 200, 276, 277, 297, 304, 306, 315, 354, 356, 357, 359, 361, 362, 363, 364, 367, 369, 372, 383, 385, 388, 399], "convert_pointwaterhead_freshwaterhead": 322, "convert_to_disv": 0, "convolut": [382, 383], "convolv": [382, 383], "coo": 232, "coolei": 159, "cooordin": 363, "cooper": 397, "coord": [0, 78, 84, 90, 93, 98, 117, 118, 121, 141, 142, 146, 151, 167, 171, 176, 180, 253, 260, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 362, 363, 367, 369, 398, 400], "coord_refer": [0, 322], "coordin": [0, 7, 9, 10, 13, 14, 36, 41, 44, 50, 78, 118, 132, 138, 165, 172, 176, 184, 185, 201, 204, 206, 213, 214, 216, 217, 223, 224, 232, 241, 251, 253, 254, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 275, 278, 282, 283, 285, 287, 289, 309, 310, 321, 348, 354, 357, 360, 363, 364, 371, 374, 376, 380, 382, 383, 394, 395, 398, 399, 400, 401], "copi": [0, 134, 210, 348, 357, 359, 363, 364, 391, 400, 401], "core": [0, 81, 82, 88, 96, 115, 139, 144, 149, 169, 232, 254, 255, 335, 391, 397], "corei": 174, "corner": 394, "correct": [0, 61, 68, 70, 72, 221, 230, 253, 320, 335, 364, 400, 401], "correct_water_t": 320, "correctli": [0, 66, 380], "correpsond": [132, 184, 185], "correspond": [0, 138, 216, 299, 320, 333, 348, 364, 371, 393], "cost": 337, "costli": 360, "could": [0, 27, 101, 174, 311, 337, 338, 371, 394], "count": [232, 399], "counter": [138, 399], "coupl": [0, 138, 214, 320, 352, 355, 364, 392], "coupler": [0, 322], "couplermap": 322, "couplingmap": 0, "courant": [291, 292, 293, 294, 295, 318, 340, 341, 342, 343, 344, 345, 399], "cover": [201, 338], "coverag": 334, "cpg": 394, "cpt": [47, 49], "cpu": 397, "cpython": 389, "cr": [0, 100, 105, 128, 253, 257, 258, 273, 286, 374, 394], "creat": [0, 44, 45, 47, 55, 82, 84, 90, 93, 98, 99, 100, 104, 105, 117, 118, 119, 121, 127, 134, 141, 142, 146, 151, 164, 167, 171, 176, 178, 180, 211, 219, 232, 237, 248, 249, 253, 260, 267, 268, 269, 270, 282, 287, 309, 310, 334, 335, 336, 339, 340, 341, 342, 343, 345, 348, 356, 358, 360, 362, 363, 364, 369, 372, 373, 374, 376, 378, 380, 388, 389, 391, 393, 397, 398, 399, 400], "create_circle_simul": [358, 363], "create_layered_top": [322, 356], "create_time_discret": [0, 24, 119, 129, 178, 316, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 361, 362, 363, 364, 367, 369, 398], "create_transport_model": 362, "create_twri_simul": [360, 363], "creation": [0, 81, 349, 350, 392], "credenti": 335, "criter": 247, "criteria": [159, 318, 371], "criterion": [0, 27, 159, 305, 309, 310, 311, 401], "critic": [61, 66, 68, 70, 72, 292, 389], "cross": [0, 9, 10, 13, 14, 21, 257, 258, 282, 287, 289, 292, 293, 305, 322, 340, 341, 342, 343, 345, 376, 377, 390, 393, 400, 402], "cross_sect": [0, 258, 287, 322, 376, 400], "cross_section_lin": [282, 322, 376], "cross_section_linestr": [282, 322, 400], "crosscut": [221, 400], "crossect": 359, "crosssect": 400, "crucial": 399, "crunch": 389, "csv": [113, 159, 174, 219, 371, 395], "csv_output": [0, 159], "ctx": [286, 378], "cube": [113, 124, 159], "cubic": [5, 11, 27, 253, 309, 311], "cubic_splin": 253, "cumsum": 348, "cumul": 348, "current": [0, 26, 128, 142, 159, 214, 297, 318, 354, 389, 390, 397], "curv": 211, "custom": [0, 41, 42, 44, 54, 55, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 283, 378, 399], "cuthil": 159, "cyclic": [0, 159], "d": [0, 4, 6, 9, 10, 13, 14, 22, 25, 26, 41, 44, 54, 55, 56, 127, 130, 131, 132, 133, 184, 185, 211, 213, 230, 231, 257, 280, 290, 312, 313, 314, 317, 320, 338, 342, 345, 348, 354, 356, 357, 362, 364, 376, 380, 381, 382, 383, 389, 400], "da": [0, 41, 44, 54, 55, 241, 250, 260, 261, 262, 263, 264, 277, 280, 281, 282, 283, 284, 289, 364, 381, 382, 383], "da1": [382, 383], "da2": [382, 383], "da3": [382, 383], "da_coord": 266, "da_firstlay": [382, 383], "da_gdal": [381, 382], "da_kd": [382, 383], "da_layer1": [382, 383], "da_select": [382, 383], "da_with_gap": [382, 383], "dai": [3, 5, 11, 19, 26, 28, 132, 184, 185, 211, 214, 217, 218, 299, 364, 369], "daili": [218, 364, 382, 383], "damp": [27, 159, 311, 340, 341, 342, 343, 344, 345], "damp_transi": 27, "dan": [382, 383], "darci": 138, "darcian": 0, "dash": [44, 55], "dask": [0, 261, 272, 357, 380, 390, 391, 393, 397, 399], "dat": 113, "data": [0, 25, 27, 41, 45, 47, 48, 49, 50, 54, 80, 81, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 100, 101, 105, 107, 109, 111, 113, 115, 117, 118, 119, 121, 127, 128, 129, 130, 131, 132, 133, 138, 139, 141, 142, 143, 144, 146, 147, 149, 151, 152, 154, 156, 167, 169, 171, 176, 178, 180, 182, 184, 185, 186, 202, 203, 204, 206, 212, 213, 215, 224, 232, 233, 234, 235, 242, 247, 248, 249, 251, 253, 254, 255, 257, 258, 260, 261, 264, 277, 280, 281, 282, 287, 289, 290, 296, 300, 308, 309, 311, 317, 340, 341, 342, 343, 344, 345, 348, 351, 354, 356, 357, 359, 363, 365, 367, 369, 370, 371, 372, 373, 375, 376, 378, 385, 389, 390, 391, 392, 396, 397, 398, 399, 402, 403], "data_var": 8, "dataarai": [5, 211], "dataarrai": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 50, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 106, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 201, 203, 204, 206, 211, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 289, 296, 297, 298, 300, 304, 306, 307, 309, 310, 312, 313, 314, 315, 319, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 362, 363, 364, 369, 374, 376, 383, 393, 397, 398, 399, 400, 401], "dataarrayi": [364, 399], "dataarraylay": [348, 393, 400], "dataarraytim": [348, 364], "databas": [212, 216, 401], "dataclass": [81, 82, 88, 96, 115, 139, 144, 149, 169, 399], "datafram": [0, 12, 45, 46, 47, 48, 49, 50, 107, 109, 111, 119, 152, 154, 156, 174, 178, 229, 232, 236, 252, 254, 255, 290, 309, 310, 342, 343, 345, 348, 354, 364, 382, 383, 385, 394, 395, 399], "dataframegroupbi": [254, 255], "datarrai": [7, 19, 282], "dataset": [0, 3, 6, 8, 11, 12, 41, 54, 101, 119, 129, 131, 133, 178, 184, 224, 257, 258, 271, 273, 277, 279, 354, 357, 358, 359, 364, 380, 393, 394, 397, 398, 399, 400, 401], "datasetdimens": [354, 393, 398, 399, 400, 401], "datatyp": 232, "date": [0, 3, 25, 41, 42, 44, 50, 54, 55, 127, 132, 184, 185, 317, 348, 389], "date_rang": [118, 176, 342, 348, 359, 382, 383], "datecolumn": 290, "daterang": [25, 317], "datetim": [0, 25, 36, 80, 86, 88, 91, 94, 96, 101, 118, 119, 126, 127, 129, 132, 143, 147, 149, 176, 178, 182, 184, 185, 273, 276, 317, 321, 364, 367, 399], "datetime64": [0, 36, 41, 42, 54, 126, 130, 131, 132, 133, 142, 184, 185, 268, 270, 321, 348, 364, 367, 376, 398, 399], "datetimeindex": [348, 364, 398, 399], "datetimeprolepticgregorian": [0, 41, 42, 54], "datimeprolepticgregorian": 0, "datum": 3, "day_of_year": 201, "dbd": 159, "dbf": 394, "dcep": [292, 293, 294], "dchmoc": 292, "dconcentration_epsilon": [292, 293, 294], "dconcentration_hybrid": 292, "deactiv": [85, 119, 159, 178, 233, 234, 235, 401], "deal": [0, 223, 224, 351, 380, 382, 385, 386, 389, 400, 402], "dear": 401, "debug": [0, 61, 63, 64, 66, 68, 70, 72, 103, 309, 310, 335], "dec": 364, "decai": [113, 124, 195, 362, 399], "decay_sorb": [113, 124, 195, 362, 399], "decid": [44, 55], "decim": 297, "declin": [32, 168], "declxml": 0, "decomposit": 159, "decor": [61, 63, 64, 68, 70, 72], "decreas": [0, 159, 400], "dedic": 360, "deep": [26, 400], "deepcopi": 0, "deeper": 400, "deepest": 400, "def": [223, 224, 362, 363, 364, 397, 399], "default": [0, 3, 6, 8, 11, 12, 22, 24, 26, 27, 39, 41, 42, 44, 47, 48, 49, 54, 55, 56, 58, 59, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 99, 100, 103, 105, 113, 114, 115, 117, 118, 121, 122, 123, 124, 128, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 147, 149, 151, 159, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 221, 222, 223, 224, 229, 232, 241, 242, 251, 253, 261, 262, 263, 264, 279, 280, 282, 283, 286, 291, 293, 294, 296, 297, 298, 299, 300, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 321, 333, 336, 359, 360, 364, 376, 382, 383, 388, 391, 394], "defer": [24, 316], "defin": [0, 5, 11, 12, 13, 14, 21, 22, 25, 29, 34, 41, 42, 44, 54, 55, 81, 82, 84, 90, 93, 98, 117, 119, 121, 127, 136, 138, 141, 146, 151, 159, 167, 171, 174, 178, 180, 216, 223, 227, 254, 255, 260, 261, 277, 297, 299, 306, 313, 317, 333, 335, 340, 341, 342, 343, 344, 345, 354, 356, 357, 359, 361, 363, 364, 367, 369, 371, 376, 378, 389, 393, 394, 397, 399, 400, 401], "definin": 399, "definit": [0, 100, 105, 128, 297, 369], "deflat": 309, "degre": [21, 138, 159], "del": 335, "delai": [0, 272, 391], "delc": 369, "delet": [182, 183, 391], "delim_whitespac": [45, 46], "delimet": 0, "delimit": 0, "delr": 369, "delta": [11, 12, 159, 364], "delta_z": 363, "deltar": [0, 333, 335, 339, 340, 341, 342, 343, 344, 345, 348, 389, 390, 391, 399], "deltares_email": 335, "delz": 369, "dem": 283, "demand": [0, 211, 292, 293, 294], "demonstr": [340, 342, 344, 345, 346, 349, 351, 352, 364, 366, 370, 380, 393, 398, 400, 402], "denot": [0, 21], "dens": [130, 131, 132, 133, 184, 185, 364], "densemax": 320, "densemin": 320, "denseref": 320, "denseslp": 320, "densiti": [0, 4, 78, 113, 124, 304, 315, 320, 340, 343, 356, 359, 362, 390, 399], "density_concentration_slop": [78, 320, 340, 341, 342, 343, 344, 345, 356, 359], "density_criterion": 320, "density_fresh": 4, "density_max": 320, "density_min": 320, "density_ref": 320, "density_speci": 320, "densityfil": 78, "depenc": 389, "depend": [0, 18, 20, 29, 86, 94, 103, 119, 137, 159, 174, 178, 232, 292, 293, 300, 304, 315, 318, 340, 364, 367, 382, 385, 386, 390, 397, 398, 399], "deploi": 339, "deprec": [182, 183], "deprecationwarn": 0, "depress": 174, "depth": [0, 19, 26, 61, 68, 70, 72, 91, 103, 174, 192, 204, 214, 216, 238, 240, 338, 371, 394, 399, 400], "depth_perched_water_t": 216, "deriv": [0, 164, 172, 359, 371], "descend": [0, 382, 383], "describ": [107, 109, 111, 131, 138, 152, 154, 156, 159, 184, 203, 204, 205, 206, 214, 215, 216, 217, 232, 356, 357, 359, 361, 364, 367, 388, 390, 398, 399, 400], "descript": [159, 219, 338, 345, 361, 400], "design": [0, 9, 10, 13, 14, 41, 54, 80, 138, 243, 244, 245, 246, 257, 258, 380, 389, 393], "desir": [44, 55, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 247, 253, 292, 293, 318, 362], "desktop": 335, "despit": 395, "destin": [382, 383], "detail": [0, 25, 27, 87, 95, 127, 148, 177, 311, 317, 338, 345, 364, 366, 393, 400], "detect": [0, 262, 263], "determin": [25, 122, 127, 138, 142, 174, 181, 232, 289, 297, 300, 306, 317, 320, 356, 364, 398, 399], "dev": [0, 223, 224], "devault": [309, 310], "develop": [0, 26, 174, 223, 224, 342, 344, 380, 382, 385, 390], "dewat": [138, 361, 362, 363, 364, 367, 399], "df": [45, 47, 48, 49, 232, 255, 290, 354, 381, 382, 383, 385], "di": [0, 81, 82, 87, 88, 95, 96, 123, 130, 131, 132, 133, 138, 144, 148, 149, 177, 182, 184, 185, 188, 356, 360, 361, 362, 363, 367, 369, 390, 399, 401], "diagon": [5, 78, 159, 348], "dict": [8, 42, 45, 46, 47, 49, 50, 51, 52, 81, 82, 88, 96, 101, 115, 119, 126, 129, 131, 133, 139, 144, 149, 157, 169, 178, 184, 186, 233, 234, 235, 242, 253, 261, 280, 282, 286, 287, 289], "dictionari": [0, 40, 42, 45, 46, 47, 49, 50, 51, 80, 81, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 101, 115, 117, 118, 121, 129, 139, 141, 143, 144, 146, 147, 149, 151, 167, 169, 171, 176, 180, 182, 186, 261, 348, 354, 357, 400, 401], "did": [0, 401], "diff": [365, 369, 401], "diff_for_plot": 365, "diff_riv_bot": 401, "diff_stag": 401, "diffc": 85, "differ": [0, 4, 20, 27, 35, 41, 45, 54, 82, 84, 88, 90, 93, 96, 98, 101, 115, 117, 119, 121, 129, 136, 138, 139, 141, 144, 146, 149, 151, 167, 169, 171, 178, 180, 204, 206, 214, 216, 224, 253, 279, 291, 292, 293, 294, 295, 297, 304, 311, 318, 320, 333, 340, 341, 342, 343, 344, 345, 354, 356, 362, 364, 365, 366, 368, 369, 371, 373, 382, 385, 389, 391, 392, 393, 398, 399, 400, 401], "different_ways_to_regrid_model": [360, 368, 392], "difficult": [0, 364], "diffus": [85, 299, 359, 362, 399], "diffusion_coeffici": [85, 189, 299, 340, 341, 342, 343, 344, 345, 356, 359, 362, 369, 399], "digit": [44, 55, 113], "dim": [0, 18, 19, 20, 23, 28, 29, 30, 32, 34, 35, 118, 142, 176, 241, 247, 253, 254, 260, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 369, 382, 383, 397, 398, 401], "dimens": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 26, 33, 44, 55, 80, 86, 91, 94, 113, 118, 119, 124, 130, 131, 133, 143, 147, 164, 176, 178, 182, 184, 220, 223, 225, 226, 227, 228, 232, 237, 238, 240, 241, 248, 249, 253, 254, 255, 256, 257, 258, 259, 261, 273, 277, 279, 280, 282, 283, 287, 289, 296, 348, 354, 357, 364, 369, 376, 380, 382, 383, 385, 389, 397, 398, 399, 400, 401], "dimension": [0, 5, 9, 10, 13, 14, 26, 120, 179, 244, 257, 258, 282, 283, 287, 289, 292, 293, 348, 356, 361, 369, 382, 383, 393, 397], "dimensionless": [32, 91, 113, 168, 306], "dimes": [256, 259], "diminish": 295, "dinoloket": 371, "direct": [0, 5, 6, 9, 10, 11, 13, 14, 85, 103, 138, 291, 292, 293, 294, 295, 306, 307, 319, 337, 356, 359, 360, 364], "directli": [0, 3, 39, 56, 253, 258, 333, 337, 374, 380, 382, 383, 388, 391, 393], "directori": [0, 42, 55, 100, 105, 128, 137, 265, 284, 334, 336, 337, 348, 354, 356, 357, 359, 361, 366, 367, 389, 393, 397], "dirti": 401, "dirty_d": 401, "dis6": 172, "dis_pkg": 401, "disabl": [41, 44, 159, 214], "disappear": [119, 178], "disast": 389, "discard": 3, "discharg": [0, 12, 118, 138, 174, 176, 182, 183, 290], "discontinu": 0, "discrep": [292, 293], "discret": [0, 25, 84, 87, 90, 93, 95, 98, 101, 117, 121, 123, 127, 129, 134, 138, 141, 144, 146, 148, 151, 167, 171, 172, 173, 175, 177, 180, 182, 183, 232, 317, 322, 356, 359, 361, 362, 363, 367, 369, 390, 392, 399, 401, 402, 403], "discretis": 318, "discretizationregridmethod": 0, "discretizationvertic": 0, "discuss": 393, "disk": [357, 389, 397], "dispers": [0, 189, 305, 340, 341, 342, 343, 344, 345, 356, 359, 362, 369, 399], "dispersionregridmethod": 0, "displac": 400, "displai": [280, 281, 335, 399], "display": 399, "dispsers": 85, "disquisit": 0, "distanc": [74, 138, 231], "distcoef": [113, 124, 195, 362, 399], "distinct": 286, "distort": 364, "distrcond": 221, "distribut": [0, 88, 96, 101, 113, 122, 124, 129, 149, 181, 221, 229, 238, 240, 292, 293, 312, 313, 314, 361, 362, 364, 389, 391, 397], "distribute_drn_conduct": [0, 322], "distribute_ghb_conduct": [0, 322], "distribute_riv_conduct": [0, 322, 400], "distributing_data": 400, "distributing_opt": [0, 88, 96, 101, 129, 149, 238, 239, 240, 322, 400], "distribution_coeffici": 113, "disu": 138, "disu6": 172, "disv": [0, 130, 131, 132, 133, 175, 183, 184, 185, 357, 358, 359, 363, 390], "disv6": 172, "ditch": [0, 364, 394, 400], "diverg": [13, 14, 292, 293], "divid": [0, 174, 232, 292, 293, 388, 397], "dll": [0, 77], "dnscrit": 320, "do": [0, 41, 42, 45, 54, 114, 132, 184, 185, 214, 216, 224, 232, 233, 234, 235, 241, 253, 261, 262, 263, 333, 334, 335, 348, 363, 364, 371, 372, 380, 383, 385, 386, 389, 391, 393, 399, 400, 401], "do_something_in_doc": 265, "doc": [0, 223, 224, 254, 255, 265, 283, 336, 348, 363, 389], "docstr": [0, 337], "documen": 393, "document": [0, 87, 95, 148, 177, 274, 280, 283, 334, 337, 338, 339, 357, 359, 364, 369, 382, 383, 390, 397, 399, 400], "doe": [0, 23, 27, 81, 82, 88, 96, 115, 119, 139, 144, 149, 165, 168, 169, 172, 178, 203, 215, 242, 261, 279, 296, 311, 318, 359, 362, 382, 383, 385, 388, 391, 397], "doesn": [58, 66, 70, 242, 334, 342, 362, 389, 391, 393], "doi": [77, 343, 345], "domain": [0, 83, 89, 92, 97, 113, 116, 120, 124, 136, 140, 145, 150, 166, 170, 179, 229, 233, 234, 235, 253, 309, 310, 341, 348, 356, 359, 360, 362, 364, 365, 371], "domin": [292, 293, 294], "don": [280, 335, 359], "done": [81, 130, 131, 132, 133, 184, 185, 208, 309, 310, 335, 336, 360, 364, 366, 382, 383, 388, 397, 399], "doubl": [0, 44, 360], "down": [0, 7, 11, 12, 159], "download": [24, 335, 337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "downloadstr": 335, "downscal": 399, "downsid": 397, "downward": [206, 400], "downward_resist": 206, "dpi": 290, "drain": [86, 113, 220, 225, 231, 233, 238, 300, 361, 363, 364, 367, 388, 399, 400], "drain_elev": [225, 238], "drainag": [0, 131, 149, 184, 190, 361, 363, 399], "drainagepackag": 8, "drainageregridmethod": [0, 88], "draw": [0, 5, 282, 283, 287, 289, 359], "drawdown": [296, 308], "drawn": [258, 282, 287, 289], "driven": [338, 391], "driver": [0, 55, 393], "drn": [0, 8, 50, 131, 184, 186, 190, 220, 221, 238, 361, 363, 399, 400], "drn_budget": [131, 184], "drop": [0, 8, 18, 159, 236, 300, 306, 372], "drop_allnan": 8, "drop_var": [364, 400], "dropna": 372, "drought": 211, "dry": [114, 122, 130, 132, 138, 159, 181, 185, 297, 306], "dry_nan": [130, 132, 185], "ds_flux": 376, "ds_ugrid": [381, 382], "dsp": [189, 340, 341, 342, 343, 344, 345, 356, 359, 362, 369], "dst_cr": [253, 374], "dt": [3, 11, 12], "dt0": 318, "dt_all": 8, "dt_min": 8, "dt_xyz": 11, "dtadj": 159, "dtype": [0, 44, 55, 142, 165, 232, 242, 251, 260, 262, 267, 268, 269, 270, 279, 348, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 376, 393, 394, 398, 399, 400, 401], "dtypelik": [232, 251], "due": [223, 299, 356, 360, 361, 362, 367, 389], "dummi": [58, 70, 372, 373, 398], "dump": [0, 284], "duplic": [0, 45, 80, 86, 91, 94, 118, 143, 147, 176, 182, 232, 361, 395, 400], "durat": [0, 132, 184, 185, 211, 356, 362, 364, 369, 398], "dure": [0, 26, 27, 36, 66, 103, 122, 159, 181, 211, 306, 309, 311, 321, 333, 399], "dutch": 3, "dvc": 390, "dx": [0, 230, 242, 266, 267, 268, 269, 270, 275, 340, 341, 342, 343, 344, 345, 348, 356, 360, 361, 362, 363, 364, 367, 369, 371, 372, 373, 374, 376, 382, 383, 393, 399, 400, 401], "dx_coars": 373, "dy": [0, 230, 242, 253, 267, 268, 269, 270, 275, 340, 341, 342, 343, 344, 345, 348, 356, 360, 361, 363, 364, 367, 369, 371, 372, 373, 374, 376, 382, 383, 393, 399, 400, 401], "dy_coars": 373, "dynam": 292, "dz": [6, 7, 11, 12, 340, 341, 342, 343, 344, 345, 348, 356, 376], "e": [0, 3, 5, 25, 26, 27, 45, 46, 50, 80, 86, 91, 94, 101, 118, 127, 129, 136, 143, 147, 164, 176, 182, 186, 214, 219, 224, 232, 241, 242, 253, 254, 255, 278, 282, 283, 286, 289, 292, 293, 297, 311, 317, 318, 333, 343, 351, 354, 380, 389, 390, 391, 394, 395], "each": [0, 22, 27, 41, 42, 44, 45, 47, 51, 54, 55, 77, 79, 80, 86, 91, 94, 100, 105, 113, 118, 123, 128, 138, 143, 147, 159, 164, 165, 168, 172, 174, 176, 182, 183, 201, 218, 257, 258, 292, 293, 297, 299, 306, 311, 312, 313, 318, 348, 354, 359, 360, 363, 364, 369, 371, 394, 395, 397, 398, 399, 400], "eager": [24, 316, 397], "eager_da": 397, "eager_head": 397, "eager_result": 397, "eagerli": 50, "earlier": [360, 400], "eas": [0, 377], "easi": [334, 335, 391], "easier": [0, 41, 54, 359, 388, 390], "easiest": [45, 382, 383], "easili": [0, 258, 280, 281, 287, 335, 337, 354, 357, 359, 393, 394, 397, 399], "east": [5, 21, 364], "eastern": 364, "eb": 219, "echo": 104, "ecosystem": 391, "edg": [0, 4, 5, 131, 184, 340, 348, 357], "edgecolor": [282, 286, 400], "edit": [0, 366], "editor": 337, "edu": 340, "effect": [0, 8, 85, 108, 110, 112, 113, 124, 138, 153, 155, 158, 159, 297, 299, 307, 319, 364, 388, 399, 400], "effici": [0, 13, 14, 41, 54, 174, 242, 305, 382, 383, 389], "effort": [293, 348], "ehead": 80, "eic": 219, "either": [0, 41, 42, 47, 49, 54, 80, 113, 119, 124, 159, 174, 178, 256, 259, 292, 333, 388, 397, 400], "elast": 388, "elder": [346, 347, 392], "element": [26, 382, 383, 397], "elev": [0, 4, 15, 18, 19, 26, 33, 86, 91, 138, 147, 172, 190, 204, 220, 225, 228, 233, 235, 238, 240, 296, 300, 361, 363, 364, 371, 393, 399, 400, 401], "ellipsoid": [85, 138], "els": [0, 26, 362, 400], "elsewher": [292, 293, 294], "em": [13, 14], "email": 335, "embarrassingli": 397, "embed": 337, "empti": [0, 253, 261, 267, 268, 269, 270, 357, 361, 363, 371], "empty_2d": [0, 322, 371, 372, 373, 374, 382, 383, 399], "empty_2d_transi": [0, 322, 382, 383], "empty_3d": [0, 322, 382, 383], "empty_3d_transi": [0, 322, 382, 383], "emptyregridmethod": 0, "en": [30, 32, 77, 165, 168, 251, 296, 348], "enabl": [0, 334, 351, 391], "encod": [41, 42, 54, 273, 393], "encompass": 364, "encount": 26, "end": [0, 9, 10, 13, 25, 27, 63, 64, 80, 88, 96, 101, 127, 129, 149, 211, 257, 287, 292, 293, 298, 317, 340, 341, 342, 343, 344, 345, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 376, 378, 382, 383, 393, 394, 395, 396, 397, 398, 399, 400, 401], "end_level": [63, 64], "end_sprinkling_season": [211, 354], "endtim": [24, 316, 348, 398], "enforc": [0, 399, 400], "enforce_dim_ord": 400, "eng": 340, "enorm": 386, "enough": [118, 363], "ensur": [0, 50, 233, 234, 235, 273, 364], "enter": [5, 138, 152, 154, 156, 296, 306, 362, 366, 388], "entir": [0, 4, 103, 109, 122, 138, 181, 236, 291, 292, 293, 294, 295, 297, 354, 388, 389, 393, 397, 401], "entri": [0, 42, 50, 51, 78, 104, 118, 119, 159, 174, 176, 178, 273, 339, 357], "enu": 335, "enum": [58, 66], "enumer": [220, 221, 225, 226, 227, 228, 238, 240, 400], "env": [335, 394], "environ": [0, 135, 333, 336, 339, 344, 366, 391], "envrion": 389, "envsoft": 77, "epd": 219, "epsg": [253, 286, 374], "epsilon": 174, "eq": 4, "equal": [0, 21, 26, 27, 29, 33, 74, 76, 85, 138, 159, 165, 168, 203, 215, 221, 229, 247, 292, 293, 296, 299, 306, 309, 310, 311, 318, 335, 358, 364, 388, 395, 400], "equat": [5, 27, 78, 138, 159, 305, 306, 311, 320, 364, 382, 383, 385], "equidist": [0, 205, 257, 267, 268, 269, 270, 382, 383], "equilibrium": [113, 124, 207, 208], "equival": [159, 220, 221, 225, 226, 227, 228, 277, 361], "ernst": 231, "erron": [0, 137, 401], "error": [0, 26, 47, 49, 61, 66, 68, 70, 72, 80, 103, 113, 122, 124, 159, 181, 219, 223, 261, 274, 348, 359, 380, 401], "escap": 335, "esp": 219, "especi": [0, 159, 354, 380, 388, 389, 391, 393, 398, 399], "espg": 0, "esri": [213, 394], "esrii": [0, 393], "essenti": [232, 389, 394], "essink": 345, "establish": [27, 138, 203, 215, 306, 309, 311], "estim": [159, 364, 388], "et": [91, 174], "et_pot": 174, "etact": 219, "etc": [0, 24, 51, 186, 277, 316, 389, 393, 397, 402], "euler": [292, 293, 294], "eulerian": [292, 293, 294], "evalu": [0, 287, 289, 322, 376, 380, 390, 392, 402, 403], "evapor": [19, 201, 211, 219], "evapotranspir": [0, 174, 192, 203, 213, 219, 290, 364, 399, 400], "evapotranspiration_lay": 302, "evapotranspirationmap": [213, 322], "evapotranspirationregridmethod": 0, "evapotranspor": 203, "even": [0, 13, 14, 27, 119, 138, 178, 291, 292, 293, 294, 295, 296, 297, 309, 310, 388, 393, 397, 398, 399, 400], "event": 66, "eventu": [364, 367, 399], "everi": [0, 3, 5, 25, 31, 45, 51, 77, 78, 79, 80, 86, 91, 94, 99, 104, 114, 118, 123, 127, 131, 138, 143, 147, 164, 165, 168, 174, 176, 182, 183, 184, 223, 287, 292, 293, 296, 297, 299, 306, 317, 364, 369, 393, 394, 395, 396, 397, 402], "everybodi": 337, "everywher": [149, 345], "evt": [0, 91, 192, 364], "evt_ss": 364, "evt_ss_mean": 364, "evt_tran": 364, "ex": [335, 340, 341, 342, 343, 344, 345, 348, 389], "ex01": [361, 363, 367, 369], "ex01_twri": [360, 361, 363, 368, 392], "exact": [333, 362, 391], "exactli": [0, 5, 6, 11, 12, 159, 335, 393], "exampl": [0, 3, 5, 24, 25, 41, 42, 44, 45, 47, 51, 54, 55, 56, 73, 78, 84, 90, 93, 98, 107, 109, 111, 117, 118, 121, 127, 129, 130, 131, 132, 135, 138, 141, 142, 146, 151, 152, 154, 156, 167, 171, 176, 180, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 218, 220, 223, 224, 225, 226, 227, 228, 232, 238, 240, 241, 242, 248, 249, 251, 253, 254, 255, 258, 260, 261, 262, 263, 265, 272, 274, 280, 281, 282, 283, 286, 287, 290, 316, 317, 333, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403], "example_1d_transport": [362, 368, 392], "example_bc": 398, "example_l1": [41, 54], "example_model": [358, 360, 363, 368, 392], "example_with_tim": 45, "examplesimod": 347, "examplesimodflow": 350, "examplesmetaswap": 355, "examplesmf6": 368, "examplesprepar": 375, "examplesvisu": 379, "exce": [4, 235, 247, 291, 292, 293, 294, 295, 318, 397, 399, 401], "exceed": [7, 138, 216, 292, 293, 320, 399], "excel": [334, 395], "except": [0, 114, 261, 262, 263, 274, 286, 393], "exception_typ": 274, "excess": 214, "exchang": [0, 99, 104, 138, 159], "exclud": [172, 399], "exclus": 0, "excpet": 229, "exe": 216, "execut": [0, 114, 135, 320, 337, 340, 341, 342, 343, 344, 345, 347, 348, 350, 355, 356, 357, 359, 361, 364, 366, 367, 368, 375, 379, 389, 392, 403], "executionpolici": 335, "exercis": [45, 401], "exfiltr": 29, "exhaust": 402, "exist": [0, 45, 56, 149, 172, 247, 253, 286, 351, 352, 355, 389, 392, 393, 397, 399, 402], "exit": 333, "expand": [88, 96, 149, 402], "expand_dim": [356, 359, 362, 369], "expans": [41, 42, 45, 54], "expect": [66, 88, 96, 108, 110, 112, 115, 135, 139, 144, 149, 153, 155, 158, 159, 169, 274, 357, 362, 366, 382, 383, 394], "expens": 75, "experi": [27, 159, 311, 380, 391], "experiment": 0, "explain": [362, 397, 402], "explan": [21, 401, 402], "explicit": [159, 291, 292, 293, 294, 295, 318, 320], "explicitli": [41, 54, 159, 253, 286, 297, 299, 318, 320, 361], "explor": 0, "expon": [124, 174], "exponenti": [113, 159], "export": [0, 380], "express": [41, 42, 54, 297, 397], "extdp": 174, "extend": [0, 174, 203, 215, 380], "extens": [0, 44, 47, 48, 55, 99, 104, 334, 391, 393, 399], "extent": [0, 393], "exterior": [0, 283, 285, 357], "exterior_depth": 283, "exterior_onli": 283, "extern": [26, 357, 359, 364], "extinct": [91, 174], "extinction_depth": [19, 174, 301, 302, 303], "extinction_theta": 174, "extra": [0, 26, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 359, 393], "extra_overlap": 223, "extra_storage_coeffici": 206, "extract": [0, 5, 26, 118, 119, 122, 176, 178, 181, 182, 183, 219, 258, 261, 266, 275, 278, 397], "extrat": 0, "extrem": [0, 159], "f": [4, 25, 127, 317, 343, 399, 400], "f4a582": 290, "face": [0, 5, 9, 10, 11, 13, 14, 74, 131, 138, 184, 186, 256, 259, 306, 357, 358, 359, 376], "face_area": 359, "face_budget_right": 5, "face_dimens": [357, 359, 363], "facebudget": 322, "facebudget_front": 5, "facebudget_low": 5, "facebudget_net": 5, "facecolor": [282, 286, 378, 400], "facet": 380, "fact_mswp": 26, "fact_svat": [201, 354], "factor": [11, 12, 21, 26, 27, 29, 34, 51, 119, 138, 149, 159, 178, 201, 216, 292, 293, 294, 306, 309, 311, 362], "fail": [0, 27, 37, 43, 274, 333, 334, 335], "fairli": 395, "fall": [7, 18, 29, 41, 42, 54, 99, 119, 120, 122, 178, 179, 181, 260, 262, 263, 286, 300, 315, 363, 389], "fallback": [0, 397], "fals": [0, 3, 5, 41, 42, 43, 54, 56, 59, 77, 78, 79, 80, 85, 86, 91, 94, 99, 100, 104, 105, 107, 109, 111, 113, 114, 118, 122, 123, 124, 128, 130, 131, 132, 137, 138, 142, 143, 147, 152, 154, 156, 159, 163, 164, 165, 168, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 223, 224, 232, 242, 253, 264, 279, 282, 283, 286, 298, 300, 301, 302, 303, 304, 306, 308, 309, 310, 312, 313, 314, 315, 318, 320, 321, 335, 340, 341, 342, 343, 344, 345, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 371, 376, 382, 383, 398, 399, 400, 401], "falsearrai": 400, "falsexarrai": [398, 399], "familiar": [357, 361, 363], "faq": [0, 391], "far": [362, 389, 391, 400], "fast": [276, 351, 391, 395, 397], "faster": [0, 85, 280, 281, 305, 320, 389, 391], "fault": 22, "faulti": 0, "favor": 393, "feasibl": 389, "featur": [0, 66, 223, 224, 230, 231, 232, 242, 251, 334, 337, 338, 348, 359, 364, 389, 394, 397, 400, 402], "feature_typ": 39, "fedd": 211, "feddes_p1": [211, 354], "feddes_p2": [211, 354], "feddes_p3h": [211, 354], "feddes_p3l": [211, 354], "feddes_p4": [211, 354], "feddes_t3h": [211, 354], "feddes_t3l": [211, 354], "feed": [357, 361, 401], "feedstock": 0, "few": [0, 336, 356, 360, 361, 367, 389, 395], "fewer": [292, 293], "fff": [9, 10, 13, 14], "fiddli": [41, 54], "field": [0, 9, 10, 13, 14, 84, 90, 93, 98, 117, 121, 138, 141, 146, 151, 167, 171, 180, 257, 258, 287, 292, 293, 299, 359, 360, 362, 369, 376], "fig": [282, 286, 290, 340, 341, 342, 343, 344, 345, 357, 358, 359, 360, 364, 365, 369, 371, 372, 373, 374, 376, 399, 400, 401], "figsiz": [284, 286, 400], "figur": [282, 286, 334, 378, 397, 398, 400, 401], "file": [0, 5, 22, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 77, 78, 79, 80, 86, 91, 94, 99, 100, 101, 104, 105, 107, 109, 111, 113, 114, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 137, 138, 142, 143, 147, 152, 154, 156, 159, 164, 165, 168, 172, 174, 176, 178, 182, 183, 184, 185, 186, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 217, 219, 232, 242, 253, 254, 255, 280, 288, 296, 306, 309, 310, 333, 335, 336, 337, 347, 348, 350, 351, 355, 356, 357, 358, 361, 363, 364, 367, 368, 371, 374, 375, 379, 380, 383, 389, 390, 391, 392, 393, 394, 395, 402, 403], "filehandl": [56, 59], "filenam": [41, 42, 43, 44, 54, 55, 56, 61, 68, 70, 72, 159, 393, 394], "fileout": [77, 79, 80, 86, 91, 94, 99, 104, 113, 118, 123, 124, 143, 147, 164, 165, 168, 174, 176, 182, 183, 364], "fill": [0, 119, 159, 178, 247, 251, 267, 268, 269, 270, 322, 348, 364, 395], "fill_between": 282, "fill_valu": [341, 367], "filt_bot": 371, "filt_top": 371, "filter": [0, 102, 106, 229, 236, 283, 363, 393], "filternumm": 371, "final": [25, 127, 232, 317, 340, 341, 342, 343, 344, 345, 348, 364, 365, 369, 391, 393, 395, 400], "find": [0, 42, 318, 333, 334, 353, 357, 389, 391], "fine": 337, "finish": [130, 131, 132, 133, 280, 348], "finit": [27, 291, 292, 293, 294, 295, 311, 318], "fiona": 394, "first": [0, 5, 9, 10, 13, 14, 25, 37, 41, 42, 43, 45, 50, 51, 54, 76, 80, 86, 91, 94, 113, 114, 118, 119, 124, 127, 129, 130, 131, 132, 135, 138, 142, 143, 147, 159, 172, 174, 176, 178, 182, 184, 220, 222, 223, 224, 230, 232, 253, 264, 287, 292, 293, 294, 317, 320, 335, 342, 348, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 376, 382, 383, 388, 389, 391, 393, 394, 398, 399, 400, 401, 402], "first_active_to_elev": [220, 400], "first_order_decai": [113, 124, 362], "firstli": 279, "fit": [45, 380, 397, 401, 402], "fix": [19, 28, 113, 159, 233, 234, 235, 236, 292, 293, 294, 334, 338, 356, 364, 401], "fixed_cel": [0, 91, 143, 398, 399], "fixed_format": 354, "fixed_format_pars": 354, "fixtur": [0, 399], "flag": [27, 41, 54, 59, 78, 79, 80, 85, 86, 91, 94, 113, 114, 118, 123, 124, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 292, 293, 298, 300, 304, 305, 306, 309, 310, 312, 313, 314, 315, 318, 320, 321], "flatten": 51, "flexibl": [0, 5, 277, 390], "flf": [9, 10], "flip": 0, "float": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 41, 44, 47, 49, 51, 55, 78, 79, 80, 83, 86, 89, 91, 92, 94, 97, 113, 114, 116, 118, 119, 123, 124, 126, 138, 140, 143, 145, 147, 150, 159, 165, 166, 168, 170, 172, 173, 174, 175, 176, 178, 182, 183, 201, 203, 204, 206, 209, 211, 213, 214, 215, 216, 217, 229, 230, 231, 232, 236, 242, 247, 248, 249, 251, 252, 254, 255, 262, 266, 267, 268, 269, 270, 273, 275, 280, 282, 283, 285, 286, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 354, 356, 357, 359, 361, 362, 363, 364, 367, 382, 383], "float32": [44, 54, 364, 376, 393, 399, 400, 401], "float326": 399, "float32nan": [399, 400, 401], "float64": [0, 44, 131, 133, 184, 348, 354, 357, 364, 371, 376, 393, 397, 398, 399, 400, 401], "float640": [354, 398], "float641": [354, 357, 364, 398, 399], "float6410": [354, 376], "float64100": [376, 399], "float64120": 354, "float6414": 400, "float642": [364, 393, 399, 400, 401], "float6420": 354, "float64230": 354, "float6425": [364, 393, 399, 400, 401], "float6429": 400, "float644": [376, 393], "float645": [354, 364, 393, 399, 400, 401], "float6450": 348, "float646": 400, "float648": 376, "float64850": 348, "float649": [376, 393], "float6499": 354, "float64nan": [399, 400], "float_format": [309, 310], "flopi": 361, "flow": [0, 5, 6, 9, 10, 11, 13, 14, 44, 47, 49, 76, 77, 78, 79, 80, 85, 86, 91, 94, 99, 101, 104, 107, 109, 111, 113, 118, 123, 124, 129, 131, 137, 138, 143, 147, 152, 154, 156, 159, 164, 165, 168, 174, 176, 182, 183, 184, 186, 214, 248, 249, 287, 292, 293, 296, 297, 306, 307, 309, 318, 319, 320, 322, 340, 343, 356, 357, 358, 360, 362, 367, 369, 377, 379, 388, 390, 392, 393, 398, 399, 402], "flow_solv": [356, 359, 362, 369], "flow_veloc": [0, 9, 10, 322, 376], "flowfront": 5, "flowja": [0, 131, 184], "flowlow": 5, "flowmodel": 362, "flowright": 5, "flowvel_streamlin": [376, 379, 392], "fluid": [78, 320, 345, 359], "flux": [0, 5, 8, 9, 12, 18, 19, 20, 28, 29, 36, 86, 88, 91, 94, 96, 143, 208, 218, 300, 304, 312, 313, 314, 315, 321, 356, 359, 364, 376], "flux_concentr": 356, "fmt": 361, "focus": [360, 363, 390, 393, 394], "folder": [0, 212, 334, 335, 340, 341, 342, 343, 344, 345, 348, 389], "follow": [0, 13, 14, 25, 43, 44, 55, 78, 101, 119, 127, 129, 138, 178, 232, 233, 234, 235, 236, 248, 249, 261, 309, 310, 317, 333, 335, 336, 339, 340, 341, 342, 343, 344, 345, 348, 351, 354, 356, 357, 359, 360, 361, 364, 366, 367, 371, 378, 389, 390, 391, 393, 395, 397, 398, 399, 400, 401], "forc": [25, 127, 317, 335, 386, 400], "foremost": 389, "forg": [0, 339, 389, 391], "forget": 335, "form": [101, 131, 184, 277, 356, 357, 361, 363, 380, 382, 385, 389, 393, 394, 395, 402], "format": [0, 56, 78, 81, 82, 88, 91, 96, 113, 115, 119, 129, 139, 144, 149, 169, 178, 278, 280, 290, 308, 309, 310, 322, 334, 351, 364, 380, 390, 394, 395, 397, 402], "former": [337, 401], "formul": [0, 78, 99, 138, 159, 165, 168, 174, 295, 299, 359], "forth": 0, "fortran": 389, "fortun": 395, "forward": [0, 119, 178, 280, 282, 286, 348], "found": [0, 99, 104, 131, 184, 333, 335, 360, 364, 389, 399], "four": [5, 292, 293, 362], "fourth": [292, 293, 294], "frac": [4, 11, 12], "fraction": [113, 159, 211, 291, 292, 293, 294, 295, 297], "fraction_evaporated_sprinkl": [211, 354], "frame": 364, "framework": [26, 56, 58, 59, 68, 72], "framewotk": 364, "free": [0, 91, 340, 397], "freeli": 214, "freq": [342, 348, 359, 364, 398, 399], "frequenc": [3, 142, 395], "frequent": [0, 272, 386], "fresh": [340, 341, 342, 344, 345, 356], "freshwat": [4, 304, 315, 320, 346, 347, 366, 368, 392], "freshwaterhead": 4, "freshwaterlen": [341, 347, 392], "freundlich": 124, "frf": [9, 10, 13, 14], "from": [0, 3, 4, 6, 7, 8, 18, 21, 25, 26, 27, 29, 30, 32, 35, 36, 39, 45, 50, 55, 56, 66, 76, 78, 81, 82, 88, 96, 101, 107, 109, 111, 114, 115, 119, 127, 129, 138, 139, 144, 149, 152, 154, 156, 159, 164, 165, 168, 169, 172, 174, 178, 186, 208, 219, 220, 225, 226, 227, 228, 237, 238, 240, 247, 248, 249, 253, 255, 257, 258, 263, 264, 273, 275, 278, 286, 287, 292, 293, 300, 305, 306, 309, 311, 315, 317, 318, 321, 333, 334, 335, 337, 340, 343, 347, 348, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 371, 374, 375, 379, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 401, 402, 403], "from_datafram": 354, "from_edg": 364, "from_fil": 0, "from_flow_model": [0, 356, 359, 362, 369], "from_imod5_data": 0, "from_imod5_shd_data": 81, "from_lakes_and_outlet": 367, "from_mdal_compliant_ugrid2d": [0, 322], "from_user_input": [100, 105, 128, 273], "front": [0, 5, 6, 9, 10, 11, 13, 14, 131, 184, 287, 306, 362, 376], "frost": 26, "frustrat": [389, 393], "fulfil": [0, 66], "full": [0, 21, 280, 305, 333, 340, 341, 342, 343, 344, 345, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 378, 380, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401], "full_lik": [261, 341, 345, 354, 356, 357, 359, 361, 362, 363, 364, 367, 376, 382, 383], "fulli": [0, 25, 30, 88, 96, 115, 127, 139, 144, 149, 165, 169, 317, 341, 380, 389, 391, 393, 397, 398, 400], "function": [0, 4, 5, 7, 8, 9, 10, 11, 37, 42, 43, 44, 45, 50, 55, 57, 62, 66, 80, 81, 82, 84, 85, 87, 88, 90, 93, 95, 96, 98, 102, 103, 106, 115, 117, 121, 127, 139, 141, 144, 146, 148, 149, 151, 159, 167, 169, 171, 174, 177, 180, 186, 211, 222, 223, 224, 238, 240, 255, 257, 258, 259, 261, 262, 263, 264, 276, 286, 287, 289, 317, 334, 351, 353, 354, 357, 359, 360, 362, 363, 364, 369, 371, 372, 373, 374, 378, 380, 382, 383, 385, 389, 390, 391, 393, 395, 397, 398, 399, 400, 401, 402], "function_nam": 399, "function_that_throws_warn": 272, "functionali": 351, "fundament": 380, "funtion": 351, "further": [21, 119, 159, 178, 357, 400], "furthermor": [0, 103, 142, 172, 221, 297, 335, 337, 364, 388, 400, 401], "futur": [182, 183, 334, 335], "g": [0, 3, 5, 25, 27, 45, 46, 50, 80, 86, 91, 94, 101, 118, 127, 129, 143, 147, 164, 176, 182, 186, 214, 219, 232, 241, 242, 253, 254, 255, 278, 282, 283, 286, 311, 317, 333, 345, 351, 354, 380, 389, 390, 394, 395], "galleri": [337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "gamma": 159, "gap": [241, 247, 283], "gapfil": 402, "gash": 211, "gatkin": 0, "gauss": 253, "gcg": [318, 340, 341, 342, 343, 344, 345], "gcr": 310, "gdal": [0, 54, 55, 100, 105, 128, 242, 253, 381, 382, 393, 394], "gdal_compliant_grid": [0, 381, 382], "gdal_raster": [322, 382, 383], "gdf": [5, 232, 286, 378, 382, 385, 394, 400], "gen": [0, 22, 50, 322], "gener": [0, 5, 20, 27, 41, 44, 47, 49, 54, 55, 94, 113, 114, 118, 164, 176, 216, 220, 223, 224, 226, 232, 234, 241, 253, 267, 268, 269, 270, 291, 292, 293, 294, 295, 299, 304, 305, 310, 311, 318, 322, 333, 336, 337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 383, 386, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "generalheadboundari": [0, 164, 193, 348, 356, 359, 399], "generalheadboundarypackag": 8, "generalheadboundaryregridmethod": 0, "generalizedconjugategradientsolv": [340, 341, 342, 343, 344, 345], "geodatafram": [0, 37, 38, 39, 45, 50, 107, 109, 111, 152, 154, 156, 232, 242, 248, 249, 250, 251, 258, 286, 348, 372, 374, 382, 383, 385, 394, 395, 400], "geohydrolog": 393, "geohydrologi": 395, "geojson": 394, "geom_typ": 394, "geometr": [0, 318, 363], "geometri": [0, 10, 14, 22, 39, 45, 107, 109, 111, 152, 154, 156, 232, 242, 248, 249, 254, 255, 258, 285, 348, 357, 361, 364, 365, 367, 372, 382, 383, 385, 394, 395, 400], "geometric_mean": [0, 196, 222, 223, 224, 360, 399], "geopackag": 394, "geopanda": [0, 5, 37, 38, 39, 45, 50, 232, 250, 251, 258, 348, 351, 374, 382, 383, 385, 390, 391, 392, 400, 402, 403], "geoseri": 374, "geospati": [253, 391, 393, 394], "geotiff": 393, "get": [0, 5, 44, 55, 77, 131, 159, 184, 253, 261, 263, 264, 287, 298, 304, 312, 313, 314, 333, 336, 354, 364, 373, 389, 391, 393, 397, 399, 401], "get_alldata": 380, "get_cmap": 286, "get_data": 380, "get_label_arrai": [0, 358, 365, 369], "get_lower_active_grid_cel": [0, 322], "get_lower_active_layer_numb": [0, 322], "get_model": 380, "get_regrid_method": 399, "get_upper_active_grid_cel": [0, 322], "get_upper_active_layer_numb": [0, 322], "getlogg": 56, "ghb": [0, 8, 20, 96, 193, 220, 221, 226, 304, 348, 359, 400], "ghb2": 348, "ghb_conc": 356, "ghb_head": 356, "ghbssmden": 304, "ghg": 3, "gi": [258, 380, 390, 391, 393, 394, 402], "gift": [211, 354], "gift_dur": [211, 354], "gigabyt": [380, 389, 391], "git": [334, 335, 337, 389, 390, 391], "github": [0, 277, 334, 339, 389, 390, 391, 399], "gitlab": 0, "give": [0, 44, 55, 388, 399], "given": [0, 5, 7, 9, 10, 13, 14, 25, 47, 49, 99, 118, 127, 134, 159, 174, 204, 251, 257, 258, 280, 286, 317, 318, 376, 388, 399], "glg": 3, "glob": [41, 42, 45, 54, 393], "global": 43, "globpath": 42, "gmre": 310, "go": [114, 339, 340, 341, 342, 343, 344, 345, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 378, 393, 394, 395, 396, 397, 398, 399, 400, 401], "goal": [351, 357, 380], "goe": 397, "good": [280, 282, 286, 287, 364, 399], "got": [0, 391], "gov": [86, 91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 172, 173, 176, 182, 183], "gpd": [5, 37, 38, 39, 45, 107, 109, 111, 152, 154, 156, 232, 248, 249, 250, 251, 258, 348, 382, 385, 394, 400], "gpkg": 394, "grab": 397, "gracefulli": [223, 224, 380], "gradient": [27, 159, 292, 293, 294, 305, 311, 318], "gradual": [306, 398], "granular": [66, 159], "graph": [357, 393, 397, 399], "grassland": 354, "gray_r": 371, "grb": [130, 131, 132, 133, 184, 185, 361, 367, 380, 397], "grb_path": [184, 185], "great": [351, 401, 402], "greater": [0, 27, 32, 136, 138, 159, 165, 168, 174, 291, 292, 293, 294, 295, 299, 305, 309, 310, 311, 318, 320, 338, 380, 388, 391], "greatli": [0, 283, 389], "grei": [282, 400], "grid": [0, 74, 81, 82, 84, 85, 88, 90, 93, 96, 98, 100, 103, 105, 108, 110, 112, 115, 117, 118, 119, 121, 122, 128, 130, 131, 132, 133, 138, 139, 141, 144, 146, 149, 151, 153, 155, 158, 167, 169, 171, 172, 176, 178, 180, 181, 184, 185, 203, 204, 205, 213, 215, 220, 221, 225, 226, 227, 228, 229, 233, 234, 235, 236, 238, 240, 243, 244, 245, 246, 251, 253, 256, 257, 258, 259, 283, 286, 291, 292, 293, 294, 295, 299, 309, 310, 314, 322, 348, 356, 357, 359, 360, 362, 363, 364, 365, 369, 371, 372, 373, 374, 380, 382, 383, 385, 390, 392, 398, 399, 400, 401, 402, 403], "grid_3d": [0, 322], "grid_boundary_xi": [0, 322], "grid_coord": 362, "grid_dim": 362, "grid_shap": 362, "grid_triangl": 359, "gridagnosticwel": [119, 120, 178, 179], "gridanimation3d": [0, 281, 322], "gridblock": 399, "griddata": [0, 113, 322], "griddataarrai": [101, 108, 110, 112, 115, 129, 139, 144, 153, 155, 158, 169], "groenendijk": 26, "ground": 388, "groundwat": [0, 3, 9, 10, 13, 14, 19, 26, 28, 29, 80, 91, 99, 104, 113, 118, 122, 123, 137, 143, 147, 164, 174, 176, 181, 182, 183, 216, 217, 219, 307, 319, 340, 343, 344, 351, 356, 357, 359, 360, 364, 369, 382, 383, 385, 386, 390, 393, 394, 395, 398, 400, 402], "groundwater_et_funct": 174, "groundwaterflowmodel": [0, 129, 164, 356, 357, 359, 361, 362, 363, 364, 367, 369, 398], "groundwatertransport": 78, "groundwatertransportmodel": [0, 356, 359, 362, 369], "group": [0, 45, 186, 252, 390, 395, 399], "groupbi": [45, 232, 254, 255, 371, 382, 383], "growth": 341, "gt": [348, 354, 357, 364, 376, 393, 398, 399, 400, 401], "guarante": 401, "guess": 55, "gui": 0, "guid": [26, 337, 338, 369, 392, 393, 394, 400, 403], "guide_jupyt": 402, "guide_python": 402, "guo": 4, "gvg": [0, 3], "gwf": [0, 77, 80, 99, 101, 107, 109, 111, 114, 129, 138, 152, 154, 156, 159, 165, 168, 174, 364, 365, 399, 401], "gwf_1": [357, 358, 360, 361, 363, 364, 367, 369, 380, 398], "gwf_model": [356, 357, 359, 361, 362, 363, 364, 367, 369, 398, 401], "gwf_simul": [365, 401], "gwfgwf": 0, "gwl": 3, "gwrch_uzf": 0, "gwseep": 174, "gwt": [77, 78, 104, 113, 159], "gwt_model": 356, "gxg": [0, 3], "h": [0, 4, 25, 127, 132, 138, 159, 184, 185, 306, 317, 345], "h1": 369, "h_": 4, "h_fstrict": 309, "h_fstrictpk": 309, "ha": [0, 5, 16, 25, 39, 44, 45, 55, 73, 78, 80, 84, 90, 93, 98, 102, 106, 107, 109, 111, 113, 117, 118, 121, 122, 127, 130, 131, 132, 133, 138, 141, 146, 151, 152, 154, 156, 159, 164, 167, 171, 180, 181, 216, 220, 221, 225, 226, 228, 232, 233, 234, 235, 242, 253, 264, 280, 296, 307, 317, 319, 320, 335, 337, 348, 353, 354, 356, 359, 360, 361, 362, 363, 364, 371, 374, 380, 386, 388, 389, 391, 393, 395, 396, 397, 399, 400, 401], "had": [0, 360], "half": [126, 356, 357], "half_simul": 357, "half_simulation_constant_head": 357, "hand": [78, 85, 138, 159, 305, 354, 389, 401], "handbook": 334, "handi": 354, "handl": [0, 41, 54, 119, 178, 297, 389, 395], "handler": [56, 59], "happen": [66, 149, 334, 364, 399], "harbaugh": [360, 361], "hard": [0, 389], "harder": 159, "hardli": 389, "hardwar": 397, "harmon": [138, 306], "harmonic_mean": [196, 222, 223, 224, 399], "has_nodata": [382, 383], "hasattr": 399, "hassl": 334, "hatch": 282, "hatchl": 0, "have": [0, 25, 41, 44, 45, 54, 55, 80, 86, 91, 94, 101, 103, 113, 118, 119, 124, 127, 129, 136, 138, 143, 147, 159, 164, 165, 168, 176, 178, 182, 201, 203, 204, 206, 214, 215, 216, 217, 224, 225, 226, 228, 232, 248, 257, 258, 261, 282, 287, 289, 293, 296, 297, 317, 333, 334, 335, 337, 338, 342, 343, 348, 354, 357, 358, 359, 361, 362, 363, 364, 366, 367, 369, 371, 374, 380, 382, 383, 385, 388, 389, 391, 393, 394, 397, 398, 399, 400, 401], "haven": 400, "haywir": 397, "hclose": [27, 309, 311, 340, 341, 342, 343, 344, 345], "hclose_inn": 309, "hclosepk": 309, "hd": [142, 185, 357, 361, 364, 367, 380, 397], "hdry": 306, "hds_origin": [365, 399], "hds_path": 185, "hds_regrid": 399, "hds_split": 365, "head": [0, 3, 4, 16, 17, 18, 20, 27, 29, 30, 31, 32, 41, 42, 44, 54, 55, 77, 78, 79, 80, 81, 82, 86, 94, 99, 113, 114, 132, 138, 142, 147, 159, 164, 165, 168, 174, 185, 187, 193, 209, 211, 216, 220, 226, 234, 264, 286, 296, 297, 298, 300, 304, 306, 308, 309, 311, 315, 334, 340, 341, 342, 343, 344, 345, 348, 356, 357, 358, 359, 361, 362, 363, 365, 367, 369, 370, 372, 375, 376, 380, 388, 392, 393, 395, 397, 398, 399, 402], "head_2001": [41, 54], "head_20010101_l1": [41, 54], "head_centr": 348, "head_dri": 306, "head_edg": 348, "head_edge_ris": 348, "head_end": 298, "head_fil": [0, 142], "head_l": [41, 54], "head_l1": [41, 44, 54, 55], "head_l2": [41, 44, 54, 55], "head_observ": 371, "head_period": 348, "head_start": 298, "header": [0, 186, 309, 310, 322], "headfil": 380, "headl11": [41, 54], "heads_grid": 371, "heartili": 334, "heat": 340, "height": [289, 393], "held": 138, "hell": 389, "help": [41, 54, 159, 334, 382, 385, 386, 399, 400, 401, 402], "helpfil": [309, 310], "henc": [50, 340, 341, 342, 343, 345, 362], "henri": [340, 346, 347, 366, 368, 392], "here": [9, 10, 13, 14, 24, 41, 42, 54, 73, 74, 99, 104, 223, 224, 261, 293, 318, 334, 335, 339, 340, 341, 342, 343, 344, 345, 348, 353, 357, 359, 360, 362, 364, 366, 369, 389, 391, 393, 397, 400, 401], "heterogen": 0, "heterogeneous_k": 360, "hex": [282, 286, 288], "hexidecim": [282, 286], "hfb": [0, 107, 108, 109, 110, 111, 112, 152, 153, 154, 155, 156, 158, 248, 249, 348], "hfb6": [107, 109, 111, 152, 154, 156], "hfb_gdf": 348, "hfb_layer": 348, "hhformulation_rh": 78, "high": [286, 356, 397], "higher": [9, 10, 13, 14, 159, 257, 258, 283, 306, 382, 385], "highest": [0, 3, 21, 312], "highli": [305, 363, 389], "hill": [159, 306], "hist": 399, "histori": 159, "hit": [122, 181], "hk": 306, "hm": 138, "hmk": 138, "hmmmm": 401, "hmoc": 292, "hn": 306, "hnoflo": [296, 306], "hoffman": 211, "hold": [23, 221, 232], "hole": [241, 283], "hollow": 283, "homepag": 389, "homogen": 362, "hondsrug": [364, 365, 368, 392, 401], "hondsrug_crosssect": 0, "hondsrug_drainag": 364, "hondsrug_initi": 364, "hondsrug_layermodel": [364, 393], "hondsrug_layermodel_topsystem": 400, "hondsrug_meteorologi": 364, "hondsrug_partit": [365, 368, 392], "hondsrug_planar_riv": 400, "hondsrug_riv": 364, "hondsrug_sav": [365, 399, 401], "hondsrug_simul": [0, 365, 399, 401], "horizont": [0, 5, 13, 14, 21, 22, 23, 34, 85, 101, 107, 109, 111, 118, 119, 129, 131, 138, 152, 154, 156, 172, 176, 178, 184, 229, 230, 231, 241, 248, 249, 292, 293, 299, 306, 312, 313, 314, 343, 357, 358, 360, 364, 399], "horizontal_anisotropi": 306, "horizontalflowbarri": [0, 348], "horizontalflowbarrierhydrauliccharacterist": 0, "horizontalflowbarriermultipli": 0, "horizontalflowbarrierresist": [0, 248, 249], "horizontalhydraulicconduct": [34, 35, 348], "hotfix": 0, "hour": [132, 184, 185], "hourli": [382, 383], "how": [0, 44, 55, 80, 86, 91, 94, 118, 119, 135, 136, 138, 142, 143, 147, 176, 178, 182, 183, 223, 283, 333, 334, 346, 349, 352, 356, 357, 359, 360, 361, 364, 365, 366, 367, 370, 374, 386, 393, 398, 399, 400, 402], "howev": [0, 9, 10, 13, 14, 23, 41, 42, 45, 54, 80, 114, 119, 159, 178, 223, 224, 291, 292, 293, 294, 295, 318, 336, 337, 354, 359, 380, 382, 385, 388, 393, 397, 400, 401], "hoyningen": 211, "html": [55, 77, 223, 224, 251, 254, 255, 283, 336, 337, 348, 389, 399], "http": [0, 30, 32, 41, 54, 55, 77, 86, 91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 165, 168, 172, 173, 176, 182, 183, 223, 224, 251, 254, 255, 277, 282, 283, 286, 335, 340, 341, 342, 343, 344, 345, 348, 389, 390, 391, 399], "hue": 362, "human": [137, 389], "hundr": [386, 393], "hybrid": [292, 293, 294], "hydraul": [21, 23, 30, 32, 34, 35, 78, 94, 103, 107, 108, 110, 112, 114, 122, 138, 147, 152, 153, 155, 158, 165, 168, 174, 181, 216, 221, 230, 232, 238, 240, 306, 343, 399, 400], "hydraulic_characterist": [107, 152], "hydrocoin": [346, 347, 392], "hydrogeolog": 400, "hydrolog": [3, 343, 364, 386, 400], "hydrologi": 345, "hydrology_product_line_imod": [333, 335], "hydrostat": 356, "hysteresi": 26, "i": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 43, 44, 45, 47, 50, 51, 54, 55, 59, 66, 68, 70, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 90, 91, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 142, 143, 146, 147, 149, 151, 152, 153, 154, 155, 156, 158, 159, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 241, 242, 251, 253, 254, 255, 257, 258, 261, 264, 266, 274, 276, 277, 279, 280, 281, 282, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 348, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 374, 376, 378, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 400, 401, 402], "iboud": [340, 341, 343, 344, 345], "ibound": [0, 16, 26, 51, 81, 82, 187, 247, 264, 296, 309, 310, 340, 341, 342, 343, 344, 345, 348, 399], "ic": [114, 194, 356, 357, 359, 361, 362, 363, 367, 369, 399], "ic6": 114, "icbcfl": 306, "icbund": [297, 340, 341, 342, 343, 344, 345], "icelltyp": [138, 196, 356, 357, 359, 361, 362, 363, 367, 369, 399], "ichdcb": 298, "iconvert": [165, 168], "id": [0, 45, 47, 48, 118, 176, 229, 232, 236, 255, 364, 371], "id_cod": 45, "id_nam": [22, 36, 321, 340, 342, 343, 344, 345, 348], "idea": [287, 354, 364, 389, 391], "ideflay": 220, "idem": 51, "ident": [81, 82, 88, 96, 115, 139, 144, 149, 169, 318, 393], "identifi": [0, 41, 54, 118, 174, 176, 296, 397, 400], "idf": [0, 3, 5, 47, 49, 50, 54, 205, 219, 276, 283, 308, 309, 310, 322, 340, 341, 342, 343, 344, 345, 348, 380, 393, 397], "idfmap": [0, 322], "idomain": [0, 83, 89, 92, 97, 102, 106, 108, 110, 112, 116, 138, 140, 145, 150, 153, 155, 158, 166, 170, 172, 175, 188, 225, 226, 227, 228, 233, 234, 235, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 393, 399, 400, 401], "iex": 335, "if_fals": [279, 382, 383], "if_tru": [279, 382, 383], "iff": 29, "ighbcb": 304, "ignor": [0, 41, 66, 74, 75, 76, 119, 178, 206, 211, 261, 262, 263, 272, 401], "ignore_warn": 322, "ignorecas": [41, 54], "ihdwet": [138, 306], "illustr": [341, 356, 357, 358, 359, 360], "iloc": 394, "ilogg": [68, 70, 72], "ilpfcb": 306, "ilu": [159, 309, 310], "ilut": 159, "im": [129, 159, 369], "imag": [337, 364, 367, 371, 373, 374, 376, 397], "imeth": 186, "imeth1": 0, "imeth1head": 186, "imeth6head": 186, "immedi": [77, 79, 80, 86, 91, 94, 99, 104, 118, 123, 143, 147, 174, 176, 182, 183, 397], "immisc": 345, "immobil": 113, "immobile_poros": 113, "imod": [0, 322, 333, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 381, 382, 383, 385, 386, 387, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402], "imod5": [0, 24, 43, 81, 82, 88, 96, 101, 115, 119, 129, 139, 144, 149, 169, 178, 340, 341, 342, 343, 344, 345, 348], "imod5_data": [0, 81, 82, 88, 96, 101, 115, 119, 129, 139, 144, 149, 157, 169, 178], "imod_v5_3_x64r": 348, "imodenv": 391, "imodflow": [0, 19, 21, 23, 24, 26, 28, 322, 348, 380, 390, 392], "imodflow_jupyt": 349, "imodflow_python": 349, "imodflow_v5_3_metaswap_svn1977_x64r": 348, "imodflowmodel": [0, 348, 398], "imodflowprojectfil": [348, 350, 392], "imperm": 22, "implement": [26, 61, 77, 138, 351, 389], "implicit": [0, 75, 291, 292, 293, 294, 295, 305, 318], "import": [0, 3, 5, 41, 45, 54, 56, 81, 101, 118, 129, 176, 184, 220, 225, 226, 227, 228, 232, 238, 240, 255, 258, 276, 286, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 369, 371, 372, 373, 374, 376, 378, 380, 385, 391, 393, 394, 397, 398, 399, 400, 401], "importantli": 0, "imported_model": 129, "imposs": [4, 41, 54], "improv": [0, 159, 338], "imread": 397, "imshow": [286, 364, 367, 371, 373, 374, 397], "imshow_topview": [0, 322], "imt": 320, "in_bound": 260, "inact": [0, 16, 83, 89, 91, 92, 97, 102, 106, 116, 120, 122, 140, 143, 145, 150, 166, 170, 174, 179, 181, 233, 234, 235, 264, 296, 297, 306, 340, 343, 345, 364, 399, 401], "inactict": 399, "inactive_concentr": 297, "inactive_head": 296, "inbetween": 400, "includ": [0, 12, 15, 25, 26, 31, 33, 41, 42, 45, 51, 54, 78, 80, 103, 114, 127, 137, 138, 159, 164, 165, 168, 202, 216, 241, 253, 257, 258, 264, 296, 297, 305, 306, 307, 309, 310, 317, 319, 334, 337, 338, 341, 343, 344, 345, 357, 359, 363, 364, 378, 389, 391, 398, 399, 401], "include_constant_head": 264, "incompat": [0, 389], "incomplet": [27, 159, 305], "inconsist": [0, 119, 178, 401], "inconvert": [169, 388], "incorpor": 241, "incorrect": 0, "incorrectli": 0, "increas": [0, 159, 289, 292, 293, 294, 318, 356, 357, 360, 388, 398, 399, 400], "increment": 159, "ind_i": 261, "ind_x": 261, "inde": 401, "independ": [397, 399], "index": [0, 5, 11, 45, 55, 118, 176, 201, 258, 261, 283, 309, 310, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 364, 369, 376, 382, 383, 385, 389, 393, 398, 399, 400, 401], "indexcolumn": 48, "indic": [26, 27, 77, 78, 79, 80, 85, 86, 91, 94, 99, 103, 104, 113, 114, 118, 123, 124, 136, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 211, 232, 261, 291, 292, 293, 294, 297, 298, 304, 306, 309, 310, 311, 312, 313, 314, 315, 318, 320, 321, 363, 364, 371, 376, 394], "individu": [0, 5, 36, 80, 242, 321, 354, 364, 382, 383, 397], "indivudu": 399, "inequ": [382, 383], "infer": [0, 164, 223, 227, 286, 393], "infi_svat": 206, "infiltr": [26, 29, 149, 174, 219, 322], "infiltration_capac": 206, "infiltration_capacity_rur": 26, "infiltration_capacity_urban": 26, "infiltration_factor": [29, 51, 198, 399], "infiltration_r": 174, "infin": 159, "inflow": [80, 86, 91, 94, 118, 143, 147, 176, 182, 183, 290, 356, 369], "influenc": [26, 159], "info": [56, 61, 63, 64, 66, 68, 70, 72, 340], "inform": [26, 27, 40, 45, 66, 77, 78, 79, 80, 86, 88, 91, 94, 96, 99, 103, 104, 113, 114, 118, 119, 123, 130, 131, 132, 133, 138, 143, 147, 159, 172, 174, 176, 178, 182, 183, 184, 185, 213, 232, 278, 297, 343, 348, 357, 359, 360, 371, 376, 380, 388, 389, 391, 393, 394, 399, 400], "ingo": 5, "inher": 386, "inherit": 0, "ini": [0, 119, 178, 348], "inic": [309, 310], "inifil": 348, "init": [0, 348, 391], "init_svat": [207, 208, 209, 210], "initi": [0, 31, 63, 78, 79, 80, 85, 86, 91, 94, 113, 114, 118, 123, 124, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 207, 208, 209, 210, 211, 223, 224, 280, 292, 293, 294, 296, 297, 306, 318, 356, 359, 360, 362, 367, 398], "initial_immmobile_concentr": 113, "initial_immobile_concentr": 113, "initial_pf": 209, "initialcondit": [194, 356, 357, 359, 361, 362, 363, 364, 367, 369, 399], "initialconditionsequilibrium": 322, "initialconditionspercol": 322, "initialconditionsregridmethod": [0, 115], "initialconditionsrootzonepressurehead": 322, "initialconditionssavedst": 322, "inject": [118, 119, 176, 178, 182, 183, 342, 343, 345, 369], "injection_concentr": 369, "inlin": 337, "inner": [27, 138, 159, 247, 283, 305, 306, 309, 310, 311], "inner_csvfil": [0, 159, 160, 161, 162], "inner_dvclos": [159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "inner_it": [27, 305, 309, 310, 311, 340, 341, 342, 343, 344, 345], "inner_maximum": [159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "inner_rclos": [159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "innerit": [309, 310], "inp": [26, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217], "inplac": [87, 95, 148, 177, 401], "input": [0, 9, 10, 24, 25, 26, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 102, 106, 107, 109, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 127, 134, 137, 138, 139, 141, 142, 143, 144, 146, 147, 149, 151, 152, 154, 156, 159, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 208, 212, 216, 219, 223, 232, 241, 286, 296, 317, 318, 322, 338, 352, 355, 357, 358, 360, 362, 364, 378, 380, 388, 392, 395, 397, 399, 400, 402], "input_fil": 354, "inputfil": 137, "insert": [50, 292, 293, 304, 343, 348, 364, 399], "insid": [0, 66, 143, 335, 359, 389, 398], "insight": 338, "insignific": [292, 293, 297], "inspect": [0, 394, 401], "instal": [0, 100, 105, 128, 273, 335, 380, 382, 385, 386], "install_requir": 380, "instanc": [7, 213, 282, 286, 287, 289], "instead": [0, 27, 41, 42, 45, 47, 49, 50, 54, 81, 114, 119, 159, 178, 224, 242, 255, 266, 274, 275, 280, 311, 318, 320, 348, 380, 382, 383, 388, 389, 393, 397, 400, 401], "instruct": [334, 366, 389], "insuffici": [334, 351], "int": [16, 22, 26, 27, 36, 47, 49, 51, 61, 68, 70, 72, 77, 83, 89, 92, 97, 102, 106, 113, 116, 118, 126, 138, 140, 145, 150, 159, 165, 166, 168, 170, 173, 182, 183, 223, 232, 242, 247, 251, 252, 254, 255, 262, 269, 270, 283, 289, 292, 293, 294, 297, 305, 306, 309, 310, 311, 313, 318, 320, 321, 354, 356, 359, 360, 361, 362, 363, 364, 367, 369], "int32": [232, 357, 359, 363, 364, 376, 393, 399, 400, 401], "int320arrai": 399, "int321": [364, 376, 393, 399, 401], "int321arrai": [364, 400], "int64": [269, 270, 348, 354, 357, 393, 398, 399, 400], "int640": 357, "int641": [348, 354, 357, 393, 399, 400], "int641arrai": [348, 398], "int642": 398, "integ": [47, 48, 49, 83, 89, 92, 97, 102, 106, 116, 138, 140, 142, 145, 150, 159, 166, 170, 172, 175, 204, 211, 223, 232, 244, 246, 255, 269, 270, 282, 286, 296, 297, 305, 309, 310, 313, 364, 380, 382, 383], "integr": [56, 334, 390], "intellig": 0, "intend": [26, 362, 398, 402], "intens": [208, 305, 399], "interact": [0, 29, 77, 230, 333, 334, 389, 397], "interblock": 306, "intercept": [201, 211, 219], "interception_capac": 201, "interception_capacity_per_lai": [211, 354], "interception_capacity_per_lai_rutt": [211, 354], "interception_capacity_per_lai_vonhoyningen": [211, 354], "interception_factor": 201, "interception_intercept": [211, 354], "interception_opt": [211, 354], "intercomparison": 343, "interconnect": 124, "interest": [5, 348, 363, 365, 394, 399, 401], "interfac": [61, 94, 342, 346, 347, 348, 356, 359, 392], "interfer": 391, "interflow": 26, "intermedi": 0, "intermitt": 389, "intern": [0, 77, 172, 211, 388], "internod": 320, "interpl": [382, 383, 385], "interpol": [0, 7, 74, 80, 223, 241, 247, 257, 258, 370, 375, 392, 395], "interpolate_na": [382, 383], "interpolate_value_boundari": [0, 322], "interpolated_head": [364, 371], "interpolated_head_larg": 364, "interpret": [0, 39, 142, 264, 318, 337, 389, 393, 397], "intersect": [380, 394], "intersphinx": 337, "interv": [27, 113, 126, 138, 159, 174, 289, 306], "interval_wet": 306, "intra": [8, 230], "intra_cell_boundary_condit": 322, "intrins": 399, "introduc": [337, 351, 380, 399, 402], "introduct": [356, 357, 359, 361, 364, 367], "intuit": 380, "invalid": 0, "invent": 367, "invers": 399, "invert": [9, 10], "investig": [361, 401], "invididu": 389, "involv": [45, 80, 86, 91, 94, 118, 143, 147, 176, 182, 183, 380, 399], "io": [0, 77, 251, 277, 389, 390, 399], "ipf": [0, 12, 50, 119, 178, 322, 380, 395], "ipf_point": 45, "ipykernel": 389, "ipynb": [340, 341, 342, 343, 344, 345, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 376, 378, 393, 394, 395, 396, 397, 398, 399, 400, 401], "ipython": [337, 389], "irivcb": [315, 321], "irreduc": 174, "irregular": 396, "irrelev": 0, "irrig": 26, "is_act": 400, "is_const": 51, "is_edg": 364, "is_ibound": 264, "is_lak": 367, "is_observ": 371, "is_partit": 0, "is_split": 164, "is_x_centr": 348, "is_x_edg": 348, "isel": [0, 5, 261, 287, 356, 357, 358, 359, 361, 362, 364, 365, 367, 369, 376, 382, 383, 399], "isin": 348, "isnan": [371, 400], "isnul": 357, "isol": [45, 389], "isolv": [305, 309, 310], "isotherm": [113, 124, 305, 309, 310], "isotrop": [21, 299, 363, 399], "issu": [0, 338, 359, 386, 389, 390, 391, 395, 399, 401], "ist": 113, "item": [320, 382, 383], "iter": [25, 27, 85, 127, 138, 159, 247, 280, 305, 306, 309, 310, 311, 317, 320, 371], "iter1": [27, 247, 305, 311, 371], "iterdir": [393, 394], "itrack": [292, 293, 294], "its": [0, 66, 103, 119, 122, 131, 138, 142, 174, 178, 181, 184, 241, 254, 257, 258, 277, 348, 362, 364, 374, 386, 391, 393, 394, 395, 397], "itself": [360, 393], "ityp": [0, 47, 49, 307, 319], "ivertcon": 174, "iwetit": [138, 306], "iwr": 335, "iwtabl": 320, "iybg": 208, "j": [16, 25, 77, 127, 282, 286, 296, 317, 340, 343, 345], "ja": [131, 184, 186], "jacobi": 305, "jarvi": 211, "jarvis_drought_stress": [211, 354], "jarvis_o2_stress": [211, 354], "jet": [280, 286], "jhydrol": 345, "jinja2": 380, "jit": [222, 223, 224], "join": [232, 364, 382, 383, 393, 394], "journal": [26, 345], "judg": 371, "jump": 283, "jupyt": [337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "just": [0, 41, 54, 119, 178, 242, 337, 345, 354, 359, 373, 382, 383, 391, 393, 399, 400, 401], "k": [16, 21, 84, 90, 93, 98, 108, 110, 112, 117, 121, 122, 138, 141, 146, 151, 153, 155, 158, 167, 171, 180, 181, 196, 229, 238, 239, 240, 282, 296, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 372, 376, 393, 399, 400], "k11": 138, "k22": [138, 196, 399], "k33": [138, 196, 357, 359, 361, 363, 364, 367, 399], "k_horizont": [23, 306, 340, 341, 342, 343, 344, 345], "k_valu": 359, "k_vertic": [35, 306, 340, 341, 342, 343, 344, 345], "kappa": 159, "kd": [283, 362, 382, 383], "kdif": [211, 354], "kdir": [211, 354], "keep": [0, 279, 382, 383, 388, 393, 400], "keep_nan": 279, "kei": [0, 42, 50, 51, 66, 80, 81, 86, 88, 91, 94, 96, 101, 118, 119, 129, 131, 143, 147, 149, 157, 176, 178, 182, 184, 233, 234, 235, 242, 282, 286, 357, 366, 382, 383, 398, 399], "kept": [50, 102, 106], "kernel": [382, 383], "keyboard": 366, "keyerror": 0, "keysview": 357, "keyword": [0, 45, 46, 77, 79, 80, 86, 91, 94, 99, 113, 118, 123, 124, 138, 143, 147, 159, 174, 176, 182, 183, 219, 241, 251, 253, 260, 261, 262, 263, 280, 282, 286, 287, 289, 400], "kg": [4, 356], "kh": [34, 42, 230, 231, 348], "khv": [343, 348], "kib": [357, 393, 399], "kind": 338, "km": 393, "knmi": 364, "know": [335, 359, 380, 391], "knowledg": 391, "known": [12, 386], "konikow": 343, "krylov": [309, 310], "kutta": [292, 293, 294], "kv": [34, 230, 231], "kv_sat": 174, "kva": 348, "kwarg": [45, 46, 73, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 219, 251, 280], "kwargs_aquitard": [282, 400], "kwargs_basemap": [286, 378], "kwargs_colorbar": [282, 286, 378, 400], "kwargs_contour": 289, "kwargs_pcolormesh": 282, "kwargs_quiv": [287, 376], "kwargs_rast": 286, "kwd": [58, 66, 220, 221], "l": [23, 29, 30, 35, 41, 54, 91, 159, 231, 258, 299, 343], "l2": [29, 159], "l2norm": 159, "l2norm_rclos": 159, "l2t": 299, "lab": [27, 311], "label": [0, 138, 286, 335, 358, 364, 369, 378, 380, 393, 395], "label_arrai": 369, "lag": 320, "lagrangian": [292, 293, 294], "lai": 211, "lak": [0, 367, 390], "lake": [0, 340, 366, 368, 372, 373, 374, 378, 392, 394, 399, 400], "lake_grid": [372, 373], "lake_grid_coars": 373, "lake_i": 367, "lake_lay": 367, "lake_x": 367, "lakedata": [0, 367], "lakes_shp": [372, 373, 374, 378, 394], "lakes_wgs84": 374, "lanczo": [253, 305], "land": [33, 174, 206, 211, 214, 296, 394], "landus": [26, 204, 216, 354], "landuse_index": 354, "landuse_indexpandasindexpandasindex": 354, "landuse_nam": [211, 354], "landuse_opt": 354, "landuseopt": [322, 354], "langevin": [4, 345], "langmuir": 124, "languag": 389, "lanuag": 386, "laplac": [0, 247, 382, 383, 385], "laplace_interpol": [0, 322, 371, 382, 383, 385], "larg": [8, 27, 41, 54, 159, 174, 214, 283, 311, 337, 351, 382, 383, 389, 390, 391, 395, 397, 399], "larger": [27, 29, 169, 203, 215, 282, 292, 293, 311, 320, 357, 364, 371, 388, 397, 399], "last": [0, 5, 25, 77, 79, 80, 86, 91, 94, 118, 119, 123, 127, 142, 143, 147, 164, 174, 176, 178, 182, 183, 241, 277, 317, 320, 356, 359, 360, 362, 364, 369, 394, 398], "lat": 374, "later": [119, 174, 178, 389, 401], "latest": [159, 333, 366, 389, 397], "latitud": [9, 13, 257], "latter": [118, 174, 176, 337, 394, 401], "law": 138, "layavg": 306, "layer": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 47, 51, 54, 55, 103, 108, 109, 110, 112, 118, 119, 122, 126, 131, 133, 136, 152, 153, 154, 155, 156, 158, 172, 178, 181, 182, 183, 184, 206, 219, 220, 221, 222, 224, 225, 226, 228, 229, 235, 237, 238, 240, 241, 244, 246, 264, 269, 270, 271, 273, 279, 282, 283, 287, 289, 296, 297, 299, 306, 309, 310, 313, 314, 321, 340, 341, 342, 343, 344, 345, 348, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 376, 388, 393, 395, 397, 398, 399, 400, 401], "layer1": 0, "layer2": 0, "layer_grid": 400, "layer_max": 126, "layer_min": 126, "layer_model": 400, "layer_typ": 306, "layer_wet": 306, "layeredhorizontalflowbarri": 0, "layeredhorizontalflowbarrierhydrauliccharacterist": 0, "layeredhorizontalflowbarriermultipli": 0, "layeredhorizontalflowbarrierresist": 0, "layeredwel": [0, 103], "layermodel": [364, 393], "layernumb": 264, "layerpandasindexpandasindex": [348, 357, 364, 376, 393, 398, 399, 400, 401], "layerpropertyflow": [340, 341, 342, 343, 344, 345], "layerregridd": [0, 322], "layout": 400, "laytyp": 306, "lazi": [380, 392, 402, 403], "lazili": [0, 41, 50, 54, 130, 131, 132, 133, 184, 185], "lazy_da": 397, "lazy_result": 397, "lead": [0, 47, 49, 292, 293, 318, 360, 398, 399], "leaf": 201, "leaf_area_index": 201, "leakag": 230, "learn": 159, "least": [8, 15, 25, 33, 127, 282, 287, 289, 296, 306, 317, 399], "leav": [5, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 359], "led": 389, "left": [11, 12, 356, 361, 363, 364, 367, 369, 400], "left_boundari": 356, "left_low": 348, "left_upp": 348, "leg": 288, "legal": 391, "legend": [282, 286, 288, 378], "legend_level": 282, "len": [346, 347, 348, 366, 367, 368, 392, 399], "length": [0, 25, 27, 113, 124, 127, 138, 159, 173, 174, 229, 230, 248, 249, 282, 286, 288, 291, 292, 293, 294, 295, 309, 311, 312, 313, 314, 317, 318, 359, 360, 364, 376, 388, 393, 394, 399, 400, 401], "length3": [36, 321], "leq": [11, 12], "less": [27, 85, 114, 138, 159, 292, 293, 306, 309, 311, 320, 337, 380, 382, 383, 388], "lesson": 343, "let": [42, 208, 219, 348, 356, 357, 360, 380, 382, 383, 389, 393, 397, 398, 399, 400, 401], "letter": [25, 127, 317], "level": [0, 3, 26, 51, 56, 59, 61, 66, 68, 70, 72, 99, 108, 110, 112, 119, 153, 155, 158, 159, 174, 178, 236, 255, 282, 284, 286, 288, 289, 340, 341, 342, 343, 344, 345, 348, 369, 376, 378, 389, 394, 395, 399], "levelnam": 56, "lgr": 380, "li": 138, "lib": 394, "libari": 391, "libmf6": [0, 77], "librari": [389, 397], "lift": 0, "like": [0, 5, 26, 44, 45, 55, 83, 84, 89, 90, 92, 93, 97, 98, 102, 106, 116, 117, 121, 138, 140, 141, 145, 146, 150, 151, 159, 166, 167, 170, 171, 180, 212, 223, 224, 232, 242, 251, 252, 253, 254, 255, 280, 286, 289, 334, 337, 338, 357, 359, 372, 373, 374, 380, 382, 383, 389, 394, 398, 399, 400, 401, 402], "like_2d": [364, 372, 373], "like_2d_coars": 373, "like_3d": 364, "limit": [0, 159, 232, 291, 292, 293, 294, 295, 320, 389, 391, 401, 402], "line": [5, 9, 13, 14, 22, 39, 61, 68, 70, 72, 78, 242, 248, 249, 257, 282, 285, 289, 341, 348, 354, 356, 357, 359, 361, 362, 364, 367, 376, 378, 389, 393, 394, 397], "line1": 348, "line2": 348, "line2d": [341, 354, 362, 393], "line_3d": [0, 322], "line_intercept": 5, "line_slop": 5, "linear": [0, 27, 74, 78, 80, 113, 124, 159, 174, 223, 309, 310, 311, 320, 362, 382, 383, 385, 388], "linear_acceler": [0, 159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "linearli": 7, "linearsegmentedcolormap": 286, "lineno": 56, "liner": 223, "linestr": [0, 10, 14, 22, 152, 154, 156, 248, 249, 258, 348, 376, 400], "linestring_to_square_zpolygon": [0, 322], "linestring_to_trapezoid_zpolygon": [0, 107, 109, 111, 322], "linewidth": 400, "link": [217, 337, 351, 364, 391, 395, 402], "linspac": [399, 400, 401], "linux": 389, "liquid": 99, "list": [0, 8, 22, 25, 26, 36, 41, 45, 47, 49, 51, 52, 54, 55, 77, 79, 80, 81, 86, 88, 91, 94, 96, 99, 101, 104, 118, 119, 122, 123, 129, 130, 133, 142, 143, 147, 149, 159, 164, 174, 176, 178, 181, 182, 183, 186, 223, 224, 232, 248, 249, 251, 280, 282, 286, 288, 306, 317, 321, 333, 342, 364, 378, 380, 391], "listedcolormap": 282, "listing_fil": [99, 104, 364], "listlik": [36, 282, 286, 290, 321], "littl": [45, 388], "ll": [261, 334, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 364, 367, 371, 372, 373, 374, 376, 389, 391, 393, 398, 399, 400, 401], "lmk": 138, "load": [0, 3, 5, 41, 50, 54, 81, 82, 88, 96, 115, 119, 123, 139, 144, 149, 169, 178, 232, 242, 258, 307, 309, 310, 357, 365, 369, 376, 380, 394, 397, 399, 400], "load_balance_weight": [309, 310], "loadset": 0, "loam": 216, "loc": [367, 371, 399], "local": [159, 334, 335, 339, 391], "locat": [0, 4, 5, 7, 16, 22, 26, 81, 82, 103, 118, 122, 174, 176, 181, 182, 183, 205, 217, 229, 232, 238, 240, 243, 245, 248, 249, 254, 256, 259, 261, 262, 263, 279, 280, 281, 282, 285, 291, 292, 293, 294, 295, 296, 297, 348, 364, 371, 376, 380, 389, 393, 394, 399, 400], "lock": 391, "lockfil": 391, "log": [0, 322], "log_level": [59, 68, 72], "logarithm": [138, 306], "logger": [56, 58, 61, 66, 70], "logger_typ": 59, "loggertyp": [56, 59], "login": 335, "loglevel": [56, 59, 61, 63, 64, 68, 70, 72], "lognorm": 360, "logspac": 400, "loguru": [0, 56, 58, 68], "logurulogg": 58, "lon": 374, "long": [297, 356, 363, 382, 383, 389, 393], "longer": [0, 382, 383, 389], "longitud": [9, 13, 257], "longitudin": [85, 299, 340, 341, 342, 343, 344, 345], "longitudinal_horizont": [85, 189, 356, 359, 362, 369, 399], "longitudinal_vert": [85, 189, 399], "look": [26, 138, 164, 204, 253, 280, 282, 286, 306, 333, 334, 338, 360, 363, 365, 372, 393, 397, 399, 400, 401], "lookup": [26, 203, 215, 216, 354, 399], "lookup_and_forcing_fil": 26, "loop": [242, 258, 380, 393, 400], "loos": 338, "lot": [334, 354, 364, 382, 383, 386, 389, 393, 400], "low": [108, 110, 112, 153, 155, 158, 159, 389, 400], "lower": [0, 4, 5, 6, 9, 10, 11, 29, 41, 54, 114, 118, 119, 131, 159, 176, 178, 184, 211, 235, 244, 286, 287, 306, 315, 357, 376, 400, 401], "lowermost": 243, "lowest": [0, 3], "lowland": 26, "lpf": [306, 340, 341, 342, 343, 344, 345, 364, 388], "lst": [99, 104], "lt": [91, 143, 174, 348, 354, 357, 364, 376, 393, 398, 399, 400, 401], "ltsc2022": 335, "lu": [159, 354], "luckili": [364, 401], "lump": 305, "lump_dispers": [305, 340, 341, 342, 343, 344, 345], "luse_mswp": 26, "luse_svat": [26, 211, 216, 354], "lx": 369, "ly": 400, "m": [0, 3, 4, 6, 19, 24, 25, 26, 44, 55, 74, 131, 132, 184, 185, 211, 214, 219, 232, 280, 286, 290, 299, 306, 312, 313, 314, 316, 317, 335, 340, 341, 342, 343, 344, 345, 348, 356, 357, 364, 369, 371, 374, 376, 378, 388, 401], "m2": [26, 201, 306], "m3": [4, 6, 201, 217, 290, 306, 356, 369], "maa": 211, "machin": [335, 339, 389, 391], "maco": 389, "macro": 0, "macropor": 216, "made": [0, 100, 105, 119, 128, 178, 236, 238, 240, 280, 354], "magma": [376, 400], "magnitud": [159, 247], "mai": [26, 33, 41, 44, 45, 47, 54, 55, 85, 91, 114, 126, 138, 143, 159, 223, 232, 261, 267, 268, 269, 270, 279, 291, 292, 293, 294, 295, 296, 318, 357, 364, 382, 383, 385, 386, 388, 393, 394, 395, 399], "main": [0, 13, 14, 21, 119, 178], "mainli": 389, "maintain": [0, 114, 159, 223, 224, 292, 293, 335, 339], "maiz": 354, "major": [338, 395], "make": [0, 41, 47, 54, 56, 80, 130, 131, 132, 135, 206, 223, 224, 273, 286, 334, 335, 336, 356, 360, 361, 364, 367, 376, 380, 383, 388, 391, 393, 399, 400], "makedir": 354, "mamba": 0, "mambaforg": 391, "manag": [26, 44, 55, 261, 380, 389, 390, 391, 397], "mandatori": [0, 398, 399], "mangl": 0, "mani": [0, 5, 7, 45, 113, 159, 223, 283, 293, 306, 334, 338, 351, 380, 388, 393, 394, 395, 399, 402], "manner": [78, 79, 80, 85, 86, 91, 94, 113, 114, 118, 123, 124, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 232, 397, 401], "manual": [0, 21, 26, 101, 129, 334, 356, 360, 364, 393, 397, 399, 401], "map": [0, 39, 45, 47, 49, 84, 90, 93, 98, 101, 117, 121, 129, 141, 146, 151, 167, 171, 180, 286, 377, 379, 392, 393, 394, 402, 403], "mapnik": 378, "march": [0, 3], "mark": [247, 389, 399], "markdown": 337, "marker": 400, "mask": [0, 102, 106], "mask_all_model": 0, "mask_all_packag": [0, 399], "mass": [30, 113, 123, 124, 165, 292, 293, 294, 297, 307, 320, 359, 362, 388, 399], "mass_budget": 362, "massload": 0, "match": [0, 41, 42, 54, 220, 221, 223, 251, 335, 382, 385, 395], "materi": 388, "mathemat": 389, "matplot": 286, "matplotlib": [282, 286, 287, 289, 290, 340, 341, 343, 344, 345, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 389, 391, 393, 397, 399, 400], "matplotlig": 282, "matric": 389, "matrix": [27, 78, 138, 159, 232, 299, 305, 306, 371, 393], "matrix_conditioning_method": 27, "matter": [362, 389, 400], "max": [187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 253, 286, 364, 365, 399, 401], "max_abstraction_groundwat": 217, "max_abstraction_surfacewat": 217, "max_concentr": [356, 359], "max_dens": [356, 359], "max_diff": 401, "max_it": [27, 305, 309, 310, 311, 340, 341, 342, 343, 344, 345], "max_n_transport_timestep": 318, "max_nparticl": 293, "max_overlap": [222, 224], "max_particl": 292, "max_row": 399, "maxbound": 77, "maxim": [7, 19], "maximum": [3, 26, 27, 91, 159, 217, 222, 223, 224, 292, 293, 305, 309, 310, 311, 318, 320, 359, 364, 397], "maximum_r": [301, 302, 303], "mayavi": 397, "mb": [347, 350, 355, 368, 375, 379, 392, 403], "mcdonald": 361, "mckee": 159, "mcr": 335, "mcve": 338, "md": 159, "mdal": [0, 100, 105, 128, 273, 381, 382], "mdal_compli": [0, 100, 105, 128], "mdal_compliant_ugrid2d": [0, 100, 105, 128, 271, 322, 381, 382], "mean": [0, 26, 41, 54, 84, 90, 93, 98, 117, 119, 121, 131, 135, 138, 141, 146, 151, 159, 167, 171, 178, 180, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 222, 223, 224, 232, 254, 255, 283, 306, 333, 334, 336, 364, 369, 371, 380, 382, 383, 389, 391, 395, 396, 397, 399, 400, 401], "mean_head": [371, 380, 397], "mean_heads_in_grid": 371, "mean_regridd": 223, "mean_voxel": 224, "measur": [0, 3, 21, 219, 254, 364, 371, 395], "mechan": [85, 359], "med": 253, "median": [222, 223, 224], "medium": [297, 388], "meet": 318, "meetpunt": 371, "mem": [347, 350, 355, 368, 375, 379, 392, 403], "memmap": 0, "memori": [0, 27, 41, 54, 85, 138, 159, 174, 214, 232, 292, 293, 305, 357, 380], "mention": [101, 129], "merg": [0, 45, 184, 232, 334, 365, 395], "merge_to_dataset": 184, "mesh": [0, 273, 277, 280, 363, 381], "mesh2d": 357, "mesh2d_edge_i": 357, "mesh2d_edge_nod": 357, "mesh2d_edge_x": 357, "mesh2d_face_nod": 357, "mesh2d_nedg": 357, "mesh2d_nfac": 357, "mesh2d_nfacespandasindexpandasindex": 357, "mesh2d_nmax_face_nod": 357, "mesh2d_nnod": 357, "mesh2d_node_i": 357, "mesh2d_node_x": 357, "mesh2d_x": 359, "mesh_kwarg": [280, 281], "mesher": [382, 385], "meshzoo": 0, "messag": [0, 56, 61, 63, 64, 68, 70, 72], "met": [119, 159, 178], "meta": [357, 393, 399], "metadata": [41, 42, 54, 253], "metadata_dict": 354, "metamod": [0, 322], "metasvap": [203, 215], "metaswap": [0, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 218, 219, 322, 355, 392], "metaswap_exampl": [353, 355, 392], "metaswap_jupyt": 352, "metaswap_python": 352, "metaswapmodel": [0, 322], "mete_grid": 213, "mete_mswp": 26, "meteo": [26, 208], "meteo_station_numb": 26, "meteogrid": 322, "meteomap": 0, "meteorolog": [26, 213, 364, 400], "meteorologi": 364, "meter": [3, 5, 11, 159, 214, 216, 299, 306], "meth": 0, "method": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 61, 63, 64, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 98, 99, 101, 104, 107, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 156, 159, 163, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 253, 254, 255, 261, 280, 281, 283, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 333, 357, 358, 359, 360, 362, 364, 374, 376, 380, 382, 383, 385, 393, 397, 398], "method_nam": 399, "method_wet": 306, "metpi": [257, 258], "mf6": [0, 248, 249, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 380, 392, 397, 398, 399, 400, 401], "mf6_jupyt": 366, "mf6_python": 366, "mf6_sim": 129, "mf6_wel_adapt": 0, "mf6horizontalflowbarri": [108, 110, 112, 153, 155, 158], "mf6io": 86, "mf6io_6": [91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 172, 173, 176, 182, 183], "mf6path": 135, "mf6wel": [0, 103, 122, 181], "mfnadvfd": 320, "mfsimul": 380, "mib": [393, 399], "mic": [305, 340, 341, 342, 343, 344, 345], "microsecond": [132, 184, 185], "microsoft": 335, "mid": [7, 77, 354], "midpoint": [0, 7, 221, 267, 268, 269, 270, 400], "might": [0, 211, 258, 334, 340, 341, 342, 343, 344, 345, 354, 371, 389, 397, 400, 401], "migrat": 0, "million": 393, "milu": 159, "milut": 159, "mimic": [119, 178], "miminum": 364, "min": [26, 253, 286, 364], "min_concentr": [356, 359], "min_dens": [356, 359], "mind": 397, "miniconda": 391, "miniforg": 391, "minim": [12, 297, 338], "minima": 159, "minimum": [8, 11, 12, 26, 159, 222, 223, 224, 229, 236, 292, 293, 297, 320, 338, 364], "minimum_active_thick": 297, "minimum_k": [118, 119, 176, 178, 229, 361, 363], "minimum_thick": [0, 118, 119, 176, 178, 229, 236, 356], "minor": 0, "minu": [138, 159, 174], "minut": [132, 184, 185, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 371, 372, 373, 374, 376, 378, 393, 394, 397, 398, 399, 400, 401], "mipwa": 216, "mipwa2": 364, "misconcept": 389, "mismatch": 221, "misnom": 74, "miss": [0, 261, 262, 263, 364, 395, 398], "mistak": [233, 234, 235, 236, 401], "mix": [0, 142, 164, 165, 168, 277, 297], "mixelm": [291, 292, 293, 294, 295], "ml": 297, "mm": [19, 26, 28, 211, 213, 219, 364], "mmoc": [292, 294], "mobil": [113, 124], "mobile_immobile_mass_transfer_r": 113, "mobilestoragetransf": [195, 356, 359, 362, 369, 399], "mobilestoragetransferregridmethod": 0, "moc": 292, "mod2svat": 202, "mode": [187, 188, 196, 199, 200, 222, 223, 224, 253, 254, 255, 399], "model": [0, 8, 13, 14, 15, 18, 22, 24, 25, 26, 27, 29, 31, 36, 42, 45, 77, 78, 80, 87, 88, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 164, 165, 168, 169, 172, 173, 174, 176, 177, 181, 182, 183, 184, 186, 207, 208, 211, 212, 216, 218, 221, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 238, 240, 264, 283, 291, 292, 293, 294, 295, 296, 297, 299, 300, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 354, 355, 358, 362, 366, 368, 369, 371, 376, 382, 383, 385, 386, 392, 393, 394, 395, 397, 399, 402, 403], "model_nam": 0, "modeldir": [340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 361, 362, 364, 367, 369], "modelgrid": 380, "modellay": [26, 183], "modelnam": [0, 24, 78, 100, 105, 159, 160, 161, 162, 316, 356, 357, 359, 361, 362, 363, 364, 367, 369], "modern": [391, 394], "modflow": [0, 23, 25, 27, 35, 74, 77, 80, 81, 82, 83, 86, 88, 89, 91, 92, 94, 96, 97, 99, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 122, 123, 127, 135, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 158, 159, 166, 169, 170, 172, 173, 174, 176, 179, 181, 182, 183, 202, 219, 225, 226, 227, 228, 233, 234, 235, 311, 312, 313, 314, 317, 318, 320, 351, 352, 356, 357, 359, 361, 363, 364, 366, 367, 380, 386, 388, 394, 398, 402], "modflow2005": [380, 388], "modflow6": [0, 77, 103, 129, 137, 184, 185, 186, 322, 352, 355, 356, 357, 360, 361, 362, 364, 367, 380, 390, 392, 396, 397, 398], "modflow6_write_kwarg": 0, "modflow6simul": [0, 119, 178, 356, 357, 359, 361, 362, 363, 364, 367, 369, 398], "modif": 334, "modifi": [27, 292, 294, 299, 305, 340, 356, 361, 364, 390], "modlfow": 0, "modpath": 380, "modul": [0, 21, 56, 58, 66, 214, 220, 221, 309, 310, 337, 370, 389, 393], "modular": 369, "moistur": [26, 216], "molecular": [85, 299, 359, 399], "moment": [0, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180], "momentum": 159, "monteith": 211, "month": [0, 3, 132, 184, 185, 348], "monthli": [3, 348], "more": [0, 13, 14, 25, 27, 41, 44, 45, 47, 54, 55, 66, 75, 77, 85, 99, 104, 127, 137, 138, 159, 216, 219, 232, 242, 268, 270, 283, 291, 292, 293, 294, 295, 305, 311, 317, 320, 340, 343, 348, 354, 357, 359, 360, 362, 364, 366, 380, 388, 389, 390, 394, 395, 399, 400, 401], "most": [0, 5, 27, 41, 54, 159, 232, 244, 246, 291, 292, 293, 294, 295, 305, 306, 309, 310, 311, 320, 351, 360, 382, 383, 388, 389, 391, 397, 399, 400], "mostli": [380, 402], "mother": 395, "mound": 357, "move": [0, 73, 292, 293, 353, 357], "movement": 345, "mover": 174, "mp4": 280, "mpimg": 397, "msl": [19, 26], "mst": [195, 356, 359, 362, 369], "msw": [0, 322, 354], "mt3d": [11, 12, 74, 318, 380], "mt3dm": [307, 319, 320, 369, 390], "mtdnconc": 320, "much": [0, 27, 138, 280, 281, 291, 292, 293, 294, 295, 311, 320, 348, 388, 389, 391, 401], "multi": [0, 122, 181, 297, 386, 389, 390, 393, 397, 399], "multidimension": 380, "multilinear": [0, 223, 364], "multimodel": [0, 358, 365, 369], "multipl": [0, 27, 41, 42, 43, 47, 50, 54, 78, 119, 122, 130, 133, 178, 181, 225, 226, 227, 228, 238, 240, 252, 258, 282, 362, 364, 388, 389, 393, 400], "multipli": [0, 108, 109, 110, 112, 143, 153, 154, 155, 158, 173, 216, 306, 312, 313, 314, 318, 348, 388, 393, 398], "multispeci": [297, 369], "must": [3, 5, 6, 9, 10, 11, 12, 25, 31, 47, 78, 80, 101, 102, 106, 114, 118, 127, 129, 132, 138, 159, 165, 168, 176, 184, 185, 201, 203, 204, 206, 214, 215, 216, 217, 224, 253, 257, 258, 279, 280, 282, 287, 289, 291, 292, 293, 294, 295, 296, 297, 317, 318, 369, 388, 397, 399], "mutat": 0, "mwe": 338, "mxiter": [27, 247, 305, 309, 310, 311, 371], "mxpart": [292, 293], "mxstrn": 318, "my": [184, 382, 385], "my_first_imodflow_model": 348, "my_project": 391, "mydask": 397, "mypi": 333, "mypy_lint": 333, "myth": 389, "n": [0, 41, 42, 54, 74, 131, 132, 184, 185, 237, 248, 249, 282, 286, 288, 289, 348, 364, 376, 391, 393, 394, 398, 399], "n_face": [357, 359, 363], "n_speci": 297, "n_streamlin": [289, 376], "n_timestep": [127, 173, 318, 356, 359, 362, 369, 398], "n_years_gvg": 3, "n_years_gxg": 3, "nadvfd": 291, "nam": 348, "name": [0, 22, 26, 36, 41, 42, 43, 44, 45, 47, 54, 55, 56, 58, 66, 78, 84, 90, 91, 93, 98, 99, 101, 103, 104, 107, 109, 111, 113, 117, 119, 121, 125, 129, 130, 133, 134, 141, 143, 146, 151, 152, 154, 156, 159, 164, 167, 171, 178, 180, 186, 211, 216, 219, 220, 221, 232, 242, 251, 252, 254, 255, 276, 277, 284, 286, 321, 333, 339, 340, 341, 342, 343, 344, 345, 348, 354, 357, 364, 376, 382, 383, 393, 394, 398, 399, 400, 401], "namefil": 0, "namespac": 0, "namfil": 0, "nan": [0, 5, 44, 47, 49, 55, 83, 89, 92, 97, 116, 130, 132, 140, 145, 150, 166, 170, 174, 185, 223, 224, 241, 251, 253, 261, 267, 268, 269, 270, 279, 348, 356, 361, 362, 363, 364, 367, 371, 372, 382, 383, 399, 400, 401], "nan_lik": 369, "nanarrai": [348, 364, 399, 400, 401], "nanosecond": [132, 184, 185, 364, 367, 399], "nanpercentil": [223, 224], "nanxarrai": 400, "nap": 371, "natur": [142, 292, 293, 395, 400], "navig": 335, "nbstripout": 337, "nc": [380, 381, 382, 393], "ncol": [260, 340, 341, 342, 343, 344, 345, 348, 356, 360, 361, 362, 363, 367, 369], "ncomp": 297, "ncr": 305, "ndarrai": [118, 176, 260, 262, 266, 267, 268, 269, 270, 275, 357, 393, 397, 399], "ndim_regrid": 223, "ndimag": [364, 382, 383], "ndp48": 335, "nearest": [3, 203, 215, 223, 241, 253, 364, 376, 380, 382, 383, 393, 397, 399], "nearli": [380, 402], "neatli": [44, 55], "necesarili": 367, "necessari": [0, 113, 223, 292, 293, 348, 364, 373, 378, 389, 399], "necessit": [11, 12], "need": [0, 26, 36, 41, 42, 44, 45, 54, 55, 66, 81, 82, 88, 96, 102, 106, 115, 119, 129, 135, 139, 142, 144, 149, 159, 169, 178, 223, 224, 238, 240, 248, 274, 292, 293, 294, 297, 305, 306, 312, 313, 314, 318, 321, 335, 336, 339, 343, 348, 356, 357, 359, 364, 371, 373, 376, 380, 391, 393, 395, 397, 399, 401], "neg": [0, 5, 11, 27, 113, 118, 123, 124, 138, 176, 182, 183, 253, 340, 341, 342, 343, 344, 345, 364], "neglig": [292, 293, 294, 388, 389], "neighbor": [138, 241, 306, 382, 383, 396], "neighbour": [203, 215, 241, 399], "neither": 26, "nest": [0, 51], "net": [5, 219, 335], "netcdf": [0, 100, 105, 128, 273, 364, 380, 390], "netcdf4": [267, 268, 269, 270], "netflow": 5, "netflow_lay": 5, "netflow_right": 5, "netflow_right_of_diagon": 5, "netherland": [0, 364, 393], "network": 364, "new": [0, 9, 10, 13, 14, 81, 82, 88, 96, 115, 134, 136, 139, 149, 169, 216, 253, 257, 258, 261, 292, 293, 334, 335, 338, 351, 356, 357, 358, 359, 360, 361, 366, 367, 376, 382, 383, 389, 399], "new_model": 360, "new_npf": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180], "new_riv": 401, "new_riv_d": 401, "new_sim": 358, "new_simul": 360, "new_top": 237, "newer": 0, "newton": [0, 99, 159, 364], "next": [0, 25, 119, 127, 178, 213, 292, 293, 294, 317, 333, 348, 364, 366, 369, 371, 376, 378, 397, 398, 399, 400], "nface": [357, 359, 363], "nice": [41, 54, 337, 371, 398, 400], "nieuwkoopse_pla": 367, "nl": [333, 335, 340, 341, 342, 343, 344, 345, 348], "nlai": [296, 340, 341, 342, 343, 344, 345, 348, 356, 360, 361, 362, 363, 367, 369], "nlayer": [357, 359, 363], "nlsink": 294, "no_ptc": [0, 159, 160, 161, 162], "nodata": [0, 44, 47, 48, 49, 55, 83, 89, 92, 97, 116, 140, 145, 150, 166, 170, 205, 233, 234, 235, 242, 251, 279, 401], "nodatavalu": 26, "node": [27, 138, 159, 309, 311, 361, 363, 367], "nodepropertyflow": [0, 88, 96, 149, 196, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 399], "nodepropertyflowregridmethod": [0, 84, 90, 93, 98, 117, 121, 139, 141, 146, 151, 167, 171, 180, 360], "nois": 337, "nomenclatur": 74, "nomin": 174, "non": [0, 5, 7, 13, 14, 50, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 253, 257, 267, 268, 269, 270, 306, 320, 356, 360, 364, 367, 382, 383, 388], "nonconverg": 159, "none": [0, 5, 8, 22, 23, 24, 35, 36, 39, 41, 42, 43, 44, 47, 48, 49, 54, 55, 58, 59, 61, 66, 68, 70, 72, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 113, 114, 115, 117, 118, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 159, 160, 161, 162, 167, 169, 171, 174, 176, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 211, 214, 220, 221, 223, 228, 229, 232, 233, 234, 235, 241, 242, 247, 251, 253, 273, 282, 284, 286, 287, 290, 304, 309, 310, 315, 316, 318, 321, 348, 354, 356, 357, 359, 361, 362, 363, 364, 367, 369, 376, 398, 399, 400, 401], "nonequidist": [0, 266, 275], "nonexarrai": [398, 399, 400, 401], "nonlinear": [27, 159, 305, 309, 310, 311], "nonuniform": [292, 293], "nonzero": 174, "norm": [159, 282], "normal": [41, 42, 54, 66, 119, 178, 208, 292, 293, 320, 388, 399], "north": 21, "northeast": 364, "nota": [19, 27, 28, 293, 299, 311], "notabl": 0, "notat": [41, 54], "note": [5, 9, 10, 13, 14, 19, 23, 26, 28, 35, 39, 41, 42, 45, 47, 54, 74, 75, 76, 77, 78, 135, 138, 159, 174, 205, 211, 248, 253, 258, 267, 268, 269, 270, 280, 291, 292, 293, 294, 295, 297, 309, 310, 318, 337, 340, 341, 342, 343, 344, 345, 357, 359, 360, 364, 376, 380, 389, 393, 394, 400, 401], "notebook": [0, 337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "noth": 159, "notic": [0, 374, 398], "notnul": [382, 383], "now": [0, 26, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 360, 361, 363, 364, 365, 367, 369, 372, 389, 398, 399, 400, 401], "np": [0, 5, 36, 41, 42, 44, 54, 118, 129, 142, 174, 176, 223, 224, 251, 253, 260, 261, 321, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 371, 372, 376, 378, 382, 383, 393, 394, 397, 398, 399, 400, 401], "nparticles_advect": [292, 293], "nparticles_no_advect": [292, 293], "npc": [309, 310], "npf": [0, 84, 88, 90, 93, 96, 98, 117, 121, 138, 139, 141, 146, 149, 151, 167, 171, 180, 196, 356, 357, 359, 360, 361, 362, 363, 367, 369, 388, 399], "npf_regrid": 360, "nph": [292, 293], "npl": [292, 293], "nplane": [292, 293], "npmax": [292, 293], "npmin": [292, 293], "npsink": 294, "nrchop": [312, 313, 314], "nrow": [260, 340, 341, 342, 343, 344, 345, 348, 356, 360, 361, 362, 363, 367, 369, 399], "nseg": 0, "nstp": [173, 318], "nswtcpl": 320, "nt": 335, "ntrailwav": 174, "null": 58, "nulllogg": 58, "numba": [223, 224, 380], "numba_celltre": 391, "number": [0, 3, 26, 27, 44, 47, 48, 49, 50, 55, 61, 68, 70, 72, 77, 80, 91, 113, 118, 123, 127, 143, 147, 159, 173, 176, 182, 183, 208, 220, 223, 232, 244, 246, 260, 262, 289, 291, 292, 293, 294, 295, 296, 297, 305, 306, 309, 310, 311, 313, 318, 320, 337, 339, 341, 343, 344, 351, 356, 361, 362, 363, 364, 367, 369, 371, 377, 382, 383, 386, 388, 389, 391, 393, 394, 396, 397, 399, 400], "number_orthogon": 159, "number_partit": [358, 365], "numer": [0, 159, 338, 362, 364, 388, 399], "numpi": [0, 44, 142, 223, 224, 232, 242, 261, 268, 270, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 371, 376, 378, 380, 389, 391, 393, 394, 397, 398, 399, 400, 401], "numpysupport": [223, 224], "nutshel": [391, 397], "nwaveset": 174, "o": 354, "object": [0, 22, 41, 42, 54, 61, 81, 82, 88, 96, 101, 103, 115, 119, 122, 127, 129, 134, 139, 142, 144, 149, 169, 178, 181, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 211, 222, 223, 224, 278, 279, 286, 317, 322, 335, 340, 341, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 364, 367, 369, 371, 372, 373, 374, 376, 380, 393, 394, 398, 399, 400, 401], "objectnonearrai": [398, 399, 400, 401], "observ": [79, 80, 86, 91, 94, 118, 123, 143, 147, 174, 176, 182, 183, 357, 371, 394, 398, 399, 400, 401], "obsolet": 0, "obstruct": 22, "obtain": [9, 10, 13, 14, 257, 258, 282, 287, 289, 306, 364, 365, 371, 374, 376], "obviou": [337, 397], "oc": [0, 101, 129, 142, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 361, 362, 363, 367, 369], "occupi": [26, 108, 110, 112, 153, 155, 158], "occur": [0, 26, 27, 50, 80, 113, 114, 232, 254, 255, 283, 320, 364, 388, 400], "occurr": 26, "octob": 348, "off": [0, 78, 340, 341, 342, 343, 345, 348, 361, 372, 393, 398, 399, 400], "offici": 0, "often": [320, 388, 389, 394, 401], "ogr": [232, 242, 254, 255, 394], "ogw": 86, "oh": 401, "ok": 366, "old": [335, 339, 382, 383], "old_riv": 401, "older": [0, 333, 388], "olsthoorn": [13, 14], "omit": 159, "ommit": 397, "onc": [0, 42, 80, 222, 223, 224, 277, 335, 389, 397], "one": [0, 5, 8, 25, 27, 39, 41, 44, 45, 47, 50, 54, 55, 81, 82, 84, 88, 90, 93, 96, 98, 107, 109, 111, 113, 114, 115, 117, 118, 121, 124, 127, 138, 139, 141, 142, 144, 146, 149, 151, 152, 154, 156, 159, 165, 167, 168, 169, 171, 172, 176, 180, 223, 224, 229, 232, 233, 234, 235, 241, 247, 253, 277, 280, 291, 292, 293, 294, 295, 297, 299, 305, 306, 309, 310, 311, 317, 318, 320, 333, 339, 356, 360, 362, 363, 364, 371, 373, 380, 389, 393, 395, 397, 399], "ones": [348, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 382, 383, 397, 398, 399], "ones_lik": [5, 354, 356, 399, 400], "onli": [0, 5, 8, 11, 12, 13, 14, 19, 26, 27, 28, 36, 41, 44, 54, 55, 80, 81, 84, 90, 93, 98, 101, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 129, 132, 138, 141, 142, 146, 151, 152, 153, 154, 155, 156, 158, 159, 165, 167, 168, 171, 172, 174, 180, 184, 185, 205, 211, 216, 223, 227, 232, 241, 253, 254, 281, 283, 287, 292, 293, 294, 305, 306, 307, 309, 310, 318, 319, 320, 321, 335, 336, 340, 341, 342, 343, 344, 345, 348, 357, 359, 364, 371, 380, 388, 390, 391, 397, 398, 399, 400, 401], "onlin": [334, 337, 397, 401], "onto": [9, 10, 13, 14, 134, 251, 360], "open": [0, 3, 5, 42, 50, 129, 130, 131, 132, 133, 184, 185, 253, 255, 283, 322, 335, 340, 341, 342, 343, 344, 345, 348, 362, 366, 381, 382, 389, 390, 393, 397, 399], "open_": 0, "open_cbc": 0, "open_concentr": [0, 356, 359, 362, 369], "open_dataarrai": [381, 382], "open_dataset": [0, 322, 364, 381, 382, 393], "open_dv": 0, "open_flow_budget": [0, 357, 358], "open_hd": [0, 361, 364, 367, 380, 397], "open_head": [0, 356, 357, 358, 359, 364, 365, 399], "open_projectfile_data": [0, 81, 82, 88, 96, 115, 119, 129, 139, 144, 149, 169, 178, 322], "open_rasterio": 253, "open_subdomain": [0, 322], "open_transport_budget": [0, 362], "openstreetmap": [0, 378], "oper": [0, 45, 66, 102, 106, 279, 292, 293, 294, 359, 364, 372, 382, 383, 385, 389, 391, 394, 397], "opposit": 159, "opt": 399, "optim": [159, 318, 389, 397], "option": [0, 3, 4, 5, 6, 8, 11, 12, 19, 22, 24, 27, 28, 36, 39, 41, 42, 43, 44, 45, 47, 49, 54, 55, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 99, 100, 101, 104, 105, 113, 115, 117, 118, 119, 121, 123, 124, 126, 128, 129, 132, 137, 138, 139, 141, 142, 143, 144, 146, 147, 149, 151, 159, 164, 165, 167, 168, 169, 171, 173, 174, 176, 178, 180, 182, 183, 184, 185, 211, 216, 220, 221, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 238, 240, 241, 242, 251, 253, 254, 255, 264, 273, 279, 282, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321, 334, 359, 364, 374, 388, 391, 393, 394, 399], "optionalkeyword": 159, "order": [0, 75, 76, 80, 113, 118, 124, 159, 176, 236, 247, 279, 289, 292, 293, 294, 318, 362, 364, 371, 382, 383, 400], "ordin": 354, "ordinari": [382, 383, 397], "org": [30, 32, 55, 77, 165, 168, 223, 224, 254, 255, 282, 283, 286, 335, 343, 345, 348], "organ": [386, 391], "orient": [138, 356], "origin": [0, 4, 45, 102, 106, 159, 174, 229, 318, 337, 356, 357, 358, 360, 361, 363, 364, 365, 374, 393, 399, 401], "original_modeldir": 365, "original_rch_packag": 399, "original_simul": 399, "orthomin": 305, "oscil": 76, "oss": [340, 341, 342, 343, 344, 345, 348], "other": [0, 41, 42, 47, 54, 55, 74, 77, 127, 138, 159, 186, 225, 226, 228, 254, 282, 287, 289, 317, 337, 357, 362, 364, 369, 382, 383, 388, 389, 391, 394, 397, 398, 400], "otherwis": [47, 142, 252, 299, 348, 398], "oud": 345, "our": [334, 335, 337, 348, 357, 372, 374, 398, 400, 401], "out": [0, 119, 138, 178, 261, 262, 283, 287, 333, 334, 363, 380, 383, 388, 389, 391, 397, 398, 399, 400], "out_of_bound": [0, 261, 262, 263], "outcom": 369, "outer": [27, 138, 159, 247, 305, 306, 309, 310, 311, 340, 343, 364, 382, 383], "outer_csvfil": [0, 159, 160, 161, 162], "outer_dvclos": [159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "outer_edg": 364, "outer_maximum": [159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "outflow": [80, 86, 91, 94, 118, 143, 147, 176, 182, 183, 290], "outgo": 5, "outletman": 0, "outletspecifi": 0, "outletweir": 0, "outlin": [119, 178, 356], "output": [0, 4, 5, 25, 26, 45, 56, 59, 77, 78, 79, 80, 86, 91, 94, 99, 101, 104, 113, 118, 123, 124, 127, 129, 132, 134, 138, 142, 143, 147, 159, 164, 165, 168, 172, 174, 176, 182, 183, 184, 185, 218, 219, 237, 251, 280, 306, 308, 317, 322, 337, 348, 356, 357, 360, 365, 367, 380, 395, 397, 399, 402], "outputcontrol": [0, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 361, 362, 363, 364, 367, 369], "outsid": [0, 83, 89, 92, 97, 116, 119, 140, 145, 150, 166, 170, 178, 229, 233, 234, 235, 236, 262, 263, 371, 397], "over": [0, 8, 11, 34, 80, 84, 86, 90, 91, 93, 94, 98, 113, 117, 118, 121, 124, 141, 143, 146, 147, 151, 167, 171, 174, 176, 180, 182, 183, 214, 220, 221, 223, 238, 240, 242, 248, 249, 258, 279, 280, 281, 286, 287, 291, 292, 293, 294, 295, 309, 310, 312, 313, 314, 337, 348, 356, 357, 359, 380, 389, 393, 397, 399, 400], "overal": 362, "overcom": 159, "overhaul": 0, "overhead": [222, 223, 224, 399], "overlai": [282, 284, 286, 371, 378, 400], "overlap": [8, 84, 90, 93, 98, 109, 117, 121, 141, 146, 151, 167, 171, 180, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 221, 223, 229, 360, 399], "overli": [138, 225, 226, 228], "overrid": [81, 82, 84, 88, 90, 93, 96, 98, 115, 117, 121, 129, 139, 141, 144, 146, 149, 151, 167, 169, 171, 180], "overridden": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180], "overview": [356, 357, 359, 360, 361, 364, 367, 389, 402], "overwhelm": 287, "overwrit": [102, 106], "overwritten": [0, 252], "own": [0, 44, 55, 56, 223, 224, 348, 386], "oxygen": 211, "p": [26, 41, 54, 63, 64, 335, 340, 343, 345, 369], "p1": 211, "p2": 211, "p30": [223, 224], "p30_regridd": 223, "p30_result": [223, 224], "p30_voxel": 224, "p3h": 211, "p3l": 211, "p4": 211, "p54": [11, 12], "pack": 398, "packag": [0, 12, 17, 18, 19, 20, 25, 26, 28, 29, 34, 36, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 220, 221, 232, 238, 240, 296, 297, 298, 300, 304, 306, 307, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 335, 339, 342, 343, 348, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 366, 368, 369, 373, 378, 380, 382, 385, 386, 388, 390, 391, 392, 393, 394, 397, 398, 401, 402], "package_convergence_filenam": 367, "package_instance_cr": 399, "package_nam": [163, 389, 399], "packagenam": 149, "pad": [44, 55, 225, 226, 228], "page": [86, 91, 94, 99, 104, 114, 118, 123, 138, 142, 143, 147, 159, 172, 173, 176, 182, 183, 322, 333, 338, 380, 389], "pair": [9, 13, 257, 376, 394], "panda": [0, 45, 46, 47, 48, 49, 50, 119, 178, 229, 232, 236, 252, 254, 255, 268, 270, 290, 342, 343, 345, 348, 351, 354, 356, 357, 359, 362, 364, 367, 369, 371, 372, 380, 382, 383, 385, 390, 391, 392, 394, 398, 399, 402, 403], "pandamesh": [382, 385], "para_sim": 208, "parallel": [0, 309, 310, 365, 391, 397, 399], "paramet": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 354, 356, 357, 361, 362, 363, 367, 371, 386, 388, 394, 399], "parameter": 26, "paraview": 308, "parent": 0, "parenthes": 50, "pars": [0, 41, 257, 258, 276, 354], "part": [0, 5, 26, 41, 42, 54, 83, 89, 92, 97, 109, 116, 140, 145, 150, 166, 170, 276, 279, 280, 336, 340, 341, 342, 343, 344, 345, 348, 364, 365, 389, 394, 395], "partial": [108, 110, 112, 153, 155, 158, 380, 399], "particl": [291, 292, 293, 294, 295, 318], "partit": [0, 136, 164, 309, 310, 366, 368, 369, 392], "partition_gener": [0, 358, 365, 369], "partopt": [309, 310], "pass": [0, 5, 41, 54, 172, 255, 358, 364, 367, 399], "passthrough": [83, 89, 92, 97, 102, 106, 116, 140, 145, 150, 166, 170, 399, 400], "past": [159, 389], "path": [0, 26, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 100, 105, 128, 129, 130, 131, 132, 135, 137, 174, 184, 185, 186, 210, 212, 232, 242, 254, 255, 265, 288, 309, 310, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 361, 364, 366, 367, 381, 382, 383, 389, 393, 394], "path_a": 254, "path_b": 254, "pathcollect": 400, "pathlib": [26, 46, 47, 48, 49, 50, 137, 184, 185, 186, 232, 242, 254, 255, 393], "pathlik": [50, 51, 52], "pattern": [0, 40, 41, 42, 43, 44, 45, 53, 54, 55, 159, 292, 293, 294, 393], "pcg": [27, 50, 159, 306, 309, 340, 341, 342, 343, 344, 345, 348], "pcolormesh": 282, "pd": [3, 12, 25, 36, 45, 118, 174, 176, 229, 255, 309, 310, 317, 321, 342, 343, 345, 348, 354, 356, 359, 362, 364, 369, 371, 382, 383, 398, 399], "pdf": [86, 91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 172, 173, 176, 182, 183, 340], "peat": 388, "peatland": 364, "peclet": 399, "peek": 280, "penetr": 400, "penman": 211, "peopl": 389, "per": [0, 3, 5, 11, 27, 30, 32, 47, 101, 113, 124, 129, 130, 131, 132, 133, 142, 159, 165, 168, 184, 185, 186, 217, 229, 230, 232, 252, 292, 293, 309, 311, 359, 360, 369, 371, 388], "percel": [291, 292, 293, 294, 295], "percentag": 124, "percentil": [253, 254, 255], "perch": [26, 138, 216, 361, 362, 363, 364, 367, 399], "perched_water_t": 26, "percol": 208, "perfect": 334, "perforation_length": 363, "perform": [0, 24, 45, 78, 159, 241, 276, 316, 360, 389, 397], "perimet": [230, 231], "period": [17, 25, 26, 27, 50, 77, 79, 80, 86, 88, 91, 94, 96, 99, 101, 104, 114, 118, 123, 127, 129, 142, 143, 147, 149, 159, 164, 173, 174, 176, 182, 183, 211, 218, 298, 306, 311, 317, 318, 356, 359, 364, 398], "period_data": [0, 88, 96, 101, 129, 149], "period_tim": 348, "periodic_stress": 348, "periods_da": 348, "perlen": [173, 318], "permeabl": 21, "perpendicular": [13, 14, 21, 359], "perspect": [389, 394, 399], "pet": 174, "petm": 91, "pf": 209, "pfree": 354, "phase": [113, 124], "phenomenon": 21, "phreatic": [0, 206, 230], "physic": [0, 4, 26, 204, 212, 216, 356, 359, 367], "picard": 159, "pick": 334, "pictur": [372, 397], "pie": 358, "piec": [274, 358, 397], "pile": 22, "pip": [0, 380, 382, 385, 389], "pipe": [364, 399], "pipe_cond": 364, "pipe_elev": 364, "pipelin": [335, 339], "pixel": [242, 286], "pixi": [0, 333, 336, 339, 380, 389, 394], "pixi_vers": 335, "pkg": [354, 399], "pkg_name": 126, "pkgname": 103, "place": [0, 36, 118, 119, 131, 176, 178, 184, 229, 279, 292, 293, 321, 357, 364, 399], "placed_wel": 229, "placement": [292, 293, 294], "plai": 306, "plan": [292, 293], "planar": [0, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 220, 225, 226, 227, 228, 238, 240, 246, 400], "planar_riv": 400, "plane": [138, 241, 256, 259, 292, 293, 399], "plant": 174, "planview": 393, "pleas": [5, 42, 45, 78, 114, 258, 260, 338, 364], "plot": [0, 9, 10, 280, 282, 283, 286, 287, 289, 340, 341, 342, 343, 344, 345, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 371, 372, 373, 374, 377, 379, 380, 389, 392, 393, 394, 395, 399, 400, 401], "plot_colorbar": [282, 400], "plot_histograms_side_by_sid": 399, "plot_kwarg": 399, "plot_map": [0, 322, 378, 379, 392, 399, 400, 401], "plote": 376, "plotter": 280, "plotter_kwarg": [280, 281], "plt": [286, 290, 340, 341, 342, 343, 344, 345, 354, 357, 358, 359, 360, 364, 365, 369, 371, 372, 373, 374, 376, 397, 399, 400], "plume": 362, "pm": [219, 382, 385], "png": [0, 284, 290, 397], "pocket": [346, 347, 392], "point": [0, 4, 9, 13, 39, 45, 100, 105, 118, 119, 128, 138, 176, 178, 236, 242, 257, 260, 261, 262, 263, 304, 315, 322, 369, 370, 372, 375, 376, 380, 389, 392, 394, 397, 398], "point_interpol": [371, 375, 392], "point_valu": 0, "pointer": [309, 310], "points_from_xi": [45, 394], "points_gdf": 394, "points_in_bound": [0, 262, 263, 322], "points_indic": [0, 322], "points_outside_grid": 371, "points_set_valu": [0, 261, 322, 371], "points_valu": [0, 322, 364, 382, 383], "pointwaterhead": 4, "polcg": 159, "polydata": 285, "polygon": [0, 39, 45, 107, 109, 111, 232, 242, 248, 249, 251, 254, 255, 285, 322, 370, 375, 392, 394, 400], "polygonize_rast": [372, 375, 392], "polygonized_lak": 372, "polygontyp": [248, 249], "polynomi": 27, "pond": [26, 201, 219, 322], "ponding_depth": 214, "ponding_depth_rur": 26, "ponding_depth_urban": 26, "ponding_factor": 201, "pooch": [380, 391], "pop": [280, 399, 401], "popular": [389, 390, 402], "pore": [113, 306, 388, 399], "poros": [0, 6, 8, 11, 12, 113, 124, 195, 297, 340, 341, 342, 343, 344, 345, 356, 359, 362, 369, 376, 388, 399], "porou": [297, 388], "portion": [30, 165, 337], "posit": [5, 11, 27, 118, 123, 138, 176, 182, 183, 186, 280, 289, 306, 343, 345], "positron": 286, "possibl": [0, 13, 14, 26, 44, 47, 49, 55, 80, 85, 219, 223, 224, 354, 364, 371, 376, 378, 382, 383, 385, 391, 399, 400], "possibli": 257, "post": [138, 380], "pota": 354, "potato": 354, "potenti": [119, 174, 178], "power": 397, "powershel": 335, "pp": [26, 364], "pp_ss": 364, "pp_ss_mean": 364, "pp_tran": 364, "pr": 335, "practic": 389, "pragmat": [41, 54, 388, 389], "pre": [0, 8, 389], "precipit": [208, 213, 215, 219, 364, 400], "precipitationmap": [213, 322], "precis": [0, 44, 364, 367, 399], "precomput": 247, "precondit": [27, 159, 311], "precondition": [159, 305, 309, 310, 340, 341, 342, 343, 344, 345], "preconditionedconjugategradientsolv": [340, 341, 342, 343, 344, 345, 348], "preconditioner_drop_toler": 159, "preconditioner_level": 159, "predefin": 159, "predifin": 159, "prefer": [0, 292, 293], "preferenti": 26, "prepar": [0, 5, 87, 88, 95, 96, 100, 103, 105, 128, 129, 148, 149, 177, 208, 297, 322, 356, 364, 371, 372, 373, 374, 382, 383, 390, 392, 394, 400, 401, 402], "prepare_jupyt": 370, "prepare_python": 370, "prepare_wel_for_mf6": 0, "prepend": 0, "prerequisit": 335, "prescrib": [80, 359, 363], "presenc": [0, 216, 399], "present": [0, 3, 5, 7, 26, 47, 50, 78, 80, 81, 82, 102, 106, 113, 131, 132, 159, 184, 185, 232, 282, 286, 287, 289, 363, 391], "preserv": [0, 279, 382, 383], "press": [280, 339, 366], "pressur": [174, 209, 211, 216, 320], "prevent": [0, 66, 78, 119, 178, 223, 399], "preview": 397, "previou": [80, 159, 173, 210, 364, 371, 376, 378, 391, 401], "previous": [0, 210, 276, 354, 364, 371, 376, 389, 400], "price": 389, "primari": [0, 364, 394, 397], "primarili": [390, 393, 394], "primod": [73, 353], "princip": [21, 138, 351], "principl": 45, "print": [0, 26, 27, 63, 64, 77, 79, 80, 86, 91, 94, 99, 104, 118, 123, 131, 142, 143, 147, 159, 164, 174, 176, 182, 183, 184, 274, 280, 296, 357, 364, 365, 369, 374, 393, 394, 399, 400], "print_convergence_info": 27, "print_flow": [77, 79, 80, 86, 91, 94, 99, 104, 118, 123, 143, 147, 163, 164, 174, 176, 182, 183, 356, 357, 359, 361, 363, 364, 367, 369, 398, 399, 400, 401], "print_if_error": [0, 322, 401], "print_input": [77, 79, 80, 86, 91, 94, 99, 104, 107, 109, 111, 118, 123, 143, 147, 152, 154, 156, 174, 176, 182, 183, 248, 249, 356, 357, 359, 361, 363, 364, 367, 369, 398, 399, 400, 401], "print_opt": [0, 159, 160, 161, 162, 356, 357, 359, 361, 362, 363, 364, 367, 369], "print_stag": 367, "printout": [27, 297], "printout_interv": 27, "priori": 359, "priorit": 279, "prj": [0, 81, 82, 88, 96, 115, 119, 129, 139, 144, 149, 169, 178, 322, 394], "probabl": [334, 401], "problem": [27, 159, 297, 305, 309, 310, 311, 338, 340, 342, 343, 345, 356, 359, 360, 361, 362, 388, 389, 401], "problemat": [0, 401], "procedur": 320, "process": [0, 26, 41, 54, 56, 119, 138, 178, 232, 320, 335, 359, 364, 380, 388, 389, 393, 399, 400], "processor": 389, "produc": [0, 252, 283, 400, 402], "product": [113, 124, 159], "prof": [13, 14], "profil": [207, 208, 335, 362], "program": [74, 113, 124, 138, 143, 159, 172, 258, 318, 320, 348, 364, 366, 386, 389], "progress": [318, 335], "project": [0, 9, 10, 13, 14, 50, 51, 56, 101, 129, 216, 253, 334, 337, 338, 339, 374, 376, 390, 391, 394, 401], "projectfil": [0, 26, 101, 119, 129, 178, 348], "prompt": [340, 341, 342, 343, 344, 345, 348, 389], "prone": 380, "proper": 0, "properli": [0, 389], "properti": [0, 23, 35, 138, 306, 361, 363, 367, 388, 393, 394, 395, 399], "proport": [20, 91, 304, 364], "proportion": 364, "proportion_depth": [0, 91, 192, 399], "proportion_r": [0, 91, 192, 399], "provid": [0, 9, 10, 13, 14, 19, 25, 26, 28, 43, 56, 78, 79, 80, 85, 86, 91, 94, 113, 114, 118, 123, 124, 126, 127, 132, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 211, 219, 223, 224, 232, 251, 253, 267, 268, 269, 270, 282, 286, 317, 322, 333, 337, 338, 348, 351, 356, 357, 359, 364, 372, 374, 376, 378, 380, 382, 383, 386, 389, 390, 393, 394, 395, 398, 400, 401, 402], "provis": 391, "prsiti": [297, 369], "ps1": 335, "pseudo": 159, "psgw": 219, "pssw": 219, "pstem": 354, "ptc": 159, "public": [103, 276], "publish": 0, "publsihed_pdf": 340, "pull": [0, 333, 334, 389], "pump": [36, 229, 321, 342, 343, 394], "pun": 211, "pure": [66, 389, 398], "purpos": [0, 103, 386], "push": [339, 364], "put": [101, 129, 138, 348], "pxdp": 91, "py": [336, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403], "pydata": [223, 224, 254, 255], "pyogrio": 394, "pypi": [339, 389], "pyplot": [340, 341, 343, 344, 345, 354, 357, 358, 359, 360, 364, 365, 369, 371, 372, 373, 374, 376, 397, 399, 400], "pyproj": [374, 391], "pytest": [0, 334], "python": [0, 25, 45, 56, 58, 59, 72, 119, 127, 142, 178, 211, 258, 317, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 382, 383, 385, 386, 387, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "pythonlogg": 58, "pyton": 56, "pyvista": [0, 280, 283, 285, 377, 391], "q": [12, 118, 176, 182, 183, 280, 342, 343, 345, 369], "q1": 253, "q3": 253, "q_": 12, "qdr": 219, "qg": 0, "qgi": [0, 394], "qmodf": 219, "qrun": 219, "qscale": 342, "qspgw": 219, "quadcontourset": [289, 356, 359, 361, 367, 369, 376], "quadmesh": [340, 341, 343, 344, 345, 360, 364, 372, 393], "quadrilater": [0, 277], "qualiti": [0, 371, 401], "qualnam": [58, 66, 220, 221], "quantil": 284, "quantile_colorscal": 284, "quantiti": [0, 32, 168], "quasi": [15, 26, 88, 96, 101, 115, 129, 139, 144, 149, 169, 296, 361], "queri": 77, "question": [0, 386], "quickli": [357, 359], "quiet": 335, "quit": [393, 395, 400], "quiver": [0, 9, 10, 322, 357], "quiver_lin": [0, 287, 322, 376], "quiver_linestr": [0, 287, 322], "quot": [0, 380], "r": [11, 12, 41, 54, 282, 286, 389], "r_fstrict": 309, "r_fstrictpk": 309, "radial": 231, "radial_c": 231, "rag": 142, "rainfal": [290, 367], "rais": [0, 47, 78, 79, 80, 85, 86, 91, 94, 113, 114, 118, 123, 124, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 223, 229, 261, 262, 263, 272, 274, 401], "ram": 397, "random": [292, 293, 294, 360], "randomli": [292, 293, 335], "rang": [0, 26, 27, 119, 138, 159, 174, 178, 282, 311, 340, 341, 342, 343, 344, 345, 388, 399], "rangeindex": 357, "raphson": [99, 159], "rare": [0, 292, 293, 351], "raster": [0, 5, 54, 55, 232, 241, 242, 252, 253, 254, 255, 286, 322, 370, 375, 378, 381, 392, 396, 402, 403], "rasterio": [0, 41, 42, 100, 105, 128, 242, 251, 253, 255, 273, 278, 322, 390, 391, 393], "rasterize_cellt": [232, 322], "rasterize_shp": [373, 375, 392], "rasterr": [372, 373], "rate": [0, 19, 28, 36, 77, 79, 80, 86, 91, 94, 99, 104, 113, 118, 119, 122, 123, 124, 143, 147, 159, 164, 174, 176, 178, 181, 182, 183, 192, 197, 220, 227, 229, 312, 313, 314, 321, 340, 341, 342, 343, 344, 345, 348, 356, 359, 361, 363, 364, 369, 398, 399], "rate_factor_tim": [118, 176], "rate_transi": [118, 176], "rate_wel": 361, "rather": [0, 41, 42, 54, 138, 223, 279, 337, 351, 388, 389, 393, 397, 402], "ratio": [299, 306], "ratio_horizont": 299, "ratio_vert": 299, "rational": 351, "ravel": 400, "raw": 380, "rbot": [29, 315], "rcb": [309, 310], "rch": [0, 143, 144, 197, 220, 341, 357, 359, 361, 363, 398, 399, 400], "rch_conc": 341, "rch_concentr": 359, "rch_data": 398, "rch_rate": [341, 357, 359, 361, 363], "rch_ss": 364, "rch_ss_tran": 364, "rch_time": 398, "rch_total": 364, "rch_tran": 364, "rch_trans_yr": 364, "rclose": [27, 159, 309, 311, 340, 341, 342, 343, 344, 345], "rclose_inn": 309, "rclose_opt": [0, 159], "rclosepk": 309, "rcm": 159, "rd": 253, "rdnew": 286, "rdylbu": 376, "rdylbu_r": [356, 359, 378], "re": [0, 9, 10, 41, 45, 54, 223, 271, 280, 333, 334, 374, 389, 393, 397], "reach": [208, 223], "reaction": 369, "reactiv": 390, "read": [0, 27, 31, 38, 40, 46, 50, 51, 77, 79, 80, 86, 91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 130, 131, 132, 133, 143, 147, 152, 154, 156, 172, 174, 176, 182, 183, 184, 185, 186, 296, 306, 318, 320, 322, 337, 338, 352, 355, 357, 364, 371, 380, 381, 382, 383, 388, 389, 392, 393, 395], "read_ascii": [0, 37, 322], "read_associ": 322, "read_binari": 37, "read_csv": [45, 46, 371], "read_dens": 320, "read_fil": [5, 45, 232, 258, 382, 385, 394], "read_grb": 0, "read_imod_legend": 322, "read_metaswap_fil": [354, 355, 392], "read_projectfil": [0, 322], "read_timfil": 322, "readabl": [0, 137, 389], "reader": 0, "readthedoc": [77, 251], "real": [159, 292, 299, 305, 310, 399], "reason": [0, 25, 33, 119, 127, 159, 178, 276, 291, 292, 293, 294, 295, 296, 317, 382, 383, 388, 397], "reassign": [91, 143], "reattach": 399, "rebuild": 335, "rebuilt": 336, "recalcul": [159, 320], "recent": [159, 299], "recharg": [0, 19, 25, 26, 124, 127, 197, 227, 312, 313, 314, 317, 341, 357, 361, 363, 367, 398, 399], "recharge_lay": 313, "rechargehighestact": 341, "rechargeregridmethod": [0, 144, 399], "recip": [0, 389], "recogn": [0, 337], "recommend": [138, 232, 320, 334, 389, 391, 399], "recomput": [122, 181], "record": [0, 113, 186, 306, 318], "rectangl": [39, 356], "rectangular": [356, 361, 363, 364, 365, 367, 393], "recurs": [42, 309, 310], "redirect": 0, "reduc": [0, 19, 27, 29, 159, 174, 283, 309, 310, 311, 382, 383, 399, 400], "reduct": [159, 211, 382, 383], "refer": [0, 4, 5, 11, 26, 42, 45, 78, 81, 172, 223, 224, 232, 254, 255, 258, 260, 275, 278, 281, 283, 297, 320, 348, 364, 371, 373, 374, 391, 394, 397], "reference_concentr": [78, 356, 359], "reference_dens": [78, 356, 359], "refin": 0, "reflect": 399, "regard": 5, "regardless": [27, 318], "regex": [41, 42, 43, 54], "regex101": [41, 54], "region": [26, 27, 289, 299, 311, 366, 368, 392, 399], "registri": [333, 335], "regrid": [0, 81, 82, 84, 88, 90, 93, 96, 98, 115, 117, 121, 129, 134, 138, 139, 141, 144, 146, 149, 151, 167, 169, 171, 180, 222, 223, 224, 322, 363, 364, 366, 368, 382, 383, 392, 402, 403], "regrid_cach": [81, 82, 84, 88, 90, 93, 96, 98, 115, 117, 121, 139, 141, 144, 146, 149, 151, 167, 169, 171, 180, 360, 399], "regrid_lik": [0, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 360, 399], "regrid_method": [187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 399], "regrid_method_setup": 399, "regrid_method_t": 399, "regrid_method_typ": 96, "regrid_schem": [81, 82, 88, 115, 139, 144, 149, 169], "regridd": [0, 81, 82, 84, 88, 90, 93, 96, 98, 115, 117, 121, 139, 141, 144, 146, 149, 151, 167, 169, 171, 180, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 224, 322, 360, 364, 382, 383, 399], "regridded_k_1": 360, "regridded_k_2": 360, "regridded_k_3": 360, "regridded_recharg": 399, "regridded_simul": 399, "regridded_simulation_nam": 134, "regridded_twri": 360, "regridder_typ": [0, 81, 82, 84, 88, 90, 93, 96, 98, 101, 115, 117, 121, 129, 139, 141, 144, 146, 149, 151, 167, 169, 171, 180, 360, 399], "regriddertyp": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 360, 399], "regridderweightscach": [0, 81, 82, 84, 88, 90, 93, 96, 98, 115, 117, 121, 139, 141, 144, 146, 149, 151, 167, 169, 171, 180, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 360, 399], "regridmethod": 0, "regridmethodtyp": [81, 84, 90, 93, 96, 98, 101, 117, 121, 129, 139, 141, 146, 151, 167, 171, 180], "regular": [41, 42, 54, 85, 100, 105, 128, 138, 257, 258, 364, 372], "reinstal": [0, 391], "reinstat": 0, "rel": [3, 47, 48, 138, 159, 223, 292, 293, 294, 305, 310, 388, 397, 401], "relat": [26, 214, 216, 320, 364, 399, 402], "relativ_rclos": 159, "relative_rclos": 159, "relativeoverlap": [187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 399], "relax": [0, 27, 99, 159, 247, 309, 310, 311, 340, 341, 342, 343, 344, 345, 364, 367, 399], "relaxation_factor": [159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "releas": [0, 30, 32, 165, 168, 182, 183, 306, 340, 341, 342, 343, 344, 345, 348, 389], "relev": [0, 232, 360, 389], "reli": [41, 54, 253, 389], "remain": [0, 30, 80, 119, 138, 165, 174, 178, 297, 318, 388], "rememb": [41, 54], "remot": 389, "remov": [103, 120, 122, 123, 174, 179, 181, 229, 233, 234, 235, 241, 261, 273, 292, 293, 333, 337, 364, 371, 382, 383, 389, 399, 400], "renam": [0, 41, 47, 49, 54, 364], "render": [0, 242, 280, 281, 283, 337, 401], "reorder": 159, "reordering_method": [0, 159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "rep": 26, "repeat": [0, 50, 80, 86, 91, 94, 101, 118, 129, 143, 147, 176, 182, 348, 400], "repeat_item": [80, 86, 91, 94, 118, 143, 147, 176, 182], "repeat_stress": [80, 86, 91, 94, 101, 118, 129, 143, 147, 176, 182, 398, 399, 400, 401], "repeatedli": [222, 223, 224], "replac": [0, 45, 50, 279, 292, 293, 360, 364, 382, 383, 388, 399], "report": [0, 26, 369], "reposistori": 389, "repositori": [0, 333, 334, 335, 337, 389, 391], "repres": [0, 24, 33, 39, 44, 85, 113, 132, 138, 159, 184, 185, 280, 296, 306, 356, 364, 369, 382, 385, 388, 393, 394, 395], "represent": [0, 103, 108, 110, 112, 132, 153, 155, 158, 184, 185, 283, 393, 399], "reproduc": [333, 335, 338, 390, 391], "reproject": [0, 322, 370, 375, 392, 393], "reproject_kwarg": 253, "request": [0, 119, 178, 216, 334, 338], "requir": [0, 4, 11, 24, 25, 26, 27, 39, 41, 45, 50, 54, 78, 85, 100, 105, 113, 118, 119, 124, 127, 128, 130, 131, 132, 133, 138, 159, 176, 178, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 213, 223, 232, 236, 273, 277, 279, 282, 286, 287, 289, 296, 297, 309, 310, 311, 317, 335, 337, 348, 354, 359, 364, 371, 380, 381, 382, 385, 389, 391, 397, 398, 399, 400, 401], "rergrid": 399, "resampl": [3, 101, 119, 129, 178, 253, 364, 380, 382, 383, 395], "research": 343, "resembl": 360, "reserv": 45, "reset": [280, 291, 292, 293, 294, 295, 320], "reset_index": 364, "reshap": 260, "resid": 335, "residu": [27, 159, 174, 216, 309, 311], "resisit": 206, "resist": [22, 26, 29, 107, 108, 110, 111, 112, 153, 155, 156, 158, 206, 214, 230, 231, 232, 248, 249, 348], "resistor": 399, "resolut": [232, 254, 255, 292, 293, 374, 395], "resolv": 0, "resourc": [91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 172, 173, 176, 182, 183, 334, 340, 343, 361], "respect": [0, 3, 25, 37, 127, 130, 131, 132, 133, 138, 184, 185, 220, 282, 317, 381, 382, 393, 398], "respectivli": 286, "respons": [201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 388], "rest": [348, 360, 369, 399], "restack": [0, 271], "restor": 388, "restructur": [0, 337], "result": [0, 4, 5, 8, 11, 12, 26, 45, 113, 119, 124, 159, 178, 223, 232, 251, 253, 261, 279, 280, 283, 296, 297, 305, 306, 318, 320, 337, 342, 343, 345, 362, 365, 369, 371, 374, 376, 382, 383, 388, 389, 391, 393, 397, 399, 400], "result_dir": 397, "resultdir_is_workdir": [340, 341, 342, 343, 344, 345], "resultdir_is_workspac": 0, "retain": [74, 159], "retard": [11, 12, 362], "retent": 174, "retriev": 340, "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 81, 82, 83, 84, 88, 89, 90, 92, 93, 96, 97, 98, 101, 103, 108, 110, 112, 115, 116, 117, 121, 122, 126, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 144, 145, 146, 149, 150, 151, 153, 155, 158, 166, 167, 169, 170, 171, 180, 181, 184, 185, 186, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 280, 282, 283, 285, 286, 287, 288, 289, 290, 354, 357, 358, 362, 363, 364, 382, 383, 401], "return_cbar": 286, "return_cmap_norm": 282, "return_index": 283, "reus": [354, 399], "revers": [102, 106, 159], "revert": 0, "revisit": 380, "revolv": 351, "rewet": [114, 138, 399], "rewet_factor": [138, 399], "rewet_iter": [138, 399], "rewet_lay": [138, 196, 399], "rewet_method": [138, 399], "rgb": 282, "rgba": 286, "rho": [4, 320], "rho_": 4, "rhobulk": 362, "rhs_option": [138, 399], "rich": 393, "richard": 26, "rid": 336, "ridg": [364, 400], "right": [0, 5, 6, 9, 10, 11, 12, 13, 14, 78, 85, 131, 138, 159, 184, 287, 305, 306, 335, 356, 369, 376, 391, 400], "right_boundari": 356, "right_low": 348, "right_upp": 348, "rioxarrai": [100, 105, 128, 253, 273], "rise": 216, "riv": [0, 8, 24, 51, 129, 147, 198, 220, 221, 240, 316, 399, 400, 401], "riv_alloc": 400, "riv_bot": 364, "riv_bottom": 400, "riv_cleaned_dict": 401, "riv_cond": 364, "riv_conduc": 400, "riv_conduct": 400, "riv_pkg": 401, "riv_primari": 0, "riv_stag": [364, 400], "river": [0, 8, 24, 25, 101, 127, 129, 198, 220, 228, 235, 240, 290, 316, 317, 399, 401], "riverb": [29, 147, 315, 399], "riverpackag": 8, "riverregridmethod": [0, 149], "rivssmden": 315, "rm": 333, "robin": 400, "robust": [75, 159, 389], "rock": 124, "role": [306, 402], "root": [174, 209, 334], "root_act": 174, "root_potenti": 174, "rootact": 174, "rootzon": [26, 204], "rootzone_depth": 204, "rootzone_thick": 26, "rotat": [138, 211, 253, 345, 374, 393, 399], "rotated_exampl": 253, "rotational_period": [211, 354], "roughli": [358, 399, 400], "round_ext": 0, "routin": [27, 159, 311, 402], "row": [0, 5, 9, 10, 11, 13, 14, 85, 103, 182, 232, 306, 340, 341, 343, 344, 360, 361, 363, 364, 367, 369, 380, 393, 394, 395, 399], "row_index": [232, 252], "rsc": [211, 354], "rsoil": [211, 354], "rst": 337, "rsw": [211, 354], "ru": 0, "ruff": 334, "rule": [27, 311, 393, 399], "run": [0, 24, 103, 122, 130, 131, 132, 133, 181, 208, 210, 334, 335, 336, 337, 339, 354, 358, 360, 362, 365, 369, 371, 372, 373, 374, 376, 378, 380, 389, 391, 393, 394, 397, 398, 399, 400, 401], "runfil": [0, 341, 343, 344, 345], "rung": [292, 293, 294], "runoff": [26, 214], "runoff_resist": 214, "runoff_resistance_rur": 26, "runoff_resistance_urban": 26, "runon": [26, 214, 219], "runon_resist": 214, "runon_resistance_rur": 26, "runon_resistance_urban": 26, "runtim": [122, 181], "runtimewarn": 272, "rural": 26, "rutter": 211, "sai": [218, 223, 382, 383], "salin": [78, 341, 356, 359], "salt": [211, 340, 342, 345], "saltmax": 354, "saltslop": 354, "saltwat": [346, 347, 392], "saltwaterpocket": [344, 347, 392], "same": [0, 4, 25, 27, 30, 32, 41, 42, 45, 54, 78, 82, 84, 88, 90, 93, 96, 98, 113, 115, 117, 119, 121, 127, 136, 139, 141, 144, 146, 149, 151, 159, 167, 168, 169, 171, 178, 180, 221, 241, 253, 297, 309, 311, 317, 333, 348, 351, 356, 359, 360, 362, 364, 371, 374, 376, 382, 383, 389, 391, 393, 395, 399, 400], "sampl": [0, 10, 14, 254, 255, 258, 382, 383, 393, 397, 399], "sand": 340, "sandi": 388, "sanford": 343, "sat": 138, "satisfi": [11, 27, 174, 280, 309, 311], "satur": [0, 30, 138, 165, 174, 216, 230, 231, 297, 306, 364, 388], "save": [0, 100, 104, 105, 113, 128, 138, 174, 208, 210, 223, 298, 300, 304, 306, 308, 312, 313, 314, 315, 321, 322, 334, 348, 364, 393, 397], "save_budget": [142, 298, 300, 301, 302, 303, 304, 306, 312, 313, 314, 315, 321, 356, 357, 359, 361, 362, 363, 364, 367, 369], "save_budget_idf": 308, "save_budget_tec": 308, "save_budget_vtk": 308, "save_concentr": [142, 356, 359, 362, 369], "save_concentration_idf": [308, 340, 341, 342, 343, 344, 345], "save_concentration_tec": 308, "save_concentration_vtk": 308, "save_flow": [0, 77, 79, 80, 86, 91, 94, 99, 104, 113, 118, 123, 124, 138, 143, 147, 163, 164, 165, 168, 174, 176, 182, 183, 356, 357, 359, 361, 362, 363, 364, 367, 369, 398, 399, 400, 401], "save_flux": 348, "save_head": [142, 348, 356, 357, 359, 361, 362, 363, 364, 367, 369], "save_head_idf": [308, 340, 341, 342, 343, 344, 345], "save_head_tec": 308, "save_head_vtk": 308, "save_satur": [0, 138, 399], "save_specific_discharg": [138, 363, 369, 399], "saved_st": 210, "savefig": 290, "scalar": [0, 27, 267, 268, 269, 270, 279, 382, 383], "scale": [159, 174, 216, 342], "scale_hydraulic_conduct": 216, "scale_pressure_head": 216, "scale_soil_moistur": 216, "scaling_method": [0, 159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "scalingfactor": 322, "scanopi": 354, "scap_svat": 217, "scatter": [361, 363, 400], "scene": 397, "schedul": [272, 397], "schemat": [23, 35], "schemata": 401, "scheme": [26, 74, 75, 76, 159, 291, 292, 293, 294, 295, 305, 318], "schemit": 400, "scientic": 380, "scientif": [113, 390, 391], "scipi": [364, 380, 382, 383, 391], "sconc": [297, 340, 341, 343, 344, 345], "scope": 335, "scraper": 397, "scratch": 348, "screen": [103, 122, 176, 181, 363], "screen_bottom": [0, 176, 229, 236, 356, 361, 363, 369], "screen_lay": 363, "screen_top": [0, 176, 229, 236, 356, 361, 363, 369], "script": [0, 274, 337, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 371, 372, 373, 374, 376, 378, 389, 390, 391, 393, 394, 397, 398, 399, 400, 401], "sea": [3, 290, 400], "search": [3, 7, 241, 366], "searchabl": 334, "season": [80, 86, 91, 94, 118, 143, 147, 176, 182, 211], "seawat": [0, 4, 309, 310, 316, 320, 356, 380, 390], "seawat_get_runfil": 0, "seawat_writ": 0, "seawat_write_runfil": 0, "seawatmodel": [0, 340, 341, 342, 343, 344, 345, 398], "second": [0, 51, 75, 80, 85, 86, 91, 94, 118, 132, 138, 143, 147, 159, 176, 182, 184, 185, 282, 287, 289, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 371, 372, 373, 374, 376, 378, 388, 393, 394, 397, 398, 399, 400, 401], "second_result": 223, "second_sourc": 223, "secondli": [0, 279, 389, 402], "secret": 335, "section": [0, 9, 10, 13, 14, 21, 257, 258, 282, 287, 289, 292, 293, 322, 340, 341, 342, 343, 345, 364, 376, 377, 386, 390, 391, 393, 397, 400, 402], "securityprotocol": 335, "sediment": [26, 229], "see": [0, 21, 27, 41, 44, 47, 54, 55, 73, 77, 87, 95, 135, 148, 177, 219, 251, 277, 280, 306, 309, 311, 333, 334, 343, 345, 356, 357, 359, 360, 361, 362, 364, 366, 372, 374, 382, 383, 388, 389, 391, 393, 397, 398, 400, 401], "seem": [395, 397, 401], "seen": [340, 399], "segment": [0, 91, 399], "sel": [0, 3, 5, 131, 184, 261, 348, 357, 359, 360, 361, 363, 364, 365, 367, 376, 380, 382, 383, 384, 385, 393, 397, 399, 400], "select": [0, 5, 11, 27, 45, 119, 126, 178, 225, 226, 227, 228, 232, 238, 240, 282, 292, 293, 294, 322, 335, 339, 348, 357, 359, 364, 366, 371, 376, 380, 390, 393, 395, 397, 400, 402], "select_point": [382, 385], "self": [127, 338, 390], "semant": [0, 339], "semi": [3, 22], "send": [25, 127, 317, 334], "sens": 389, "sensit": 216, "sentenc": 391, "sep": [47, 309, 310], "separ": [0, 11, 41, 42, 54, 100, 101, 105, 113, 128, 129, 142, 208, 273, 282, 356, 363, 364, 365, 380, 382, 385, 388, 399, 401], "seper": [211, 391], "sequenc": [78, 232, 241, 251, 269, 270], "sequenti": 138, "seri": [0, 3, 80, 91, 143, 255, 382, 383, 385, 390, 392, 402, 403], "serial": 399, "serv": [45, 159, 223, 292, 293, 296], "server": [333, 335], "servic": 389, "servicepointmanag": 335, "session": 333, "set": [0, 3, 7, 25, 26, 27, 29, 33, 42, 50, 59, 76, 77, 78, 80, 83, 85, 86, 89, 91, 92, 94, 97, 101, 102, 103, 106, 116, 118, 119, 122, 127, 129, 134, 135, 138, 140, 142, 143, 145, 147, 150, 159, 164, 166, 169, 170, 176, 178, 181, 182, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 211, 214, 216, 219, 220, 221, 225, 226, 227, 228, 229, 233, 234, 235, 236, 261, 262, 273, 277, 280, 282, 283, 286, 291, 292, 293, 294, 295, 296, 297, 299, 305, 309, 310, 311, 315, 317, 318, 320, 322, 333, 335, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 363, 367, 369, 371, 388, 390, 399, 400, 401, 402], "set_aspect": [357, 359], "set_axis_off": 397, "set_index": [45, 354, 399], "set_opt": 399, "set_repeat_stress": [0, 80, 86, 91, 94, 118, 143, 147, 176, 182], "set_text": 399, "set_titl": [365, 400, 401], "set_ylabel": 399, "setnodatahead": 0, "setup": [0, 56, 59, 280, 281, 335, 340, 344, 356, 357, 359, 361, 362, 363, 367], "setuptool": 0, "seven": 364, "sever": [26, 61, 68, 70, 72, 82, 84, 88, 90, 93, 96, 98, 115, 117, 121, 139, 141, 144, 146, 149, 151, 159, 167, 169, 171, 180, 335, 389], "sg": 258, "sh": 335, "shallow": [26, 216], "shape": [0, 10, 14, 22, 39, 136, 152, 154, 156, 242, 248, 249, 251, 253, 258, 285, 348, 356, 357, 358, 360, 361, 362, 363, 367, 369, 372, 373, 391, 393, 397, 399, 400], "shape_area": 394, "shape_leng": 394, "shapefil": [5, 232, 242, 254, 255, 258, 370, 372, 374, 375, 392, 394], "share": [0, 74, 297, 389, 395], "sharei": [399, 400], "sharex": [399, 400], "sharp": 362, "shd": [31, 81, 82, 343, 348], "shead": 80, "sheet": 22, "shell": [389, 391], "ship": 335, "shorter": [0, 25, 127, 261, 317, 334, 399], "shortli": [356, 357, 359, 361, 364, 367], "should": [0, 5, 7, 8, 15, 22, 25, 26, 27, 33, 59, 78, 79, 80, 81, 82, 85, 86, 88, 91, 94, 96, 101, 113, 114, 115, 118, 123, 124, 127, 129, 136, 137, 138, 139, 142, 143, 147, 149, 159, 164, 165, 168, 169, 172, 173, 174, 175, 176, 182, 183, 211, 214, 223, 224, 229, 247, 252, 253, 255, 281, 283, 286, 291, 296, 298, 300, 304, 305, 308, 309, 310, 311, 315, 317, 318, 321, 333, 335, 339, 356, 360, 362, 363, 364, 365, 371, 391, 393, 397, 398, 399, 401], "show": [44, 55, 253, 360, 362, 364, 365, 369, 371, 376, 378, 388, 397, 400], "shown": [369, 393, 400], "shp": [5, 45, 232, 255, 258, 382, 383, 385, 394], "shx": 394, "side": [5, 85, 138, 159, 305, 343, 400, 401], "sign": 159, "signifi": 0, "signific": [0, 359], "significantli": [0, 159, 242, 305, 380], "silenc": [364, 367, 399], "silent": 0, "sim_concentr": 359, "sim_head": 359, "sim_w": 380, "simgro": [26, 214, 219], "similar": [0, 23, 26, 84, 90, 93, 98, 117, 121, 136, 141, 146, 151, 159, 167, 171, 180, 222, 223, 224, 306, 362, 365, 372, 382, 383, 385, 389, 399], "similarli": 0, "simpl": [0, 5, 74, 159, 340, 341, 342, 343, 345, 348, 356, 357, 359, 360, 361, 362, 367, 397, 400], "simplest": [378, 400], "simpli": [0, 258, 334, 389, 391, 397], "simplif": 26, "simplifi": [0, 364, 389], "simpson": 340, "simtim": 359, "simul": [0, 17, 18, 20, 25, 26, 29, 31, 36, 77, 78, 80, 81, 82, 86, 88, 91, 94, 96, 99, 100, 101, 104, 105, 113, 114, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 144, 147, 149, 159, 164, 169, 172, 173, 174, 176, 178, 182, 183, 184, 185, 292, 293, 296, 297, 298, 300, 304, 305, 306, 309, 310, 312, 313, 314, 315, 317, 318, 320, 321, 356, 357, 358, 360, 361, 362, 363, 365, 367, 369, 380, 388, 393, 398, 399, 400], "simulate_groundwater_seepag": 174, "simulate_seepag": 174, "simulation_bc": 398, "simulation_start_tim": [0, 130, 131, 132, 133, 184, 185], "simulationallocationopt": [0, 101, 129], "simulationdistributingopt": [0, 101, 129], "sinc": [0, 41, 45, 54, 232, 292, 293, 340, 341, 342, 343, 345, 356, 359, 364, 372, 382, 385, 389, 393, 397, 399, 400], "singl": [0, 5, 25, 27, 41, 42, 44, 45, 47, 48, 49, 51, 54, 55, 78, 80, 82, 91, 104, 113, 118, 123, 127, 138, 143, 147, 152, 154, 156, 159, 176, 182, 183, 186, 223, 253, 297, 317, 356, 361, 362, 363, 364, 367, 388, 389, 393, 395, 397], "single_valu": [382, 383], "singlelayerhorizontalflowbarrierhydrauliccharacterist": 0, "singlelayerhorizontalflowbarriermultipli": 0, "singlelayerhorizontalflowbarrierresist": 0, "sink": [0, 8, 12, 13, 14, 56, 164, 292, 293, 294, 297, 307, 319, 356, 359], "sink_nparticl": [292, 294], "sink_particle_plac": [292, 294], "site": 394, "situat": [33, 296, 318, 351, 401], "six": 364, "size": [0, 80, 86, 91, 94, 118, 137, 143, 147, 159, 176, 182, 232, 254, 255, 267, 268, 269, 270, 309, 310, 348, 354, 356, 357, 358, 361, 364, 367, 376, 378, 382, 383, 393, 398, 399, 400, 401, 402], "sizeabl": 362, "skip": [0, 108, 110, 112, 153, 155, 158, 354, 376, 382, 383], "slice": [0, 5, 126, 257, 258, 283, 287, 364, 376, 382, 383, 393], "slightli": [360, 374, 382, 385, 388], "slip": 401, "slope": [26, 78, 320, 356, 359], "slow": [0, 11, 12, 159, 389, 397, 402], "small": [11, 12, 159, 232, 292, 293, 294, 357, 369, 382, 383, 388, 401], "small_align": [382, 383], "smaller": [27, 137, 159, 247, 282, 292, 293, 311, 357, 391, 397], "smallest": [27, 311], "smassrat": 123, "smear": 362, "smoothli": 174, "snakemak": 390, "snap": 0, "snap_to_grid": 0, "snippet": [0, 338, 399], "snow": 26, "so": [0, 12, 13, 14, 26, 55, 82, 119, 178, 211, 232, 238, 240, 253, 257, 258, 276, 286, 287, 334, 335, 338, 342, 343, 345, 354, 357, 359, 364, 365, 369, 371, 372, 380, 382, 383, 388, 389, 391, 393, 397, 398, 399, 400, 401], "soft": 388, "softwar": [0, 66, 91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 172, 173, 176, 182, 183, 334, 337, 380, 389, 394], "soil": [26, 174, 201, 209, 212, 214, 216, 219, 388], "soil_cov": 201, "soil_moisture_factor": 26, "soil_physical_unit": [26, 204], "solut": [0, 27, 41, 54, 74, 104, 113, 114, 123, 124, 172, 292, 297, 305, 311, 318, 320, 340, 343, 345, 356, 357, 359, 361, 363, 364, 366, 367, 368, 369, 388, 389, 392, 397], "solutionpresetcomplex": [129, 159], "solutionpresetmoder": [129, 159], "solutionpresetsimpl": 159, "solv": [0, 27, 159, 291, 293, 294, 299, 305, 309, 310, 311, 318, 356, 359, 364, 365, 388, 389], "solver": [27, 129, 134, 159, 247, 299, 305, 306, 309, 310, 311, 318, 322, 356, 357, 361, 362, 363, 367], "some": [0, 27, 66, 119, 159, 178, 216, 223, 233, 234, 235, 236, 255, 271, 280, 287, 299, 309, 310, 311, 334, 336, 348, 354, 357, 359, 362, 363, 364, 365, 369, 371, 376, 380, 389, 393, 397, 398, 399, 400, 401], "someth": [26, 286, 363, 382, 383], "sometim": [333, 351, 389], "somewhat": [23, 337, 360], "sophist": 138, "sorb": [113, 124], "sorption": [11, 12, 113, 124, 305, 309, 310, 362], "sort": [0, 44, 55], "sound": 216, "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 63, 64, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 94, 95, 96, 99, 101, 104, 107, 109, 111, 113, 114, 115, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 148, 149, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 382, 383, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "source_cells": 223, "sourcesinkmix": [0, 356, 359, 362, 369], "south": 21, "sp2": [124, 195, 399], "space": [0, 74, 113, 267, 268, 269, 270, 320, 363, 380, 388, 389, 391, 393, 394], "span": 220, "spandasindexpandasindex": 400, "spars": 232, "spatial": [0, 45, 100, 105, 128, 252, 255, 275, 278, 362, 381, 382, 383, 391, 394, 395, 399], "spatial_refer": [242, 322], "speci": [0, 43, 78, 104, 130, 133, 164, 297, 320, 356, 359, 362, 369, 390], "special": [26, 84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180, 208, 280, 337, 382, 383, 399], "species_a": 362, "species_b": 362, "species_c": 362, "species_d": 362, "species_l": [0, 130, 133, 362], "speciesnam": 362, "specif": [0, 5, 12, 26, 30, 32, 39, 80, 81, 82, 88, 96, 115, 129, 138, 139, 144, 149, 159, 165, 168, 169, 216, 219, 232, 253, 297, 306, 313, 333, 351, 364, 369, 389, 391, 393, 394, 395, 402], "specifi": [0, 16, 17, 23, 25, 26, 27, 29, 31, 34, 35, 36, 39, 41, 44, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 82, 84, 85, 86, 90, 91, 93, 94, 98, 99, 104, 107, 109, 111, 113, 114, 117, 118, 119, 121, 123, 124, 127, 129, 138, 141, 142, 143, 146, 147, 151, 152, 154, 156, 159, 164, 165, 167, 168, 171, 172, 174, 176, 178, 180, 182, 183, 201, 211, 213, 218, 232, 253, 260, 262, 263, 289, 291, 292, 293, 294, 295, 296, 297, 298, 306, 308, 312, 313, 314, 315, 317, 318, 320, 321, 340, 341, 343, 344, 345, 348, 359, 360, 364, 380, 393, 399], "specific_storag": [30, 32, 165, 168, 199, 306, 340, 341, 342, 343, 344, 345, 356, 357, 359, 361, 362, 363, 364, 367, 369, 399], "specific_yield": [0, 165, 168, 199, 200, 306, 356, 357, 359, 361, 362, 363, 364, 367, 369, 399], "specificstorag": [0, 199, 356, 357, 359, 361, 362, 363, 364, 367, 369, 399], "specificstorageregridmethod": 0, "speed": [0, 82, 84, 88, 90, 93, 96, 98, 115, 117, 121, 139, 141, 144, 146, 149, 151, 167, 169, 171, 180, 283, 397], "sphinx": [336, 337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "spin": 333, "split": [0, 5, 44, 55, 164, 292, 293, 294, 358, 365, 369, 393, 395], "split_conc": 369, "split_modeldir": [365, 369], "split_simul": [365, 369], "splitter": 337, "spread": 85, "spring": [3, 364], "sprinkl": [0, 26, 211, 219, 322], "sprinkling_capac": 26, "sprinkling_lay": 26, "sprinkling_typ": 26, "spyder": 337, "squar": [174, 248, 393], "squeez": 253, "src": [123, 286, 378], "src_cr": [253, 374], "src_nodata": 253, "src_transform": 253, "ss": [32, 165, 168, 186, 306, 364], "ssm": [0, 298, 304, 307, 319, 356, 359, 362, 369], "ssor": 305, "ssume": 253, "stabil": [11, 12, 159, 291, 292, 293, 294, 295, 318, 399], "stability_constraint_advect": 322, "stability_constraint_wel": 322, "stabl": [77, 251, 348], "stack": [271, 357, 393, 399], "stacked_y_x": [382, 383], "stackoverflow": 338, "stage": [0, 29, 51, 101, 119, 129, 147, 174, 178, 198, 220, 221, 225, 228, 235, 240, 315, 348, 364, 399, 400, 401], "stage_above_riv_bot": 401, "stage_bottom": 400, "stage_lin": 400, "stage_to_riv_bot": [220, 228, 240, 400], "stage_to_riv_bot_drn_abov": [220, 400], "stagefil": 367, "stai": 169, "stamen": [0, 286], "standard": [299, 318, 356, 382, 385, 389, 390, 399], "start": [0, 9, 10, 13, 25, 31, 42, 50, 58, 66, 80, 81, 82, 101, 114, 127, 129, 138, 186, 194, 208, 211, 220, 221, 257, 280, 287, 296, 297, 298, 306, 317, 336, 337, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 362, 363, 366, 367, 369, 371, 372, 374, 376, 380, 389, 393, 398, 399, 400, 401], "start_dat": 356, "start_hour": 0, "start_level": [63, 64], "start_minut": 0, "start_sprinkling_season": [211, 354], "starting_concentr": [297, 340, 341, 342, 343, 344, 345], "starting_head": [31, 296, 340, 341, 342, 343, 344, 345, 348, 364], "starting_head_as_confined_thick": [138, 399], "starting_heads_larg": 371, "startinghead": 348, "starttim": 364, "starttime_steadi": 364, "stat": [382, 383], "state": [0, 13, 14, 26, 27, 31, 78, 114, 119, 159, 165, 168, 178, 208, 210, 296, 309, 310, 318, 320, 357, 362, 363, 369, 389, 391], "statement": [0, 401], "states_for_boundari": [0, 126, 357], "static": [47, 101, 129, 164, 348], "staticgridanimation3d": [0, 280, 322], "station": 26, "statist": 402, "statu": [172, 401], "stdout": 56, "steadi": [0, 13, 14, 26, 27, 31, 114, 119, 159, 165, 168, 178, 296, 318, 357, 362, 363, 369], "steadyst": 114, "steamlin": 376, "steep": 26, "step": [27, 77, 79, 80, 86, 91, 94, 99, 113, 118, 123, 142, 143, 147, 159, 164, 173, 174, 176, 182, 183, 232, 291, 292, 293, 294, 295, 311, 318, 320, 335, 336, 339, 354, 356, 357, 359, 360, 361, 363, 364, 367, 369, 380, 382, 383, 397, 399], "stepsiz": [297, 318], "stiff": 388, "still": [0, 101, 119, 178, 297, 371, 398, 401], "stitl": 280, "sto": [165, 168, 199, 200, 348, 356, 357, 359, 361, 362, 363, 367, 369], "stop": [27, 159, 309, 311, 320, 357, 389], "stor": [32, 168], "storag": [0, 30, 32, 113, 124, 165, 168, 186, 206, 306, 356, 359, 367, 369, 389, 397, 399], "storage_coeffici": [32, 168, 169, 200, 399], "storagecoeffici": [0, 200, 348, 388, 399], "storagecoefficientregridmethod": [0, 169], "store": [0, 47, 49, 82, 84, 88, 90, 93, 96, 98, 100, 105, 115, 117, 119, 121, 128, 130, 131, 132, 133, 139, 141, 144, 146, 149, 151, 167, 169, 171, 178, 180, 184, 185, 186, 276, 296, 335, 337, 354, 357, 360, 362, 364, 380, 389, 391, 393, 394, 395, 397, 400], "str": [22, 24, 25, 26, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 61, 68, 70, 72, 74, 75, 76, 78, 81, 82, 84, 88, 90, 93, 96, 98, 99, 100, 101, 103, 104, 105, 113, 115, 117, 119, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 144, 146, 149, 151, 157, 159, 163, 164, 167, 169, 171, 174, 178, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 210, 212, 222, 223, 224, 232, 233, 234, 235, 241, 242, 251, 252, 254, 255, 261, 262, 265, 268, 270, 276, 282, 286, 288, 290, 316, 317, 320, 321, 348, 362], "straight": [5, 26, 389], "straightforward": [337, 360, 369, 397], "stream": [13, 14, 59, 289], "streamfunct": [0, 13, 14, 322, 376], "streamfunction_lin": [0, 289, 322, 376], "streamfunction_linestr": [0, 289, 322], "streamhandl": 56, "streamlin": [0, 377, 379, 392], "strength": 19, "stress": [17, 25, 27, 77, 79, 80, 86, 91, 94, 99, 101, 104, 114, 118, 123, 127, 129, 137, 142, 143, 147, 159, 164, 173, 174, 176, 182, 183, 211, 219, 298, 306, 311, 317, 318, 348, 356, 359, 364, 390, 398], "strict": [103, 122, 159, 181], "strict_well_valid": [0, 103, 122, 181], "stricter": 309, "strictli": [4, 85, 138], "string": [0, 39, 41, 42, 44, 47, 49, 54, 55, 78, 103, 118, 130, 132, 133, 142, 176, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 211, 253, 276, 290, 291, 293, 294], "strt": [114, 138, 296], "structer": 172, "structur": [0, 51, 100, 105, 113, 123, 128, 182, 277, 351, 356, 360, 361, 367, 390, 391, 395, 396, 402], "structureddiscret": [0, 81, 82, 87, 88, 95, 96, 144, 148, 149, 177, 188, 356, 361, 362, 363, 364, 367, 369, 399, 401], "stuck": 159, "studi": [27, 299, 311, 364, 371, 382, 385], "style": 282, "subclass": 101, "subdirectori": [100, 105], "subdivid": 229, "subdivis": 229, "subdomain": [0, 43, 309, 310, 358], "subject": [338, 386], "submit": [297, 338], "submodel": [0, 358, 365], "submodel_label": [136, 358, 365], "subplot": [286, 290, 340, 341, 342, 343, 344, 345, 357, 358, 359, 360, 364, 365, 369, 371, 372, 373, 374, 376, 397, 399, 400], "subprocess": 135, "subsequ": [25, 80, 127, 208, 317, 318], "subset": [0, 400], "subsoil": 26, "substract": 3, "subtl": 401, "subtract": 348, "subunit": [204, 206, 214, 216, 217], "succe": 389, "succesfulli": [0, 340, 341, 342, 343, 344, 345, 401], "success": [0, 7, 173, 318], "suction": 388, "suddenli": 389, "suffer": 0, "suffici": [27, 159, 292, 293, 311], "suffix": 0, "suggest": [0, 159, 299, 334], "suit": [334, 394], "suitabl": [159, 356, 395], "sum": [0, 5, 138, 174, 218, 219, 222, 223, 224, 232, 309, 310, 348, 393], "summari": [113, 159, 160, 161, 162, 322, 356, 357, 359, 361, 362, 363, 364, 367, 369], "summed_conduct": 232, "summer": [0, 50, 101, 129, 348], "sunni": 335, "sup": 356, "suppli": [3, 26, 282, 348], "support": [0, 44, 54, 55, 56, 79, 80, 84, 86, 90, 91, 93, 94, 98, 99, 101, 113, 117, 118, 119, 121, 123, 129, 132, 141, 142, 143, 146, 147, 151, 167, 171, 174, 176, 178, 180, 182, 183, 184, 185, 211, 214, 223, 224, 232, 242, 254, 255, 261, 278, 280, 354, 359, 364, 367, 390, 391, 394, 395, 396, 397, 398, 399, 400], "supportsindex": [232, 251], "sure": [41, 47, 54, 130, 131, 132, 135, 223, 224, 335, 364, 382, 383], "surfac": [3, 5, 26, 29, 33, 91, 143, 159, 174, 192, 204, 214, 217, 219, 230, 236, 255, 296, 301, 302, 303, 348, 364, 378, 393, 399], "surface_depression_depth": 174, "surface_elev": [26, 204], "surface_level": [255, 378], "surfacelevel": 3, "surfacewat": 217, "surflevel": 3, "surpress": 76, "surprisingli": 389, "surround": 229, "suspici": 401, "svat": [26, 202, 203, 204, 205, 206, 214, 215, 217], "svat2etrefgrid": 203, "svat2precgrid": 215, "svat2swnr_roff": 214, "switch": 0, "sy": [0, 32, 56, 165, 168, 186, 306, 364], "symmetr": 159, "synchon": 399, "synchron": 399, "synonym": 388, "syntax": 337, "synthet": [0, 356, 360, 361, 367], "sys1": 0, "system": [0, 19, 28, 50, 66, 113, 119, 178, 230, 231, 253, 297, 335, 348, 364, 366, 369, 374, 389, 391, 394, 400], "t": [11, 12, 23, 35, 58, 63, 64, 66, 70, 242, 280, 309, 310, 334, 335, 342, 348, 359, 362, 389, 391, 393, 400], "t3h": 211, "t3l": 211, "tab": [339, 366], "tab20": 400, "tabl": [26, 27, 33, 204, 216, 232, 252, 296, 320, 354, 388, 394, 395, 399], "tabular": [364, 394, 395], "tact": 219, "tag": [333, 335, 339], "tail": 399, "take": [0, 36, 45, 55, 223, 224, 257, 258, 261, 280, 321, 334, 348, 356, 382, 383, 393, 397, 399, 400], "taken": [0, 3, 253, 258, 362, 397, 399], "target": [0, 374, 399], "target_di": [81, 82, 88, 96, 144, 149], "target_grid": [84, 90, 93, 98, 115, 117, 121, 134, 139, 141, 146, 151, 167, 169, 171, 180, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 360, 399], "target_npf": [88, 96, 149], "task": [297, 333, 380, 397], "tdbg": 208, "tdi": 173, "teamciti": [335, 339], "tec": 0, "tech": 26, "technic": 389, "techniqu": 361, "tecplot": [0, 308], "tediou": 391, "tell": [348, 359], "temp_dir": [372, 373, 374], "tempdir": [378, 393, 394], "temperatur": [320, 399], "templat": [0, 242, 364], "template_data": 398, "tempor": 173, "temporari": [0, 354, 393], "temporarili": [45, 389, 397], "temporary_directori": [340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 361, 362, 364, 365, 367, 369, 372, 373, 374, 378, 393, 394, 397, 399, 401], "tend": 44, "tensor": [21, 138, 305, 399], "term": [5, 11, 21, 77, 78, 79, 80, 83, 85, 86, 89, 91, 92, 94, 97, 99, 104, 113, 116, 118, 123, 124, 138, 140, 143, 145, 147, 150, 159, 164, 165, 166, 168, 170, 174, 176, 182, 183, 231, 253, 291, 293, 294, 297, 299, 305, 306, 310, 318, 364, 388, 389], "termin": [113, 124, 159, 318, 320], "tesselate_centroidal_voronoi": 359, "test": [0, 293, 333, 387, 399], "text": [0, 38, 113, 119, 137, 138, 178, 186, 337, 354, 365, 376, 389, 399, 401], "textfil": [119, 178, 389, 391], "than": [0, 4, 27, 29, 32, 41, 42, 54, 75, 114, 118, 119, 138, 159, 165, 168, 169, 174, 176, 178, 203, 215, 223, 232, 236, 242, 247, 279, 281, 282, 286, 291, 292, 293, 294, 295, 299, 305, 306, 309, 310, 311, 318, 320, 337, 351, 362, 364, 371, 388, 389, 391, 393, 395, 397, 399, 401], "thank": 380, "thei": [0, 41, 42, 45, 50, 54, 81, 132, 159, 169, 184, 185, 223, 224, 229, 272, 312, 313, 314, 333, 337, 357, 364, 382, 385, 388, 389, 391, 393, 394, 397, 399, 402], "them": [0, 44, 45, 55, 223, 224, 334, 335, 337, 357, 362, 364, 369, 372, 376, 389, 391, 393, 397], "theme": 0, "theoret": [340, 389], "theori": [26, 340], "thereaft": 335, "therebi": [5, 11, 12], "therefor": [0, 102, 106, 159, 333, 359, 362, 364, 389, 398, 399, 400, 401, 402], "thermodynam": 399, "theta": [12, 159, 174], "theta_init": 174, "theta_r": 174, "theta_sat": 174, "thetaim": 113, "thi": [0, 4, 5, 9, 10, 11, 21, 23, 25, 26, 27, 29, 30, 32, 34, 35, 37, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 61, 68, 70, 72, 73, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 106, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 134, 135, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 158, 159, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 225, 226, 227, 228, 232, 233, 234, 235, 236, 238, 240, 241, 242, 251, 253, 257, 258, 260, 261, 262, 263, 274, 276, 279, 283, 286, 292, 293, 294, 296, 299, 306, 309, 310, 311, 312, 313, 314, 317, 318, 320, 322, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 348, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 374, 376, 380, 381, 382, 383, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "thick": [0, 26, 32, 118, 119, 138, 168, 176, 178, 221, 229, 230, 231, 236, 296, 297, 306, 357, 363, 364, 369, 388, 393, 400], "thicker": 400, "thickstrt": 138, "thin": 287, "thing": [77, 119, 178, 216, 389, 393, 400], "think": 401, "thinner": 236, "third": [85, 138, 159, 360], "thirdli": 389, "thirteen": 364, "thkmin": 297, "those": [242, 297, 318, 372, 382, 385, 399], "though": [138, 309, 310, 388, 397, 398], "thought": 397, "thousand": 393, "three": [0, 3, 5, 9, 10, 11, 13, 14, 119, 120, 138, 159, 178, 179, 216, 223, 257, 258, 283, 287, 292, 293, 345, 348, 361, 364, 369, 374, 382, 383, 393, 394, 398], "threedimension": [9, 10], "thresh": [138, 306], "threshold": [7, 18, 29, 138, 300, 315], "threshold_sprinkl": [211, 354], "threw": 0, "through": [0, 5, 9, 10, 13, 14, 119, 172, 174, 178, 257, 258, 286, 297, 306, 348, 359, 376, 401], "throughout": [169, 296, 297, 361, 363, 367], "throw": [0, 103, 122, 137, 181, 348], "thrown": 0, "thu": [29, 130, 133, 165, 168, 221, 291, 292, 293, 294, 295, 306, 364], "thumb": [27, 311], "tidi": [41, 54, 393], "tie": 241, "tif": [54, 55, 253, 255, 364, 393], "tight": [290, 400], "tight_layout": [399, 400], "tightli": 364, "tile": [0, 348], "tileprovid": 286, "tim": 348, "time": [0, 3, 5, 17, 19, 25, 26, 27, 28, 31, 36, 41, 42, 43, 44, 50, 51, 54, 55, 77, 79, 80, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 99, 101, 113, 114, 115, 117, 118, 119, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 137, 139, 141, 142, 143, 144, 146, 147, 149, 151, 159, 164, 165, 167, 169, 171, 173, 174, 176, 178, 180, 182, 183, 184, 185, 208, 211, 213, 218, 223, 238, 240, 241, 261, 268, 270, 276, 280, 281, 290, 296, 297, 298, 309, 311, 312, 313, 314, 317, 318, 319, 321, 334, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 369, 371, 372, 373, 374, 376, 378, 380, 389, 390, 393, 394, 397, 399, 400, 401, 402], "time_discret": [0, 127, 348, 356, 359, 362, 369, 398], "time_max": [88, 96, 126, 149, 399], "time_min": [88, 96, 126, 149], "time_unit": [0, 130, 131, 132, 133, 184, 185], "timedelta": [3, 132, 184, 185, 364], "timedelta64": [348, 364, 367, 399], "timediscret": [127, 317, 398], "timemap": 348, "timeoutputcontrol": 322, "timepandasindexpandasindex": [348, 357, 364, 398, 399], "timeri": 395, "times_rainfal": 367, "times_sto": 364, "timeseri": [0, 45, 47, 49, 91, 101, 119, 129, 174, 178, 364, 381, 392, 403], "timespan": 0, "timestamp": [36, 41, 54, 119, 178, 268, 270, 280, 321], "timestap": [11, 12], "timestep": [0, 8, 11, 12, 127, 130, 131, 132, 133, 184, 185, 218, 320, 348, 357, 359, 364, 393, 398, 399], "timestep_dur": [173, 318, 398], "timestep_multipli": [173, 318, 398], "timestr": 0, "timevaryingconstantconcentr": 0, "tip": 371, "titl": [280, 376, 399], "titu": 335, "tmp_dir": 401, "tmp_path": 358, "tmpdir": [365, 399, 401], "to_cr": 374, "to_csv": [309, 310], "to_datafram": [364, 382, 383, 385], "to_datetim": [322, 356, 362, 364, 369, 398], "to_fil": 394, "to_list": 371, "to_mf6_pkg": [0, 119, 120, 178, 179], "to_netcdf": [0, 380, 381, 382, 393], "to_timedelta": [356, 362, 364, 369], "to_ugrid2d": [0, 322, 381, 382], "todo": 174, "togeth": [357, 371, 390, 402], "token": 0, "toler": [3, 159], "toml": [0, 100, 105, 128, 333, 339, 391], "tomli": 0, "tonerlit": 286, "too": 402, "tool": [337, 364, 371, 386, 390, 395], "toolset": 390, "toolz": 380, "top": [0, 6, 7, 8, 11, 12, 19, 23, 28, 35, 51, 108, 110, 112, 122, 138, 153, 155, 158, 165, 168, 172, 174, 175, 176, 181, 188, 221, 224, 225, 226, 228, 229, 230, 231, 236, 237, 238, 239, 240, 248, 249, 282, 283, 287, 289, 296, 312, 313, 314, 335, 340, 341, 342, 343, 344, 345, 348, 356, 357, 358, 359, 361, 362, 363, 364, 367, 369, 376, 380, 390, 391, 393, 399, 400, 402], "top1d": [340, 341, 342, 343, 344, 345], "top_bot": [6, 8, 11, 12, 376], "top_elev": [19, 367], "top_sourc": 0, "topic": [50, 51], "topographi": 26, "topologi": [136, 273, 277, 357, 382, 385, 393], "topsystem": [0, 88, 96, 129, 149, 220, 225, 226, 227, 228, 392, 402, 403], "total": [26, 27, 113, 159, 219, 292, 293, 295, 297, 340, 341, 342, 343, 344, 345, 347, 348, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 392, 393, 394, 397, 398, 399, 400, 401, 403], "total_flux": 356, "total_kd": [382, 383], "touch": 242, "tov": 371, "toward": [138, 292, 293, 294, 306, 357, 364], "tox": 0, "tpt_1": 369, "tpt_a": 362, "tpt_b": 362, "tpt_c": 362, "tpt_d": 362, "tpt_model": [362, 369], "tqdm": 380, "track": [291, 292, 293, 294, 295, 318], "tradit": 393, "tradition": 340, "transfer": 113, "transform": [0, 3, 119, 178, 224, 322, 374], "transient": [0, 27, 36, 47, 118, 159, 165, 168, 169, 176, 268, 270, 280, 281, 306, 318, 321, 356, 357, 359, 361, 362, 363, 367, 369], "transient_da": [382, 384], "transient_uda": [382, 385], "translat": 389, "transluc": 286, "transmiss": [122, 181, 221, 229, 306, 364, 388, 393, 400], "transmissivity_l": 393, "transmissivity_l1": 393, "transmissivity_l10": 393, "transmissivity_l11": 393, "transmissivity_l12": 393, "transmissivity_l13": 393, "transmissivity_l2": 393, "transmissivity_l3": 393, "transmissivity_l4": 393, "transmissivity_l5": 393, "transmissivity_l6": 393, "transmissivity_l7": 393, "transmissivity_l8": 393, "transmissivity_l9": 393, "transpar": [282, 286, 371], "transpir": [211, 219], "transport": [0, 74, 77, 80, 86, 91, 94, 104, 118, 130, 133, 137, 143, 147, 164, 176, 182, 183, 291, 292, 293, 294, 295, 297, 305, 310, 318, 320, 322, 340, 343, 345, 356, 366, 368, 390, 392], "transport_2d": [368, 369, 392], "transport_initial_timestep": 318, "transport_model": 359, "transport_solv": [356, 359, 362, 369], "transport_timestep_multipli": 318, "transportmodel": 362, "transpos": 364, "transsmis": 393, "transvers": [85, 299], "transversal_horizont": 189, "transversal_horizontal1": [85, 189, 356, 359, 362, 369, 399], "transversal_horizontal2": [85, 189, 399], "transversal_vert": [85, 189, 359, 399], "transverse_horizontal1": 85, "transverse_horizontal2": 85, "tranverse_vert": 85, "trapezoid": 249, "treat": [0, 25, 119, 127, 138, 178, 297, 317], "treatment": 305, "trend": [201, 348], "trend_da": 348, "treshold": 7, "tri": [37, 55, 358], "triangl": [277, 282, 286, 382, 385, 400], "trianglemesh": [382, 385], "triangular": [357, 359], "trick": 261, "tricontourset": 358, "tripl": 113, "troublesom": 401, "trpt": 299, "trpv": 299, "true": [0, 3, 5, 8, 45, 46, 56, 59, 77, 78, 79, 80, 85, 86, 91, 94, 100, 103, 104, 105, 113, 114, 118, 122, 123, 124, 127, 128, 131, 134, 137, 138, 142, 143, 147, 159, 163, 164, 165, 168, 172, 173, 174, 175, 176, 181, 182, 183, 184, 219, 229, 242, 253, 264, 279, 282, 283, 284, 286, 300, 305, 309, 310, 318, 320, 340, 341, 342, 343, 344, 345, 356, 357, 359, 361, 362, 363, 364, 367, 369, 382, 383, 399, 400], "truncat": 26, "try": [43, 282, 286, 333, 334, 389, 397], "tslngh": 318, "tsmult": [173, 318], "ttsmult": 318, "tupl": [6, 50, 84, 90, 93, 98, 117, 121, 141, 146, 149, 151, 167, 171, 180, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 228, 232, 251, 266, 275, 282, 286, 290], "turn": [0, 47, 232, 390, 393, 394], "tutori": 334, "tvd": [75, 295, 318], "tweak": 399, "twice": [292, 293], "two": [26, 39, 44, 45, 55, 76, 78, 119, 120, 138, 178, 179, 218, 223, 244, 247, 277, 279, 282, 283, 286, 287, 289, 292, 293, 320, 348, 356, 357, 364, 369, 376, 380, 382, 383, 388, 389, 391, 394, 397, 398, 400], "twodimension": [292, 293], "twri": [0, 360, 363, 366, 367, 368, 369, 392, 397], "twri_output": 397, "txt": [45, 46, 47, 48, 49], "type": [0, 3, 4, 6, 12, 13, 14, 24, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 58, 66, 81, 82, 83, 84, 88, 89, 90, 92, 93, 96, 97, 98, 101, 103, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 139, 140, 141, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 166, 167, 169, 170, 171, 172, 180, 181, 184, 185, 186, 201, 204, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 297, 305, 306, 316, 357, 364, 366, 369, 393, 394, 397, 399, 400], "typeerror": [0, 274], "typic": [26, 27, 159, 241, 311, 364, 389, 393, 394, 395, 397], "typo": 0, "u": [0, 9, 10, 287, 335, 357, 364, 371, 376, 380, 393, 397], "ucn": 142, "uda": [381, 382, 385], "uda_md": [381, 382], "ugrid": [0, 100, 105, 128, 273, 277, 357, 358, 359, 363, 385], "ugrid2d": [357, 359, 382, 385], "ugrid2d_dataset": 277, "ugrid_d": [381, 382], "ugriddataarrai": [0, 81, 82, 83, 84, 88, 89, 90, 92, 93, 96, 97, 98, 101, 102, 106, 108, 110, 112, 115, 116, 117, 119, 120, 121, 122, 126, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 144, 145, 146, 149, 150, 151, 153, 155, 157, 158, 166, 167, 169, 170, 171, 175, 178, 179, 180, 181, 184, 185, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 256, 259, 260, 261, 262, 263, 359, 363], "ugriddatarrai": [225, 226, 228], "ugriddataset": [131, 133, 184, 271, 357], "ultim": 295, "unabl": 333, "unambigu": [132, 184, 185], "unassoci": [119, 178], "uncertainti": 216, "uncompromis": 334, "unconfin": [0, 32, 165, 168, 306, 388], "unconsolid": 26, "uncoupl": 320, "under": [0, 32, 42, 99, 101, 129, 159, 168, 276, 286, 364, 366, 398], "under_relax": [99, 159, 356, 357, 359, 361, 362, 363, 364, 367, 369], "under_relaxation_gamma": 159, "under_relaxation_kappa": 159, "under_relaxation_momentum": 159, "under_relaxation_theta": 159, "undergo": 399, "underli": [4, 91, 138, 143, 174], "underrelax": 159, "underscor": [41, 42, 54], "understand": [359, 389], "undesir": 399, "undo": 271, "undul": 26, "unexpect": [66, 223, 382, 383], "unfortun": 261, "unidata": [257, 258], "uniform": [292, 293, 306, 309, 310, 357, 361, 363, 367, 369], "unimport": 299, "uninstal": 0, "unintend": 211, "union": [37, 38, 39, 126, 130, 132, 135, 185, 254, 255, 277], "unionimeth1head": 186, "uniqu": [25, 47, 118, 127, 176, 317], "unit": [0, 4, 26, 27, 30, 32, 36, 132, 159, 165, 168, 184, 185, 204, 206, 214, 216, 217, 219, 290, 297, 299, 306, 309, 311, 312, 313, 314, 320, 321, 333, 356, 359, 364, 388], "unitless": 159, "unittest": 333, "unless": [27, 113, 124, 138, 297, 311], "unlik": [19, 28, 318, 359, 391, 396], "unlimit": 26, "unmodifi": [84, 90, 93, 98, 117, 121, 141, 146, 151, 167, 171, 180], "unnam": 371, "unpack": [261, 376], "unpartit": [365, 369], "unreli": 44, "unrend": 337, "unrot": 138, "unsatisfi": 389, "unsatur": [26, 174, 388], "unsaturated_databas": 212, "unsaturatedzoneflow": 0, "unsplit": 369, "unstabl": [359, 399], "unstack": [0, 273], "unstructur": [0, 100, 105, 128, 138, 357, 359, 363, 381, 392, 402, 403], "unstructuredgrid": 283, "until": [0, 25, 41, 54, 80, 127, 280, 317, 348, 397, 400], "unus": 296, "unwant": 279, "up": [0, 13, 14, 44, 55, 82, 84, 87, 88, 90, 93, 95, 96, 98, 115, 117, 121, 138, 139, 141, 144, 146, 148, 149, 151, 167, 169, 171, 177, 180, 204, 220, 233, 234, 235, 236, 280, 283, 333, 334, 340, 341, 342, 343, 344, 345, 348, 357, 359, 361, 367, 369, 382, 383, 397, 399, 400, 401, 402], "updat": [0, 102, 106, 242, 339, 389, 391], "upload": [335, 339], "upon": [0, 78, 79, 80, 85, 86, 91, 94, 103, 113, 114, 118, 123, 124, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183], "upond": 0, "upper": [0, 220, 225, 226, 228, 246, 264, 348], "upper_active_lay": [0, 322], "uppermost": [4, 245, 364], "upscal": 399, "upsid": 0, "upstream": [75, 76, 290, 291, 320, 364], "upw": 364, "upward": [206, 400], "upward_resist": 206, "upwind": 76, "urban": 26, "urban_area": 26, "urgenc": [61, 68, 70, 72], "url": 0, "us": [0, 3, 4, 5, 9, 10, 11, 17, 18, 20, 23, 25, 26, 27, 29, 34, 35, 36, 37, 41, 42, 44, 45, 50, 54, 55, 56, 59, 61, 66, 68, 70, 72, 74, 77, 78, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 100, 101, 103, 105, 113, 114, 115, 117, 118, 119, 121, 122, 127, 129, 130, 132, 133, 136, 138, 139, 141, 143, 144, 146, 147, 149, 151, 159, 165, 167, 168, 169, 171, 172, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 201, 203, 206, 207, 208, 209, 210, 211, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 232, 241, 242, 247, 248, 249, 253, 254, 255, 258, 260, 261, 262, 263, 267, 268, 269, 270, 274, 276, 279, 280, 281, 282, 283, 286, 287, 289, 291, 292, 293, 294, 296, 298, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 320, 321, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 378, 380, 382, 383, 385, 389, 390, 391, 393, 394, 397, 398, 400, 401], "usabl": 394, "usag": [224, 232, 293, 397], "use_absolute_path": 137, "use_binari": 137, "use_cftim": [41, 42, 43, 54], "use_relative_weight": [223, 224], "use_src_attr": 253, "useb": 335, "usecas": 276, "user": [0, 13, 14, 26, 37, 101, 103, 113, 129, 138, 159, 174, 211, 296, 318, 335, 337, 366, 369, 389, 391, 392, 399, 400, 403], "user_guid": 399, "usernam": 335, "userspecifi": 318, "userwarn": [364, 367, 394, 399], "usg": [86, 91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 172, 173, 176, 182, 183, 380, 390], "usual": [27, 31, 159, 253, 292, 293, 296, 305, 309, 310, 311, 312, 313, 314, 340, 341, 342, 343, 344, 345, 348, 354, 356, 360, 361, 364, 367, 371, 376, 398, 400, 401], "util": [0, 44, 55, 81, 82, 88, 96, 115, 139, 144, 149, 169, 257, 258, 322, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 371, 372, 373, 374, 377, 378, 380, 381, 382, 383, 393, 394, 397, 399, 400, 401], "utm30n": 253, "uzf": [0, 174, 390, 399], "v": [0, 9, 10, 26, 287, 357, 369, 376], "v0": [0, 335], "v1": 0, "v34": 333, "v5": [21, 340, 341, 342, 343, 344, 345, 348], "v7": 26, "v8": 211, "v_": 11, "vados": 26, "valid": [0, 50, 77, 78, 79, 80, 85, 86, 91, 94, 100, 103, 105, 113, 114, 118, 119, 122, 123, 124, 127, 128, 134, 137, 138, 142, 143, 147, 159, 163, 164, 165, 168, 172, 173, 174, 175, 176, 178, 181, 182, 183, 229, 241, 399, 401], "validationerror": [0, 78, 79, 80, 85, 86, 91, 94, 113, 114, 118, 123, 124, 137, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 233, 234, 235, 401], "valu": [0, 3, 4, 5, 7, 20, 26, 27, 31, 39, 41, 42, 44, 45, 47, 48, 49, 54, 55, 58, 66, 78, 80, 83, 85, 86, 89, 91, 92, 94, 97, 101, 102, 106, 113, 114, 116, 118, 123, 124, 129, 130, 131, 132, 133, 136, 138, 140, 143, 145, 147, 150, 159, 165, 166, 168, 170, 172, 173, 174, 176, 182, 183, 184, 185, 209, 214, 220, 221, 223, 224, 225, 226, 228, 232, 241, 242, 247, 248, 251, 252, 260, 261, 262, 263, 264, 279, 283, 286, 289, 291, 292, 293, 294, 295, 296, 297, 299, 304, 305, 306, 308, 309, 310, 311, 318, 320, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 362, 364, 367, 369, 371, 372, 380, 386, 388, 393, 397, 399, 400, 401], "valueerror": [0, 262, 263], "values_to_set": 261, "van": 26, "vanilla": 351, "vari": [0, 138, 248, 249, 306, 319, 364, 382, 383, 388, 400], "variabl": [0, 16, 23, 41, 54, 78, 81, 82, 88, 91, 96, 113, 115, 135, 138, 139, 144, 149, 159, 164, 169, 219, 233, 234, 235, 273, 277, 296, 297, 313, 320, 343, 354, 356, 357, 359, 364, 366, 367, 389, 393, 398, 399, 400, 401], "variable_vertical_conduct": [138, 361, 362, 363, 364, 367, 399], "variablecv": 138, "variabledensityflow": [340, 341, 342, 343, 344, 345], "variableoutputcontrol": 322, "variant": [17, 298], "variat": 295, "varieti": [0, 364, 390], "variou": [0, 318], "vcr": 219, "vdf": [340, 341, 342, 343, 344, 345], "ve": [0, 280, 382, 385, 389], "vector": [5, 27, 232, 242, 251, 254, 255, 286, 348, 372, 392, 393, 397, 402, 403], "veget": [201, 211], "vegetation_factor": 201, "vegetation_index": [201, 211, 354], "vegetation_index_da": 354, "veldhuizen": 26, "veloc": [0, 6, 9, 10, 362, 369, 377, 379, 392], "veri": [27, 232, 311, 348, 356, 357, 359, 388, 391, 393, 397, 398], "verifi": [120, 179, 338, 397, 399, 401], "versa": 402, "versatil": [390, 393], "version": [0, 45, 77, 80, 134, 159, 279, 333, 340, 341, 342, 343, 344, 345, 359, 361, 364, 382, 383, 388, 390, 401], "versu": 389, "vertic": [0, 5, 23, 26, 34, 35, 83, 85, 89, 92, 97, 101, 102, 106, 116, 129, 138, 140, 145, 150, 166, 170, 172, 174, 175, 183, 216, 220, 221, 224, 225, 226, 227, 228, 230, 231, 238, 240, 241, 248, 249, 257, 258, 292, 293, 299, 306, 312, 313, 346, 347, 348, 356, 359, 364, 367, 376, 382, 385, 390, 392, 394, 399, 400], "vertical_anisotropi": 34, "vertical_exagger": [280, 281, 283], "verticalanisotropi": [35, 348], "verticalinterfac": [345, 347, 392], "verticesdiscret": [0, 87, 95, 148, 177, 188, 357, 359, 363, 399], "via": [0, 5, 130, 131, 132, 133, 184, 185, 307, 319, 337, 380, 388, 391, 393, 394, 395], "vice": 402, "view": [0, 26, 138, 292, 293, 393, 394, 398], "viewer": 393, "violat": [13, 14], "viridi": [284, 399, 400, 401], "visibl": [261, 394], "visual": [0, 13, 14, 25, 51, 127, 317, 322, 337, 358, 362, 376, 378, 380, 390, 391, 392, 397, 399, 400, 401, 402], "visualis": [342, 343, 345], "visualize_jupyt": 377, "visualize_python": 377, "visualstudio": 335, "visualstudiocod": 334, "vka": 306, "void": 124, "volum": [5, 27, 30, 32, 113, 124, 138, 165, 168, 174, 306, 311, 359, 388, 399], "volumetr": [118, 143, 176, 182, 183, 312, 313, 314, 359], "von": 211, "voronoi": 359, "voxel": [0, 282, 283, 287, 289, 322], "vpt": 399, "vscode": [337, 397], "vtk": 308, "vx": [6, 339, 376], "vy": [6, 376], "vz": [6, 376], "w": [0, 4, 41, 54, 132, 184, 185, 343], "wa": [0, 80, 132, 184, 185, 340, 359, 364, 389, 391, 394, 399, 401], "wageningen": 26, "wai": [0, 5, 13, 14, 45, 119, 178, 232, 282, 338, 351, 366, 368, 371, 378, 382, 383, 392, 395, 400, 401], "wall": 22, "walsum": 26, "wang": [11, 12], "want": [56, 81, 84, 90, 93, 98, 101, 117, 121, 129, 141, 146, 151, 167, 171, 180, 223, 333, 335, 339, 348, 359, 360, 382, 383, 389, 391, 397, 399, 401], "warn": [0, 59, 61, 66, 68, 70, 72, 261, 262, 263, 364, 367, 399], "warp": 253, "wast": 395, "water": [0, 4, 26, 29, 30, 32, 33, 86, 91, 94, 99, 104, 107, 109, 111, 114, 118, 123, 138, 142, 143, 147, 152, 154, 156, 159, 165, 168, 172, 173, 174, 176, 182, 183, 211, 214, 217, 219, 230, 231, 255, 290, 296, 306, 320, 340, 341, 342, 343, 345, 348, 356, 359, 361, 362, 364, 388, 390, 394, 399, 402], "water_content_fil": 174, "water_mov": 174, "waterbal": 290, "waterbalance_barchart": 322, "watert": [26, 216], "waterwai": [232, 394], "wd": [292, 293, 294], "we": [0, 12, 81, 84, 90, 93, 98, 117, 119, 121, 141, 142, 146, 151, 167, 171, 174, 178, 180, 211, 214, 232, 257, 258, 279, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 376, 380, 382, 383, 385, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402], "web": [340, 341, 342, 343, 344, 345, 348], "webclient": 335, "websit": [41, 54, 364, 371], "week": [132, 184, 185], "weight": [0, 74, 75, 76, 82, 84, 88, 90, 93, 96, 98, 115, 117, 119, 121, 139, 141, 144, 146, 149, 151, 167, 169, 171, 178, 180, 221, 223, 224, 291, 292, 293, 294, 309, 310, 320, 360, 364, 382, 383, 399, 400], "weighting_factor": [292, 293, 294], "wel": [12, 103, 118, 176, 182, 183, 340, 342, 343, 344, 345, 348, 361, 363, 369, 398], "wel_df": 348, "welcom": 338, "weldata": [342, 343, 345], "well": [0, 25, 45, 101, 103, 118, 119, 120, 122, 127, 129, 159, 182, 183, 186, 202, 213, 216, 220, 229, 236, 317, 334, 335, 337, 339, 340, 342, 343, 344, 345, 356, 359, 360, 361, 363, 369, 371, 380, 382, 383, 391, 393, 394, 395, 397, 398, 399], "well_i": 363, "well_rat": 363, "well_x": 363, "welldisstructur": 0, "welldisvertic": 0, "wells_i": 361, "wells_l": 45, "wells_l1": 45, "wells_l2": 45, "wells_x": 361, "weltim": [118, 176], "were": [0, 80, 364, 371, 376, 399, 400, 401], "west": [21, 364, 393, 401], "western": 401, "wet": [138, 159, 230, 231, 306], "wetdri": 138, "wetfactor": 306, "wetfct": [138, 306], "wether": 318, "wetted_area": 26, "wgs84": [253, 374], "what": [0, 45, 253, 261, 262, 263, 280, 364, 380, 391, 399, 400, 401], "wheel": [382, 385], "when": [0, 3, 4, 11, 12, 24, 27, 45, 50, 61, 66, 68, 70, 72, 78, 80, 85, 99, 119, 122, 131, 138, 142, 159, 165, 168, 174, 178, 181, 184, 229, 253, 274, 280, 281, 286, 292, 293, 294, 296, 305, 306, 309, 310, 311, 316, 333, 337, 357, 364, 365, 382, 383, 388, 389, 397, 398, 399, 400, 402], "whenev": [27, 78, 333], "where": [0, 4, 5, 7, 22, 29, 32, 41, 54, 76, 81, 82, 101, 102, 106, 129, 168, 174, 223, 227, 229, 232, 233, 234, 235, 247, 254, 266, 292, 293, 297, 313, 322, 335, 339, 340, 341, 342, 343, 344, 345, 348, 354, 357, 359, 361, 363, 364, 367, 376, 382, 383, 385, 388, 389, 391, 397, 399, 400, 401], "wherea": [119, 178, 348, 364], "whether": [0, 5, 8, 44, 78, 79, 80, 85, 86, 91, 94, 99, 100, 105, 113, 114, 118, 123, 124, 128, 130, 131, 132, 137, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183, 184, 185, 204, 206, 223, 260, 279, 282, 283, 292, 293, 294, 318, 359, 371], "which": [0, 4, 10, 11, 14, 19, 21, 25, 26, 27, 33, 36, 39, 41, 42, 44, 45, 47, 54, 55, 77, 78, 79, 80, 86, 91, 94, 99, 100, 101, 103, 104, 105, 108, 110, 112, 114, 118, 119, 123, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 143, 147, 149, 153, 155, 158, 159, 164, 174, 176, 178, 182, 183, 211, 216, 218, 219, 223, 225, 226, 227, 228, 232, 235, 238, 240, 241, 247, 254, 255, 257, 258, 260, 261, 279, 286, 291, 292, 293, 294, 295, 296, 297, 306, 308, 311, 312, 313, 314, 317, 318, 321, 333, 334, 335, 337, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 362, 364, 367, 369, 371, 373, 374, 380, 388, 389, 390, 393, 394, 398, 399, 400, 401], "while": [0, 30, 159, 165, 174, 241, 292, 293, 294, 337, 357, 382, 383, 388, 389, 402], "white": [286, 357, 376], "whiten": 282, "whiten_triangl": [282, 286], "whitespac": 400, "who": [0, 391], "whole": [66, 360, 365, 399], "whose": [242, 399], "why": [119, 178, 380, 389, 401], "wide": 5, "width": [113, 369, 394], "wiki": [30, 32, 165, 168], "wikipedia": [30, 32, 165, 168, 388], "wil": 42, "wildcard": 393, "wildli": 400, "window": [3, 135, 280, 333, 335, 336, 340, 341, 342, 343, 344, 345, 348, 366, 380, 389, 395], "winter": [0, 50, 101, 129, 348], "wise": [382, 383, 401], "wish": [45, 232, 279], "with_gap": [382, 383, 385], "within": [0, 45, 80, 138, 232, 242, 258, 260, 292, 293, 298, 312, 313, 314, 318, 334, 359, 360, 364, 389, 398], "within_polygon": 45, "without": [0, 3, 8, 13, 14, 47, 50, 74, 80, 86, 91, 94, 118, 119, 143, 147, 176, 178, 182, 222, 223, 224, 229, 237, 253, 309, 310, 357, 365, 371, 382, 385, 391, 397, 399, 400], "wofost": 201, "wonder": [119, 178], "word": 388, "work": [0, 13, 14, 25, 41, 44, 54, 66, 127, 128, 132, 159, 184, 185, 253, 260, 261, 292, 293, 317, 334, 338, 340, 341, 342, 343, 344, 345, 348, 357, 359, 364, 367, 382, 383, 385, 386, 387, 389, 390, 391, 393, 394, 395, 397, 398, 399, 401], "workaround": 388, "workflow": [334, 390, 402], "world": 399, "worri": 389, "worsen": 159, "worth": 338, "worthi": 340, "would": [0, 4, 44, 55, 138, 334, 357, 389, 397, 399], "wouldn": 348, "wq": [0, 19, 28, 43, 322, 340, 341, 342, 343, 344, 345, 347, 380, 390, 392, 398], "wq_jupyt": 346, "wq_python": 346, "wq_v5_3_svn359_x64r": [340, 341, 342, 343, 344, 345], "wrap": [81, 82, 88, 96, 115, 139, 144, 149, 169, 259, 279, 282, 287, 289, 334, 393, 394], "wrapper": 61, "write": [0, 24, 41, 42, 44, 47, 49, 54, 55, 56, 78, 100, 103, 105, 108, 110, 112, 113, 120, 122, 128, 130, 131, 132, 135, 153, 155, 158, 179, 181, 205, 211, 212, 218, 219, 261, 278, 280, 282, 287, 289, 316, 322, 338, 340, 341, 342, 343, 344, 345, 348, 354, 356, 358, 359, 362, 364, 365, 367, 369, 380, 389, 390, 393, 394, 398, 399], "write_assoc": [0, 322], "write_qgis_project": 0, "writecontext": 0, "writeup": [135, 366], "written": [0, 44, 47, 48, 49, 55, 59, 77, 78, 79, 80, 86, 91, 94, 99, 104, 113, 118, 123, 124, 137, 138, 142, 143, 147, 159, 164, 165, 168, 172, 174, 176, 182, 183, 186, 213, 218, 219, 273, 298, 306, 337, 348, 364, 389, 393, 397, 401], "wrong": [78, 79, 80, 85, 86, 91, 94, 113, 114, 118, 123, 124, 138, 142, 143, 147, 159, 164, 165, 168, 172, 173, 174, 175, 176, 182, 183], "www": 340, "x": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 84, 85, 90, 93, 98, 103, 107, 109, 111, 117, 118, 121, 126, 131, 133, 138, 141, 146, 151, 167, 171, 172, 176, 180, 184, 224, 229, 230, 232, 236, 241, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 277, 279, 280, 282, 283, 287, 289, 306, 321, 339, 340, 341, 342, 343, 344, 345, 348, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 371, 374, 376, 380, 382, 383, 384, 385, 394, 395, 397, 398, 399, 400, 401], "x27": [348, 354, 357, 364, 376, 393, 398, 399, 400, 401], "x64": 335, "x86": [335, 389], "x_line": 400, "x_max": [126, 357], "x_min": 126, "xarrai": [0, 5, 9, 10, 13, 14, 41, 42, 43, 44, 50, 54, 55, 81, 82, 88, 96, 101, 115, 129, 139, 142, 144, 149, 169, 174, 229, 232, 233, 234, 235, 236, 241, 242, 251, 253, 254, 255, 256, 257, 258, 259, 261, 264, 266, 267, 268, 269, 270, 273, 275, 278, 279, 309, 310, 338, 340, 341, 342, 343, 344, 345, 348, 351, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 376, 380, 382, 383, 385, 390, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403], "xarri": [122, 181], "xlabel": 354, "xmax": [242, 266, 267, 268, 269, 270, 275, 348, 356, 360, 361, 362, 363, 364, 367, 371, 372, 373, 374, 382, 383, 399], "xmi": 77, "xmin": [242, 266, 267, 268, 269, 270, 275, 348, 356, 360, 361, 362, 363, 364, 367, 371, 372, 373, 374, 382, 383, 399], "xor": [382, 383], "xpandasindexpandasindex": [348, 364, 376, 393, 398, 399, 400, 401], "xr": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 79, 80, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 102, 106, 113, 114, 116, 117, 118, 121, 123, 124, 126, 130, 131, 132, 133, 134, 138, 140, 141, 142, 143, 145, 146, 147, 150, 151, 165, 166, 167, 168, 170, 171, 172, 174, 176, 180, 182, 183, 184, 185, 201, 203, 204, 206, 211, 213, 214, 215, 216, 217, 218, 230, 231, 241, 242, 247, 250, 252, 253, 260, 261, 262, 263, 264, 267, 268, 269, 270, 273, 277, 280, 282, 283, 285, 286, 287, 289, 296, 297, 298, 300, 304, 306, 307, 312, 313, 314, 315, 319, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 376, 381, 382, 383, 393, 397, 398, 399, 400], "xsection_alloc": 400, "xsection_distribut": 400, "xsection_k": 400, "xsection_layer_nr": 400, "xt3d": [85, 138, 359], "xt3d_off": [85, 356, 359, 362, 369], "xt3d_option": [138, 399], "xt3d_rh": [85, 356, 359, 362, 369], "xtick": 354, "xu": [83, 84, 89, 90, 92, 93, 97, 98, 102, 106, 116, 117, 121, 126, 130, 131, 132, 133, 134, 140, 141, 145, 146, 150, 151, 166, 167, 170, 171, 175, 180, 184, 185, 261, 357, 359, 363, 382, 385], "xugrid": [0, 81, 82, 88, 96, 115, 122, 139, 144, 149, 169, 181, 229, 233, 234, 235, 236, 256, 259, 271, 357, 359, 363, 380, 382, 385, 391, 399], "xxxx": 0, "xy": [256, 259, 285, 399], "xy0": [248, 249], "xy1": [248, 249], "xy2": [248, 249], "xyz": 0, "y": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 84, 85, 90, 93, 98, 103, 107, 109, 111, 117, 118, 121, 126, 131, 133, 138, 141, 146, 151, 167, 171, 172, 176, 180, 184, 224, 229, 230, 232, 236, 241, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 277, 279, 280, 283, 290, 306, 321, 335, 339, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 371, 374, 376, 380, 382, 383, 384, 385, 394, 395, 397, 398, 399, 400, 401], "y_max": 126, "y_min": 126, "ye": 364, "year": [0, 3, 41, 50, 54, 119, 132, 178, 184, 185, 208, 211, 348, 359, 364], "yearli": [201, 364], "yet": [0, 79, 80, 86, 91, 94, 118, 123, 138, 143, 147, 174, 176, 182, 183, 261, 279, 366, 382, 385, 400], "yield": [32, 165, 168, 169, 292, 293, 306, 359, 360, 364], "yincreas": [340, 341, 342, 343, 344, 345, 356, 360, 376], "ylabel": 354, "ymax": [242, 267, 268, 269, 270, 275, 348, 360, 361, 363, 364, 367, 371, 372, 373, 374, 382, 383, 399], "ymin": [242, 267, 268, 269, 270, 275, 348, 360, 361, 363, 364, 367, 371, 372, 373, 374, 382, 383, 399], "yml": 0, "you": [0, 5, 25, 26, 41, 42, 44, 45, 54, 55, 56, 59, 61, 68, 70, 72, 101, 119, 120, 127, 129, 130, 131, 132, 135, 178, 179, 216, 219, 223, 224, 248, 249, 258, 261, 280, 286, 317, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 348, 353, 354, 357, 363, 364, 365, 366, 370, 381, 382, 383, 386, 389, 391, 397, 398, 399, 400, 401], "your": [0, 41, 45, 54, 56, 130, 131, 132, 135, 182, 183, 223, 224, 287, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 348, 354, 356, 357, 359, 361, 364, 366, 367, 389, 391, 397, 398, 399, 401], "yourself": [261, 286, 333, 391, 399], "ypandasindexpandasindex": [348, 364, 376, 393, 398, 399, 400, 401], "z": [0, 4, 6, 7, 11, 85, 138, 248, 249, 283, 285, 339, 356, 359, 376], "zarr": 0, "zb0": [248, 249], "zb1": [248, 249], "zb2": 249, "zbot": [107, 109, 111, 248, 249], "zbottom": [0, 248, 249], "zero": [0, 5, 18, 19, 27, 44, 55, 113, 124, 136, 138, 159, 174, 216, 292, 293, 300, 306, 318, 320, 362, 364, 369, 399], "zero_order_decai": [113, 124], "zerodivisionerror": 0, "zeros_lik": [354, 357, 359, 360, 363, 369], "zetaim": 113, "zheng": [11, 12], "zip": [0, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "zmax": 356, "zmin": 356, "zonal": [0, 254, 255], "zonal_aggreg": [254, 255], "zonal_aggregate_polygon": [0, 322], "zonal_aggregate_rast": [0, 322], "zone": [5, 22, 26, 174, 209, 254, 255, 382, 383, 394], "zone2d": 5, "zone_of_interest": 5, "zt0": [248, 249], "zt1": [248, 249], "zt2": 249, "ztop": [0, 107, 109, 111, 248, 249]}, "titles": ["Changelog", "Evaluate model output", "iMODFLOW", "imod.evaluate.calculate_gxg", "imod.evaluate.convert_pointwaterhead_freshwaterhead", "imod.evaluate.facebudget", "imod.evaluate.flow_velocity", "imod.evaluate.interpolate_value_boundaries", "imod.evaluate.intra_cell_boundary_conditions", "imod.evaluate.quiver_line", "imod.evaluate.quiver_linestring", "imod.evaluate.stability_constraint_advection", "imod.evaluate.stability_constraint_wel", "imod.evaluate.streamfunction_line", "imod.evaluate.streamfunction_linestring", "imod.flow.Bottom", "imod.flow.Boundary", "imod.flow.ConstantHead", "imod.flow.Drain", "imod.flow.EvapoTranspiration", "imod.flow.GeneralHeadBoundary", "imod.flow.HorizontalAnisotropy", "imod.flow.HorizontalFlowBarrier", "imod.flow.HorizontalHydraulicConductivity", "imod.flow.ImodflowModel", "imod.flow.ImodflowModel.create_time_discretization", "imod.flow.MetaSwap", "imod.flow.PreconditionedConjugateGradientSolver", "imod.flow.Recharge", "imod.flow.River", "imod.flow.SpecificStorage", "imod.flow.StartingHead", "imod.flow.StorageCoefficient", "imod.flow.Top", "imod.flow.VerticalAnisotropy", "imod.flow.VerticalHydraulicConductivity", "imod.flow.Well", "imod.formats.gen.read", "imod.formats.gen.read_ascii", "imod.formats.gen.write", "imod.formats.idf.header", "imod.formats.idf.open", "imod.formats.idf.open_dataset", "imod.formats.idf.open_subdomains", "imod.formats.idf.save", "imod.formats.ipf.read", "imod.formats.ipf.read_associated", "imod.formats.ipf.save", "imod.formats.ipf.write", "imod.formats.ipf.write_assoc", "imod.formats.prj.open_projectfile_data", "imod.formats.prj.read_projectfile", "imod.formats.prj.read_timfile", "imod.formats.rasterio.header", "imod.formats.rasterio.open", "imod.formats.rasterio.save", "imod.logging", "imod.logging.config", "imod.logging.config.LoggerType", "imod.logging.config.configure", "imod.logging.ilogger", "imod.logging.ilogger.ILogger", "imod.logging.logging_decorators", "imod.logging.logging_decorators.init_log_decorator", "imod.logging.logging_decorators.standard_log_decorator", "imod.logging.loglevel", "imod.logging.loglevel.LogLevel", "imod.logging.logurulogger", "imod.logging.logurulogger.LoguruLogger", "imod.logging.nulllogger", "imod.logging.nulllogger.NullLogger", "imod.logging.pythonlogger", "imod.logging.pythonlogger.PythonLogger", "imod.couplers.metamod.MetaMod", "imod.mf6.AdvectionCentral", "imod.mf6.AdvectionTVD", "imod.mf6.AdvectionUpstream", "imod.mf6.ApiPackage", "imod.mf6.Buoyancy", "imod.mf6.ConstantConcentration", "imod.mf6.ConstantHead", "imod.mf6.ConstantHead.from_imod5_data", "imod.mf6.ConstantHead.from_imod5_shd_data", "imod.mf6.ConstantHead.mask", "imod.mf6.ConstantHead.regrid_like", "imod.mf6.Dispersion", "imod.mf6.Drainage", "imod.mf6.Drainage.cleanup", "imod.mf6.Drainage.from_imod5_data", "imod.mf6.Drainage.mask", "imod.mf6.Drainage.regrid_like", "imod.mf6.Evapotranspiration", "imod.mf6.Evapotranspiration.mask", "imod.mf6.Evapotranspiration.regrid_like", "imod.mf6.GeneralHeadBoundary", "imod.mf6.GeneralHeadBoundary.cleanup", "imod.mf6.GeneralHeadBoundary.from_imod5_data", "imod.mf6.GeneralHeadBoundary.mask", "imod.mf6.GeneralHeadBoundary.regrid_like", "imod.mf6.GroundwaterFlowModel", "imod.mf6.GroundwaterFlowModel.dump", "imod.mf6.GroundwaterFlowModel.from_imod5_data", "imod.mf6.GroundwaterFlowModel.mask_all_packages", "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "imod.mf6.GroundwaterTransportModel", "imod.mf6.GroundwaterTransportModel.dump", "imod.mf6.GroundwaterTransportModel.mask_all_packages", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierMultiplier", "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierResistance", "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.ImmobileStorageTransfer", "imod.mf6.InitialConditions", "imod.mf6.InitialConditions.from_imod5_data", "imod.mf6.InitialConditions.mask", "imod.mf6.InitialConditions.regrid_like", "imod.mf6.LayeredWell", "imod.mf6.LayeredWell.from_imod5_data", "imod.mf6.LayeredWell.mask", "imod.mf6.LayeredWell.regrid_like", "imod.mf6.LayeredWell.to_mf6_pkg", "imod.mf6.MassSourceLoading", "imod.mf6.MobileStorageTransfer", "imod.mf6.Modflow6Simulation", "imod.mf6.Modflow6Simulation.clip_box", "imod.mf6.Modflow6Simulation.create_time_discretization", "imod.mf6.Modflow6Simulation.dump", "imod.mf6.Modflow6Simulation.from_imod5_data", "imod.mf6.Modflow6Simulation.open_concentration", "imod.mf6.Modflow6Simulation.open_flow_budget", "imod.mf6.Modflow6Simulation.open_head", "imod.mf6.Modflow6Simulation.open_transport_budget", "imod.mf6.Modflow6Simulation.regrid_like", "imod.mf6.Modflow6Simulation.run", "imod.mf6.Modflow6Simulation.split", "imod.mf6.Modflow6Simulation.write", "imod.mf6.NodePropertyFlow", "imod.mf6.NodePropertyFlow.from_imod5_data", "imod.mf6.NodePropertyFlow.mask", "imod.mf6.NodePropertyFlow.regrid_like", "imod.mf6.OutputControl", "imod.mf6.Recharge", "imod.mf6.Recharge.from_imod5_data", "imod.mf6.Recharge.mask", "imod.mf6.Recharge.regrid_like", "imod.mf6.River", "imod.mf6.River.cleanup", "imod.mf6.River.from_imod5_data", "imod.mf6.River.mask", "imod.mf6.River.regrid_like", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.Solution", "imod.mf6.SolutionPresetComplex", "imod.mf6.SolutionPresetModerate", "imod.mf6.SolutionPresetSimple", "imod.mf6.SourceSinkMixing", "imod.mf6.SourceSinkMixing.from_flow_model", "imod.mf6.SpecificStorage", "imod.mf6.SpecificStorage.mask", "imod.mf6.SpecificStorage.regrid_like", "imod.mf6.StorageCoefficient", "imod.mf6.StorageCoefficient.from_imod5_data", "imod.mf6.StorageCoefficient.mask", "imod.mf6.StorageCoefficient.regrid_like", "imod.mf6.StructuredDiscretization", "imod.mf6.TimeDiscretization", "imod.mf6.UnsaturatedZoneFlow", "imod.mf6.VerticesDiscretization", "imod.mf6.Well", "imod.mf6.Well.cleanup", "imod.mf6.Well.from_imod5_data", "imod.mf6.Well.mask", "imod.mf6.Well.regrid_like", "imod.mf6.Well.to_mf6_pkg", "imod.mf6.WellDisStructured", "imod.mf6.WellDisVertices", "imod.mf6.open_cbc", "imod.mf6.open_hds", "imod.mf6.read_cbc_headers", "imod.mf6.regrid.ConstantHeadRegridMethod", "imod.mf6.regrid.DiscretizationRegridMethod", "imod.mf6.regrid.DispersionRegridMethod", "imod.mf6.regrid.DrainageRegridMethod", "imod.mf6.regrid.EmptyRegridMethod", "imod.mf6.regrid.EvapotranspirationRegridMethod", "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "imod.mf6.regrid.InitialConditionsRegridMethod", "imod.mf6.regrid.MobileStorageTransferRegridMethod", "imod.mf6.regrid.NodePropertyFlowRegridMethod", "imod.mf6.regrid.RechargeRegridMethod", "imod.mf6.regrid.RiverRegridMethod", "imod.mf6.regrid.SpecificStorageRegridMethod", "imod.mf6.regrid.StorageCoefficientRegridMethod", "imod.msw.AnnualCropFactors", "imod.msw.CouplerMapping", "imod.msw.EvapotranspirationMapping", "imod.msw.GridData", "imod.msw.IdfMapping", "imod.msw.Infiltration", "imod.msw.InitialConditionsEquilibrium", "imod.msw.InitialConditionsPercolation", "imod.msw.InitialConditionsRootzonePressureHead", "imod.msw.InitialConditionsSavedState", "imod.msw.LanduseOptions", "imod.msw.MetaSwapModel", "imod.msw.MeteoGrid", "imod.msw.Ponding", "imod.msw.PrecipitationMapping", "imod.msw.ScalingFactors", "imod.msw.Sprinkling", "imod.msw.TimeOutputControl", "imod.msw.VariableOutputControl", "imod.prepare.ALLOCATION_OPTION", "imod.prepare.DISTRIBUTING_OPTION", "imod.prepare.LayerRegridder", "imod.prepare.Regridder", "imod.prepare.Voxelizer", "imod.prepare.allocate_drn_cells", "imod.prepare.allocate_ghb_cells", "imod.prepare.allocate_rch_cells", "imod.prepare.allocate_riv_cells", "imod.prepare.assign_wells", "imod.prepare.c_leakage", "imod.prepare.c_radial", "imod.prepare.celltable", "imod.prepare.cleanup_drn", "imod.prepare.cleanup_ghb", "imod.prepare.cleanup_riv", "imod.prepare.cleanup_wel", "imod.prepare.create_layered_top", "imod.prepare.distribute_drn_conductance", "imod.prepare.distribute_ghb_conductance", "imod.prepare.distribute_riv_conductance", "imod.prepare.fill", "imod.prepare.gdal_rasterize", "imod.prepare.get_lower_active_grid_cells", "imod.prepare.get_lower_active_layer_number", "imod.prepare.get_upper_active_grid_cells", "imod.prepare.get_upper_active_layer_number", "imod.prepare.laplace_interpolate", "imod.prepare.linestring_to_square_zpolygons", "imod.prepare.linestring_to_trapezoid_zpolygons", "imod.prepare.polygonize", "imod.prepare.rasterize", "imod.prepare.rasterize_celltable", "imod.prepare.reproject", "imod.prepare.zonal_aggregate_polygons", "imod.prepare.zonal_aggregate_raster", "imod.select.active_grid_boundary_xy", "imod.select.cross_section_line", "imod.select.cross_section_linestring", "imod.select.grid_boundary_xy", "imod.select.points_in_bounds", "imod.select.points_indices", "imod.select.points_set_values", "imod.select.points_values", "imod.select.upper_active_layer", "imod.util.cd", "imod.util.coord_reference", "imod.util.empty_2d", "imod.util.empty_2d_transient", "imod.util.empty_3d", "imod.util.empty_3d_transient", "imod.util.from_mdal_compliant_ugrid2d", "imod.util.ignore_warnings", "imod.util.mdal_compliant_ugrid2d", "imod.util.print_if_error", "imod.util.spatial_reference", "imod.util.to_datetime", "imod.util.to_ugrid2d", "imod.util.transform", "imod.util.where", "imod.visualize.GridAnimation3D", "imod.visualize.StaticGridAnimation3D", "imod.visualize.cross_section", "imod.visualize.grid_3d", "imod.visualize.imshow_topview", "imod.visualize.line_3d", "imod.visualize.plot_map", "imod.visualize.quiver", "imod.visualize.read_imod_legend", "imod.visualize.streamfunction", "imod.visualize.waterbalance_barchart", "imod.wq.AdvectionFiniteDifference", "imod.wq.AdvectionHybridMOC", "imod.wq.AdvectionMOC", "imod.wq.AdvectionModifiedMOC", "imod.wq.AdvectionTVD", "imod.wq.BasicFlow", "imod.wq.BasicTransport", "imod.wq.ConstantHead", "imod.wq.Dispersion", "imod.wq.Drainage", "imod.wq.EvapotranspirationHighestActive", "imod.wq.EvapotranspirationLayers", "imod.wq.EvapotranspirationTopLayer", "imod.wq.GeneralHeadBoundary", "imod.wq.GeneralizedConjugateGradientSolver", "imod.wq.LayerPropertyFlow", "imod.wq.MassLoading", "imod.wq.OutputControl", "imod.wq.ParallelKrylovFlowSolver", "imod.wq.ParallelKrylovTransportSolver", "imod.wq.PreconditionedConjugateGradientSolver", "imod.wq.RechargeHighestActive", "imod.wq.RechargeLayers", "imod.wq.RechargeTopLayer", "imod.wq.River", "imod.wq.SeawatModel", "imod.wq.SeawatModel.create_time_discretization", "imod.wq.TimeDiscretization", "imod.wq.TimeVaryingConstantConcentration", "imod.wq.VariableDensityFlow", "imod.wq.Well", "API Reference", "Input/output", "Logging", "MetaMod", "MODFLOW6", "MetaSWAP", "Prepare model input", "Select points and cross sections", "Utilities", "Visualize", "iMOD-WQ", "Debugging Continuous Integration", "Contributing Code", "Docker build image", "Building documentation and examples", "Developing examples", "Developing", "How to release a new version", "Elder", "Freshwater Lens", "Henry", "Hydrocoin", "Saltwater Pocket", "Vertical Interface", "iMOD-WQ", "Computation times", "Model Creation", "iMODFLOW", "Computation times", "Examples", "MetaSWAP", "Coupled MetaSWAP - Modflow6 model", "Reading existing MetaSWAP input", "Computation times", "Henry", "Circle", "Circle partitioned", "Freshwater lens (circle)", "Different ways to regrid models", "TWRI", "1D Solute Transport Benchmarks", "Example models", "Regional model", "Partitioning a regional model", "MODFLOW6", "Lake package example", "Computation times", "Transport 2d example", "Prepare", "Head point interpolation", "Polygonize raster", "Rasterize shapefiles", "Reproject data", "Computation times", "Flow velocities and streamlines", "Visualization", "Plot maps", "Computation times", "General Questions", "Data In/Out", "How do I \u2026", "Data modification", "Plot a timeseries for a single cell", "Unstructured", "FAQ", "Known Issues", "Groundwater Modeling with iMOD", "Installing Python and packages", "iMOD Python: make massive MODFLOW models", "Installing", "Computation times", "Raster data and xarray", "Vector data and Geopandas", "Time series data and Pandas", "Unstructured Grids", "Lazy evaluation", "Model time discretization", "Regridding", "Topsystem: from 2D map to 3D model", "Data cleanup", "User Guide", "Computation times"], "titleterms": {"0": 0, "01": 0, "02": 0, "03": 0, "04": 0, "05": 0, "06": 0, "07": 0, "08": 0, "09": 0, "1": [0, 374], "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "1d": 362, "2": [0, 374], "20": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 0, "2024": 0, "21": 0, "22": 0, "23": 0, "25": 0, "26": 0, "29": 0, "2d": [369, 400], "3": [0, 374], "3d": 400, "4": 0, "5": 0, "6": [0, 387], "7": 0, "8": 0, "9": 0, "A": [389, 399], "If": [382, 383], "In": [381, 382], "The": 401, "active_grid_boundary_xi": 256, "ad": [0, 364], "add": 359, "advectioncentr": 74, "advectionfinitediffer": 291, "advectionhybridmoc": 292, "advectionmoc": 293, "advectionmodifiedmoc": 294, "advectiontvd": [75, 295], "advectionupstream": 76, "agon": 389, "alloc": 400, "allocate_drn_cel": 225, "allocate_ghb_cel": 226, "allocate_rch_cel": 227, "allocate_riv_cel": 228, "allocation_opt": 220, "along": [382, 383], "an": [354, 382, 383, 389], "anaconda": 389, "annualcropfactor": 201, "api": 322, "apipackag": 77, "ar": 388, "arithmet": [382, 383], "arrai": [382, 383], "assign": [359, 364], "assign_wel": 229, "attach": 364, "autom": 334, "background": 389, "barrier": 348, "basic": 398, "basicflow": 296, "basictransport": 297, "benchmark": 362, "bit": 389, "bottom": 15, "boundari": [16, 340, 341, 343, 344, 345, 348, 398, 399], "bug": 338, "build": [333, 335, 336, 340, 341, 342, 343, 344, 345, 348], "buoyanc": [78, 359], "c_leakag": 230, "c_radial": 231, "calcul": 376, "calculate_gxg": 3, "cd": 265, "cell": [382, 384, 385, 400], "cellsiz": [374, 382, 383], "celltabl": 232, "central": 348, "chang": [0, 382, 383], "changelog": 0, "chd": 364, "chunk": 397, "circl": [357, 358, 359], "clean": 401, "cleanup": [87, 95, 148, 177, 401], "cleanup_drn": 233, "cleanup_ghb": 234, "cleanup_riv": 235, "cleanup_wel": 236, "clip_box": 126, "code": 334, "coeffici": 388, "comparison": 399, "comput": [347, 350, 355, 368, 375, 379, 392, 397, 403], "conda": 391, "condit": [340, 341, 343, 344, 345, 348, 364, 382, 383, 398, 399], "conduct": [364, 399, 400], "config": [57, 58, 59], "configur": 59, "conflict": 389, "constant": 364, "constantconcentr": 79, "constanthead": [17, 80, 81, 82, 83, 84, 298], "constantheadregridmethod": 187, "contain": 333, "continu": 333, "contribut": 334, "control": [334, 364], "convers": 394, "convert": [381, 382], "convert_pointwaterhead_freshwaterhead": 4, "coord_refer": 266, "coordin": [359, 361, 367, 393], "coupl": 353, "coupler": 73, "couplermap": 202, "cr": 393, "creat": [333, 354, 357, 359, 361, 367, 382, 383], "create_layered_top": 237, "create_time_discret": [25, 127, 317], "creation": 348, "cross": 329, "cross_sect": 282, "cross_section_lin": 257, "cross_section_linestr": 258, "dask": [382, 383], "data": [364, 374, 380, 381, 382, 383, 393, 394, 395, 400, 401], "dataarrai": [361, 367, 381, 382], "dataset": [374, 381, 382, 383, 385], "date": 364, "debug": 333, "default": 399, "delai": 397, "deltaforg": 391, "depend": [380, 389, 391], "deprec": 0, "develop": [337, 338, 389, 391], "di": 364, "differ": [360, 380], "dimens": 393, "discret": [326, 340, 341, 342, 343, 345, 348, 364, 398], "discretizationregridmethod": 188, "dispers": [85, 299], "dispersionregridmethod": 189, "distribut": 400, "distribute_drn_conduct": 238, "distribute_ghb_conduct": 239, "distribute_riv_conduct": 240, "distributing_opt": 221, "ditch": 348, "do": 382, "docker": [333, 335], "dockerfil": 335, "document": 336, "domain": [357, 374, 399], "drain": 18, "drainag": [86, 87, 88, 89, 90, 300, 364], "drainageregridmethod": 190, "drn": 364, "dump": [100, 105, 128], "e": [382, 383], "edg": 364, "elder": 340, "els": [382, 383], "empti": [382, 383], "empty_2d": 267, "empty_2d_transi": 268, "empty_3d": 269, "empty_3d_transi": 270, "emptyregridmethod": 191, "environ": 389, "evalu": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 382, 383, 397], "evapotranspir": [19, 91, 92, 93], "evapotranspirationhighestact": 301, "evapotranspirationlay": 302, "evapotranspirationmap": 203, "evapotranspirationregridmethod": 192, "evapotranspirationtoplay": 303, "exampl": [336, 337, 351, 354, 363, 367, 369, 400], "exist": [354, 401], "experienc": 391, "extent": [382, 383], "extra": 398, "extract": 364, "facebudget": 5, "factor": 388, "faq": 386, "file": [354, 381, 382, 397], "fill": [241, 382, 383, 385], "final": 399, "fix": 0, "flopi": 380, "flow": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 326, 332, 348, 359, 364, 376], "flow_veloc": 6, "forc": [382, 383], "format": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 393], "freshwat": [341, 359], "from": [380, 382, 383, 385, 400], "from_flow_model": 164, "from_imod5_data": [81, 88, 96, 101, 115, 119, 129, 139, 144, 149, 157, 169, 178], "from_imod5_shd_data": 82, "from_mdal_compliant_ugrid2d": 271, "function": 376, "g": [382, 383], "gdal_raster": 242, "gen": [37, 38, 39], "gener": [380, 382, 385, 388], "generalheadboundari": [20, 94, 95, 96, 97, 98, 304], "generalheadboundaryregridmethod": 193, "generalizedconjugategradientsolv": 305, "geopanda": 394, "get": [382, 383], "get_lower_active_grid_cel": 243, "get_lower_active_layer_numb": 244, "get_upper_active_grid_cel": 245, "get_upper_active_layer_numb": 246, "grid": [2, 361, 367, 396], "grid_3d": 283, "grid_boundary_xi": 259, "gridanimation3d": 280, "griddata": 204, "groundwat": 388, "groundwaterflowmodel": [99, 100, 101, 102, 103], "groundwatertransportmodel": [104, 105, 106], "guid": 402, "head": [364, 371, 382, 384, 385], "header": [40, 53], "henri": [342, 356], "histogram": 399, "horizont": 348, "horizontalanisotropi": 21, "horizontalflowbarri": 22, "horizontalflowbarrierhydrauliccharacterist": [107, 108], "horizontalflowbarriermultipli": [109, 110], "horizontalflowbarrierresist": [111, 112], "horizontalhydraulicconduct": 23, "how": [335, 339, 380, 382], "hydraul": 364, "hydrocoin": 343, "hydrogeologi": [343, 348], "i": [380, 382, 397, 399], "ic": 364, "icelltyp": 364, "idf": [40, 41, 42, 43, 44, 381, 382], "idfmap": 205, "ignore_warn": 272, "ilogg": [60, 61], "imag": [333, 335], "immobilestoragetransf": 113, "imod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 346, 380, 388, 389, 390, 391], "imodflow": [2, 349], "imodflowmodel": [24, 25], "import": [364, 381, 382], "imshow_topview": 284, "increas": [382, 383], "infiltr": [206, 388], "inform": 364, "init_log_decor": 63, "initi": [340, 341, 343, 344, 345, 348, 364], "initialcondit": [114, 115, 116, 117], "initialconditionsequilibrium": 207, "initialconditionspercol": 208, "initialconditionsregridmethod": 194, "initialconditionsrootzonepressurehead": 209, "initialconditionssavedst": 210, "inp": 354, "input": [323, 328, 354, 393, 394], "insid": 333, "instal": [389, 391], "integr": 333, "interfac": 345, "interpol": [364, 371, 382, 383, 385], "interpolate_value_boundari": 7, "intra_cell_boundary_condit": 8, "ipf": [45, 46, 47, 48, 49, 381, 382], "issu": 387, "known": 387, "lake": 367, "landuseopt": 211, "laplace_interpol": 247, "larg": 380, "latest": 391, "layer": [382, 383, 384, 385], "layeredwel": [118, 119, 120, 121, 122], "layerpropertyflow": 306, "layerregridd": 222, "layout": 397, "lazi": 397, "len": [341, 359], "line_3d": 285, "linestring_to_square_zpolygon": 248, "linestring_to_trapezoid_zpolygon": 249, "load": [364, 382, 383], "local": 333, "locat": 395, "log": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 324], "loggertyp": 58, "logging_decor": [62, 63, 64], "loglevel": [65, 66], "logurulogg": [67, 68], "make": [381, 382, 390], "map": [378, 400], "mask": [83, 89, 92, 97, 116, 120, 140, 145, 150, 166, 170, 179], "mask_all_packag": [102, 106], "massiv": 390, "massload": 307, "masssourceload": 123, "mdal_compliant_ugrid2d": 273, "memori": [382, 383, 397], "mesh": [357, 359, 382, 385], "metamod": [73, 325], "metaswap": [26, 327, 352, 353, 354], "metaswapmodel": 212, "meteogrid": 213, "method": [326, 399, 401], "mf6": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "miniconda": 389, "miniforg": 389, "mobilestoragetransf": 124, "mobilestoragetransferregridmethod": 195, "model": [1, 2, 326, 328, 332, 348, 353, 356, 357, 359, 360, 361, 363, 364, 365, 367, 380, 388, 390, 398, 400, 401], "modflow": [387, 390, 397], "modflow6": [326, 353, 366, 388, 400, 401], "modflow6simul": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "modif": [382, 383], "more": 393, "msw": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "multipl": [381, 382], "netcdf": [381, 382, 393], "new": [339, 374, 391, 401], "nodata": [382, 383, 385], "node": 364, "nodepropertyflow": [138, 139, 140, 141], "nodepropertyflowregridmethod": 196, "non": 399, "note": 399, "npf": 364, "nulllogg": [69, 70], "numpi": [382, 383], "object": 326, "obtain": [333, 399], "oc": 364, "one": [382, 384, 385], "onli": 374, "open": [41, 54, 356, 357, 359, 361, 367], "open_cbc": 184, "open_concentr": 130, "open_dataset": 42, "open_flow_budget": 131, "open_hd": 185, "open_head": 132, "open_projectfile_data": 50, "open_subdomain": 43, "open_transport_budget": 133, "option": 400, "other": 393, "out": [381, 382], "outer": 348, "output": [1, 323, 326, 359, 364, 393, 394], "outputcontrol": [142, 308], "over": [382, 383], "overview": 400, "packag": [2, 326, 364, 367, 389, 399, 400], "pain": 389, "panda": 395, "parallelkrylovflowsolv": 309, "parallelkrylovtransportsolv": 310, "paramet": 359, "part": [382, 383], "partit": [358, 365], "period": 348, "pip": 391, "pipelin": 333, "pitfal": 397, "pixi": [335, 391], "plot": [376, 378, 382, 384, 385], "plot_map": 286, "pocket": 344, "point": [329, 364, 371, 374, 382, 383, 385, 395], "points_in_bound": 260, "points_indic": 261, "points_set_valu": 262, "points_valu": 263, "polygon": [250, 372, 382, 383], "pond": 214, "precipitationmap": 215, "preconditionedconjugategradientsolv": [27, 311], "prepar": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 328, 370], "prepare_wel_for_mf6": 103, "print_if_error": 274, "prj": [50, 51, 52], "properti": [364, 382, 383], "push": 335, "python": [380, 389, 390, 391], "pythonlogg": [71, 72], "qgi": [381, 382], "question": 380, "quiver": [287, 376], "quiver_lin": 9, "quiver_linestr": 10, "raster": [251, 372, 373, 374, 382, 383, 393, 394], "rasterio": [53, 54, 55], "rasterize_cellt": 252, "rch": 364, "read": [37, 45, 326, 354], "read_ascii": 38, "read_associ": 46, "read_cbc_head": 186, "read_imod_legend": 288, "read_projectfil": 51, "read_timfil": 52, "readabl": [381, 382], "recharg": [28, 143, 144, 145, 146, 359, 364], "rechargehighestact": 312, "rechargelay": 313, "rechargeregridmethod": 197, "rechargetoplay": 314, "refer": [322, 393], "region": [364, 365], "regrid": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 326, 360, 399], "regrid_lik": [84, 90, 93, 98, 117, 121, 134, 141, 146, 151, 167, 171, 180], "regridd": 223, "releas": 339, "remov": 0, "report": 338, "reproject": [253, 374], "resampl": 374, "resolut": [382, 383], "result": [340, 341, 344, 356, 357, 359, 361, 364, 367], "review": 334, "rise": 348, "riv": 364, "river": [29, 147, 148, 149, 150, 151, 315, 364, 388, 400], "riverregridmethod": 198, "run": [135, 333, 340, 341, 342, 343, 344, 345, 348, 356, 357, 359, 361, 364, 367], "saltwat": 344, "save": [44, 47, 55], "scalingfactor": 216, "seawatmodel": [316, 317], "section": 329, "select": [256, 257, 258, 259, 260, 261, 262, 263, 264, 329, 382, 383, 385], "seri": 395, "set": [326, 332, 364, 389, 398], "shapefil": 373, "simul": [359, 364, 401], "singl": [381, 382, 383, 384, 385], "singlelayerhorizontalflowbarrierhydrauliccharacterist": [152, 153], "singlelayerhorizontalflowbarriermultipli": [154, 155], "singlelayerhorizontalflowbarrierresist": [156, 157, 158], "size": 397, "slice": 357, "smooth": [382, 383], "solut": [159, 362], "solutionpresetcomplex": 160, "solutionpresetmoder": 161, "solutionpresetsimpl": 162, "solver": [2, 364], "sourcesinkmix": [163, 164], "spatial_refer": 275, "specif": [374, 388], "specifi": 398, "specificstorag": [30, 165, 166, 167], "specificstorageregridmethod": 199, "split": 136, "sprinkl": 217, "stability_constraint_advect": 11, "stability_constraint_wel": 12, "standard_log_decor": 64, "start": 364, "startinghead": 31, "state": 364, "staticgridanimation3d": 281, "statist": [382, 383], "steadi": 364, "step": 333, "sto": 364, "stor": 388, "storag": [364, 388], "storagecoeffici": [32, 168, 169, 170, 171], "storagecoefficientregridmethod": 200, "streamfunct": 289, "streamfunction_lin": 13, "streamfunction_linestr": 14, "streamlin": 376, "structur": [380, 381, 382], "structureddiscret": 172, "style": 334, "sum": [382, 383], "summari": [382, 383], "support": 380, "system": 393, "test": 334, "time": [347, 350, 355, 364, 368, 375, 379, 382, 383, 384, 385, 392, 395, 398, 403], "timediscret": [173, 318], "timeoutputcontrol": 218, "timeseri": [382, 384, 385, 395], "timevaryingconstantconcentr": 319, "to_datetim": 276, "to_mf6_pkg": [108, 110, 112, 122, 153, 155, 158, 181], "to_ugrid2d": 277, "top": 33, "topsystem": 400, "transform": 278, "transient": 364, "transport": [326, 332, 359, 362, 369, 399], "two": 393, "twri": 361, "ugrid": [381, 382], "ugriddataarrai": 357, "unsaturatedzoneflow": 174, "unstructur": [382, 385, 396], "unsupport": 399, "up": 389, "updat": [335, 401], "upper_active_lay": 264, "us": [388, 399], "user": 402, "util": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 330], "valu": [382, 383], "variabl": [381, 382, 383], "variabledensityflow": 320, "variableoutputcontrol": 219, "vector": [374, 382, 383, 385, 394], "veloc": 376, "version": [334, 335, 339, 387, 389, 391], "vertic": 345, "verticalanisotropi": 34, "verticalhydraulicconduct": 35, "verticesdiscret": 175, "visual": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 331, 356, 357, 359, 361, 364, 367, 377], "visualis": [340, 341, 344], "voxel": 224, "wai": [360, 391], "waterbalance_barchart": 290, "well": [36, 176, 177, 178, 179, 180, 181, 321, 348], "welldisstructur": 182, "welldisvertic": 183, "what": 388, "where": 279, "which": 391, "without": [389, 401], "wq": [291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 346], "write": [39, 48, 137, 357, 361, 401], "write_assoc": 49, "x": 393, "xarrai": 393, "y": 393, "yield": 388, "zonal": [382, 383], "zonal_aggregate_polygon": 254, "zonal_aggregate_rast": 255}})