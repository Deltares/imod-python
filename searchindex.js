Search.setIndex({"alltitles": {"1. Resample to a new cellsize": [[411, "resample-to-a-new-cellsize"]], "1D Solute Transport Benchmarks": [[399, null]], "2. Only reproject": [[411, "only-reproject"]], "3. Reproject and resample to a specific domain": [[411, "reproject-and-resample-to-a-specific-domain"]], "A bit of background": [[427, "a-bit-of-background"]], "A note on regridding conductivity": [[437, "a-note-on-regridding-conductivity"]], "A note on regridding transport": [[437, "a-note-on-regridding-transport"]], "API Reference": [[359, null]], "Add flow model to simulation": [[396, "add-flow-model-to-simulation"]], "Add transport model to simulation": [[396, "add-transport-model-to-simulation"]], "Added": [[0, "added"], [0, "id2"], [0, "id8"], [0, "id11"], [0, "id15"], [0, "id19"], [0, "id23"], [0, "id28"], [0, "id36"], [0, "id41"], [0, "id48"], [0, "id52"], [0, "id54"], [0, "id57"], [0, "id60"], [0, "id64"], [0, "id69"], [0, "id73"], [0, "id78"], [0, "id83"], [0, "id87"], [0, "id90"], [0, "id94"], [0, "id97"], [0, "id100"], [0, "id104"], [0, "id115"]], "Adding information to the CHD package": [[401, "adding-information-to-the-chd-package"]], "Adding information to the DIS package": [[401, "adding-information-to-the-dis-package"]], "Adding information to the DRN package": [[401, "adding-information-to-the-drn-package"]], "Adding information to the IC package": [[401, "adding-information-to-the-ic-package"]], "Adding information to the NPF package": [[401, "adding-information-to-the-npf-package"]], "Adding information to the OC package": [[401, "adding-information-to-the-oc-package"]], "Adding information to the RCH package": [[401, "adding-information-to-the-rch-package"]], "Adding information to the RIV package": [[401, "adding-information-to-the-riv-package"]], "Adding information to the STO package": [[401, "adding-information-to-the-sto-package"]], "Allocate river cells": [[438, "allocate-river-cells"]], "Anaconda, Miniconda, Miniforge": [[427, "anaconda-miniconda-miniforge"]], "Arithmetic": [[419, "arithmetic"], [420, "arithmetic"]], "Assign coordinates to output": [[396, "assign-coordinates-to-output"]], "Assign dates to head": [[401, "assign-dates-to-head"]], "Assign time discretization": [[401, "assign-time-discretization"]], "Attach the model information to a simulation": [[401, "attach-the-model-information-to-a-simulation"]], "Automated testing": [[371, "automated-testing"]], "Basics": [[436, "basics"]], "Boundary Conditions": [[377, "boundary-conditions"], [378, "boundary-conditions"], [380, "boundary-conditions"], [381, "boundary-conditions"], [382, "boundary-conditions"], [436, "boundary-conditions"]], "Boundary conditions": [[385, "boundary-conditions"]], "Build": [[377, "build"], [378, "build"], [379, "build"], [380, "build"], [381, "build"], [382, "build"], [385, "build"]], "Building documentation and examples": [[373, null]], "Buoyancy": [[396, "buoyancy"]], "Calculating flow velocity": [[413, "calculating-flow-velocity"]], "Change cellsize (and extent)": [[419, "change-cellsize-and-extent"], [420, "change-cellsize-and-extent"]], "Change time resolution": [[419, "change-time-resolution"], [420, "change-time-resolution"]], "Changed": [[0, "changed"], [0, "id4"], [0, "id7"], [0, "id12"], [0, "id16"], [0, "id21"], [0, "id24"], [0, "id31"], [0, "id35"], [0, "id37"], [0, "id40"], [0, "id44"], [0, "id47"], [0, "id50"], [0, "id62"], [0, "id68"], [0, "id72"], [0, "id79"], [0, "id82"], [0, "id86"], [0, "id91"], [0, "id95"], [0, "id101"], [0, "id109"], [0, "id114"]], "Changelog": [[0, null]], "Chunk size and memory layout": [[435, "chunk-size-and-memory-layout"]], "Circle": [[394, null]], "Circle partitioned": [[395, null]], "Cleaning data without a MODFLOW6 simulation": [[439, "cleaning-data-without-a-modflow6-simulation"]], "Code review": [[371, "code-review"]], "Code style": [[371, "code-style"]], "Comparison with histograms": [[437, "comparison-with-histograms"]], "Computation times": [[384, null], [387, null], [392, null], [405, null], [412, null], [416, null], [430, null], [441, null]], "Conditional evaluation": [[419, "conditional-evaluation"], [420, "conditional-evaluation"]], "Constant head edge": [[401, "constant-head-edge"]], "Constant head package - CHD": [[401, "constant-head-package-chd"]], "Contributing Code": [[371, null]], "Conversion to raster": [[432, "conversion-to-raster"]], "Convert structured data to UGRID netCDF": [[418, "convert-structured-data-to-ugrid-netcdf"], [419, "convert-structured-data-to-ugrid-netcdf"]], "Coordinate reference systems (CRS)": [[431, "coordinate-reference-systems-crs"]], "Coupled MetaSWAP - Modflow6 model": [[390, null]], "Create DataArrays": [[398, "create-dataarrays"], [404, "create-dataarrays"]], "Create UgridDataArray": [[394, "create-ugriddataarray"]], "Create a mesh": [[394, "create-a-mesh"], [396, "create-a-mesh"]], "Create an empty raster": [[419, "create-an-empty-raster"], [420, "create-an-empty-raster"]], "Create grid coordinates": [[398, "create-grid-coordinates"], [404, "create-grid-coordinates"]], "Create the container": [[370, "create-the-container"]], "Creating an example file": [[391, "creating-an-example-file"]], "Data In/Out": [[418, null], [419, "data-in-out"]], "Data cleanup": [[439, null]], "Data modification": [[419, "data-modification"], [420, null]], "Data structures": [[417, "data-structures"]], "Debugging Continuous Integration": [[370, null]], "Delayed computation and (i)MODFLOW files": [[435, "delayed-computation-and-i-modflow-files"]], "Dependencies": [[417, "dependencies"], [429, "dependencies"]], "Dependency conflicts": [[427, "dependency-conflicts"]], "Deprecated": [[0, "deprecated"], [0, "id108"], [0, "id113"]], "Developing": [[375, null]], "Developing examples": [[374, null]], "Different ways to regrid models": [[397, null]], "Discretization": [[363, "discretization"], [377, "discretization"], [378, "discretization"], [379, "discretization"], [380, "discretization"], [382, "discretization"], [385, "discretization"]], "Distribute conductance": [[438, "distribute-conductance"]], "Docker build image": [[372, null]], "Dockerfile": [[372, "dockerfile"]], "Drainage package - DRN": [[401, "drainage-package-drn"]], "Elder": [[377, null]], "Evaluate model output": [[1, null]], "Example data": [[438, "example-data"]], "Example models": [[400, null]], "Examples": [[388, null]], "Experienced": [[429, "experienced"]], "Extract head at points": [[401, "extract-head-at-points"]], "FAQ": [[424, null]], "Files": [[423, "files"]], "Fill/Interpolate nodata": [[419, "fill-interpolate-nodata"], [419, "id3"], [420, "fill-interpolate-nodata"], [422, "fill-interpolate-nodata"]], "Fixed": [[0, "fixed"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id13"], [0, "id17"], [0, "id20"], [0, "id25"], [0, "id27"], [0, "id30"], [0, "id34"], [0, "id39"], [0, "id45"], [0, "id51"], [0, "id55"], [0, "id58"], [0, "id61"], [0, "id65"], [0, "id67"], [0, "id71"], [0, "id75"], [0, "id77"], [0, "id84"], [0, "id88"], [0, "id92"], [0, "id98"], [0, "id105"], [0, "id110"], [0, "id116"]], "Flow": [[369, "flow"]], "Flow Packages": [[363, "flow-packages"]], "Flow velocities and streamlines": [[413, null]], "Force loading into memory / dask array to numpy array": [[419, "force-loading-into-memory-dask-array-to-numpy-array"], [420, "force-loading-into-memory-dask-array-to-numpy-array"]], "Freshwater Lens": [[378, null]], "Freshwater lens (circle)": [[396, null]], "General": [[426, "general"]], "General Questions": [[417, null]], "Generate a mesh": [[419, "generate-a-mesh"], [422, "generate-a-mesh"]], "Get a single value (e.g. a summary statistic)": [[419, "get-a-single-value-e-g-a-summary-statistic"], [420, "get-a-single-value-e-g-a-summary-statistic"]], "Grid": [[2, "grid"]], "Groundwater Modeling with iMOD": [[426, null]], "Head point interpolation": [[408, null]], "Henry": [[379, null], [393, null]], "Horizontal Flow Barrier": [[385, "horizontal-flow-barrier"]], "How do I \u2026": [[419, null]], "How is imod-python different from FloPy?": [[417, "how-is-imod-python-different-from-flopy"]], "How to build": [[372, "how-to-build"]], "How to release a new version": [[376, null]], "Hydraulic conductivity": [[401, "hydraulic-conductivity"]], "Hydrocoin": [[380, null]], "Hydrogeology": [[380, "hydrogeology"], [385, "hydrogeology"]], "If-then-else": [[419, "if-then-else"], [420, "if-then-else"]], "Import IDF file": [[418, "import-idf-file"], [419, "import-idf-file"]], "Import IPF file": [[418, "import-ipf-file"], [419, "import-ipf-file"]], "Import a single netCDF variable as DataArray": [[418, "import-a-single-netcdf-variable-as-dataarray"], [419, "import-a-single-netcdf-variable-as-dataarray"]], "Import drainage information": [[401, "import-drainage-information"]], "Import heads results": [[401, "import-heads-results"]], "Import multiple IDF files": [[418, "import-multiple-idf-files"], [419, "import-multiple-idf-files"]], "Import netCDF file as Dataset": [[418, "import-netcdf-file-as-dataset"], [419, "import-netcdf-file-as-dataset"]], "Import river information": [[401, "import-river-information"]], "Increase the extent of a raster": [[419, "increase-the-extent-of-a-raster"], [420, "increase-the-extent-of-a-raster"]], "Initial Conditions": [[377, "initial-conditions"], [378, "initial-conditions"], [381, "initial-conditions"], [382, "initial-conditions"]], "Initial conditions": [[380, "initial-conditions"], [385, "initial-conditions"]], "Initial conditions package - IC": [[401, "initial-conditions-package-ic"]], "Input and output": [[431, "input-and-output"], [432, "input-and-output"]], "Input/output": [[360, null]], "Install beta release": [[429, "install-beta-release"]], "Installing": [[429, null]], "Installing Python and packages": [[427, null]], "Installing Python packages \u2013 without the agonizing pain": [[427, "installing-python-packages-without-the-agonizing-pain"]], "Installing a development version of iMOD Python": [[427, "installing-a-development-version-of-imod-python"]], "Installing the latest development version": [[429, "installing-the-latest-development-version"]], "Installing with Deltaforge": [[429, "installing-with-deltaforge"]], "Installing with conda": [[429, "installing-with-conda"]], "Installing with pip": [[429, "installing-with-pip"]], "Installing with pixi": [[429, "installing-with-pixi"]], "Known Issues": [[425, null]], "Known issues": [[423, "known-issues"]], "Lake package example": [[404, null]], "Large data": [[417, "large-data"]], "Lazy evaluation": [[435, null]], "Load data": [[401, "load-data"]], "Logging": [[361, null]], "MODFLOW6": [[363, null], [403, null], [423, "modflow6"], [426, "modflow6"]], "MODFLOW6 package": [[438, "modflow6-package"]], "Make data readable by QGIS": [[418, "make-data-readable-by-qgis"], [419, "make-data-readable-by-qgis"]], "MetaMod": [[362, null]], "MetaSWAP": [[364, null], [389, null], [423, "metaswap"]], "Model": [[2, "model"], [369, "model"]], "Model Creation": [[385, null]], "Model objects & methods": [[363, "model-objects-methods"]], "Model settings": [[363, "model-settings"]], "Model simulation": [[401, "model-simulation"]], "Model time discretization": [[436, null]], "Modflow 6 versions": [[425, "modflow-6-versions"]], "More dimensions": [[431, "more-dimensions"]], "New": [[429, "new"]], "Node property flow package - NPF": [[401, "node-property-flow-package-npf"]], "Notes": [[423, "notes"]], "Obtain the image": [[370, "obtain-the-image"]], "Obtaining the final (i)domain": [[437, "obtaining-the-final-i-domain"]], "Open the results": [[393, "open-the-results"], [394, "open-the-results"], [396, "open-the-results"], [398, "open-the-results"], [404, "open-the-results"]], "Other raster formats": [[431, "other-raster-formats"]], "Output Control package - OC": [[401, "output-control-package-oc"]], "Overview allocation options": [[438, "overview-allocation-options"]], "Packages": [[2, "packages"]], "Parameters": [[396, "parameters"]], "Partitioning a regional model": [[402, null]], "Periodic central ditch": [[385, "periodic-central-ditch"]], "Pitfalls": [[435, "pitfalls"]], "Plot a timeseries for a single cell": [[419, "plot-a-timeseries-for-a-single-cell"], [419, "id1"], [421, null], [422, "plot-a-timeseries-for-a-single-cell"]], "Plot head of one layer at one time": [[419, "plot-head-of-one-layer-at-one-time"], [419, "id2"], [421, "plot-head-of-one-layer-at-one-time"], [422, "plot-head-of-one-layer-at-one-time"]], "Plot maps": [[415, null]], "Polygonize raster": [[409, null]], "Postprocessing": [[423, "postprocessing"]], "Prepare": [[407, null]], "Prepare model input": [[365, null]], "Pushing the image": [[372, "pushing-the-image"]], "Python versions": [[425, "python-versions"]], "Quiver plot": [[413, "quiver-plot"]], "Raster data and xarray": [[431, null]], "Rasterize polygon data": [[419, "rasterize-polygon-data"], [420, "rasterize-polygon-data"]], "Rasterize shapefiles": [[410, null]], "Read Output": [[363, "read-output"]], "Reading existing MetaSWAP input": [[391, null]], "Reading the .inp file": [[391, "reading-the-inp-file"]], "Recharge": [[396, "recharge"], [401, "recharge"]], "Recharge - Steady state": [[401, "recharge-steady-state"]], "Recharge - Transient": [[401, "recharge-transient"]], "Regional model": [[401, null]], "Regrid": [[363, "regrid"]], "Regrid Method Settings": [[363, "regrid-method-settings"]], "Regridding": [[437, null]], "Regridding boundary conditions": [[437, "regridding-boundary-conditions"]], "Regridding using default methods": [[437, "regridding-using-default-methods"]], "Regridding using non-default methods": [[437, "regridding-using-non-default-methods"]], "Regular install": [[429, "regular-install"]], "Removed": [[0, "removed"], [0, "id42"], [0, "id80"], [0, "id102"], [0, "id107"], [0, "id112"]], "Reporting bugs": [[375, "reporting-bugs"]], "Reproject data": [[411, null]], "Reproject points": [[411, "reproject-points"]], "Reproject raster dataset": [[411, "reproject-raster-dataset"]], "Reproject vector dataset": [[411, "reproject-vector-dataset"]], "Results visualization": [[401, "results-visualization"]], "Rising outer ditches": [[385, "rising-outer-ditches"]], "River package - RIV": [[401, "river-package-riv"]], "Run": [[377, "run"], [378, "run"], [379, "run"], [380, "run"], [381, "run"], [382, "run"], [385, "run"]], "Run the model": [[393, "run-the-model"], [394, "run-the-model"], [396, "run-the-model"], [398, "run-the-model"], [401, "run-the-model"], [404, "run-the-model"]], "Running the pipeline steps inside the docker build container": [[370, "running-the-pipeline-steps-inside-the-docker-build-container"]], "Running the pipeline steps locally": [[370, "running-the-pipeline-steps-locally"]], "Saltwater Pocket": [[381, null]], "Select a single variable from a dataset": [[419, "select-a-single-variable-from-a-dataset"], [420, "select-a-single-variable-from-a-dataset"]], "Select along a single layer": [[419, "select-along-a-single-layer"], [420, "select-along-a-single-layer"]], "Select part of the data": [[419, "select-part-of-the-data"], [420, "select-part-of-the-data"]], "Select points (from a vector dataset)": [[419, "select-points-from-a-vector-dataset"], [419, "id4"], [420, "select-points-from-a-vector-dataset"], [422, "select-points-from-a-vector-dataset"]], "Select points and cross sections": [[366, null]], "Setting up an environment": [[427, "setting-up-an-environment"]], "Settings": [[369, "settings"]], "Slice the model domain": [[394, "slice-the-model-domain"]], "Smooth data": [[419, "smooth-data"], [420, "smooth-data"]], "Solver": [[2, "solver"]], "Solver settings": [[401, "solver-settings"]], "Specifying extra settings": [[436, "specifying-extra-settings"]], "Starting heads interpolation": [[401, "starting-heads-interpolation"]], "Storage package - STO": [[401, "storage-package-sto"]], "Streamline function": [[413, "streamline-function"]], "Sum properties over layers": [[419, "sum-properties-over-layers"], [420, "sum-properties-over-layers"]], "Supported models": [[417, "supported-models"]], "TL;DR": [[429, "tl-dr"]], "TWRI": [[398, null]], "The cleanup method": [[439, "the-cleanup-method"]], "Time series data and Pandas": [[433, null]], "Timeseries at point locations": [[433, "timeseries-at-point-locations"]], "Topsystem: from 2D map to 3D model": [[438, null]], "Transport": [[369, "transport"]], "Transport 2d example": [[406, null]], "Transport Packages": [[363, "transport-packages"]], "Two dimensions: x, y": [[431, "two-dimensions-x-y"]], "Unstructured": [[419, "unstructured"], [422, null]], "Unstructured Grids": [[434, null]], "Unsupported packages": [[437, "unsupported-packages"]], "Update existing model with new data": [[439, "update-existing-model-with-new-data"]], "Updating the Pixi version": [[372, "updating-the-pixi-version"]], "Use a river infiltration factor in MODFLOW6": [[426, "use-a-river-infiltration-factor-in-modflow6"]], "User Guide": [[440, null]], "Utilities": [[367, null]], "Vector data and Geopandas": [[432, null]], "Version control": [[371, "version-control"]], "Vertical Interface": [[382, null]], "Visualise results": [[377, "visualise-results"], [378, "visualise-results"], [381, "visualise-results"]], "Visualization": [[414, null], [423, "visualization"]], "Visualize": [[368, null]], "Visualize the results": [[393, "visualize-the-results"], [394, "visualize-the-results"], [396, "visualize-the-results"], [398, "visualize-the-results"], [404, "visualize-the-results"]], "Ways to install iMOD Python": [[429, "ways-to-install-imod-python"]], "Wells": [[385, "wells"]], "What are specific yield, specific storage, storage coefficient (storativity)?": [[426, "what-are-specific-yield-specific-storage-storage-coefficient-storativity"]], "Which Python?": [[429, "which-python"]], "Write the model": [[394, "write-the-model"], [398, "write-the-model"]], "Writing the cleaned model": [[439, "writing-the-cleaned-model"]], "Zonal statistics": [[419, "zonal-statistics"], [420, "zonal-statistics"]], "[0.10.0] - 2020-05-23": [[0, "id85"]], "[0.10.1] - 2020-10-19": [[0, "id81"]], "[0.11.0] - 2021-12-21": [[0, "id76"]], "[0.11.1] - 2021-12-23": [[0, "id74"]], "[0.11.4] - 2022-09-05": [[0, "id70"]], "[0.11.5] - 2022-12-15": [[0, "id66"]], "[0.11.6] - 2023-02-01": [[0, "id63"]], "[0.12.0] - 2023-03-17": [[0, "id59"]], "[0.13.0] - 2023-05-02": [[0, "id56"]], "[0.13.1] - 2023-05-05": [[0, "id53"]], "[0.13.2] - 2023-07-26": [[0, "id49"]], "[0.14.0] - 2023-09-06": [[0, "id46"]], "[0.14.1] - 2023-09-07": [[0, "id43"]], "[0.15.0] - 2023-11-25": [[0, "id38"]], "[0.15.1] - 2023-12-22": [[0, "id33"]], "[0.15.2] - 2024-02-16": [[0, "id29"]], "[0.15.3] - 2024-02-22": [[0, "id26"]], "[0.16.0] - 2024-03-29": [[0, "id22"]], "[0.17.0] - 2024-05-13": [[0, "id18"]], "[0.17.1] - 2024-05-16": [[0, "id14"]], "[0.17.2] - 2024-09-17": [[0, "id9"]], "[0.18.0] - 2024-11-11": [[0, "id5"]], "[0.18.1] - 2024-11-20": [[0, "id1"]], "[0.5.0] - 2019-02-26": [[0, "id111"]], "[0.6.0] - 2019-03-15": [[0, "id106"]], "[0.6.1] - 2019-04-17": [[0, "id103"]], "[0.7.0] - 2019-07-23": [[0, "id99"]], "[0.7.1] - 2019-08-07": [[0, "id96"]], "[0.8.0] - 2019-10-14": [[0, "id93"]], "[0.9.0] - 2020-01-19": [[0, "id89"]], "[1.0.0b0] - 2024-12-20": [[0, "b0-2024-12-20"]], "iMOD Python: make massive MODFLOW models": [[428, null]], "iMOD-WQ": [[369, null], [383, null]], "iMOD5 Backwards compatibility": [[425, "imod5-backwards-compatibility"]], "iMOD5 backwards compatibility": [[423, null]], "iMODFLOW": [[2, null], [386, null]], "icelltype": [[401, "icelltype"]], "imod.couplers.metamod.MetaMod": [[73, null]], "imod.evaluate.calculate_gxg": [[3, null]], "imod.evaluate.convert_pointwaterhead_freshwaterhead": [[4, null]], "imod.evaluate.facebudget": [[5, null]], "imod.evaluate.flow_velocity": [[6, null]], "imod.evaluate.interpolate_value_boundaries": [[7, null]], "imod.evaluate.intra_cell_boundary_conditions": [[8, null]], "imod.evaluate.quiver_line": [[9, null]], "imod.evaluate.quiver_linestring": [[10, null]], "imod.evaluate.stability_constraint_advection": [[11, null]], "imod.evaluate.stability_constraint_wel": [[12, null]], "imod.evaluate.streamfunction_line": [[13, null]], "imod.evaluate.streamfunction_linestring": [[14, null]], "imod.flow.Bottom": [[15, null]], "imod.flow.Boundary": [[16, null]], "imod.flow.ConstantHead": [[17, null]], "imod.flow.Drain": [[18, null]], "imod.flow.EvapoTranspiration": [[19, null]], "imod.flow.GeneralHeadBoundary": [[20, null]], "imod.flow.HorizontalAnisotropy": [[21, null]], "imod.flow.HorizontalFlowBarrier": [[22, null]], "imod.flow.HorizontalHydraulicConductivity": [[23, null]], "imod.flow.ImodflowModel": [[24, null]], "imod.flow.ImodflowModel.create_time_discretization": [[25, null]], "imod.flow.MetaSwap": [[26, null]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, null]], "imod.flow.Recharge": [[28, null]], "imod.flow.River": [[29, null]], "imod.flow.SpecificStorage": [[30, null]], "imod.flow.StartingHead": [[31, null]], "imod.flow.StorageCoefficient": [[32, null]], "imod.flow.Top": [[33, null]], "imod.flow.VerticalAnisotropy": [[34, null]], "imod.flow.VerticalHydraulicConductivity": [[35, null]], "imod.flow.Well": [[36, null]], "imod.formats.gen.read": [[37, null]], "imod.formats.gen.read_ascii": [[38, null]], "imod.formats.gen.write": [[39, null]], "imod.formats.idf.header": [[40, null]], "imod.formats.idf.open": [[41, null]], "imod.formats.idf.open_dataset": [[42, null]], "imod.formats.idf.open_subdomains": [[43, null]], "imod.formats.idf.save": [[44, null]], "imod.formats.ipf.read": [[45, null]], "imod.formats.ipf.read_associated": [[46, null]], "imod.formats.ipf.save": [[47, null]], "imod.formats.ipf.write": [[48, null]], "imod.formats.ipf.write_assoc": [[49, null]], "imod.formats.prj.open_projectfile_data": [[50, null]], "imod.formats.prj.read_projectfile": [[51, null]], "imod.formats.prj.read_timfile": [[52, null]], "imod.formats.rasterio.header": [[53, null]], "imod.formats.rasterio.open": [[54, null]], "imod.formats.rasterio.save": [[55, null]], "imod.logging": [[56, null]], "imod.logging.config": [[57, null]], "imod.logging.config.LoggerType": [[58, null]], "imod.logging.config.configure": [[59, null]], "imod.logging.ilogger": [[60, null]], "imod.logging.ilogger.ILogger": [[61, null]], "imod.logging.logging_decorators": [[62, null]], "imod.logging.logging_decorators.init_log_decorator": [[63, null]], "imod.logging.logging_decorators.standard_log_decorator": [[64, null]], "imod.logging.loglevel": [[65, null]], "imod.logging.loglevel.LogLevel": [[66, null]], "imod.logging.logurulogger": [[67, null]], "imod.logging.logurulogger.LoguruLogger": [[68, null]], "imod.logging.nulllogger": [[69, null]], "imod.logging.nulllogger.NullLogger": [[70, null]], "imod.logging.pythonlogger": [[71, null]], "imod.logging.pythonlogger.PythonLogger": [[72, null]], "imod.mf6.AdvectionCentral": [[74, null]], "imod.mf6.AdvectionTVD": [[75, null]], "imod.mf6.AdvectionUpstream": [[76, null]], "imod.mf6.ApiPackage": [[77, null]], "imod.mf6.Buoyancy": [[78, null]], "imod.mf6.ConstantConcentration": [[79, null]], "imod.mf6.ConstantHead": [[80, null]], "imod.mf6.ConstantHead.clip_box": [[81, null]], "imod.mf6.ConstantHead.from_imod5_data": [[82, null]], "imod.mf6.ConstantHead.from_imod5_shd_data": [[83, null]], "imod.mf6.ConstantHead.mask": [[84, null]], "imod.mf6.ConstantHead.regrid_like": [[85, null]], "imod.mf6.Dispersion": [[86, null]], "imod.mf6.Drainage": [[87, null]], "imod.mf6.Drainage.cleanup": [[88, null]], "imod.mf6.Drainage.clip_box": [[89, null]], "imod.mf6.Drainage.from_imod5_data": [[90, null]], "imod.mf6.Drainage.mask": [[91, null]], "imod.mf6.Drainage.regrid_like": [[92, null]], "imod.mf6.Evapotranspiration": [[93, null]], "imod.mf6.Evapotranspiration.clip_box": [[94, null]], "imod.mf6.Evapotranspiration.mask": [[95, null]], "imod.mf6.Evapotranspiration.regrid_like": [[96, null]], "imod.mf6.GeneralHeadBoundary": [[97, null]], "imod.mf6.GeneralHeadBoundary.cleanup": [[98, null]], "imod.mf6.GeneralHeadBoundary.clip_box": [[99, null]], "imod.mf6.GeneralHeadBoundary.from_imod5_data": [[100, null]], "imod.mf6.GeneralHeadBoundary.mask": [[101, null]], "imod.mf6.GeneralHeadBoundary.regrid_like": [[102, null]], "imod.mf6.GroundwaterFlowModel": [[103, null]], "imod.mf6.GroundwaterFlowModel.dump": [[104, null]], "imod.mf6.GroundwaterFlowModel.from_imod5_data": [[105, null]], "imod.mf6.GroundwaterFlowModel.mask_all_packages": [[106, null]], "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6": [[107, null]], "imod.mf6.GroundwaterTransportModel": [[108, null]], "imod.mf6.GroundwaterTransportModel.dump": [[109, null]], "imod.mf6.GroundwaterTransportModel.mask_all_packages": [[110, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[111, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[112, null]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[113, null]], "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg": [[114, null]], "imod.mf6.HorizontalFlowBarrierResistance": [[115, null]], "imod.mf6.HorizontalFlowBarrierResistance.clip_box": [[116, null]], "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg": [[117, null]], "imod.mf6.ImmobileStorageTransfer": [[118, null]], "imod.mf6.InitialConditions": [[119, null]], "imod.mf6.InitialConditions.clip_box": [[120, null]], "imod.mf6.InitialConditions.from_imod5_data": [[121, null]], "imod.mf6.InitialConditions.mask": [[122, null]], "imod.mf6.InitialConditions.regrid_like": [[123, null]], "imod.mf6.LayeredWell": [[124, null]], "imod.mf6.LayeredWell.clip_box": [[125, null]], "imod.mf6.LayeredWell.from_imod5_cap_data": [[126, null]], "imod.mf6.LayeredWell.from_imod5_data": [[127, null]], "imod.mf6.LayeredWell.mask": [[128, null]], "imod.mf6.LayeredWell.regrid_like": [[129, null]], "imod.mf6.LayeredWell.to_mf6_pkg": [[130, null]], "imod.mf6.MassSourceLoading": [[131, null]], "imod.mf6.MobileStorageTransfer": [[132, null]], "imod.mf6.Modflow6Simulation": [[133, null]], "imod.mf6.Modflow6Simulation.clip_box": [[134, null]], "imod.mf6.Modflow6Simulation.create_time_discretization": [[135, null]], "imod.mf6.Modflow6Simulation.dump": [[136, null]], "imod.mf6.Modflow6Simulation.from_imod5_data": [[137, null]], "imod.mf6.Modflow6Simulation.open_concentration": [[138, null]], "imod.mf6.Modflow6Simulation.open_flow_budget": [[139, null]], "imod.mf6.Modflow6Simulation.open_head": [[140, null]], "imod.mf6.Modflow6Simulation.open_transport_budget": [[141, null]], "imod.mf6.Modflow6Simulation.regrid_like": [[142, null]], "imod.mf6.Modflow6Simulation.run": [[143, null]], "imod.mf6.Modflow6Simulation.split": [[144, null]], "imod.mf6.Modflow6Simulation.write": [[145, null]], "imod.mf6.NodePropertyFlow": [[146, null]], "imod.mf6.NodePropertyFlow.clip_box": [[147, null]], "imod.mf6.NodePropertyFlow.from_imod5_data": [[148, null]], "imod.mf6.NodePropertyFlow.mask": [[149, null]], "imod.mf6.NodePropertyFlow.regrid_like": [[150, null]], "imod.mf6.OutputControl": [[151, null]], "imod.mf6.Recharge": [[152, null]], "imod.mf6.Recharge.clip_box": [[153, null]], "imod.mf6.Recharge.from_imod5_data": [[154, null]], "imod.mf6.Recharge.mask": [[155, null]], "imod.mf6.Recharge.regrid_like": [[156, null]], "imod.mf6.River": [[157, null]], "imod.mf6.River.cleanup": [[158, null]], "imod.mf6.River.clip_box": [[159, null]], "imod.mf6.River.from_imod5_data": [[160, null]], "imod.mf6.River.mask": [[161, null]], "imod.mf6.River.regrid_like": [[162, null]], "imod.mf6.River.split_conductance": [[163, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[164, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box": [[165, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[166, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[167, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box": [[168, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg": [[169, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[170, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box": [[171, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data": [[172, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg": [[173, null]], "imod.mf6.Solution": [[174, null]], "imod.mf6.SolutionPresetComplex": [[175, null]], "imod.mf6.SolutionPresetModerate": [[176, null]], "imod.mf6.SolutionPresetSimple": [[177, null]], "imod.mf6.SourceSinkMixing": [[178, null]], "imod.mf6.SourceSinkMixing.from_flow_model": [[179, null]], "imod.mf6.SpecificStorage": [[180, null]], "imod.mf6.SpecificStorage.clip_box": [[181, null]], "imod.mf6.SpecificStorage.mask": [[182, null]], "imod.mf6.SpecificStorage.regrid_like": [[183, null]], "imod.mf6.StorageCoefficient": [[184, null]], "imod.mf6.StorageCoefficient.clip_box": [[185, null]], "imod.mf6.StorageCoefficient.from_imod5_data": [[186, null]], "imod.mf6.StorageCoefficient.mask": [[187, null]], "imod.mf6.StorageCoefficient.regrid_like": [[188, null]], "imod.mf6.StructuredDiscretization": [[189, null]], "imod.mf6.StructuredDiscretization.clip_box": [[190, null]], "imod.mf6.StructuredDiscretization.from_imod5_data": [[191, null]], "imod.mf6.StructuredDiscretization.regrid_like": [[192, null]], "imod.mf6.TimeDiscretization": [[193, null]], "imod.mf6.UnsaturatedZoneFlow": [[194, null]], "imod.mf6.VerticesDiscretization": [[195, null]], "imod.mf6.VerticesDiscretization.clip_box": [[196, null]], "imod.mf6.VerticesDiscretization.regrid_like": [[197, null]], "imod.mf6.Well": [[198, null]], "imod.mf6.Well.cleanup": [[199, null]], "imod.mf6.Well.clip_box": [[200, null]], "imod.mf6.Well.from_imod5_data": [[201, null]], "imod.mf6.Well.mask": [[202, null]], "imod.mf6.Well.regrid_like": [[203, null]], "imod.mf6.Well.to_mf6_pkg": [[204, null]], "imod.mf6.WellDisStructured": [[205, null]], "imod.mf6.WellDisVertices": [[206, null]], "imod.mf6.open_cbc": [[207, null]], "imod.mf6.open_hds": [[208, null]], "imod.mf6.read_cbc_headers": [[209, null]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[210, null]], "imod.mf6.regrid.DiscretizationRegridMethod": [[211, null]], "imod.mf6.regrid.DispersionRegridMethod": [[212, null]], "imod.mf6.regrid.DrainageRegridMethod": [[213, null]], "imod.mf6.regrid.EmptyRegridMethod": [[214, null]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[215, null]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[216, null]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[217, null]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[218, null]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[219, null]], "imod.mf6.regrid.RechargeRegridMethod": [[220, null]], "imod.mf6.regrid.RiverRegridMethod": [[221, null]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[222, null]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[223, null]], "imod.msw.AnnualCropFactors": [[224, null]], "imod.msw.CouplerMapping": [[225, null]], "imod.msw.EvapotranspirationMapping": [[226, null]], "imod.msw.EvapotranspirationMapping.from_imod5_data": [[227, null]], "imod.msw.GridData": [[228, null]], "imod.msw.GridData.from_imod5_data": [[229, null]], "imod.msw.IdfMapping": [[230, null]], "imod.msw.Infiltration": [[231, null]], "imod.msw.Infiltration.from_imod5_data": [[232, null]], "imod.msw.InitialConditionsEquilibrium": [[233, null]], "imod.msw.InitialConditionsPercolation": [[234, null]], "imod.msw.InitialConditionsRootzonePressureHead": [[235, null]], "imod.msw.InitialConditionsSavedState": [[236, null]], "imod.msw.LanduseOptions": [[237, null]], "imod.msw.MetaSwapModel": [[238, null]], "imod.msw.MetaSwapModel.from_imod5_data": [[239, null]], "imod.msw.MetaSwapModel.regrid_like": [[240, null]], "imod.msw.MetaSwapModel.write": [[241, null]], "imod.msw.MeteoGrid": [[242, null]], "imod.msw.MeteoGridCopy": [[243, null]], "imod.msw.MeteoGridCopy.from_imod5_data": [[244, null]], "imod.msw.Ponding": [[245, null]], "imod.msw.Ponding.from_imod5_data": [[246, null]], "imod.msw.PrecipitationMapping": [[247, null]], "imod.msw.PrecipitationMapping.from_imod5_data": [[248, null]], "imod.msw.ScalingFactors": [[249, null]], "imod.msw.ScalingFactors.from_imod5_data": [[250, null]], "imod.msw.Sprinkling": [[251, null]], "imod.msw.Sprinkling.from_imod5_data": [[252, null]], "imod.msw.TimeOutputControl": [[253, null]], "imod.msw.VariableOutputControl": [[254, null]], "imod.prepare.ALLOCATION_OPTION": [[255, null]], "imod.prepare.DISTRIBUTING_OPTION": [[256, null]], "imod.prepare.LayerRegridder": [[257, null]], "imod.prepare.Regridder": [[258, null]], "imod.prepare.SimulationAllocationOptions": [[259, null]], "imod.prepare.SimulationDistributingOptions": [[260, null]], "imod.prepare.Voxelizer": [[261, null]], "imod.prepare.allocate_drn_cells": [[262, null]], "imod.prepare.allocate_ghb_cells": [[263, null]], "imod.prepare.allocate_rch_cells": [[264, null]], "imod.prepare.allocate_riv_cells": [[265, null]], "imod.prepare.assign_wells": [[266, null]], "imod.prepare.c_leakage": [[267, null]], "imod.prepare.c_radial": [[268, null]], "imod.prepare.celltable": [[269, null]], "imod.prepare.cleanup_drn": [[270, null]], "imod.prepare.cleanup_ghb": [[271, null]], "imod.prepare.cleanup_riv": [[272, null]], "imod.prepare.cleanup_wel": [[273, null]], "imod.prepare.create_layered_top": [[274, null]], "imod.prepare.distribute_drn_conductance": [[275, null]], "imod.prepare.distribute_ghb_conductance": [[276, null]], "imod.prepare.distribute_riv_conductance": [[277, null]], "imod.prepare.fill": [[278, null]], "imod.prepare.gdal_rasterize": [[279, null]], "imod.prepare.get_lower_active_grid_cells": [[280, null]], "imod.prepare.get_lower_active_layer_number": [[281, null]], "imod.prepare.get_upper_active_grid_cells": [[282, null]], "imod.prepare.get_upper_active_layer_number": [[283, null]], "imod.prepare.laplace_interpolate": [[284, null]], "imod.prepare.linestring_to_square_zpolygons": [[285, null]], "imod.prepare.linestring_to_trapezoid_zpolygons": [[286, null]], "imod.prepare.polygonize": [[287, null]], "imod.prepare.rasterize": [[288, null]], "imod.prepare.rasterize_celltable": [[289, null]], "imod.prepare.reproject": [[290, null]], "imod.prepare.zonal_aggregate_polygons": [[291, null]], "imod.prepare.zonal_aggregate_raster": [[292, null]], "imod.select.active_grid_boundary_xy": [[293, null]], "imod.select.cross_section_line": [[294, null]], "imod.select.cross_section_linestring": [[295, null]], "imod.select.grid_boundary_xy": [[296, null]], "imod.select.points_in_bounds": [[297, null]], "imod.select.points_indices": [[298, null]], "imod.select.points_set_values": [[299, null]], "imod.select.points_values": [[300, null]], "imod.select.upper_active_layer": [[301, null]], "imod.util.cd": [[302, null]], "imod.util.coord_reference": [[303, null]], "imod.util.empty_2d": [[304, null]], "imod.util.empty_2d_transient": [[305, null]], "imod.util.empty_3d": [[306, null]], "imod.util.empty_3d_transient": [[307, null]], "imod.util.from_mdal_compliant_ugrid2d": [[308, null]], "imod.util.ignore_warnings": [[309, null]], "imod.util.mdal_compliant_ugrid2d": [[310, null]], "imod.util.print_if_error": [[311, null]], "imod.util.spatial_reference": [[312, null]], "imod.util.to_datetime": [[313, null]], "imod.util.to_ugrid2d": [[314, null]], "imod.util.transform": [[315, null]], "imod.util.where": [[316, null]], "imod.visualize.GridAnimation3D": [[317, null]], "imod.visualize.StaticGridAnimation3D": [[318, null]], "imod.visualize.cross_section": [[319, null]], "imod.visualize.grid_3d": [[320, null]], "imod.visualize.imshow_topview": [[321, null]], "imod.visualize.line_3d": [[322, null]], "imod.visualize.plot_map": [[323, null]], "imod.visualize.quiver": [[324, null]], "imod.visualize.read_imod_legend": [[325, null]], "imod.visualize.streamfunction": [[326, null]], "imod.visualize.waterbalance_barchart": [[327, null]], "imod.wq.AdvectionFiniteDifference": [[328, null]], "imod.wq.AdvectionHybridMOC": [[329, null]], "imod.wq.AdvectionMOC": [[330, null]], "imod.wq.AdvectionModifiedMOC": [[331, null]], "imod.wq.AdvectionTVD": [[332, null]], "imod.wq.BasicFlow": [[333, null]], "imod.wq.BasicTransport": [[334, null]], "imod.wq.ConstantHead": [[335, null]], "imod.wq.Dispersion": [[336, null]], "imod.wq.Drainage": [[337, null]], "imod.wq.EvapotranspirationHighestActive": [[338, null]], "imod.wq.EvapotranspirationLayers": [[339, null]], "imod.wq.EvapotranspirationTopLayer": [[340, null]], "imod.wq.GeneralHeadBoundary": [[341, null]], "imod.wq.GeneralizedConjugateGradientSolver": [[342, null]], "imod.wq.LayerPropertyFlow": [[343, null]], "imod.wq.MassLoading": [[344, null]], "imod.wq.OutputControl": [[345, null]], "imod.wq.ParallelKrylovFlowSolver": [[346, null]], "imod.wq.ParallelKrylovTransportSolver": [[347, null]], "imod.wq.PreconditionedConjugateGradientSolver": [[348, null]], "imod.wq.RechargeHighestActive": [[349, null]], "imod.wq.RechargeLayers": [[350, null]], "imod.wq.RechargeTopLayer": [[351, null]], "imod.wq.River": [[352, null]], "imod.wq.SeawatModel": [[353, null]], "imod.wq.SeawatModel.create_time_discretization": [[354, null]], "imod.wq.TimeDiscretization": [[355, null]], "imod.wq.TimeVaryingConstantConcentration": [[356, null]], "imod.wq.VariableDensityFlow": [[357, null]], "imod.wq.Well": [[358, null]], "netCDF": [[431, "netcdf"]]}, "docnames": ["api/changelog", "api/evaluate", "api/flow", "api/generated/evaluate/imod.evaluate.calculate_gxg", "api/generated/evaluate/imod.evaluate.convert_pointwaterhead_freshwaterhead", "api/generated/evaluate/imod.evaluate.facebudget", "api/generated/evaluate/imod.evaluate.flow_velocity", "api/generated/evaluate/imod.evaluate.interpolate_value_boundaries", "api/generated/evaluate/imod.evaluate.intra_cell_boundary_conditions", "api/generated/evaluate/imod.evaluate.quiver_line", "api/generated/evaluate/imod.evaluate.quiver_linestring", "api/generated/evaluate/imod.evaluate.stability_constraint_advection", "api/generated/evaluate/imod.evaluate.stability_constraint_wel", "api/generated/evaluate/imod.evaluate.streamfunction_line", "api/generated/evaluate/imod.evaluate.streamfunction_linestring", "api/generated/flow/imod.flow.Bottom", "api/generated/flow/imod.flow.Boundary", "api/generated/flow/imod.flow.ConstantHead", "api/generated/flow/imod.flow.Drain", "api/generated/flow/imod.flow.EvapoTranspiration", "api/generated/flow/imod.flow.GeneralHeadBoundary", "api/generated/flow/imod.flow.HorizontalAnisotropy", "api/generated/flow/imod.flow.HorizontalFlowBarrier", "api/generated/flow/imod.flow.HorizontalHydraulicConductivity", "api/generated/flow/imod.flow.ImodflowModel", "api/generated/flow/imod.flow.ImodflowModel.create_time_discretization", "api/generated/flow/imod.flow.MetaSwap", "api/generated/flow/imod.flow.PreconditionedConjugateGradientSolver", "api/generated/flow/imod.flow.Recharge", "api/generated/flow/imod.flow.River", "api/generated/flow/imod.flow.SpecificStorage", "api/generated/flow/imod.flow.StartingHead", "api/generated/flow/imod.flow.StorageCoefficient", "api/generated/flow/imod.flow.Top", "api/generated/flow/imod.flow.VerticalAnisotropy", "api/generated/flow/imod.flow.VerticalHydraulicConductivity", "api/generated/flow/imod.flow.Well", "api/generated/io/imod.formats.gen.read", "api/generated/io/imod.formats.gen.read_ascii", "api/generated/io/imod.formats.gen.write", "api/generated/io/imod.formats.idf.header", "api/generated/io/imod.formats.idf.open", "api/generated/io/imod.formats.idf.open_dataset", "api/generated/io/imod.formats.idf.open_subdomains", "api/generated/io/imod.formats.idf.save", "api/generated/io/imod.formats.ipf.read", "api/generated/io/imod.formats.ipf.read_associated", "api/generated/io/imod.formats.ipf.save", "api/generated/io/imod.formats.ipf.write", "api/generated/io/imod.formats.ipf.write_assoc", "api/generated/io/imod.formats.prj.open_projectfile_data", "api/generated/io/imod.formats.prj.read_projectfile", "api/generated/io/imod.formats.prj.read_timfile", "api/generated/io/imod.formats.rasterio.header", "api/generated/io/imod.formats.rasterio.open", "api/generated/io/imod.formats.rasterio.save", "api/generated/logging/imod.logging", "api/generated/logging/imod.logging.config", "api/generated/logging/imod.logging.config.LoggerType", "api/generated/logging/imod.logging.config.configure", "api/generated/logging/imod.logging.ilogger", "api/generated/logging/imod.logging.ilogger.ILogger", "api/generated/logging/imod.logging.logging_decorators", "api/generated/logging/imod.logging.logging_decorators.init_log_decorator", "api/generated/logging/imod.logging.logging_decorators.standard_log_decorator", "api/generated/logging/imod.logging.loglevel", "api/generated/logging/imod.logging.loglevel.LogLevel", "api/generated/logging/imod.logging.logurulogger", "api/generated/logging/imod.logging.logurulogger.LoguruLogger", "api/generated/logging/imod.logging.nulllogger", "api/generated/logging/imod.logging.nulllogger.NullLogger", "api/generated/logging/imod.logging.pythonlogger", "api/generated/logging/imod.logging.pythonlogger.PythonLogger", "api/generated/metamod/imod.couplers.metamod.MetaMod", "api/generated/mf6/imod.mf6.AdvectionCentral", "api/generated/mf6/imod.mf6.AdvectionTVD", "api/generated/mf6/imod.mf6.AdvectionUpstream", "api/generated/mf6/imod.mf6.ApiPackage", "api/generated/mf6/imod.mf6.Buoyancy", "api/generated/mf6/imod.mf6.ConstantConcentration", "api/generated/mf6/imod.mf6.ConstantHead", "api/generated/mf6/imod.mf6.ConstantHead.clip_box", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_data", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_shd_data", "api/generated/mf6/imod.mf6.ConstantHead.mask", "api/generated/mf6/imod.mf6.ConstantHead.regrid_like", "api/generated/mf6/imod.mf6.Dispersion", "api/generated/mf6/imod.mf6.Drainage", "api/generated/mf6/imod.mf6.Drainage.cleanup", "api/generated/mf6/imod.mf6.Drainage.clip_box", "api/generated/mf6/imod.mf6.Drainage.from_imod5_data", "api/generated/mf6/imod.mf6.Drainage.mask", "api/generated/mf6/imod.mf6.Drainage.regrid_like", "api/generated/mf6/imod.mf6.Evapotranspiration", "api/generated/mf6/imod.mf6.Evapotranspiration.clip_box", "api/generated/mf6/imod.mf6.Evapotranspiration.mask", "api/generated/mf6/imod.mf6.Evapotranspiration.regrid_like", "api/generated/mf6/imod.mf6.GeneralHeadBoundary", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.cleanup", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.clip_box", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.from_imod5_data", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.mask", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.regrid_like", "api/generated/mf6/imod.mf6.GroundwaterFlowModel", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.dump", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.from_imod5_data", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.mask_all_packages", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "api/generated/mf6/imod.mf6.GroundwaterTransportModel", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.dump", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.mask_all_packages", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance.clip_box", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.ImmobileStorageTransfer", "api/generated/mf6/imod.mf6.InitialConditions", "api/generated/mf6/imod.mf6.InitialConditions.clip_box", "api/generated/mf6/imod.mf6.InitialConditions.from_imod5_data", "api/generated/mf6/imod.mf6.InitialConditions.mask", "api/generated/mf6/imod.mf6.InitialConditions.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell", "api/generated/mf6/imod.mf6.LayeredWell.clip_box", "api/generated/mf6/imod.mf6.LayeredWell.from_imod5_cap_data", "api/generated/mf6/imod.mf6.LayeredWell.from_imod5_data", "api/generated/mf6/imod.mf6.LayeredWell.mask", "api/generated/mf6/imod.mf6.LayeredWell.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell.to_mf6_pkg", "api/generated/mf6/imod.mf6.MassSourceLoading", "api/generated/mf6/imod.mf6.MobileStorageTransfer", "api/generated/mf6/imod.mf6.Modflow6Simulation", "api/generated/mf6/imod.mf6.Modflow6Simulation.clip_box", "api/generated/mf6/imod.mf6.Modflow6Simulation.create_time_discretization", "api/generated/mf6/imod.mf6.Modflow6Simulation.dump", "api/generated/mf6/imod.mf6.Modflow6Simulation.from_imod5_data", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_concentration", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_flow_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_head", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_transport_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.regrid_like", "api/generated/mf6/imod.mf6.Modflow6Simulation.run", "api/generated/mf6/imod.mf6.Modflow6Simulation.split", "api/generated/mf6/imod.mf6.Modflow6Simulation.write", "api/generated/mf6/imod.mf6.NodePropertyFlow", "api/generated/mf6/imod.mf6.NodePropertyFlow.clip_box", "api/generated/mf6/imod.mf6.NodePropertyFlow.from_imod5_data", "api/generated/mf6/imod.mf6.NodePropertyFlow.mask", "api/generated/mf6/imod.mf6.NodePropertyFlow.regrid_like", "api/generated/mf6/imod.mf6.OutputControl", "api/generated/mf6/imod.mf6.Recharge", "api/generated/mf6/imod.mf6.Recharge.clip_box", "api/generated/mf6/imod.mf6.Recharge.from_imod5_data", "api/generated/mf6/imod.mf6.Recharge.mask", "api/generated/mf6/imod.mf6.Recharge.regrid_like", "api/generated/mf6/imod.mf6.River", "api/generated/mf6/imod.mf6.River.cleanup", "api/generated/mf6/imod.mf6.River.clip_box", "api/generated/mf6/imod.mf6.River.from_imod5_data", "api/generated/mf6/imod.mf6.River.mask", "api/generated/mf6/imod.mf6.River.regrid_like", "api/generated/mf6/imod.mf6.River.split_conductance", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.Solution", "api/generated/mf6/imod.mf6.SolutionPresetComplex", "api/generated/mf6/imod.mf6.SolutionPresetModerate", "api/generated/mf6/imod.mf6.SolutionPresetSimple", "api/generated/mf6/imod.mf6.SourceSinkMixing", "api/generated/mf6/imod.mf6.SourceSinkMixing.from_flow_model", "api/generated/mf6/imod.mf6.SpecificStorage", "api/generated/mf6/imod.mf6.SpecificStorage.clip_box", "api/generated/mf6/imod.mf6.SpecificStorage.mask", "api/generated/mf6/imod.mf6.SpecificStorage.regrid_like", "api/generated/mf6/imod.mf6.StorageCoefficient", "api/generated/mf6/imod.mf6.StorageCoefficient.clip_box", "api/generated/mf6/imod.mf6.StorageCoefficient.from_imod5_data", "api/generated/mf6/imod.mf6.StorageCoefficient.mask", "api/generated/mf6/imod.mf6.StorageCoefficient.regrid_like", "api/generated/mf6/imod.mf6.StructuredDiscretization", "api/generated/mf6/imod.mf6.StructuredDiscretization.clip_box", "api/generated/mf6/imod.mf6.StructuredDiscretization.from_imod5_data", "api/generated/mf6/imod.mf6.StructuredDiscretization.regrid_like", "api/generated/mf6/imod.mf6.TimeDiscretization", "api/generated/mf6/imod.mf6.UnsaturatedZoneFlow", "api/generated/mf6/imod.mf6.VerticesDiscretization", "api/generated/mf6/imod.mf6.VerticesDiscretization.clip_box", "api/generated/mf6/imod.mf6.VerticesDiscretization.regrid_like", "api/generated/mf6/imod.mf6.Well", "api/generated/mf6/imod.mf6.Well.cleanup", "api/generated/mf6/imod.mf6.Well.clip_box", "api/generated/mf6/imod.mf6.Well.from_imod5_data", "api/generated/mf6/imod.mf6.Well.mask", "api/generated/mf6/imod.mf6.Well.regrid_like", "api/generated/mf6/imod.mf6.Well.to_mf6_pkg", "api/generated/mf6/imod.mf6.WellDisStructured", "api/generated/mf6/imod.mf6.WellDisVertices", "api/generated/mf6/imod.mf6.open_cbc", "api/generated/mf6/imod.mf6.open_hds", "api/generated/mf6/imod.mf6.read_cbc_headers", "api/generated/mf6/regrid/imod.mf6.regrid.ConstantHeadRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DiscretizationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DispersionRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DrainageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EmptyRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EvapotranspirationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.InitialConditionsRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.MobileStorageTransferRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.NodePropertyFlowRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RechargeRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RiverRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.SpecificStorageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.StorageCoefficientRegridMethod", "api/generated/msw/imod.msw.AnnualCropFactors", "api/generated/msw/imod.msw.CouplerMapping", "api/generated/msw/imod.msw.EvapotranspirationMapping", "api/generated/msw/imod.msw.EvapotranspirationMapping.from_imod5_data", "api/generated/msw/imod.msw.GridData", "api/generated/msw/imod.msw.GridData.from_imod5_data", "api/generated/msw/imod.msw.IdfMapping", "api/generated/msw/imod.msw.Infiltration", "api/generated/msw/imod.msw.Infiltration.from_imod5_data", "api/generated/msw/imod.msw.InitialConditionsEquilibrium", "api/generated/msw/imod.msw.InitialConditionsPercolation", "api/generated/msw/imod.msw.InitialConditionsRootzonePressureHead", "api/generated/msw/imod.msw.InitialConditionsSavedState", "api/generated/msw/imod.msw.LanduseOptions", "api/generated/msw/imod.msw.MetaSwapModel", "api/generated/msw/imod.msw.MetaSwapModel.from_imod5_data", "api/generated/msw/imod.msw.MetaSwapModel.regrid_like", "api/generated/msw/imod.msw.MetaSwapModel.write", "api/generated/msw/imod.msw.MeteoGrid", "api/generated/msw/imod.msw.MeteoGridCopy", "api/generated/msw/imod.msw.MeteoGridCopy.from_imod5_data", "api/generated/msw/imod.msw.Ponding", "api/generated/msw/imod.msw.Ponding.from_imod5_data", "api/generated/msw/imod.msw.PrecipitationMapping", "api/generated/msw/imod.msw.PrecipitationMapping.from_imod5_data", "api/generated/msw/imod.msw.ScalingFactors", "api/generated/msw/imod.msw.ScalingFactors.from_imod5_data", "api/generated/msw/imod.msw.Sprinkling", "api/generated/msw/imod.msw.Sprinkling.from_imod5_data", "api/generated/msw/imod.msw.TimeOutputControl", "api/generated/msw/imod.msw.VariableOutputControl", "api/generated/prepare/imod.prepare.ALLOCATION_OPTION", "api/generated/prepare/imod.prepare.DISTRIBUTING_OPTION", "api/generated/prepare/imod.prepare.LayerRegridder", "api/generated/prepare/imod.prepare.Regridder", "api/generated/prepare/imod.prepare.SimulationAllocationOptions", "api/generated/prepare/imod.prepare.SimulationDistributingOptions", "api/generated/prepare/imod.prepare.Voxelizer", "api/generated/prepare/imod.prepare.allocate_drn_cells", "api/generated/prepare/imod.prepare.allocate_ghb_cells", "api/generated/prepare/imod.prepare.allocate_rch_cells", "api/generated/prepare/imod.prepare.allocate_riv_cells", "api/generated/prepare/imod.prepare.assign_wells", "api/generated/prepare/imod.prepare.c_leakage", "api/generated/prepare/imod.prepare.c_radial", "api/generated/prepare/imod.prepare.celltable", "api/generated/prepare/imod.prepare.cleanup_drn", "api/generated/prepare/imod.prepare.cleanup_ghb", "api/generated/prepare/imod.prepare.cleanup_riv", "api/generated/prepare/imod.prepare.cleanup_wel", "api/generated/prepare/imod.prepare.create_layered_top", "api/generated/prepare/imod.prepare.distribute_drn_conductance", "api/generated/prepare/imod.prepare.distribute_ghb_conductance", "api/generated/prepare/imod.prepare.distribute_riv_conductance", "api/generated/prepare/imod.prepare.fill", "api/generated/prepare/imod.prepare.gdal_rasterize", "api/generated/prepare/imod.prepare.get_lower_active_grid_cells", "api/generated/prepare/imod.prepare.get_lower_active_layer_number", "api/generated/prepare/imod.prepare.get_upper_active_grid_cells", "api/generated/prepare/imod.prepare.get_upper_active_layer_number", "api/generated/prepare/imod.prepare.laplace_interpolate", "api/generated/prepare/imod.prepare.linestring_to_square_zpolygons", "api/generated/prepare/imod.prepare.linestring_to_trapezoid_zpolygons", "api/generated/prepare/imod.prepare.polygonize", "api/generated/prepare/imod.prepare.rasterize", "api/generated/prepare/imod.prepare.rasterize_celltable", "api/generated/prepare/imod.prepare.reproject", "api/generated/prepare/imod.prepare.zonal_aggregate_polygons", "api/generated/prepare/imod.prepare.zonal_aggregate_raster", "api/generated/select/imod.select.active_grid_boundary_xy", "api/generated/select/imod.select.cross_section_line", "api/generated/select/imod.select.cross_section_linestring", "api/generated/select/imod.select.grid_boundary_xy", "api/generated/select/imod.select.points_in_bounds", "api/generated/select/imod.select.points_indices", "api/generated/select/imod.select.points_set_values", "api/generated/select/imod.select.points_values", "api/generated/select/imod.select.upper_active_layer", "api/generated/util/imod.util.cd", "api/generated/util/imod.util.coord_reference", "api/generated/util/imod.util.empty_2d", "api/generated/util/imod.util.empty_2d_transient", "api/generated/util/imod.util.empty_3d", "api/generated/util/imod.util.empty_3d_transient", "api/generated/util/imod.util.from_mdal_compliant_ugrid2d", "api/generated/util/imod.util.ignore_warnings", "api/generated/util/imod.util.mdal_compliant_ugrid2d", "api/generated/util/imod.util.print_if_error", "api/generated/util/imod.util.spatial_reference", "api/generated/util/imod.util.to_datetime", "api/generated/util/imod.util.to_ugrid2d", "api/generated/util/imod.util.transform", "api/generated/util/imod.util.where", "api/generated/visualize/imod.visualize.GridAnimation3D", "api/generated/visualize/imod.visualize.StaticGridAnimation3D", "api/generated/visualize/imod.visualize.cross_section", "api/generated/visualize/imod.visualize.grid_3d", "api/generated/visualize/imod.visualize.imshow_topview", "api/generated/visualize/imod.visualize.line_3d", "api/generated/visualize/imod.visualize.plot_map", "api/generated/visualize/imod.visualize.quiver", "api/generated/visualize/imod.visualize.read_imod_legend", "api/generated/visualize/imod.visualize.streamfunction", "api/generated/visualize/imod.visualize.waterbalance_barchart", "api/generated/wq/imod.wq.AdvectionFiniteDifference", "api/generated/wq/imod.wq.AdvectionHybridMOC", "api/generated/wq/imod.wq.AdvectionMOC", "api/generated/wq/imod.wq.AdvectionModifiedMOC", "api/generated/wq/imod.wq.AdvectionTVD", "api/generated/wq/imod.wq.BasicFlow", "api/generated/wq/imod.wq.BasicTransport", "api/generated/wq/imod.wq.ConstantHead", "api/generated/wq/imod.wq.Dispersion", "api/generated/wq/imod.wq.Drainage", "api/generated/wq/imod.wq.EvapotranspirationHighestActive", "api/generated/wq/imod.wq.EvapotranspirationLayers", "api/generated/wq/imod.wq.EvapotranspirationTopLayer", "api/generated/wq/imod.wq.GeneralHeadBoundary", "api/generated/wq/imod.wq.GeneralizedConjugateGradientSolver", "api/generated/wq/imod.wq.LayerPropertyFlow", "api/generated/wq/imod.wq.MassLoading", "api/generated/wq/imod.wq.OutputControl", "api/generated/wq/imod.wq.ParallelKrylovFlowSolver", "api/generated/wq/imod.wq.ParallelKrylovTransportSolver", "api/generated/wq/imod.wq.PreconditionedConjugateGradientSolver", "api/generated/wq/imod.wq.RechargeHighestActive", "api/generated/wq/imod.wq.RechargeLayers", "api/generated/wq/imod.wq.RechargeTopLayer", "api/generated/wq/imod.wq.River", "api/generated/wq/imod.wq.SeawatModel", "api/generated/wq/imod.wq.SeawatModel.create_time_discretization", "api/generated/wq/imod.wq.TimeDiscretization", "api/generated/wq/imod.wq.TimeVaryingConstantConcentration", "api/generated/wq/imod.wq.VariableDensityFlow", "api/generated/wq/imod.wq.Well", "api/index", "api/io", "api/logging", "api/metamod", "api/mf6", "api/msw", "api/prepare", "api/select", "api/util", "api/visualize", "api/wq", "developing/ci", "developing/contributing", "developing/docker", "developing/documentation", "developing/examples", "developing/index", "developing/releasing", "examples/imod-wq/Elder", "examples/imod-wq/FreshwaterLens", "examples/imod-wq/Henry-wq", "examples/imod-wq/Hydrocoin", "examples/imod-wq/SaltwaterPocket", "examples/imod-wq/VerticalInterface", "examples/imod-wq/index", "examples/imod-wq/sg_execution_times", "examples/imodflow/ImodflowProjectfile", "examples/imodflow/index", "examples/imodflow/sg_execution_times", "examples/index", "examples/metaswap/index", "examples/metaswap/metaswap_example", "examples/metaswap/read_metaswap_file", "examples/metaswap/sg_execution_times", "examples/mf6/Henry", "examples/mf6/circle", "examples/mf6/circle_partitioned", "examples/mf6/circle_transport", "examples/mf6/different_ways_to_regrid_models", "examples/mf6/ex01_twri", "examples/mf6/example_1d_transport", "examples/mf6/example_models", "examples/mf6/hondsrug", "examples/mf6/hondsrug_partitioning", "examples/mf6/index", "examples/mf6/lake", "examples/mf6/sg_execution_times", "examples/mf6/transport_2d", "examples/prepare/index", "examples/prepare/point_interpolation", "examples/prepare/polygonize_raster", "examples/prepare/rasterize_shp", "examples/prepare/reproject", "examples/prepare/sg_execution_times", "examples/visualize/flowvel_streamlines", "examples/visualize/index", "examples/visualize/plot_map", "examples/visualize/sg_execution_times", "faq/general", "faq/how-do-i/in-out", "faq/how-do-i/index", "faq/how-do-i/modification", "faq/how-do-i/plot", "faq/how-do-i/unstructured", "faq/imod5_backwards_compatibility", "faq/index", "faq/known-issues", "faq/modeling", "faq/python", "index", "installation", "sg_execution_times", "user-guide/01-raster-data", "user-guide/02-vector-data", "user-guide/03-timeseries-data", "user-guide/05-unstructured-grids", "user-guide/06-lazy-evaluation", "user-guide/07-time-discretization", "user-guide/08-regridding", "user-guide/09-topsystem", "user-guide/10-cleanup", "user-guide/index", "user-guide/sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api\\changelog.rst", "api\\evaluate.rst", "api\\flow.rst", "api\\generated\\evaluate\\imod.evaluate.calculate_gxg.rst", "api\\generated\\evaluate\\imod.evaluate.convert_pointwaterhead_freshwaterhead.rst", "api\\generated\\evaluate\\imod.evaluate.facebudget.rst", "api\\generated\\evaluate\\imod.evaluate.flow_velocity.rst", "api\\generated\\evaluate\\imod.evaluate.interpolate_value_boundaries.rst", "api\\generated\\evaluate\\imod.evaluate.intra_cell_boundary_conditions.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_line.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_linestring.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_advection.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_wel.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_line.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_linestring.rst", "api\\generated\\flow\\imod.flow.Bottom.rst", "api\\generated\\flow\\imod.flow.Boundary.rst", "api\\generated\\flow\\imod.flow.ConstantHead.rst", "api\\generated\\flow\\imod.flow.Drain.rst", "api\\generated\\flow\\imod.flow.EvapoTranspiration.rst", "api\\generated\\flow\\imod.flow.GeneralHeadBoundary.rst", "api\\generated\\flow\\imod.flow.HorizontalAnisotropy.rst", "api\\generated\\flow\\imod.flow.HorizontalFlowBarrier.rst", "api\\generated\\flow\\imod.flow.HorizontalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.create_time_discretization.rst", "api\\generated\\flow\\imod.flow.MetaSwap.rst", "api\\generated\\flow\\imod.flow.PreconditionedConjugateGradientSolver.rst", "api\\generated\\flow\\imod.flow.Recharge.rst", "api\\generated\\flow\\imod.flow.River.rst", "api\\generated\\flow\\imod.flow.SpecificStorage.rst", "api\\generated\\flow\\imod.flow.StartingHead.rst", "api\\generated\\flow\\imod.flow.StorageCoefficient.rst", "api\\generated\\flow\\imod.flow.Top.rst", "api\\generated\\flow\\imod.flow.VerticalAnisotropy.rst", "api\\generated\\flow\\imod.flow.VerticalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.Well.rst", "api\\generated\\io\\imod.formats.gen.read.rst", "api\\generated\\io\\imod.formats.gen.read_ascii.rst", "api\\generated\\io\\imod.formats.gen.write.rst", "api\\generated\\io\\imod.formats.idf.header.rst", "api\\generated\\io\\imod.formats.idf.open.rst", "api\\generated\\io\\imod.formats.idf.open_dataset.rst", "api\\generated\\io\\imod.formats.idf.open_subdomains.rst", "api\\generated\\io\\imod.formats.idf.save.rst", "api\\generated\\io\\imod.formats.ipf.read.rst", "api\\generated\\io\\imod.formats.ipf.read_associated.rst", "api\\generated\\io\\imod.formats.ipf.save.rst", "api\\generated\\io\\imod.formats.ipf.write.rst", "api\\generated\\io\\imod.formats.ipf.write_assoc.rst", "api\\generated\\io\\imod.formats.prj.open_projectfile_data.rst", "api\\generated\\io\\imod.formats.prj.read_projectfile.rst", "api\\generated\\io\\imod.formats.prj.read_timfile.rst", "api\\generated\\io\\imod.formats.rasterio.header.rst", "api\\generated\\io\\imod.formats.rasterio.open.rst", "api\\generated\\io\\imod.formats.rasterio.save.rst", "api\\generated\\logging\\imod.logging.rst", "api\\generated\\logging\\imod.logging.config.rst", "api\\generated\\logging\\imod.logging.config.LoggerType.rst", "api\\generated\\logging\\imod.logging.config.configure.rst", "api\\generated\\logging\\imod.logging.ilogger.rst", "api\\generated\\logging\\imod.logging.ilogger.ILogger.rst", "api\\generated\\logging\\imod.logging.logging_decorators.rst", "api\\generated\\logging\\imod.logging.logging_decorators.init_log_decorator.rst", "api\\generated\\logging\\imod.logging.logging_decorators.standard_log_decorator.rst", "api\\generated\\logging\\imod.logging.loglevel.rst", "api\\generated\\logging\\imod.logging.loglevel.LogLevel.rst", "api\\generated\\logging\\imod.logging.logurulogger.rst", "api\\generated\\logging\\imod.logging.logurulogger.LoguruLogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.NullLogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.PythonLogger.rst", "api\\generated\\metamod\\imod.couplers.metamod.MetaMod.rst", "api\\generated\\mf6\\imod.mf6.AdvectionCentral.rst", "api\\generated\\mf6\\imod.mf6.AdvectionTVD.rst", "api\\generated\\mf6\\imod.mf6.AdvectionUpstream.rst", "api\\generated\\mf6\\imod.mf6.ApiPackage.rst", "api\\generated\\mf6\\imod.mf6.Buoyancy.rst", "api\\generated\\mf6\\imod.mf6.ConstantConcentration.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.clip_box.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_shd_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.mask.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Dispersion.rst", "api\\generated\\mf6\\imod.mf6.Drainage.rst", "api\\generated\\mf6\\imod.mf6.Drainage.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Drainage.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Drainage.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Drainage.mask.rst", "api\\generated\\mf6\\imod.mf6.Drainage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.mask.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.cleanup.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.clip_box.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.mask.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.clip_box.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.ImmobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.clip_box.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.mask.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.clip_box.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.from_imod5_cap_data.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.mask.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.MassSourceLoading.rst", "api\\generated\\mf6\\imod.mf6.MobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.create_time_discretization.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.dump.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_concentration.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_flow_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_head.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_transport_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.run.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.split.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.write.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.clip_box.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.mask.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.OutputControl.rst", "api\\generated\\mf6\\imod.mf6.Recharge.rst", "api\\generated\\mf6\\imod.mf6.Recharge.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Recharge.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Recharge.mask.rst", "api\\generated\\mf6\\imod.mf6.Recharge.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.River.rst", "api\\generated\\mf6\\imod.mf6.River.cleanup.rst", "api\\generated\\mf6\\imod.mf6.River.clip_box.rst", "api\\generated\\mf6\\imod.mf6.River.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.River.mask.rst", "api\\generated\\mf6\\imod.mf6.River.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.River.split_conductance.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.Solution.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetComplex.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetModerate.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetSimple.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.from_flow_model.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.clip_box.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.mask.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.clip_box.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.mask.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.clip_box.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.TimeDiscretization.rst", "api\\generated\\mf6\\imod.mf6.UnsaturatedZoneFlow.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.clip_box.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Well.rst", "api\\generated\\mf6\\imod.mf6.Well.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Well.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Well.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Well.mask.rst", "api\\generated\\mf6\\imod.mf6.Well.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Well.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.WellDisStructured.rst", "api\\generated\\mf6\\imod.mf6.WellDisVertices.rst", "api\\generated\\mf6\\imod.mf6.open_cbc.rst", "api\\generated\\mf6\\imod.mf6.open_hds.rst", "api\\generated\\mf6\\imod.mf6.read_cbc_headers.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.ConstantHeadRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DiscretizationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DispersionRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DrainageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EmptyRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EvapotranspirationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.InitialConditionsRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.MobileStorageTransferRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.NodePropertyFlowRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RechargeRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RiverRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.SpecificStorageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.StorageCoefficientRegridMethod.rst", "api\\generated\\msw\\imod.msw.AnnualCropFactors.rst", "api\\generated\\msw\\imod.msw.CouplerMapping.rst", "api\\generated\\msw\\imod.msw.EvapotranspirationMapping.rst", "api\\generated\\msw\\imod.msw.EvapotranspirationMapping.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.GridData.rst", "api\\generated\\msw\\imod.msw.GridData.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.IdfMapping.rst", "api\\generated\\msw\\imod.msw.Infiltration.rst", "api\\generated\\msw\\imod.msw.Infiltration.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.InitialConditionsEquilibrium.rst", "api\\generated\\msw\\imod.msw.InitialConditionsPercolation.rst", "api\\generated\\msw\\imod.msw.InitialConditionsRootzonePressureHead.rst", "api\\generated\\msw\\imod.msw.InitialConditionsSavedState.rst", "api\\generated\\msw\\imod.msw.LanduseOptions.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.regrid_like.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.write.rst", "api\\generated\\msw\\imod.msw.MeteoGrid.rst", "api\\generated\\msw\\imod.msw.MeteoGridCopy.rst", "api\\generated\\msw\\imod.msw.MeteoGridCopy.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.Ponding.rst", "api\\generated\\msw\\imod.msw.Ponding.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.PrecipitationMapping.rst", "api\\generated\\msw\\imod.msw.PrecipitationMapping.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.ScalingFactors.rst", "api\\generated\\msw\\imod.msw.ScalingFactors.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.Sprinkling.rst", "api\\generated\\msw\\imod.msw.Sprinkling.from_imod5_data.rst", "api\\generated\\msw\\imod.msw.TimeOutputControl.rst", "api\\generated\\msw\\imod.msw.VariableOutputControl.rst", "api\\generated\\prepare\\imod.prepare.ALLOCATION_OPTION.rst", "api\\generated\\prepare\\imod.prepare.DISTRIBUTING_OPTION.rst", "api\\generated\\prepare\\imod.prepare.LayerRegridder.rst", "api\\generated\\prepare\\imod.prepare.Regridder.rst", "api\\generated\\prepare\\imod.prepare.SimulationAllocationOptions.rst", "api\\generated\\prepare\\imod.prepare.SimulationDistributingOptions.rst", "api\\generated\\prepare\\imod.prepare.Voxelizer.rst", "api\\generated\\prepare\\imod.prepare.allocate_drn_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_ghb_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_rch_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_riv_cells.rst", "api\\generated\\prepare\\imod.prepare.assign_wells.rst", "api\\generated\\prepare\\imod.prepare.c_leakage.rst", "api\\generated\\prepare\\imod.prepare.c_radial.rst", "api\\generated\\prepare\\imod.prepare.celltable.rst", "api\\generated\\prepare\\imod.prepare.cleanup_drn.rst", "api\\generated\\prepare\\imod.prepare.cleanup_ghb.rst", "api\\generated\\prepare\\imod.prepare.cleanup_riv.rst", "api\\generated\\prepare\\imod.prepare.cleanup_wel.rst", "api\\generated\\prepare\\imod.prepare.create_layered_top.rst", "api\\generated\\prepare\\imod.prepare.distribute_drn_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_ghb_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_riv_conductance.rst", "api\\generated\\prepare\\imod.prepare.fill.rst", "api\\generated\\prepare\\imod.prepare.gdal_rasterize.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.laplace_interpolate.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_square_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_trapezoid_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.polygonize.rst", "api\\generated\\prepare\\imod.prepare.rasterize.rst", "api\\generated\\prepare\\imod.prepare.rasterize_celltable.rst", "api\\generated\\prepare\\imod.prepare.reproject.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_polygons.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_raster.rst", "api\\generated\\select\\imod.select.active_grid_boundary_xy.rst", "api\\generated\\select\\imod.select.cross_section_line.rst", "api\\generated\\select\\imod.select.cross_section_linestring.rst", "api\\generated\\select\\imod.select.grid_boundary_xy.rst", "api\\generated\\select\\imod.select.points_in_bounds.rst", "api\\generated\\select\\imod.select.points_indices.rst", "api\\generated\\select\\imod.select.points_set_values.rst", "api\\generated\\select\\imod.select.points_values.rst", "api\\generated\\select\\imod.select.upper_active_layer.rst", "api\\generated\\util\\imod.util.cd.rst", "api\\generated\\util\\imod.util.coord_reference.rst", "api\\generated\\util\\imod.util.empty_2d.rst", "api\\generated\\util\\imod.util.empty_2d_transient.rst", "api\\generated\\util\\imod.util.empty_3d.rst", "api\\generated\\util\\imod.util.empty_3d_transient.rst", "api\\generated\\util\\imod.util.from_mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.ignore_warnings.rst", "api\\generated\\util\\imod.util.mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.print_if_error.rst", "api\\generated\\util\\imod.util.spatial_reference.rst", "api\\generated\\util\\imod.util.to_datetime.rst", "api\\generated\\util\\imod.util.to_ugrid2d.rst", "api\\generated\\util\\imod.util.transform.rst", "api\\generated\\util\\imod.util.where.rst", "api\\generated\\visualize\\imod.visualize.GridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.StaticGridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.cross_section.rst", "api\\generated\\visualize\\imod.visualize.grid_3d.rst", "api\\generated\\visualize\\imod.visualize.imshow_topview.rst", "api\\generated\\visualize\\imod.visualize.line_3d.rst", "api\\generated\\visualize\\imod.visualize.plot_map.rst", "api\\generated\\visualize\\imod.visualize.quiver.rst", "api\\generated\\visualize\\imod.visualize.read_imod_legend.rst", "api\\generated\\visualize\\imod.visualize.streamfunction.rst", "api\\generated\\visualize\\imod.visualize.waterbalance_barchart.rst", "api\\generated\\wq\\imod.wq.AdvectionFiniteDifference.rst", "api\\generated\\wq\\imod.wq.AdvectionHybridMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionModifiedMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionTVD.rst", "api\\generated\\wq\\imod.wq.BasicFlow.rst", "api\\generated\\wq\\imod.wq.BasicTransport.rst", "api\\generated\\wq\\imod.wq.ConstantHead.rst", "api\\generated\\wq\\imod.wq.Dispersion.rst", "api\\generated\\wq\\imod.wq.Drainage.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationHighestActive.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationLayers.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationTopLayer.rst", "api\\generated\\wq\\imod.wq.GeneralHeadBoundary.rst", "api\\generated\\wq\\imod.wq.GeneralizedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.LayerPropertyFlow.rst", "api\\generated\\wq\\imod.wq.MassLoading.rst", "api\\generated\\wq\\imod.wq.OutputControl.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovFlowSolver.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovTransportSolver.rst", "api\\generated\\wq\\imod.wq.PreconditionedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.RechargeHighestActive.rst", "api\\generated\\wq\\imod.wq.RechargeLayers.rst", "api\\generated\\wq\\imod.wq.RechargeTopLayer.rst", "api\\generated\\wq\\imod.wq.River.rst", "api\\generated\\wq\\imod.wq.SeawatModel.rst", "api\\generated\\wq\\imod.wq.SeawatModel.create_time_discretization.rst", "api\\generated\\wq\\imod.wq.TimeDiscretization.rst", "api\\generated\\wq\\imod.wq.TimeVaryingConstantConcentration.rst", "api\\generated\\wq\\imod.wq.VariableDensityFlow.rst", "api\\generated\\wq\\imod.wq.Well.rst", "api\\index.rst", "api\\io.rst", "api\\logging.rst", "api\\metamod.rst", "api\\mf6.rst", "api\\msw.rst", "api\\prepare.rst", "api\\select.rst", "api\\util.rst", "api\\visualize.rst", "api\\wq.rst", "developing\\ci.rst", "developing\\contributing.rst", "developing\\docker.rst", "developing\\documentation.rst", "developing\\examples.rst", "developing\\index.rst", "developing\\releasing.rst", "examples\\imod-wq\\Elder.rst", "examples\\imod-wq\\FreshwaterLens.rst", "examples\\imod-wq\\Henry-wq.rst", "examples\\imod-wq\\Hydrocoin.rst", "examples\\imod-wq\\SaltwaterPocket.rst", "examples\\imod-wq\\VerticalInterface.rst", "examples\\imod-wq\\index.rst", "examples\\imod-wq\\sg_execution_times.rst", "examples\\imodflow\\ImodflowProjectfile.rst", "examples\\imodflow\\index.rst", "examples\\imodflow\\sg_execution_times.rst", "examples\\index.rst", "examples\\metaswap\\index.rst", "examples\\metaswap\\metaswap_example.rst", "examples\\metaswap\\read_metaswap_file.rst", "examples\\metaswap\\sg_execution_times.rst", "examples\\mf6\\Henry.rst", "examples\\mf6\\circle.rst", "examples\\mf6\\circle_partitioned.rst", "examples\\mf6\\circle_transport.rst", "examples\\mf6\\different_ways_to_regrid_models.rst", "examples\\mf6\\ex01_twri.rst", "examples\\mf6\\example_1d_transport.rst", "examples\\mf6\\example_models.rst", "examples\\mf6\\hondsrug.rst", "examples\\mf6\\hondsrug_partitioning.rst", "examples\\mf6\\index.rst", "examples\\mf6\\lake.rst", "examples\\mf6\\sg_execution_times.rst", "examples\\mf6\\transport_2d.rst", "examples\\prepare\\index.rst", "examples\\prepare\\point_interpolation.rst", "examples\\prepare\\polygonize_raster.rst", "examples\\prepare\\rasterize_shp.rst", "examples\\prepare\\reproject.rst", "examples\\prepare\\sg_execution_times.rst", "examples\\visualize\\flowvel_streamlines.rst", "examples\\visualize\\index.rst", "examples\\visualize\\plot_map.rst", "examples\\visualize\\sg_execution_times.rst", "faq\\general.rst", "faq\\how-do-i\\in-out.rst", "faq\\how-do-i\\index.rst", "faq\\how-do-i\\modification.rst", "faq\\how-do-i\\plot.rst", "faq\\how-do-i\\unstructured.rst", "faq\\imod5_backwards_compatibility.rst", "faq\\index.rst", "faq\\known-issues.rst", "faq\\modeling.rst", "faq\\python.rst", "index.rst", "installation.rst", "sg_execution_times.rst", "user-guide\\01-raster-data.rst", "user-guide\\02-vector-data.rst", "user-guide\\03-timeseries-data.rst", "user-guide\\05-unstructured-grids.rst", "user-guide\\06-lazy-evaluation.rst", "user-guide\\07-time-discretization.rst", "user-guide\\08-regridding.rst", "user-guide\\09-topsystem.rst", "user-guide\\10-cleanup.rst", "user-guide\\index.rst", "user-guide\\sg_execution_times.rst"], "indexentries": {"__init__() (imod.couplers.metamod.metamod method)": [[73, "imod.couplers.metamod.MetaMod.__init__", false]], "__init__() (imod.flow.bottom method)": [[15, "imod.flow.Bottom.__init__", false]], "__init__() (imod.flow.boundary method)": [[16, "imod.flow.Boundary.__init__", false]], "__init__() (imod.flow.constanthead method)": [[17, "imod.flow.ConstantHead.__init__", false]], "__init__() (imod.flow.drain method)": [[18, "imod.flow.Drain.__init__", false]], "__init__() (imod.flow.evapotranspiration method)": [[19, "imod.flow.EvapoTranspiration.__init__", false]], "__init__() (imod.flow.generalheadboundary method)": [[20, "imod.flow.GeneralHeadBoundary.__init__", false]], "__init__() (imod.flow.horizontalanisotropy method)": [[21, "imod.flow.HorizontalAnisotropy.__init__", false]], "__init__() (imod.flow.horizontalflowbarrier method)": [[22, "imod.flow.HorizontalFlowBarrier.__init__", false]], "__init__() (imod.flow.horizontalhydraulicconductivity method)": [[23, "imod.flow.HorizontalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.imodflowmodel method)": [[24, "imod.flow.ImodflowModel.__init__", false]], "__init__() (imod.flow.metaswap method)": [[26, "imod.flow.MetaSwap.__init__", false]], "__init__() (imod.flow.preconditionedconjugategradientsolver method)": [[27, "imod.flow.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.flow.recharge method)": [[28, "imod.flow.Recharge.__init__", false]], "__init__() (imod.flow.river method)": [[29, "imod.flow.River.__init__", false]], "__init__() (imod.flow.specificstorage method)": [[30, "imod.flow.SpecificStorage.__init__", false]], "__init__() (imod.flow.startinghead method)": [[31, "imod.flow.StartingHead.__init__", false]], "__init__() (imod.flow.storagecoefficient method)": [[32, "imod.flow.StorageCoefficient.__init__", false]], "__init__() (imod.flow.top method)": [[33, "imod.flow.Top.__init__", false]], "__init__() (imod.flow.verticalanisotropy method)": [[34, "imod.flow.VerticalAnisotropy.__init__", false]], "__init__() (imod.flow.verticalhydraulicconductivity method)": [[35, "imod.flow.VerticalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.well method)": [[36, "imod.flow.Well.__init__", false]], "__init__() (imod.logging.config.loggertype method)": [[58, "imod.logging.config.LoggerType.__init__", false]], "__init__() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.__init__", false]], "__init__() (imod.logging.loglevel.loglevel method)": [[66, "imod.logging.loglevel.LogLevel.__init__", false]], "__init__() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.__init__", false]], "__init__() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.__init__", false]], "__init__() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.__init__", false]], "__init__() (imod.mf6.advectioncentral method)": [[74, "imod.mf6.AdvectionCentral.__init__", false]], "__init__() (imod.mf6.advectiontvd method)": [[75, "imod.mf6.AdvectionTVD.__init__", false]], "__init__() (imod.mf6.advectionupstream method)": [[76, "imod.mf6.AdvectionUpstream.__init__", false]], "__init__() (imod.mf6.apipackage method)": [[77, "imod.mf6.ApiPackage.__init__", false]], "__init__() (imod.mf6.buoyancy method)": [[78, "imod.mf6.Buoyancy.__init__", false]], "__init__() (imod.mf6.constantconcentration method)": [[79, "imod.mf6.ConstantConcentration.__init__", false]], "__init__() (imod.mf6.constanthead method)": [[80, "imod.mf6.ConstantHead.__init__", false]], "__init__() (imod.mf6.dispersion method)": [[86, "imod.mf6.Dispersion.__init__", false]], "__init__() (imod.mf6.drainage method)": [[87, "imod.mf6.Drainage.__init__", false]], "__init__() (imod.mf6.evapotranspiration method)": [[93, "imod.mf6.Evapotranspiration.__init__", false]], "__init__() (imod.mf6.generalheadboundary method)": [[97, "imod.mf6.GeneralHeadBoundary.__init__", false]], "__init__() (imod.mf6.groundwaterflowmodel method)": [[103, "imod.mf6.GroundwaterFlowModel.__init__", false]], "__init__() (imod.mf6.groundwatertransportmodel method)": [[108, "imod.mf6.GroundwaterTransportModel.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[111, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.horizontalflowbarriermultiplier method)": [[113, "imod.mf6.HorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierresistance method)": [[115, "imod.mf6.HorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.immobilestoragetransfer method)": [[118, "imod.mf6.ImmobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.initialconditions method)": [[119, "imod.mf6.InitialConditions.__init__", false]], "__init__() (imod.mf6.layeredwell method)": [[124, "imod.mf6.LayeredWell.__init__", false]], "__init__() (imod.mf6.masssourceloading method)": [[131, "imod.mf6.MassSourceLoading.__init__", false]], "__init__() (imod.mf6.mobilestoragetransfer method)": [[132, "imod.mf6.MobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.modflow6simulation method)": [[133, "imod.mf6.Modflow6Simulation.__init__", false]], "__init__() (imod.mf6.nodepropertyflow method)": [[146, "imod.mf6.NodePropertyFlow.__init__", false]], "__init__() (imod.mf6.outputcontrol method)": [[151, "imod.mf6.OutputControl.__init__", false]], "__init__() (imod.mf6.recharge method)": [[152, "imod.mf6.Recharge.__init__", false]], "__init__() (imod.mf6.regrid.constantheadregridmethod method)": [[210, "imod.mf6.regrid.ConstantHeadRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.discretizationregridmethod method)": [[211, "imod.mf6.regrid.DiscretizationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.dispersionregridmethod method)": [[212, "imod.mf6.regrid.DispersionRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.drainageregridmethod method)": [[213, "imod.mf6.regrid.DrainageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.emptyregridmethod method)": [[214, "imod.mf6.regrid.EmptyRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.evapotranspirationregridmethod method)": [[215, "imod.mf6.regrid.EvapotranspirationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.generalheadboundaryregridmethod method)": [[216, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.initialconditionsregridmethod method)": [[217, "imod.mf6.regrid.InitialConditionsRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.mobilestoragetransferregridmethod method)": [[218, "imod.mf6.regrid.MobileStorageTransferRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.nodepropertyflowregridmethod method)": [[219, "imod.mf6.regrid.NodePropertyFlowRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.rechargeregridmethod method)": [[220, "imod.mf6.regrid.RechargeRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.riverregridmethod method)": [[221, "imod.mf6.regrid.RiverRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.specificstorageregridmethod method)": [[222, "imod.mf6.regrid.SpecificStorageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.storagecoefficientregridmethod method)": [[223, "imod.mf6.regrid.StorageCoefficientRegridMethod.__init__", false]], "__init__() (imod.mf6.river method)": [[157, "imod.mf6.River.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[164, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[167, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[170, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.solution method)": [[174, "imod.mf6.Solution.__init__", false]], "__init__() (imod.mf6.sourcesinkmixing method)": [[178, "imod.mf6.SourceSinkMixing.__init__", false]], "__init__() (imod.mf6.specificstorage method)": [[180, "imod.mf6.SpecificStorage.__init__", false]], "__init__() (imod.mf6.storagecoefficient method)": [[184, "imod.mf6.StorageCoefficient.__init__", false]], "__init__() (imod.mf6.structureddiscretization method)": [[189, "imod.mf6.StructuredDiscretization.__init__", false]], "__init__() (imod.mf6.timediscretization method)": [[193, "imod.mf6.TimeDiscretization.__init__", false]], "__init__() (imod.mf6.unsaturatedzoneflow method)": [[194, "imod.mf6.UnsaturatedZoneFlow.__init__", false]], "__init__() (imod.mf6.verticesdiscretization method)": [[195, "imod.mf6.VerticesDiscretization.__init__", false]], "__init__() (imod.mf6.well method)": [[198, "imod.mf6.Well.__init__", false]], "__init__() (imod.mf6.welldisstructured method)": [[205, "imod.mf6.WellDisStructured.__init__", false]], "__init__() (imod.mf6.welldisvertices method)": [[206, "imod.mf6.WellDisVertices.__init__", false]], "__init__() (imod.msw.annualcropfactors method)": [[224, "imod.msw.AnnualCropFactors.__init__", false]], "__init__() (imod.msw.couplermapping method)": [[225, "imod.msw.CouplerMapping.__init__", false]], "__init__() (imod.msw.evapotranspirationmapping method)": [[226, "imod.msw.EvapotranspirationMapping.__init__", false]], "__init__() (imod.msw.griddata method)": [[228, "imod.msw.GridData.__init__", false]], "__init__() (imod.msw.idfmapping method)": [[230, "imod.msw.IdfMapping.__init__", false]], "__init__() (imod.msw.infiltration method)": [[231, "imod.msw.Infiltration.__init__", false]], "__init__() (imod.msw.initialconditionsequilibrium method)": [[233, "imod.msw.InitialConditionsEquilibrium.__init__", false]], "__init__() (imod.msw.initialconditionspercolation method)": [[234, "imod.msw.InitialConditionsPercolation.__init__", false]], "__init__() (imod.msw.initialconditionsrootzonepressurehead method)": [[235, "imod.msw.InitialConditionsRootzonePressureHead.__init__", false]], "__init__() (imod.msw.initialconditionssavedstate method)": [[236, "imod.msw.InitialConditionsSavedState.__init__", false]], "__init__() (imod.msw.landuseoptions method)": [[237, "imod.msw.LanduseOptions.__init__", false]], "__init__() (imod.msw.metaswapmodel method)": [[238, "imod.msw.MetaSwapModel.__init__", false]], "__init__() (imod.msw.meteogrid method)": [[242, "imod.msw.MeteoGrid.__init__", false]], "__init__() (imod.msw.meteogridcopy method)": [[243, "imod.msw.MeteoGridCopy.__init__", false]], "__init__() (imod.msw.ponding method)": [[245, "imod.msw.Ponding.__init__", false]], "__init__() (imod.msw.precipitationmapping method)": [[247, "imod.msw.PrecipitationMapping.__init__", false]], "__init__() (imod.msw.scalingfactors method)": [[249, "imod.msw.ScalingFactors.__init__", false]], "__init__() (imod.msw.sprinkling method)": [[251, "imod.msw.Sprinkling.__init__", false]], "__init__() (imod.msw.timeoutputcontrol method)": [[253, "imod.msw.TimeOutputControl.__init__", false]], "__init__() (imod.msw.variableoutputcontrol method)": [[254, "imod.msw.VariableOutputControl.__init__", false]], "__init__() (imod.prepare.allocation_option method)": [[255, "imod.prepare.ALLOCATION_OPTION.__init__", false]], "__init__() (imod.prepare.distributing_option method)": [[256, "imod.prepare.DISTRIBUTING_OPTION.__init__", false]], "__init__() (imod.prepare.layerregridder method)": [[257, "imod.prepare.LayerRegridder.__init__", false]], "__init__() (imod.prepare.regridder method)": [[258, "imod.prepare.Regridder.__init__", false]], "__init__() (imod.prepare.simulationallocationoptions method)": [[259, "imod.prepare.SimulationAllocationOptions.__init__", false]], "__init__() (imod.prepare.simulationdistributingoptions method)": [[260, "imod.prepare.SimulationDistributingOptions.__init__", false]], "__init__() (imod.prepare.voxelizer method)": [[261, "imod.prepare.Voxelizer.__init__", false]], "__init__() (imod.visualize.gridanimation3d method)": [[317, "imod.visualize.GridAnimation3D.__init__", false]], "__init__() (imod.visualize.staticgridanimation3d method)": [[318, "imod.visualize.StaticGridAnimation3D.__init__", false]], "__init__() (imod.wq.advectionfinitedifference method)": [[328, "imod.wq.AdvectionFiniteDifference.__init__", false]], "__init__() (imod.wq.advectionhybridmoc method)": [[329, "imod.wq.AdvectionHybridMOC.__init__", false]], "__init__() (imod.wq.advectionmoc method)": [[330, "imod.wq.AdvectionMOC.__init__", false]], "__init__() (imod.wq.advectionmodifiedmoc method)": [[331, "imod.wq.AdvectionModifiedMOC.__init__", false]], "__init__() (imod.wq.advectiontvd method)": [[332, "imod.wq.AdvectionTVD.__init__", false]], "__init__() (imod.wq.basicflow method)": [[333, "imod.wq.BasicFlow.__init__", false]], "__init__() (imod.wq.basictransport method)": [[334, "imod.wq.BasicTransport.__init__", false]], "__init__() (imod.wq.constanthead method)": [[335, "imod.wq.ConstantHead.__init__", false]], "__init__() (imod.wq.dispersion method)": [[336, "imod.wq.Dispersion.__init__", false]], "__init__() (imod.wq.drainage method)": [[337, "imod.wq.Drainage.__init__", false]], "__init__() (imod.wq.evapotranspirationhighestactive method)": [[338, "imod.wq.EvapotranspirationHighestActive.__init__", false]], "__init__() (imod.wq.evapotranspirationlayers method)": [[339, "imod.wq.EvapotranspirationLayers.__init__", false]], "__init__() (imod.wq.evapotranspirationtoplayer method)": [[340, "imod.wq.EvapotranspirationTopLayer.__init__", false]], "__init__() (imod.wq.generalheadboundary method)": [[341, "imod.wq.GeneralHeadBoundary.__init__", false]], "__init__() (imod.wq.generalizedconjugategradientsolver method)": [[342, "imod.wq.GeneralizedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.layerpropertyflow method)": [[343, "imod.wq.LayerPropertyFlow.__init__", false]], "__init__() (imod.wq.massloading method)": [[344, "imod.wq.MassLoading.__init__", false]], "__init__() (imod.wq.outputcontrol method)": [[345, "imod.wq.OutputControl.__init__", false]], "__init__() (imod.wq.parallelkrylovflowsolver method)": [[346, "imod.wq.ParallelKrylovFlowSolver.__init__", false]], "__init__() (imod.wq.parallelkrylovtransportsolver method)": [[347, "imod.wq.ParallelKrylovTransportSolver.__init__", false]], "__init__() (imod.wq.preconditionedconjugategradientsolver method)": [[348, "imod.wq.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.rechargehighestactive method)": [[349, "imod.wq.RechargeHighestActive.__init__", false]], "__init__() (imod.wq.rechargelayers method)": [[350, "imod.wq.RechargeLayers.__init__", false]], "__init__() (imod.wq.rechargetoplayer method)": [[351, "imod.wq.RechargeTopLayer.__init__", false]], "__init__() (imod.wq.river method)": [[352, "imod.wq.River.__init__", false]], "__init__() (imod.wq.seawatmodel method)": [[353, "imod.wq.SeawatModel.__init__", false]], "__init__() (imod.wq.timediscretization method)": [[355, "imod.wq.TimeDiscretization.__init__", false]], "__init__() (imod.wq.timevaryingconstantconcentration method)": [[356, "imod.wq.TimeVaryingConstantConcentration.__init__", false]], "__init__() (imod.wq.variabledensityflow method)": [[357, "imod.wq.VariableDensityFlow.__init__", false]], "__init__() (imod.wq.well method)": [[358, "imod.wq.Well.__init__", false]], "active_grid_boundary_xy() (in module imod.select)": [[293, "imod.select.active_grid_boundary_xy", false]], "advectioncentral (class in imod.mf6)": [[74, "imod.mf6.AdvectionCentral", false]], "advectionfinitedifference (class in imod.wq)": [[328, "imod.wq.AdvectionFiniteDifference", false]], "advectionhybridmoc (class in imod.wq)": [[329, "imod.wq.AdvectionHybridMOC", false]], "advectionmoc (class in imod.wq)": [[330, "imod.wq.AdvectionMOC", false]], "advectionmodifiedmoc (class in imod.wq)": [[331, "imod.wq.AdvectionModifiedMOC", false]], "advectiontvd (class in imod.mf6)": [[75, "imod.mf6.AdvectionTVD", false]], "advectiontvd (class in imod.wq)": [[332, "imod.wq.AdvectionTVD", false]], "advectionupstream (class in imod.mf6)": [[76, "imod.mf6.AdvectionUpstream", false]], "allocate_drn_cells() (in module imod.prepare)": [[262, "imod.prepare.allocate_drn_cells", false]], "allocate_ghb_cells() (in module imod.prepare)": [[263, "imod.prepare.allocate_ghb_cells", false]], "allocate_rch_cells() (in module imod.prepare)": [[264, "imod.prepare.allocate_rch_cells", false]], "allocate_riv_cells() (in module imod.prepare)": [[265, "imod.prepare.allocate_riv_cells", false]], "allocation_option (class in imod.prepare)": [[255, "imod.prepare.ALLOCATION_OPTION", false]], "annualcropfactors (class in imod.msw)": [[224, "imod.msw.AnnualCropFactors", false]], "apipackage (class in imod.mf6)": [[77, "imod.mf6.ApiPackage", false]], "assign_wells() (in module imod.prepare)": [[266, "imod.prepare.assign_wells", false]], "basicflow (class in imod.wq)": [[333, "imod.wq.BasicFlow", false]], "basictransport (class in imod.wq)": [[334, "imod.wq.BasicTransport", false]], "bottom (class in imod.flow)": [[15, "imod.flow.Bottom", false]], "boundary (class in imod.flow)": [[16, "imod.flow.Boundary", false]], "buoyancy (class in imod.mf6)": [[78, "imod.mf6.Buoyancy", false]], "c_leakage() (in module imod.prepare)": [[267, "imod.prepare.c_leakage", false]], "c_radial() (in module imod.prepare)": [[268, "imod.prepare.c_radial", false]], "calculate_gxg() (in module imod.evaluate)": [[3, "imod.evaluate.calculate_gxg", false]], "cd() (in module imod.util)": [[302, "imod.util.cd", false]], "cell_max_nparticles (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.cell_max_nparticles", false]], "cell_min_nparticles (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.cell_min_nparticles", false]], "celltable() (in module imod.prepare)": [[269, "imod.prepare.celltable", false]], "check (imod.wq.seawatmodel attribute)": [[353, "imod.wq.SeawatModel.check", false]], "cleanup() (imod.mf6.drainage method)": [[88, "imod.mf6.Drainage.cleanup", false]], "cleanup() (imod.mf6.generalheadboundary method)": [[98, "imod.mf6.GeneralHeadBoundary.cleanup", false]], "cleanup() (imod.mf6.river method)": [[158, "imod.mf6.River.cleanup", false]], "cleanup() (imod.mf6.well method)": [[199, "imod.mf6.Well.cleanup", false]], "cleanup_drn() (in module imod.prepare)": [[270, "imod.prepare.cleanup_drn", false]], "cleanup_ghb() (in module imod.prepare)": [[271, "imod.prepare.cleanup_ghb", false]], "cleanup_riv() (in module imod.prepare)": [[272, "imod.prepare.cleanup_riv", false]], "cleanup_wel() (in module imod.prepare)": [[273, "imod.prepare.cleanup_wel", false]], "clip_box() (imod.mf6.constanthead method)": [[81, "imod.mf6.ConstantHead.clip_box", false]], "clip_box() (imod.mf6.drainage method)": [[89, "imod.mf6.Drainage.clip_box", false]], "clip_box() (imod.mf6.evapotranspiration method)": [[94, "imod.mf6.Evapotranspiration.clip_box", false]], "clip_box() (imod.mf6.generalheadboundary method)": [[99, "imod.mf6.GeneralHeadBoundary.clip_box", false]], "clip_box() (imod.mf6.horizontalflowbarrierresistance method)": [[116, "imod.mf6.HorizontalFlowBarrierResistance.clip_box", false]], "clip_box() (imod.mf6.initialconditions method)": [[120, "imod.mf6.InitialConditions.clip_box", false]], "clip_box() (imod.mf6.layeredwell method)": [[125, "imod.mf6.LayeredWell.clip_box", false]], "clip_box() (imod.mf6.modflow6simulation method)": [[134, "imod.mf6.Modflow6Simulation.clip_box", false]], "clip_box() (imod.mf6.nodepropertyflow method)": [[147, "imod.mf6.NodePropertyFlow.clip_box", false]], "clip_box() (imod.mf6.recharge method)": [[153, "imod.mf6.Recharge.clip_box", false]], "clip_box() (imod.mf6.river method)": [[159, "imod.mf6.River.clip_box", false]], "clip_box() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[165, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box", false]], "clip_box() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[168, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box", false]], "clip_box() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[171, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box", false]], "clip_box() (imod.mf6.specificstorage method)": [[181, "imod.mf6.SpecificStorage.clip_box", false]], "clip_box() (imod.mf6.storagecoefficient method)": [[185, "imod.mf6.StorageCoefficient.clip_box", false]], "clip_box() (imod.mf6.structureddiscretization method)": [[190, "imod.mf6.StructuredDiscretization.clip_box", false]], "clip_box() (imod.mf6.verticesdiscretization method)": [[196, "imod.mf6.VerticesDiscretization.clip_box", false]], "clip_box() (imod.mf6.well method)": [[200, "imod.mf6.Well.clip_box", false]], "configure() (in module imod.logging.config)": [[59, "imod.logging.config.configure", false]], "constantconcentration (class in imod.mf6)": [[79, "imod.mf6.ConstantConcentration", false]], "constanthead (class in imod.flow)": [[17, "imod.flow.ConstantHead", false]], "constanthead (class in imod.mf6)": [[80, "imod.mf6.ConstantHead", false]], "constanthead (class in imod.wq)": [[335, "imod.wq.ConstantHead", false]], "constantheadregridmethod (class in imod.mf6.regrid)": [[210, "imod.mf6.regrid.ConstantHeadRegridMethod", false]], "convert_pointwaterhead_freshwaterhead() (in module imod.evaluate)": [[4, "imod.evaluate.convert_pointwaterhead_freshwaterhead", false]], "coord_reference() (in module imod.util)": [[303, "imod.util.coord_reference", false]], "couplermapping (class in imod.msw)": [[225, "imod.msw.CouplerMapping", false]], "courant (imod.wq.advectionfinitedifference attribute)": [[328, "imod.wq.AdvectionFiniteDifference.courant", false]], "courant (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.courant", false]], "courant (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.courant", false]], "courant (imod.wq.advectionmodifiedmoc attribute)": [[331, "imod.wq.AdvectionModifiedMOC.courant", false]], "courant (imod.wq.advectiontvd attribute)": [[332, "imod.wq.AdvectionTVD.courant", false]], "create_layered_top() (in module imod.prepare)": [[274, "imod.prepare.create_layered_top", false]], "create_time_discretization() (imod.flow.imodflowmodel method)": [[25, "imod.flow.ImodflowModel.create_time_discretization", false]], "create_time_discretization() (imod.mf6.modflow6simulation method)": [[135, "imod.mf6.Modflow6Simulation.create_time_discretization", false]], "create_time_discretization() (imod.wq.seawatmodel method)": [[354, "imod.wq.SeawatModel.create_time_discretization", false]], "critical (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.CRITICAL", false]], "critical() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.critical", false]], "critical() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.critical", false]], "critical() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.critical", false]], "critical() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.critical", false]], "cross_section() (in module imod.visualize)": [[319, "imod.visualize.cross_section", false]], "cross_section_line() (in module imod.select)": [[294, "imod.select.cross_section_line", false]], "cross_section_linestring() (in module imod.select)": [[295, "imod.select.cross_section_linestring", false]], "dceps (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.dceps", false]], "dchmoc (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.dchmoc", false]], "dconcentration_epsilon (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.dconcentration_epsilon", false]], "dconcentration_epsilon (imod.wq.advectionmodifiedmoc attribute)": [[331, "imod.wq.AdvectionModifiedMOC.dconcentration_epsilon", false]], "debug (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.DEBUG", false]], "debug() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.debug", false]], "debug() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.debug", false]], "debug() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.debug", false]], "debug() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.debug", false]], "discretizationregridmethod (class in imod.mf6.regrid)": [[211, "imod.mf6.regrid.DiscretizationRegridMethod", false]], "dispersion (class in imod.mf6)": [[86, "imod.mf6.Dispersion", false]], "dispersion (class in imod.wq)": [[336, "imod.wq.Dispersion", false]], "dispersionregridmethod (class in imod.mf6.regrid)": [[212, "imod.mf6.regrid.DispersionRegridMethod", false]], "distribute_drn_conductance() (in module imod.prepare)": [[275, "imod.prepare.distribute_drn_conductance", false]], "distribute_ghb_conductance() (in module imod.prepare)": [[276, "imod.prepare.distribute_ghb_conductance", false]], "distribute_riv_conductance() (in module imod.prepare)": [[277, "imod.prepare.distribute_riv_conductance", false]], "distributing_option (class in imod.prepare)": [[256, "imod.prepare.DISTRIBUTING_OPTION", false]], "drain (class in imod.flow)": [[18, "imod.flow.Drain", false]], "drainage (class in imod.mf6)": [[87, "imod.mf6.Drainage", false]], "drainage (class in imod.wq)": [[337, "imod.wq.Drainage", false]], "drainageregridmethod (class in imod.mf6.regrid)": [[213, "imod.mf6.regrid.DrainageRegridMethod", false]], "dump() (imod.mf6.groundwaterflowmodel method)": [[104, "imod.mf6.GroundwaterFlowModel.dump", false]], "dump() (imod.mf6.groundwatertransportmodel method)": [[109, "imod.mf6.GroundwaterTransportModel.dump", false]], "dump() (imod.mf6.modflow6simulation method)": [[136, "imod.mf6.Modflow6Simulation.dump", false]], "empty_2d() (in module imod.util)": [[304, "imod.util.empty_2d", false]], "empty_2d_transient() (in module imod.util)": [[305, "imod.util.empty_2d_transient", false]], "empty_3d() (in module imod.util)": [[306, "imod.util.empty_3d", false]], "empty_3d_transient() (in module imod.util)": [[307, "imod.util.empty_3d_transient", false]], "emptyregridmethod (class in imod.mf6.regrid)": [[214, "imod.mf6.regrid.EmptyRegridMethod", false]], "error (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.ERROR", false]], "error() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.error", false]], "error() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.error", false]], "error() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.error", false]], "error() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.error", false]], "evapotranspiration (class in imod.flow)": [[19, "imod.flow.EvapoTranspiration", false]], "evapotranspiration (class in imod.mf6)": [[93, "imod.mf6.Evapotranspiration", false]], "evapotranspirationhighestactive (class in imod.wq)": [[338, "imod.wq.EvapotranspirationHighestActive", false]], "evapotranspirationlayers (class in imod.wq)": [[339, "imod.wq.EvapotranspirationLayers", false]], "evapotranspirationmapping (class in imod.msw)": [[226, "imod.msw.EvapotranspirationMapping", false]], "evapotranspirationregridmethod (class in imod.mf6.regrid)": [[215, "imod.mf6.regrid.EvapotranspirationRegridMethod", false]], "evapotranspirationtoplayer (class in imod.wq)": [[340, "imod.wq.EvapotranspirationTopLayer", false]], "extra_overlap (imod.prepare.regridder attribute)": [[258, "imod.prepare.Regridder.extra_overlap", false]], "facebudget() (in module imod.evaluate)": [[5, "imod.evaluate.facebudget", false]], "fill() (in module imod.prepare)": [[278, "imod.prepare.fill", false]], "flow_velocity() (in module imod.evaluate)": [[6, "imod.evaluate.flow_velocity", false]], "from_flow_model() (imod.mf6.sourcesinkmixing static method)": [[179, "imod.mf6.SourceSinkMixing.from_flow_model", false]], "from_imod5_cap_data() (imod.mf6.layeredwell class method)": [[126, "imod.mf6.LayeredWell.from_imod5_cap_data", false]], "from_imod5_data() (imod.mf6.constanthead class method)": [[82, "imod.mf6.ConstantHead.from_imod5_data", false]], "from_imod5_data() (imod.mf6.drainage class method)": [[90, "imod.mf6.Drainage.from_imod5_data", false]], "from_imod5_data() (imod.mf6.generalheadboundary class method)": [[100, "imod.mf6.GeneralHeadBoundary.from_imod5_data", false]], "from_imod5_data() (imod.mf6.groundwaterflowmodel class method)": [[105, "imod.mf6.GroundwaterFlowModel.from_imod5_data", false]], "from_imod5_data() (imod.mf6.initialconditions class method)": [[121, "imod.mf6.InitialConditions.from_imod5_data", false]], "from_imod5_data() (imod.mf6.layeredwell class method)": [[127, "imod.mf6.LayeredWell.from_imod5_data", false]], "from_imod5_data() (imod.mf6.modflow6simulation class method)": [[137, "imod.mf6.Modflow6Simulation.from_imod5_data", false]], "from_imod5_data() (imod.mf6.nodepropertyflow class method)": [[148, "imod.mf6.NodePropertyFlow.from_imod5_data", false]], "from_imod5_data() (imod.mf6.recharge class method)": [[154, "imod.mf6.Recharge.from_imod5_data", false]], "from_imod5_data() (imod.mf6.river class method)": [[160, "imod.mf6.River.from_imod5_data", false]], "from_imod5_data() (imod.mf6.singlelayerhorizontalflowbarrierresistance class method)": [[172, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", false]], "from_imod5_data() (imod.mf6.storagecoefficient class method)": [[186, "imod.mf6.StorageCoefficient.from_imod5_data", false]], "from_imod5_data() (imod.mf6.structureddiscretization class method)": [[191, "imod.mf6.StructuredDiscretization.from_imod5_data", false]], "from_imod5_data() (imod.mf6.well class method)": [[201, "imod.mf6.Well.from_imod5_data", false]], "from_imod5_data() (imod.msw.evapotranspirationmapping class method)": [[227, "imod.msw.EvapotranspirationMapping.from_imod5_data", false]], "from_imod5_data() (imod.msw.griddata class method)": [[229, "imod.msw.GridData.from_imod5_data", false]], "from_imod5_data() (imod.msw.infiltration class method)": [[232, "imod.msw.Infiltration.from_imod5_data", false]], "from_imod5_data() (imod.msw.metaswapmodel class method)": [[239, "imod.msw.MetaSwapModel.from_imod5_data", false]], "from_imod5_data() (imod.msw.meteogridcopy class method)": [[244, "imod.msw.MeteoGridCopy.from_imod5_data", false]], "from_imod5_data() (imod.msw.ponding class method)": [[246, "imod.msw.Ponding.from_imod5_data", false]], "from_imod5_data() (imod.msw.precipitationmapping class method)": [[248, "imod.msw.PrecipitationMapping.from_imod5_data", false]], "from_imod5_data() (imod.msw.scalingfactors class method)": [[250, "imod.msw.ScalingFactors.from_imod5_data", false]], "from_imod5_data() (imod.msw.sprinkling class method)": [[252, "imod.msw.Sprinkling.from_imod5_data", false]], "from_imod5_shd_data() (imod.mf6.constanthead class method)": [[83, "imod.mf6.ConstantHead.from_imod5_shd_data", false]], "from_mdal_compliant_ugrid2d() (in module imod.util)": [[308, "imod.util.from_mdal_compliant_ugrid2d", false]], "gdal_rasterize() (in module imod.prepare)": [[279, "imod.prepare.gdal_rasterize", false]], "generalheadboundary (class in imod.flow)": [[20, "imod.flow.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.mf6)": [[97, "imod.mf6.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.wq)": [[341, "imod.wq.GeneralHeadBoundary", false]], "generalheadboundaryregridmethod (class in imod.mf6.regrid)": [[216, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", false]], "generalizedconjugategradientsolver (class in imod.wq)": [[342, "imod.wq.GeneralizedConjugateGradientSolver", false]], "get_lower_active_grid_cells() (in module imod.prepare)": [[280, "imod.prepare.get_lower_active_grid_cells", false]], "get_lower_active_layer_number() (in module imod.prepare)": [[281, "imod.prepare.get_lower_active_layer_number", false]], "get_upper_active_grid_cells() (in module imod.prepare)": [[282, "imod.prepare.get_upper_active_grid_cells", false]], "get_upper_active_layer_number() (in module imod.prepare)": [[283, "imod.prepare.get_upper_active_layer_number", false]], "grid_3d() (in module imod.visualize)": [[320, "imod.visualize.grid_3d", false]], "grid_boundary_xy() (in module imod.select)": [[296, "imod.select.grid_boundary_xy", false]], "gridanimation3d (class in imod.visualize)": [[317, "imod.visualize.GridAnimation3D", false]], "griddata (class in imod.msw)": [[228, "imod.msw.GridData", false]], "groundwaterflowmodel (class in imod.mf6)": [[103, "imod.mf6.GroundwaterFlowModel", false]], "groundwatertransportmodel (class in imod.mf6)": [[108, "imod.mf6.GroundwaterTransportModel", false]], "header() (in module imod.formats.idf)": [[40, "imod.formats.idf.header", false]], "header() (in module imod.formats.rasterio)": [[53, "imod.formats.rasterio.header", false]], "horizontalanisotropy (class in imod.flow)": [[21, "imod.flow.HorizontalAnisotropy", false]], "horizontalflowbarrier (class in imod.flow)": [[22, "imod.flow.HorizontalFlowBarrier", false]], "horizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[111, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", false]], "horizontalflowbarriermultiplier (class in imod.mf6)": [[113, "imod.mf6.HorizontalFlowBarrierMultiplier", false]], "horizontalflowbarrierresistance (class in imod.mf6)": [[115, "imod.mf6.HorizontalFlowBarrierResistance", false]], "horizontalhydraulicconductivity (class in imod.flow)": [[23, "imod.flow.HorizontalHydraulicConductivity", false]], "idfmapping (class in imod.msw)": [[230, "imod.msw.IdfMapping", false]], "ignore_warnings() (in module imod.util)": [[309, "imod.util.ignore_warnings", false]], "ilogger (class in imod.logging.ilogger)": [[61, "imod.logging.ilogger.ILogger", false]], "immobilestoragetransfer (class in imod.mf6)": [[118, "imod.mf6.ImmobileStorageTransfer", false]], "imod.logging": [[56, "module-imod.logging", false]], "imod.logging.config": [[57, "module-imod.logging.config", false]], "imod.logging.ilogger": [[60, "module-imod.logging.ilogger", false]], "imod.logging.logging_decorators": [[62, "module-imod.logging.logging_decorators", false]], "imod.logging.loglevel": [[65, "module-imod.logging.loglevel", false]], "imod.logging.logurulogger": [[67, "module-imod.logging.logurulogger", false]], "imod.logging.nulllogger": [[69, "module-imod.logging.nulllogger", false]], "imod.logging.pythonlogger": [[71, "module-imod.logging.pythonlogger", false]], "imodflowmodel (class in imod.flow)": [[24, "imod.flow.ImodflowModel", false]], "imshow_topview() (in module imod.visualize)": [[321, "imod.visualize.imshow_topview", false]], "infiltration (class in imod.msw)": [[231, "imod.msw.Infiltration", false]], "info (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.INFO", false]], "info() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.info", false]], "info() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.info", false]], "info() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.info", false]], "info() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.info", false]], "init_log_decorator() (in module imod.logging.logging_decorators)": [[63, "imod.logging.logging_decorators.init_log_decorator", false]], "initialconditions (class in imod.mf6)": [[119, "imod.mf6.InitialConditions", false]], "initialconditionsequilibrium (class in imod.msw)": [[233, "imod.msw.InitialConditionsEquilibrium", false]], "initialconditionspercolation (class in imod.msw)": [[234, "imod.msw.InitialConditionsPercolation", false]], "initialconditionsregridmethod (class in imod.mf6.regrid)": [[217, "imod.mf6.regrid.InitialConditionsRegridMethod", false]], "initialconditionsrootzonepressurehead (class in imod.msw)": [[235, "imod.msw.InitialConditionsRootzonePressureHead", false]], "initialconditionssavedstate (class in imod.msw)": [[236, "imod.msw.InitialConditionsSavedState", false]], "interpolate_value_boundaries() (in module imod.evaluate)": [[7, "imod.evaluate.interpolate_value_boundaries", false]], "intra_cell_boundary_conditions() (in module imod.evaluate)": [[8, "imod.evaluate.intra_cell_boundary_conditions", false]], "landuseoptions (class in imod.msw)": [[237, "imod.msw.LanduseOptions", false]], "laplace_interpolate() (in module imod.prepare)": [[284, "imod.prepare.laplace_interpolate", false]], "layeredwell (class in imod.mf6)": [[124, "imod.mf6.LayeredWell", false]], "layerpropertyflow (class in imod.wq)": [[343, "imod.wq.LayerPropertyFlow", false]], "layerregridder (class in imod.prepare)": [[257, "imod.prepare.LayerRegridder", false]], "line_3d() (in module imod.visualize)": [[322, "imod.visualize.line_3d", false]], "linestring_to_square_zpolygons() (in module imod.prepare)": [[285, "imod.prepare.linestring_to_square_zpolygons", false]], "linestring_to_trapezoid_zpolygons() (in module imod.prepare)": [[286, "imod.prepare.linestring_to_trapezoid_zpolygons", false]], "log() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.log", false]], "log() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.log", false]], "log() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.log", false]], "log() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.log", false]], "loggertype (class in imod.logging.config)": [[58, "imod.logging.config.LoggerType", false]], "loglevel (class in imod.logging.loglevel)": [[66, "imod.logging.loglevel.LogLevel", false]], "loguru (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.LOGURU", false]], "logurulogger (class in imod.logging.logurulogger)": [[68, "imod.logging.logurulogger.LoguruLogger", false]], "mask() (imod.mf6.constanthead method)": [[84, "imod.mf6.ConstantHead.mask", false]], "mask() (imod.mf6.drainage method)": [[91, "imod.mf6.Drainage.mask", false]], "mask() (imod.mf6.evapotranspiration method)": [[95, "imod.mf6.Evapotranspiration.mask", false]], "mask() (imod.mf6.generalheadboundary method)": [[101, "imod.mf6.GeneralHeadBoundary.mask", false]], "mask() (imod.mf6.initialconditions method)": [[122, "imod.mf6.InitialConditions.mask", false]], "mask() (imod.mf6.layeredwell method)": [[128, "imod.mf6.LayeredWell.mask", false]], "mask() (imod.mf6.nodepropertyflow method)": [[149, "imod.mf6.NodePropertyFlow.mask", false]], "mask() (imod.mf6.recharge method)": [[155, "imod.mf6.Recharge.mask", false]], "mask() (imod.mf6.river method)": [[161, "imod.mf6.River.mask", false]], "mask() (imod.mf6.specificstorage method)": [[182, "imod.mf6.SpecificStorage.mask", false]], "mask() (imod.mf6.storagecoefficient method)": [[187, "imod.mf6.StorageCoefficient.mask", false]], "mask() (imod.mf6.well method)": [[202, "imod.mf6.Well.mask", false]], "mask_all_packages() (imod.mf6.groundwaterflowmodel method)": [[106, "imod.mf6.GroundwaterFlowModel.mask_all_packages", false]], "mask_all_packages() (imod.mf6.groundwatertransportmodel method)": [[110, "imod.mf6.GroundwaterTransportModel.mask_all_packages", false]], "massloading (class in imod.wq)": [[344, "imod.wq.MassLoading", false]], "masssourceloading (class in imod.mf6)": [[131, "imod.mf6.MassSourceLoading", false]], "max_nparticles (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.max_nparticles", false]], "max_particles (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.max_particles", false]], "mdal_compliant_ugrid2d() (in module imod.util)": [[310, "imod.util.mdal_compliant_ugrid2d", false]], "metamod (class in imod.couplers.metamod)": [[73, "imod.couplers.metamod.MetaMod", false]], "metaswap (class in imod.flow)": [[26, "imod.flow.MetaSwap", false]], "metaswapmodel (class in imod.msw)": [[238, "imod.msw.MetaSwapModel", false]], "meteogrid (class in imod.msw)": [[242, "imod.msw.MeteoGrid", false]], "meteogridcopy (class in imod.msw)": [[243, "imod.msw.MeteoGridCopy", false]], "method (imod.prepare.layerregridder attribute)": [[257, "imod.prepare.LayerRegridder.method", false]], "method (imod.prepare.regridder attribute)": [[258, "imod.prepare.Regridder.method", false]], "method (imod.prepare.voxelizer attribute)": [[261, "imod.prepare.Voxelizer.method", false]], "mobilestoragetransfer (class in imod.mf6)": [[132, "imod.mf6.MobileStorageTransfer", false]], "mobilestoragetransferregridmethod (class in imod.mf6.regrid)": [[218, "imod.mf6.regrid.MobileStorageTransferRegridMethod", false]], "modelname (imod.flow.imodflowmodel attribute)": [[24, "imod.flow.ImodflowModel.modelname", false]], "modelname (imod.wq.seawatmodel attribute)": [[353, "imod.wq.SeawatModel.modelname", false]], "modflow6simulation (class in imod.mf6)": [[133, "imod.mf6.Modflow6Simulation", false]], "module": [[56, "module-imod.logging", false], [57, "module-imod.logging.config", false], [60, "module-imod.logging.ilogger", false], [62, "module-imod.logging.logging_decorators", false], [65, "module-imod.logging.loglevel", false], [67, "module-imod.logging.logurulogger", false], [69, "module-imod.logging.nulllogger", false], [71, "module-imod.logging.pythonlogger", false]], "ndim_regrid (imod.prepare.regridder attribute)": [[258, "imod.prepare.Regridder.ndim_regrid", false]], "nodepropertyflow (class in imod.mf6)": [[146, "imod.mf6.NodePropertyFlow", false]], "nodepropertyflowregridmethod (class in imod.mf6.regrid)": [[219, "imod.mf6.regrid.NodePropertyFlowRegridMethod", false]], "nparticles_advection (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.nparticles_advection", false]], "nparticles_no_advection (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.nparticles_no_advection", false]], "nph (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.nph", false]], "npl (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.npl", false]], "nplane (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.nplane", false]], "nplane (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.nplane", false]], "npmax (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.npmax", false]], "npmin (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.npmin", false]], "null (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.NULL", false]], "nulllogger (class in imod.logging.nulllogger)": [[70, "imod.logging.nulllogger.NullLogger", false]], "open() (in module imod.formats.idf)": [[41, "imod.formats.idf.open", false]], "open() (in module imod.formats.rasterio)": [[54, "imod.formats.rasterio.open", false]], "open_cbc() (in module imod.mf6)": [[207, "imod.mf6.open_cbc", false]], "open_concentration() (imod.mf6.modflow6simulation method)": [[138, "imod.mf6.Modflow6Simulation.open_concentration", false]], "open_dataset() (in module imod.formats.idf)": [[42, "imod.formats.idf.open_dataset", false]], "open_flow_budget() (imod.mf6.modflow6simulation method)": [[139, "imod.mf6.Modflow6Simulation.open_flow_budget", false]], "open_hds() (in module imod.mf6)": [[208, "imod.mf6.open_hds", false]], "open_head() (imod.mf6.modflow6simulation method)": [[140, "imod.mf6.Modflow6Simulation.open_head", false]], "open_projectfile_data() (in module imod.formats.prj)": [[50, "imod.formats.prj.open_projectfile_data", false]], "open_subdomains() (in module imod.formats.idf)": [[43, "imod.formats.idf.open_subdomains", false]], "open_transport_budget() (imod.mf6.modflow6simulation method)": [[141, "imod.mf6.Modflow6Simulation.open_transport_budget", false]], "outputcontrol (class in imod.mf6)": [[151, "imod.mf6.OutputControl", false]], "outputcontrol (class in imod.wq)": [[345, "imod.wq.OutputControl", false]], "parallelkrylovflowsolver (class in imod.wq)": [[346, "imod.wq.ParallelKrylovFlowSolver", false]], "parallelkrylovtransportsolver (class in imod.wq)": [[347, "imod.wq.ParallelKrylovTransportSolver", false]], "plot_map() (in module imod.visualize)": [[323, "imod.visualize.plot_map", false]], "points_in_bounds() (in module imod.select)": [[297, "imod.select.points_in_bounds", false]], "points_indices() (in module imod.select)": [[298, "imod.select.points_indices", false]], "points_set_values() (in module imod.select)": [[299, "imod.select.points_set_values", false]], "points_values() (in module imod.select)": [[300, "imod.select.points_values", false]], "polygonize() (in module imod.prepare)": [[287, "imod.prepare.polygonize", false]], "ponding (class in imod.msw)": [[245, "imod.msw.Ponding", false]], "precipitationmapping (class in imod.msw)": [[247, "imod.msw.PrecipitationMapping", false]], "preconditionedconjugategradientsolver (class in imod.flow)": [[27, "imod.flow.PreconditionedConjugateGradientSolver", false]], "preconditionedconjugategradientsolver (class in imod.wq)": [[348, "imod.wq.PreconditionedConjugateGradientSolver", false]], "prepare_wel_for_mf6() (imod.mf6.groundwaterflowmodel method)": [[107, "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", false]], "print_if_error() (in module imod.util)": [[311, "imod.util.print_if_error", false]], "python (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.PYTHON", false]], "pythonlogger (class in imod.logging.pythonlogger)": [[72, "imod.logging.pythonlogger.PythonLogger", false]], "quiver() (in module imod.visualize)": [[324, "imod.visualize.quiver", false]], "quiver_line() (in module imod.evaluate)": [[9, "imod.evaluate.quiver_line", false]], "quiver_linestring() (in module imod.evaluate)": [[10, "imod.evaluate.quiver_linestring", false]], "rasterize() (in module imod.prepare)": [[288, "imod.prepare.rasterize", false]], "rasterize_celltable() (in module imod.prepare)": [[289, "imod.prepare.rasterize_celltable", false]], "read() (in module imod.formats.gen)": [[37, "imod.formats.gen.read", false]], "read() (in module imod.formats.ipf)": [[45, "imod.formats.ipf.read", false]], "read_ascii() (in module imod.formats.gen)": [[38, "imod.formats.gen.read_ascii", false]], "read_associated() (in module imod.formats.ipf)": [[46, "imod.formats.ipf.read_associated", false]], "read_cbc_headers() (in module imod.mf6)": [[209, "imod.mf6.read_cbc_headers", false]], "read_imod_legend() (in module imod.visualize)": [[325, "imod.visualize.read_imod_legend", false]], "read_projectfile() (in module imod.formats.prj)": [[51, "imod.formats.prj.read_projectfile", false]], "read_timfile() (in module imod.formats.prj)": [[52, "imod.formats.prj.read_timfile", false]], "recharge (class in imod.flow)": [[28, "imod.flow.Recharge", false]], "recharge (class in imod.mf6)": [[152, "imod.mf6.Recharge", false]], "rechargehighestactive (class in imod.wq)": [[349, "imod.wq.RechargeHighestActive", false]], "rechargelayers (class in imod.wq)": [[350, "imod.wq.RechargeLayers", false]], "rechargeregridmethod (class in imod.mf6.regrid)": [[220, "imod.mf6.regrid.RechargeRegridMethod", false]], "rechargetoplayer (class in imod.wq)": [[351, "imod.wq.RechargeTopLayer", false]], "regrid_like() (imod.mf6.constanthead method)": [[85, "imod.mf6.ConstantHead.regrid_like", false]], "regrid_like() (imod.mf6.drainage method)": [[92, "imod.mf6.Drainage.regrid_like", false]], "regrid_like() (imod.mf6.evapotranspiration method)": [[96, "imod.mf6.Evapotranspiration.regrid_like", false]], "regrid_like() (imod.mf6.generalheadboundary method)": [[102, "imod.mf6.GeneralHeadBoundary.regrid_like", false]], "regrid_like() (imod.mf6.initialconditions method)": [[123, "imod.mf6.InitialConditions.regrid_like", false]], "regrid_like() (imod.mf6.layeredwell method)": [[129, "imod.mf6.LayeredWell.regrid_like", false]], "regrid_like() (imod.mf6.modflow6simulation method)": [[142, "imod.mf6.Modflow6Simulation.regrid_like", false]], "regrid_like() (imod.mf6.nodepropertyflow method)": [[150, "imod.mf6.NodePropertyFlow.regrid_like", false]], "regrid_like() (imod.mf6.recharge method)": [[156, "imod.mf6.Recharge.regrid_like", false]], "regrid_like() (imod.mf6.river method)": [[162, "imod.mf6.River.regrid_like", false]], "regrid_like() (imod.mf6.specificstorage method)": [[183, "imod.mf6.SpecificStorage.regrid_like", false]], "regrid_like() (imod.mf6.storagecoefficient method)": [[188, "imod.mf6.StorageCoefficient.regrid_like", false]], "regrid_like() (imod.mf6.structureddiscretization method)": [[192, "imod.mf6.StructuredDiscretization.regrid_like", false]], "regrid_like() (imod.mf6.verticesdiscretization method)": [[197, "imod.mf6.VerticesDiscretization.regrid_like", false]], "regrid_like() (imod.mf6.well method)": [[203, "imod.mf6.Well.regrid_like", false]], "regrid_like() (imod.msw.metaswapmodel method)": [[240, "imod.msw.MetaSwapModel.regrid_like", false]], "regridder (class in imod.prepare)": [[258, "imod.prepare.Regridder", false]], "reproject() (in module imod.prepare)": [[290, "imod.prepare.reproject", false]], "river (class in imod.flow)": [[29, "imod.flow.River", false]], "river (class in imod.mf6)": [[157, "imod.mf6.River", false]], "river (class in imod.wq)": [[352, "imod.wq.River", false]], "riverregridmethod (class in imod.mf6.regrid)": [[221, "imod.mf6.regrid.RiverRegridMethod", false]], "run() (imod.mf6.modflow6simulation method)": [[143, "imod.mf6.Modflow6Simulation.run", false]], "save() (in module imod.formats.idf)": [[44, "imod.formats.idf.save", false]], "save() (in module imod.formats.ipf)": [[47, "imod.formats.ipf.save", false]], "save() (in module imod.formats.rasterio)": [[55, "imod.formats.rasterio.save", false]], "scalingfactors (class in imod.msw)": [[249, "imod.msw.ScalingFactors", false]], "seawatmodel (class in imod.wq)": [[353, "imod.wq.SeawatModel", false]], "simulationallocationoptions (class in imod.prepare)": [[259, "imod.prepare.SimulationAllocationOptions", false]], "simulationdistributingoptions (class in imod.prepare)": [[260, "imod.prepare.SimulationDistributingOptions", false]], "singlelayerhorizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[164, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", false]], "singlelayerhorizontalflowbarriermultiplier (class in imod.mf6)": [[167, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", false]], "singlelayerhorizontalflowbarrierresistance (class in imod.mf6)": [[170, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", false]], "sink_nparticles (imod.wq.advectionmodifiedmoc attribute)": [[331, "imod.wq.AdvectionModifiedMOC.sink_nparticles", false]], "sink_particle_placement (imod.wq.advectionmodifiedmoc attribute)": [[331, "imod.wq.AdvectionModifiedMOC.sink_particle_placement", false]], "solution (class in imod.mf6)": [[174, "imod.mf6.Solution", false]], "solutionpresetcomplex() (in module imod.mf6)": [[175, "imod.mf6.SolutionPresetComplex", false]], "solutionpresetmoderate() (in module imod.mf6)": [[176, "imod.mf6.SolutionPresetModerate", false]], "solutionpresetsimple() (in module imod.mf6)": [[177, "imod.mf6.SolutionPresetSimple", false]], "sourcesinkmixing (class in imod.mf6)": [[178, "imod.mf6.SourceSinkMixing", false]], "spatial_reference() (in module imod.util)": [[312, "imod.util.spatial_reference", false]], "specificstorage (class in imod.flow)": [[30, "imod.flow.SpecificStorage", false]], "specificstorage (class in imod.mf6)": [[180, "imod.mf6.SpecificStorage", false]], "specificstorageregridmethod (class in imod.mf6.regrid)": [[222, "imod.mf6.regrid.SpecificStorageRegridMethod", false]], "split() (imod.mf6.modflow6simulation method)": [[144, "imod.mf6.Modflow6Simulation.split", false]], "split_conductance() (imod.mf6.river class method)": [[163, "imod.mf6.River.split_conductance", false]], "sprinkling (class in imod.msw)": [[251, "imod.msw.Sprinkling", false]], "stability_constraint_advection() (in module imod.evaluate)": [[11, "imod.evaluate.stability_constraint_advection", false]], "stability_constraint_wel() (in module imod.evaluate)": [[12, "imod.evaluate.stability_constraint_wel", false]], "standard_log_decorator() (in module imod.logging.logging_decorators)": [[64, "imod.logging.logging_decorators.standard_log_decorator", false]], "startinghead (class in imod.flow)": [[31, "imod.flow.StartingHead", false]], "staticgridanimation3d (class in imod.visualize)": [[318, "imod.visualize.StaticGridAnimation3D", false]], "storagecoefficient (class in imod.flow)": [[32, "imod.flow.StorageCoefficient", false]], "storagecoefficient (class in imod.mf6)": [[184, "imod.mf6.StorageCoefficient", false]], "storagecoefficientregridmethod (class in imod.mf6.regrid)": [[223, "imod.mf6.regrid.StorageCoefficientRegridMethod", false]], "streamfunction() (in module imod.visualize)": [[326, "imod.visualize.streamfunction", false]], "streamfunction_line() (in module imod.evaluate)": [[13, "imod.evaluate.streamfunction_line", false]], "streamfunction_linestring() (in module imod.evaluate)": [[14, "imod.evaluate.streamfunction_linestring", false]], "structureddiscretization (class in imod.mf6)": [[189, "imod.mf6.StructuredDiscretization", false]], "timediscretization (class in imod.mf6)": [[193, "imod.mf6.TimeDiscretization", false]], "timediscretization (class in imod.wq)": [[355, "imod.wq.TimeDiscretization", false]], "timeoutputcontrol (class in imod.msw)": [[253, "imod.msw.TimeOutputControl", false]], "timevaryingconstantconcentration (class in imod.wq)": [[356, "imod.wq.TimeVaryingConstantConcentration", false]], "to_datetime() (in module imod.util)": [[313, "imod.util.to_datetime", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[112, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarriermultiplier method)": [[114, "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierresistance method)": [[117, "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.layeredwell method)": [[130, "imod.mf6.LayeredWell.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[166, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[169, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[173, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.well method)": [[204, "imod.mf6.Well.to_mf6_pkg", false]], "to_ugrid2d() (in module imod.util)": [[314, "imod.util.to_ugrid2d", false]], "top (class in imod.flow)": [[33, "imod.flow.Top", false]], "tracking (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.tracking", false]], "tracking (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.tracking", false]], "tracking (imod.wq.advectionmodifiedmoc attribute)": [[331, "imod.wq.AdvectionModifiedMOC.tracking", false]], "transform() (in module imod.util)": [[315, "imod.util.transform", false]], "unsaturatedzoneflow (class in imod.mf6)": [[194, "imod.mf6.UnsaturatedZoneFlow", false]], "upper_active_layer() (in module imod.select)": [[301, "imod.select.upper_active_layer", false]], "use_relative_weights (imod.prepare.regridder attribute)": [[258, "imod.prepare.Regridder.use_relative_weights", false]], "variabledensityflow (class in imod.wq)": [[357, "imod.wq.VariableDensityFlow", false]], "variableoutputcontrol (class in imod.msw)": [[254, "imod.msw.VariableOutputControl", false]], "verticalanisotropy (class in imod.flow)": [[34, "imod.flow.VerticalAnisotropy", false]], "verticalhydraulicconductivity (class in imod.flow)": [[35, "imod.flow.VerticalHydraulicConductivity", false]], "verticesdiscretization (class in imod.mf6)": [[195, "imod.mf6.VerticesDiscretization", false]], "voxelizer (class in imod.prepare)": [[261, "imod.prepare.Voxelizer", false]], "warning (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.WARNING", false]], "warning() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.warning", false]], "warning() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.warning", false]], "warning() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.warning", false]], "warning() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.warning", false]], "waterbalance_barchart() (in module imod.visualize)": [[327, "imod.visualize.waterbalance_barchart", false]], "weighting (imod.wq.advectionfinitedifference attribute)": [[328, "imod.wq.AdvectionFiniteDifference.weighting", false]], "weighting_factor (imod.wq.advectionhybridmoc attribute)": [[329, "imod.wq.AdvectionHybridMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmoc attribute)": [[330, "imod.wq.AdvectionMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmodifiedmoc attribute)": [[331, "imod.wq.AdvectionModifiedMOC.weighting_factor", false]], "well (class in imod.flow)": [[36, "imod.flow.Well", false]], "well (class in imod.mf6)": [[198, "imod.mf6.Well", false]], "well (class in imod.wq)": [[358, "imod.wq.Well", false]], "welldisstructured (class in imod.mf6)": [[205, "imod.mf6.WellDisStructured", false]], "welldisvertices (class in imod.mf6)": [[206, "imod.mf6.WellDisVertices", false]], "where() (in module imod.util)": [[316, "imod.util.where", false]], "write() (imod.mf6.modflow6simulation method)": [[145, "imod.mf6.Modflow6Simulation.write", false]], "write() (imod.msw.metaswapmodel method)": [[241, "imod.msw.MetaSwapModel.write", false]], "write() (in module imod.formats.gen)": [[39, "imod.formats.gen.write", false]], "write() (in module imod.formats.ipf)": [[48, "imod.formats.ipf.write", false]], "write_assoc() (in module imod.formats.ipf)": [[49, "imod.formats.ipf.write_assoc", false]], "zonal_aggregate_polygons() (in module imod.prepare)": [[291, "imod.prepare.zonal_aggregate_polygons", false]], "zonal_aggregate_raster() (in module imod.prepare)": [[292, "imod.prepare.zonal_aggregate_raster", false]]}, "objects": {"imod": [[56, 4, 0, "-", "logging"]], "imod.couplers.metamod": [[73, 0, 1, "", "MetaMod"]], "imod.couplers.metamod.MetaMod": [[73, 1, 1, "", "__init__"]], "imod.evaluate": [[3, 2, 1, "", "calculate_gxg"], [4, 2, 1, "", "convert_pointwaterhead_freshwaterhead"], [5, 2, 1, "", "facebudget"], [6, 2, 1, "", "flow_velocity"], [7, 2, 1, "", "interpolate_value_boundaries"], [8, 2, 1, "", "intra_cell_boundary_conditions"], [9, 2, 1, "", "quiver_line"], [10, 2, 1, "", "quiver_linestring"], [11, 2, 1, "", "stability_constraint_advection"], [12, 2, 1, "", "stability_constraint_wel"], [13, 2, 1, "", "streamfunction_line"], [14, 2, 1, "", "streamfunction_linestring"]], "imod.flow": [[15, 0, 1, "", "Bottom"], [16, 0, 1, "", "Boundary"], [17, 0, 1, "", "ConstantHead"], [18, 0, 1, "", "Drain"], [19, 0, 1, "", "EvapoTranspiration"], [20, 0, 1, "", "GeneralHeadBoundary"], [21, 0, 1, "", "HorizontalAnisotropy"], [22, 0, 1, "", "HorizontalFlowBarrier"], [23, 0, 1, "", "HorizontalHydraulicConductivity"], [24, 0, 1, "", "ImodflowModel"], [26, 0, 1, "", "MetaSwap"], [27, 0, 1, "", "PreconditionedConjugateGradientSolver"], [28, 0, 1, "", "Recharge"], [29, 0, 1, "", "River"], [30, 0, 1, "", "SpecificStorage"], [31, 0, 1, "", "StartingHead"], [32, 0, 1, "", "StorageCoefficient"], [33, 0, 1, "", "Top"], [34, 0, 1, "", "VerticalAnisotropy"], [35, 0, 1, "", "VerticalHydraulicConductivity"], [36, 0, 1, "", "Well"]], "imod.flow.Bottom": [[15, 1, 1, "", "__init__"]], "imod.flow.Boundary": [[16, 1, 1, "", "__init__"]], "imod.flow.ConstantHead": [[17, 1, 1, "", "__init__"]], "imod.flow.Drain": [[18, 1, 1, "", "__init__"]], "imod.flow.EvapoTranspiration": [[19, 1, 1, "", "__init__"]], "imod.flow.GeneralHeadBoundary": [[20, 1, 1, "", "__init__"]], "imod.flow.HorizontalAnisotropy": [[21, 1, 1, "", "__init__"]], "imod.flow.HorizontalFlowBarrier": [[22, 1, 1, "", "__init__"]], "imod.flow.HorizontalHydraulicConductivity": [[23, 1, 1, "", "__init__"]], "imod.flow.ImodflowModel": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "create_time_discretization"], [24, 3, 1, "", "modelname"]], "imod.flow.MetaSwap": [[26, 1, 1, "", "__init__"]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, 1, 1, "", "__init__"]], "imod.flow.Recharge": [[28, 1, 1, "", "__init__"]], "imod.flow.River": [[29, 1, 1, "", "__init__"]], "imod.flow.SpecificStorage": [[30, 1, 1, "", "__init__"]], "imod.flow.StartingHead": [[31, 1, 1, "", "__init__"]], "imod.flow.StorageCoefficient": [[32, 1, 1, "", "__init__"]], "imod.flow.Top": [[33, 1, 1, "", "__init__"]], "imod.flow.VerticalAnisotropy": [[34, 1, 1, "", "__init__"]], "imod.flow.VerticalHydraulicConductivity": [[35, 1, 1, "", "__init__"]], "imod.flow.Well": [[36, 1, 1, "", "__init__"]], "imod.formats.gen": [[37, 2, 1, "", "read"], [38, 2, 1, "", "read_ascii"], [39, 2, 1, "", "write"]], "imod.formats.idf": [[40, 2, 1, "", "header"], [41, 2, 1, "", "open"], [42, 2, 1, "", "open_dataset"], [43, 2, 1, "", "open_subdomains"], [44, 2, 1, "", "save"]], "imod.formats.ipf": [[45, 2, 1, "", "read"], [46, 2, 1, "", "read_associated"], [47, 2, 1, "", "save"], [48, 2, 1, "", "write"], [49, 2, 1, "", "write_assoc"]], "imod.formats.prj": [[50, 2, 1, "", "open_projectfile_data"], [51, 2, 1, "", "read_projectfile"], [52, 2, 1, "", "read_timfile"]], "imod.formats.rasterio": [[53, 2, 1, "", "header"], [54, 2, 1, "", "open"], [55, 2, 1, "", "save"]], "imod.logging": [[57, 4, 0, "-", "config"], [60, 4, 0, "-", "ilogger"], [62, 4, 0, "-", "logging_decorators"], [65, 4, 0, "-", "loglevel"], [67, 4, 0, "-", "logurulogger"], [69, 4, 0, "-", "nulllogger"], [71, 4, 0, "-", "pythonlogger"]], "imod.logging.config": [[58, 0, 1, "", "LoggerType"], [59, 2, 1, "", "configure"]], "imod.logging.config.LoggerType": [[58, 3, 1, "", "LOGURU"], [58, 3, 1, "", "NULL"], [58, 3, 1, "", "PYTHON"], [58, 1, 1, "", "__init__"]], "imod.logging.ilogger": [[61, 0, 1, "", "ILogger"]], "imod.logging.ilogger.ILogger": [[61, 1, 1, "", "__init__"], [61, 1, 1, "", "critical"], [61, 1, 1, "", "debug"], [61, 1, 1, "", "error"], [61, 1, 1, "", "info"], [61, 1, 1, "", "log"], [61, 1, 1, "", "warning"]], "imod.logging.logging_decorators": [[63, 2, 1, "", "init_log_decorator"], [64, 2, 1, "", "standard_log_decorator"]], "imod.logging.loglevel": [[66, 0, 1, "", "LogLevel"]], "imod.logging.loglevel.LogLevel": [[66, 3, 1, "", "CRITICAL"], [66, 3, 1, "", "DEBUG"], [66, 3, 1, "", "ERROR"], [66, 3, 1, "", "INFO"], [66, 3, 1, "", "WARNING"], [66, 1, 1, "", "__init__"]], "imod.logging.logurulogger": [[68, 0, 1, "", "LoguruLogger"]], "imod.logging.logurulogger.LoguruLogger": [[68, 1, 1, "", "__init__"], [68, 1, 1, "", "critical"], [68, 1, 1, "", "debug"], [68, 1, 1, "", "error"], [68, 1, 1, "", "info"], [68, 1, 1, "", "log"], [68, 1, 1, "", "warning"]], "imod.logging.nulllogger": [[70, 0, 1, "", "NullLogger"]], "imod.logging.nulllogger.NullLogger": [[70, 1, 1, "", "__init__"], [70, 1, 1, "", "critical"], [70, 1, 1, "", "debug"], [70, 1, 1, "", "error"], [70, 1, 1, "", "info"], [70, 1, 1, "", "log"], [70, 1, 1, "", "warning"]], "imod.logging.pythonlogger": [[72, 0, 1, "", "PythonLogger"]], "imod.logging.pythonlogger.PythonLogger": [[72, 1, 1, "", "__init__"], [72, 1, 1, "", "critical"], [72, 1, 1, "", "debug"], [72, 1, 1, "", "error"], [72, 1, 1, "", "info"], [72, 1, 1, "", "log"], [72, 1, 1, "", "warning"]], "imod.mf6": [[74, 0, 1, "", "AdvectionCentral"], [75, 0, 1, "", "AdvectionTVD"], [76, 0, 1, "", "AdvectionUpstream"], [77, 0, 1, "", "ApiPackage"], [78, 0, 1, "", "Buoyancy"], [79, 0, 1, "", "ConstantConcentration"], [80, 0, 1, "", "ConstantHead"], [86, 0, 1, "", "Dispersion"], [87, 0, 1, "", "Drainage"], [93, 0, 1, "", "Evapotranspiration"], [97, 0, 1, "", "GeneralHeadBoundary"], [103, 0, 1, "", "GroundwaterFlowModel"], [108, 0, 1, "", "GroundwaterTransportModel"], [111, 0, 1, "", "HorizontalFlowBarrierHydraulicCharacteristic"], [113, 0, 1, "", "HorizontalFlowBarrierMultiplier"], [115, 0, 1, "", "HorizontalFlowBarrierResistance"], [118, 0, 1, "", "ImmobileStorageTransfer"], [119, 0, 1, "", "InitialConditions"], [124, 0, 1, "", "LayeredWell"], [131, 0, 1, "", "MassSourceLoading"], [132, 0, 1, "", "MobileStorageTransfer"], [133, 0, 1, "", "Modflow6Simulation"], [146, 0, 1, "", "NodePropertyFlow"], [151, 0, 1, "", "OutputControl"], [152, 0, 1, "", "Recharge"], [157, 0, 1, "", "River"], [164, 0, 1, "", "SingleLayerHorizontalFlowBarrierHydraulicCharacteristic"], [167, 0, 1, "", "SingleLayerHorizontalFlowBarrierMultiplier"], [170, 0, 1, "", "SingleLayerHorizontalFlowBarrierResistance"], [174, 0, 1, "", "Solution"], [175, 2, 1, "", "SolutionPresetComplex"], [176, 2, 1, "", "SolutionPresetModerate"], [177, 2, 1, "", "SolutionPresetSimple"], [178, 0, 1, "", "SourceSinkMixing"], [180, 0, 1, "", "SpecificStorage"], [184, 0, 1, "", "StorageCoefficient"], [189, 0, 1, "", "StructuredDiscretization"], [193, 0, 1, "", "TimeDiscretization"], [194, 0, 1, "", "UnsaturatedZoneFlow"], [195, 0, 1, "", "VerticesDiscretization"], [198, 0, 1, "", "Well"], [205, 0, 1, "", "WellDisStructured"], [206, 0, 1, "", "WellDisVertices"], [207, 2, 1, "", "open_cbc"], [208, 2, 1, "", "open_hds"], [209, 2, 1, "", "read_cbc_headers"]], "imod.mf6.AdvectionCentral": [[74, 1, 1, "", "__init__"]], "imod.mf6.AdvectionTVD": [[75, 1, 1, "", "__init__"]], "imod.mf6.AdvectionUpstream": [[76, 1, 1, "", "__init__"]], "imod.mf6.ApiPackage": [[77, 1, 1, "", "__init__"]], "imod.mf6.Buoyancy": [[78, 1, 1, "", "__init__"]], "imod.mf6.ConstantConcentration": [[79, 1, 1, "", "__init__"]], "imod.mf6.ConstantHead": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "clip_box"], [82, 1, 1, "", "from_imod5_data"], [83, 1, 1, "", "from_imod5_shd_data"], [84, 1, 1, "", "mask"], [85, 1, 1, "", "regrid_like"]], "imod.mf6.Dispersion": [[86, 1, 1, "", "__init__"]], "imod.mf6.Drainage": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "cleanup"], [89, 1, 1, "", "clip_box"], [90, 1, 1, "", "from_imod5_data"], [91, 1, 1, "", "mask"], [92, 1, 1, "", "regrid_like"]], "imod.mf6.Evapotranspiration": [[93, 1, 1, "", "__init__"], [94, 1, 1, "", "clip_box"], [95, 1, 1, "", "mask"], [96, 1, 1, "", "regrid_like"]], "imod.mf6.GeneralHeadBoundary": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "cleanup"], [99, 1, 1, "", "clip_box"], [100, 1, 1, "", "from_imod5_data"], [101, 1, 1, "", "mask"], [102, 1, 1, "", "regrid_like"]], "imod.mf6.GroundwaterFlowModel": [[103, 1, 1, "", "__init__"], [104, 1, 1, "", "dump"], [105, 1, 1, "", "from_imod5_data"], [106, 1, 1, "", "mask_all_packages"], [107, 1, 1, "", "prepare_wel_for_mf6"]], "imod.mf6.GroundwaterTransportModel": [[108, 1, 1, "", "__init__"], [109, 1, 1, "", "dump"], [110, 1, 1, "", "mask_all_packages"]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierResistance": [[115, 1, 1, "", "__init__"], [116, 1, 1, "", "clip_box"], [117, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.ImmobileStorageTransfer": [[118, 1, 1, "", "__init__"]], "imod.mf6.InitialConditions": [[119, 1, 1, "", "__init__"], [120, 1, 1, "", "clip_box"], [121, 1, 1, "", "from_imod5_data"], [122, 1, 1, "", "mask"], [123, 1, 1, "", "regrid_like"]], "imod.mf6.LayeredWell": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "clip_box"], [126, 1, 1, "", "from_imod5_cap_data"], [127, 1, 1, "", "from_imod5_data"], [128, 1, 1, "", "mask"], [129, 1, 1, "", "regrid_like"], [130, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.MassSourceLoading": [[131, 1, 1, "", "__init__"]], "imod.mf6.MobileStorageTransfer": [[132, 1, 1, "", "__init__"]], "imod.mf6.Modflow6Simulation": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "clip_box"], [135, 1, 1, "", "create_time_discretization"], [136, 1, 1, "", "dump"], [137, 1, 1, "", "from_imod5_data"], [138, 1, 1, "", "open_concentration"], [139, 1, 1, "", "open_flow_budget"], [140, 1, 1, "", "open_head"], [141, 1, 1, "", "open_transport_budget"], [142, 1, 1, "", "regrid_like"], [143, 1, 1, "", "run"], [144, 1, 1, "", "split"], [145, 1, 1, "", "write"]], "imod.mf6.NodePropertyFlow": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "clip_box"], [148, 1, 1, "", "from_imod5_data"], [149, 1, 1, "", "mask"], [150, 1, 1, "", "regrid_like"]], "imod.mf6.OutputControl": [[151, 1, 1, "", "__init__"]], "imod.mf6.Recharge": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "clip_box"], [154, 1, 1, "", "from_imod5_data"], [155, 1, 1, "", "mask"], [156, 1, 1, "", "regrid_like"]], "imod.mf6.River": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "cleanup"], [159, 1, 1, "", "clip_box"], [160, 1, 1, "", "from_imod5_data"], [161, 1, 1, "", "mask"], [162, 1, 1, "", "regrid_like"], [163, 1, 1, "", "split_conductance"]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "clip_box"], [166, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "clip_box"], [169, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "clip_box"], [172, 1, 1, "", "from_imod5_data"], [173, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.Solution": [[174, 1, 1, "", "__init__"]], "imod.mf6.SourceSinkMixing": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "from_flow_model"]], "imod.mf6.SpecificStorage": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "clip_box"], [182, 1, 1, "", "mask"], [183, 1, 1, "", "regrid_like"]], "imod.mf6.StorageCoefficient": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "clip_box"], [186, 1, 1, "", "from_imod5_data"], [187, 1, 1, "", "mask"], [188, 1, 1, "", "regrid_like"]], "imod.mf6.StructuredDiscretization": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "clip_box"], [191, 1, 1, "", "from_imod5_data"], [192, 1, 1, "", "regrid_like"]], "imod.mf6.TimeDiscretization": [[193, 1, 1, "", "__init__"]], "imod.mf6.UnsaturatedZoneFlow": [[194, 1, 1, "", "__init__"]], "imod.mf6.VerticesDiscretization": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "clip_box"], [197, 1, 1, "", "regrid_like"]], "imod.mf6.Well": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "cleanup"], [200, 1, 1, "", "clip_box"], [201, 1, 1, "", "from_imod5_data"], [202, 1, 1, "", "mask"], [203, 1, 1, "", "regrid_like"], [204, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.WellDisStructured": [[205, 1, 1, "", "__init__"]], "imod.mf6.WellDisVertices": [[206, 1, 1, "", "__init__"]], "imod.mf6.regrid": [[210, 0, 1, "", "ConstantHeadRegridMethod"], [211, 0, 1, "", "DiscretizationRegridMethod"], [212, 0, 1, "", "DispersionRegridMethod"], [213, 0, 1, "", "DrainageRegridMethod"], [214, 0, 1, "", "EmptyRegridMethod"], [215, 0, 1, "", "EvapotranspirationRegridMethod"], [216, 0, 1, "", "GeneralHeadBoundaryRegridMethod"], [217, 0, 1, "", "InitialConditionsRegridMethod"], [218, 0, 1, "", "MobileStorageTransferRegridMethod"], [219, 0, 1, "", "NodePropertyFlowRegridMethod"], [220, 0, 1, "", "RechargeRegridMethod"], [221, 0, 1, "", "RiverRegridMethod"], [222, 0, 1, "", "SpecificStorageRegridMethod"], [223, 0, 1, "", "StorageCoefficientRegridMethod"]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[210, 1, 1, "", "__init__"]], "imod.mf6.regrid.DiscretizationRegridMethod": [[211, 1, 1, "", "__init__"]], "imod.mf6.regrid.DispersionRegridMethod": [[212, 1, 1, "", "__init__"]], "imod.mf6.regrid.DrainageRegridMethod": [[213, 1, 1, "", "__init__"]], "imod.mf6.regrid.EmptyRegridMethod": [[214, 1, 1, "", "__init__"]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[215, 1, 1, "", "__init__"]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[216, 1, 1, "", "__init__"]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[217, 1, 1, "", "__init__"]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[218, 1, 1, "", "__init__"]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[219, 1, 1, "", "__init__"]], "imod.mf6.regrid.RechargeRegridMethod": [[220, 1, 1, "", "__init__"]], "imod.mf6.regrid.RiverRegridMethod": [[221, 1, 1, "", "__init__"]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[222, 1, 1, "", "__init__"]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[223, 1, 1, "", "__init__"]], "imod.msw": [[224, 0, 1, "", "AnnualCropFactors"], [225, 0, 1, "", "CouplerMapping"], [226, 0, 1, "", "EvapotranspirationMapping"], [228, 0, 1, "", "GridData"], [230, 0, 1, "", "IdfMapping"], [231, 0, 1, "", "Infiltration"], [233, 0, 1, "", "InitialConditionsEquilibrium"], [234, 0, 1, "", "InitialConditionsPercolation"], [235, 0, 1, "", "InitialConditionsRootzonePressureHead"], [236, 0, 1, "", "InitialConditionsSavedState"], [237, 0, 1, "", "LanduseOptions"], [238, 0, 1, "", "MetaSwapModel"], [242, 0, 1, "", "MeteoGrid"], [243, 0, 1, "", "MeteoGridCopy"], [245, 0, 1, "", "Ponding"], [247, 0, 1, "", "PrecipitationMapping"], [249, 0, 1, "", "ScalingFactors"], [251, 0, 1, "", "Sprinkling"], [253, 0, 1, "", "TimeOutputControl"], [254, 0, 1, "", "VariableOutputControl"]], "imod.msw.AnnualCropFactors": [[224, 1, 1, "", "__init__"]], "imod.msw.CouplerMapping": [[225, 1, 1, "", "__init__"]], "imod.msw.EvapotranspirationMapping": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "from_imod5_data"]], "imod.msw.GridData": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "from_imod5_data"]], "imod.msw.IdfMapping": [[230, 1, 1, "", "__init__"]], "imod.msw.Infiltration": [[231, 1, 1, "", "__init__"], [232, 1, 1, "", "from_imod5_data"]], "imod.msw.InitialConditionsEquilibrium": [[233, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsPercolation": [[234, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsRootzonePressureHead": [[235, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsSavedState": [[236, 1, 1, "", "__init__"]], "imod.msw.LanduseOptions": [[237, 1, 1, "", "__init__"]], "imod.msw.MetaSwapModel": [[238, 1, 1, "", "__init__"], [239, 1, 1, "", "from_imod5_data"], [240, 1, 1, "", "regrid_like"], [241, 1, 1, "", "write"]], "imod.msw.MeteoGrid": [[242, 1, 1, "", "__init__"]], "imod.msw.MeteoGridCopy": [[243, 1, 1, "", "__init__"], [244, 1, 1, "", "from_imod5_data"]], "imod.msw.Ponding": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "from_imod5_data"]], "imod.msw.PrecipitationMapping": [[247, 1, 1, "", "__init__"], [248, 1, 1, "", "from_imod5_data"]], "imod.msw.ScalingFactors": [[249, 1, 1, "", "__init__"], [250, 1, 1, "", "from_imod5_data"]], "imod.msw.Sprinkling": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "from_imod5_data"]], "imod.msw.TimeOutputControl": [[253, 1, 1, "", "__init__"]], "imod.msw.VariableOutputControl": [[254, 1, 1, "", "__init__"]], "imod.prepare": [[255, 0, 1, "", "ALLOCATION_OPTION"], [256, 0, 1, "", "DISTRIBUTING_OPTION"], [257, 0, 1, "", "LayerRegridder"], [258, 0, 1, "", "Regridder"], [259, 0, 1, "", "SimulationAllocationOptions"], [260, 0, 1, "", "SimulationDistributingOptions"], [261, 0, 1, "", "Voxelizer"], [262, 2, 1, "", "allocate_drn_cells"], [263, 2, 1, "", "allocate_ghb_cells"], [264, 2, 1, "", "allocate_rch_cells"], [265, 2, 1, "", "allocate_riv_cells"], [266, 2, 1, "", "assign_wells"], [267, 2, 1, "", "c_leakage"], [268, 2, 1, "", "c_radial"], [269, 2, 1, "", "celltable"], [270, 2, 1, "", "cleanup_drn"], [271, 2, 1, "", "cleanup_ghb"], [272, 2, 1, "", "cleanup_riv"], [273, 2, 1, "", "cleanup_wel"], [274, 2, 1, "", "create_layered_top"], [275, 2, 1, "", "distribute_drn_conductance"], [276, 2, 1, "", "distribute_ghb_conductance"], [277, 2, 1, "", "distribute_riv_conductance"], [278, 2, 1, "", "fill"], [279, 2, 1, "", "gdal_rasterize"], [280, 2, 1, "", "get_lower_active_grid_cells"], [281, 2, 1, "", "get_lower_active_layer_number"], [282, 2, 1, "", "get_upper_active_grid_cells"], [283, 2, 1, "", "get_upper_active_layer_number"], [284, 2, 1, "", "laplace_interpolate"], [285, 2, 1, "", "linestring_to_square_zpolygons"], [286, 2, 1, "", "linestring_to_trapezoid_zpolygons"], [287, 2, 1, "", "polygonize"], [288, 2, 1, "", "rasterize"], [289, 2, 1, "", "rasterize_celltable"], [290, 2, 1, "", "reproject"], [291, 2, 1, "", "zonal_aggregate_polygons"], [292, 2, 1, "", "zonal_aggregate_raster"]], "imod.prepare.ALLOCATION_OPTION": [[255, 1, 1, "", "__init__"]], "imod.prepare.DISTRIBUTING_OPTION": [[256, 1, 1, "", "__init__"]], "imod.prepare.LayerRegridder": [[257, 1, 1, "", "__init__"], [257, 3, 1, "", "method"]], "imod.prepare.Regridder": [[258, 1, 1, "", "__init__"], [258, 3, 1, "", "extra_overlap"], [258, 3, 1, "", "method"], [258, 3, 1, "", "ndim_regrid"], [258, 3, 1, "", "use_relative_weights"]], "imod.prepare.SimulationAllocationOptions": [[259, 1, 1, "", "__init__"]], "imod.prepare.SimulationDistributingOptions": [[260, 1, 1, "", "__init__"]], "imod.prepare.Voxelizer": [[261, 1, 1, "", "__init__"], [261, 3, 1, "", "method"]], "imod.select": [[293, 2, 1, "", "active_grid_boundary_xy"], [294, 2, 1, "", "cross_section_line"], [295, 2, 1, "", "cross_section_linestring"], [296, 2, 1, "", "grid_boundary_xy"], [297, 2, 1, "", "points_in_bounds"], [298, 2, 1, "", "points_indices"], [299, 2, 1, "", "points_set_values"], [300, 2, 1, "", "points_values"], [301, 2, 1, "", "upper_active_layer"]], "imod.util": [[302, 2, 1, "", "cd"], [303, 2, 1, "", "coord_reference"], [304, 2, 1, "", "empty_2d"], [305, 2, 1, "", "empty_2d_transient"], [306, 2, 1, "", "empty_3d"], [307, 2, 1, "", "empty_3d_transient"], [308, 2, 1, "", "from_mdal_compliant_ugrid2d"], [309, 2, 1, "", "ignore_warnings"], [310, 2, 1, "", "mdal_compliant_ugrid2d"], [311, 2, 1, "", "print_if_error"], [312, 2, 1, "", "spatial_reference"], [313, 2, 1, "", "to_datetime"], [314, 2, 1, "", "to_ugrid2d"], [315, 2, 1, "", "transform"], [316, 2, 1, "", "where"]], "imod.visualize": [[317, 0, 1, "", "GridAnimation3D"], [318, 0, 1, "", "StaticGridAnimation3D"], [319, 2, 1, "", "cross_section"], [320, 2, 1, "", "grid_3d"], [321, 2, 1, "", "imshow_topview"], [322, 2, 1, "", "line_3d"], [323, 2, 1, "", "plot_map"], [324, 2, 1, "", "quiver"], [325, 2, 1, "", "read_imod_legend"], [326, 2, 1, "", "streamfunction"], [327, 2, 1, "", "waterbalance_barchart"]], "imod.visualize.GridAnimation3D": [[317, 1, 1, "", "__init__"]], "imod.visualize.StaticGridAnimation3D": [[318, 1, 1, "", "__init__"]], "imod.wq": [[328, 0, 1, "", "AdvectionFiniteDifference"], [329, 0, 1, "", "AdvectionHybridMOC"], [330, 0, 1, "", "AdvectionMOC"], [331, 0, 1, "", "AdvectionModifiedMOC"], [332, 0, 1, "", "AdvectionTVD"], [333, 0, 1, "", "BasicFlow"], [334, 0, 1, "", "BasicTransport"], [335, 0, 1, "", "ConstantHead"], [336, 0, 1, "", "Dispersion"], [337, 0, 1, "", "Drainage"], [338, 0, 1, "", "EvapotranspirationHighestActive"], [339, 0, 1, "", "EvapotranspirationLayers"], [340, 0, 1, "", "EvapotranspirationTopLayer"], [341, 0, 1, "", "GeneralHeadBoundary"], [342, 0, 1, "", "GeneralizedConjugateGradientSolver"], [343, 0, 1, "", "LayerPropertyFlow"], [344, 0, 1, "", "MassLoading"], [345, 0, 1, "", "OutputControl"], [346, 0, 1, "", "ParallelKrylovFlowSolver"], [347, 0, 1, "", "ParallelKrylovTransportSolver"], [348, 0, 1, "", "PreconditionedConjugateGradientSolver"], [349, 0, 1, "", "RechargeHighestActive"], [350, 0, 1, "", "RechargeLayers"], [351, 0, 1, "", "RechargeTopLayer"], [352, 0, 1, "", "River"], [353, 0, 1, "", "SeawatModel"], [355, 0, 1, "", "TimeDiscretization"], [356, 0, 1, "", "TimeVaryingConstantConcentration"], [357, 0, 1, "", "VariableDensityFlow"], [358, 0, 1, "", "Well"]], "imod.wq.AdvectionFiniteDifference": [[328, 1, 1, "", "__init__"], [328, 3, 1, "", "courant"], [328, 3, 1, "", "weighting"]], "imod.wq.AdvectionHybridMOC": [[329, 1, 1, "", "__init__"], [329, 3, 1, "", "courant"], [329, 3, 1, "", "dceps"], [329, 3, 1, "", "dchmoc"], [329, 3, 1, "", "max_particles"], [329, 3, 1, "", "nph"], [329, 3, 1, "", "npl"], [329, 3, 1, "", "nplane"], [329, 3, 1, "", "npmax"], [329, 3, 1, "", "npmin"], [329, 3, 1, "", "tracking"], [329, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionMOC": [[330, 1, 1, "", "__init__"], [330, 3, 1, "", "cell_max_nparticles"], [330, 3, 1, "", "cell_min_nparticles"], [330, 3, 1, "", "courant"], [330, 3, 1, "", "dconcentration_epsilon"], [330, 3, 1, "", "max_nparticles"], [330, 3, 1, "", "nparticles_advection"], [330, 3, 1, "", "nparticles_no_advection"], [330, 3, 1, "", "nplane"], [330, 3, 1, "", "tracking"], [330, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionModifiedMOC": [[331, 1, 1, "", "__init__"], [331, 3, 1, "", "courant"], [331, 3, 1, "", "dconcentration_epsilon"], [331, 3, 1, "", "sink_nparticles"], [331, 3, 1, "", "sink_particle_placement"], [331, 3, 1, "", "tracking"], [331, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionTVD": [[332, 1, 1, "", "__init__"], [332, 3, 1, "", "courant"]], "imod.wq.BasicFlow": [[333, 1, 1, "", "__init__"]], "imod.wq.BasicTransport": [[334, 1, 1, "", "__init__"]], "imod.wq.ConstantHead": [[335, 1, 1, "", "__init__"]], "imod.wq.Dispersion": [[336, 1, 1, "", "__init__"]], "imod.wq.Drainage": [[337, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationHighestActive": [[338, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationLayers": [[339, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationTopLayer": [[340, 1, 1, "", "__init__"]], "imod.wq.GeneralHeadBoundary": [[341, 1, 1, "", "__init__"]], "imod.wq.GeneralizedConjugateGradientSolver": [[342, 1, 1, "", "__init__"]], "imod.wq.LayerPropertyFlow": [[343, 1, 1, "", "__init__"]], "imod.wq.MassLoading": [[344, 1, 1, "", "__init__"]], "imod.wq.OutputControl": [[345, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovFlowSolver": [[346, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovTransportSolver": [[347, 1, 1, "", "__init__"]], "imod.wq.PreconditionedConjugateGradientSolver": [[348, 1, 1, "", "__init__"]], "imod.wq.RechargeHighestActive": [[349, 1, 1, "", "__init__"]], "imod.wq.RechargeLayers": [[350, 1, 1, "", "__init__"]], "imod.wq.RechargeTopLayer": [[351, 1, 1, "", "__init__"]], "imod.wq.River": [[352, 1, 1, "", "__init__"]], "imod.wq.SeawatModel": [[353, 1, 1, "", "__init__"], [353, 3, 1, "", "check"], [354, 1, 1, "", "create_time_discretization"], [353, 3, 1, "", "modelname"]], "imod.wq.TimeDiscretization": [[355, 1, 1, "", "__init__"]], "imod.wq.TimeVaryingConstantConcentration": [[356, 1, 1, "", "__init__"]], "imod.wq.VariableDensityFlow": [[357, 1, 1, "", "__init__"]], "imod.wq.Well": [[358, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:module"}, "terms": {"": [0, 9, 10, 12, 13, 14, 23, 32, 35, 36, 41, 44, 54, 55, 56, 107, 119, 140, 146, 179, 184, 186, 207, 208, 229, 245, 258, 261, 263, 268, 278, 294, 295, 298, 313, 316, 324, 328, 329, 330, 331, 332, 358, 359, 374, 375, 380, 382, 385, 391, 393, 394, 397, 401, 406, 411, 413, 417, 419, 420, 423, 426, 427, 431, 435, 436, 437, 438, 439], "0": [4, 5, 6, 8, 11, 12, 16, 21, 26, 27, 32, 44, 45, 48, 51, 55, 61, 68, 70, 72, 78, 81, 84, 89, 91, 93, 94, 95, 97, 99, 101, 106, 110, 111, 113, 115, 116, 119, 120, 122, 124, 125, 126, 127, 131, 134, 146, 147, 149, 152, 153, 155, 157, 159, 160, 161, 163, 164, 165, 167, 168, 170, 171, 174, 180, 181, 182, 184, 185, 186, 187, 189, 190, 193, 194, 196, 198, 200, 201, 205, 206, 231, 232, 237, 245, 246, 252, 255, 256, 258, 266, 269, 270, 271, 272, 273, 284, 285, 286, 290, 292, 295, 297, 298, 299, 300, 301, 317, 318, 319, 320, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 346, 347, 348, 355, 357, 359, 370, 372, 377, 378, 379, 380, 381, 382, 384, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 425, 426, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441], "00": [3, 377, 378, 380, 381, 384, 385, 387, 392, 401, 405, 408, 412, 413, 416, 430, 436, 437, 441], "000": [313, 392, 430, 441], "000000": 408, "000000000": [385, 401, 408, 413, 436, 437], "000000002": 401, "00001157407405": 437, "0000864": 381, "0001": [27, 174, 329, 343, 346, 348, 377, 378, 379, 380, 381, 382, 398, 400], "0003": 401, "00078071": 401, "00078091": 401, "00078183": 401, "00082746": 401, "00083373": [401, 437], "000834": 437, "0008352": 401, "00084055": 401, "0008475": 380, "00084771": 401, "00085378": 401, "00086102": 401, "00088318": 401, "0008994": 401, "00089943": 401, "00090591": 401, "0009065": 401, "0009093": 401, "0009098": 401, "0009125": 401, "00091255": 401, "000913": 401, "000918": 437, "00091826": [401, 437], "00097932": 401, "00098031": 401, "00098196": 401, "001": [174, 343, 378, 381, 385, 394, 396, 398, 399, 400, 401, 404, 406, 408], "00158879": 401, "00159777": 401, "00160275": 401, "00160428": 401, "00160856": 401, "00160863": 401, "00161301": 401, "00161518": 401, "00161658": 401, "0016166": 401, "00161772": 401, "00161827": 401, "00161909": 401, "0016207": 401, "00162071": 401, "00162122": 401, "00162407": 401, "0016263": 401, "00162744": 401, "00163142": 401, "00163613": 401, "00163785": 401, "00163787": 401, "001638": 437, "00163841": 401, "00163919": 401, "00164029": 401, "00164151": 401, "00164618": 401, "00164895": 401, "00166721": 401, "00167463": 401, "0016792": 401, "00167949": 401, "00168478": 401, "00168655": 401, "00168658": 401, "001689": 401, "00169": 401, "00169032": 401, "00169166": 401, "00169605": 401, "00169624": 401, "00169678": 401, "00169771": 401, "00169961": 401, "00170712": 401, "00170842": 401, "001712": 401, "00171206": 401, "00171221": 401, "00172136": 401, "00173": 401, "00173005": 401, "00173329": 401, "0017413": 401, "00174276": 401, "00174685": 401, "00174713": 401, "001752": 401, "00175232": 401, "00175247": 401, "00175276": 401, "00175411": 401, "00175477": 401, "0017549": 401, "00175632": 401, "00175832": 401, "00175834": 401, "00176321": 401, "00176362": 401, "00176593": 401, "0017666": 401, "00176716": 401, "00176909": 401, "00177083": 401, "00177297": 401, "00177411": 401, "00177807": 401, "00177865": 401, "00178251": 401, "00179237": 401, "00179266": 401, "00180298": 401, "001803": 401, "001825": 401, "00182535": 401, "00182747": 401, "00183059": 401, "00183236": 401, "00183427": 401, "00183771": 401, "00184691": 401, "00185661": 401, "00186046": 401, "00186831": 401, "00187044": 401, "00188156": 401, "00188612": 401, "00189647": 401, "00189853": 401, "0019": 401, "00190413": 401, "001906": 401, "001907": 401, "00190719": 401, "00190866": 401, "001912": 401, "00191231": 401, "00191248": 401, "00191336": 401, "00191589": 401, "001916": 401, "001917": 401, "00191725": 401, "00191761": 401, "00191962": 401, "0019212": 401, "00192603": 401, "0019277": 401, "00193016": 401, "0019308": 401, "00193096": 401, "00194384": 401, "00194592": 401, "00194606": 401, "001961": 401, "001982": 437, "00198224": 401, "002": [174, 393, 399], "00203658": 401, "00203995": 401, "002041": 401, "00204444": 401, "00204451": 401, "00204493": 401, "0020481": 401, "0020491": 401, "00205102": 401, "00217596": 401, "00217812": 401, "00218172": 401, "0021932": 401, "00219364": 401, "00219559": 401, "00220936": 401, "00221006": 401, "00221065": 401, "00221361": 401, "00221743": 401, "00222133": 401, "002221arrai": 401, "00222806": 401, "00223096": 401, "00223372": 401, "002234": 401, "00223808": 401, "00224485": 401, "00224585": 401, "002247": 401, "00224736": 401, "00225167": 401, "00226806": 401, "00226807": 401, "00227892": 401, "0022924": 401, "00229702": 401, "00230603": 401, "00231468": 401, "00231699": 401, "00232221": 401, "0023817": 401, "002382arrai": 401, "00242177": 401, "00247561": 401, "00247603": 401, "00247622": 401, "00248376": 401, "00248442": 401, "00248449": 401, "00249076": 401, "00249155": 401, "00249192": 401, "003658": 438, "0056": 437, "00582": 163, "007": 382, "007232": 438, "00762653": 438, "009": 411, "01": [25, 44, 55, 78, 124, 135, 137, 151, 174, 198, 266, 284, 334, 336, 354, 357, 359, 377, 378, 379, 380, 381, 382, 384, 385, 393, 394, 396, 398, 399, 400, 401, 404, 405, 406, 408, 412, 416, 419, 420, 421, 422, 430, 431, 436, 437, 441], "01089": 438, "0108900045784": 438, "01161366e": 437, "0125": [381, 382], "01326780e": 437, "014": 438, "014464": 438, "01597916": 438, "016": [400, 405, 430], "01724138": 438, "01arrai": 385, "01t00": [377, 378, 380, 381, 385, 436], "01xarrai": 385, "02": [135, 151, 359, 377, 382, 384, 385, 394, 398, 400, 404, 405, 408, 416, 419, 420, 430, 432, 436, 437, 438, 441], "020": [430, 435, 441], "02017498e": 437, "02150538": 438, "022981": 438, "025": 78, "02609539": 438, "02678776e": 437, "02arrai": 436, "02d": [44, 55], "02t00": 436, "02xarrai": 436, "03": [124, 174, 198, 359, 379, 384, 385, 394, 398, 400, 401, 404, 405, 430, 433, 438, 439, 441], "03195832": 438, "03195833": 438, "03225806": 438, "03448276": 438, "03830185e": 437, "03838577e": 437, "03arrai": [401, 438], "04": [359, 385, 398, 400, 404, 405, 408, 412, 413, 416, 430, 431, 436, 441], "040467": 432, "042497": 438, "045454545": 380, "046": 437, "046072": 438, "0471248271865": 438, "047125": 438, "04793749": 438, "04804630e": 437, "04805851e": 437, "048676": 438, "04867641771818": 438, "04973": 438, "04arrai": 436, "04t00": 436, "05": [127, 174, 198, 201, 266, 273, 329, 330, 331, 336, 359, 385, 391, 401, 404, 408, 413, 426, 430, 431, 434, 437, 438, 439, 441], "05172414": 438, "05299568e": 437, "053": 411, "053304": 438, "05376344": 438, "05433397e": 437, "05435915e": 437, "054636": 438, "0571b0": 327, "05957603e": 437, "05arrai": [391, 401, 413, 431, 437, 438, 439], "05t01": 381, "06": [342, 347, 359, 385, 404, 408, 430, 435, 436, 441], "06107712e": 437, "06316519e": 437, "06320744e": 437, "063594": 432, "06391665": 438, "06451613": 438, "06758380e": 437, "06817684e": 437, "06821775e": 437, "06896552": 438, "06arrai": 437, "07": [359, 385, 408, 412, 430, 431, 436, 441], "07140017": 438, "072": 437, "072821": 438, "07375240e": 437, "07408428e": 437, "07412310e": 437, "07526882": 438, "07691193e": 437, "078": 437, "07891464e": 437, "07901382e": 437, "07952986e": 437, "07958746e": 437, "07989581": 438, "0799999": 439, "08": [359, 385, 405, 430, 437, 438, 441], "081337": 438, "084911": 438, "084911240260034": 438, "0862069": 438, "088": 437, "088569": 438, "0896": 437, "09": [359, 384, 385, 408, 430, 438, 441], "09063745": 438, "090909091": 380, "0912": 437, "092": 437, "092143": 438, "094": [411, 412, 430], "09587497": 438, "09587498": 438, "095e": [413, 431], "09677419": 438, "096965": 438, "09970045": 438, "0arrai": [385, 391, 394, 401, 413, 431, 436, 437, 438, 439], "0b0": [359, 425, 429], "0d": 0, "0e": [27, 330, 331, 347, 348, 377, 378, 379, 380, 381, 382, 393, 394, 396, 398, 399, 400, 401, 404, 406, 426], "0e20": [44, 47, 49, 343], "0e30": [333, 334], "0x000001d99c8a0710": 431, "0x000001d99c8a0890": 431, "0x000001d99c8ec790": 431, "0x000001d99c8ecf10": 431, "0x000001d99c954e90": 431, "0x000001d99c955510": 431, "0x000001d99caafb10": 431, "0x000001d99caff550": 431, "0x000001d99cb67290": 431, "0x000001d99cbd1650": 431, "0x000001d99cc661d0": 431, "0x000001d99cc67e50": 431, "0x000001d99cccc990": 431, "0x000001d99dd583d0": 431, "0x000001d99de05e90": 431, "0x000001d99de84d50": 431, "0x000001d99df65790": 431, "0x000001d99eb2a510": 406, "0x000001d99ec2dc10": 401, "0x000001d99ef94d50": 401, "0x000001d99f093d50": 380, "0x000001d99f0b5790": 377, "0x000001d99f0cf910": 410, "0x000001d99f534410": 377, "0x000001d99f669810": 396, "0x000001d99f9182d0": 393, "0x000001d99f958b10": 401, "0x000001d99f968050": 391, "0x000001d99f9fffd0": 401, "0x000001d99fa5a6d0": 413, "0x000001d99fba5d90": 380, "0x000001d9a06803d0": 408, "0x000001d9a0ce7b10": 408, "0x000001d9a0d27d90": 380, "0x000001d9a0e46a90": 380, "0x000001d9a11f5350": 401, "0x000001d9a4611150": 377, "0x000001d9a4656390": 409, "0x000001d9a46a9bd0": 397, "0x000001d9a47343d0": 399, "0x000001d9a4737710": 399, "0x000001d9a4737790": 399, "0x000001d9a4739910": 413, "0x000001d9a4739a10": 410, "0x000001d9a474da10": 398, "0x000001d9a4792e90": 401, "0x000001d9a47a2350": 399, "0x000001d9a47bdcd0": 397, "0x000001d9a49bfed0": 408, "0x000001d9a49dd450": 404, "0x000001d9a4bb4110": 401, "0x000001d9a4c05790": 397, "0x000001d9a587efd0": 401, "0x000001d9a58a8710": 397, "0x000001d9a58b1650": 411, "0x000001d9a58b34d0": 401, "0x000001d9a5a8ab50": 381, "0x000001d9a5af53d0": 438, "0x000001d9a5dbeb50": 404, "0x000001d9a5dd5a10": 406, "0x000001d9a5e04d50": 382, "0x000001d9a5e84950": 380, "0x000001d9a5e8d090": 382, "0x000001d9a5f48ed0": 380, "0x000001d9a5f94d50": 378, "0x000001d9a60d02d0": 378, "0x000001d9a6189a10": 377, "0x000001d9a61d35d0": 381, "0x000001d9a61d7910": 393, "0x000001d9a6618d90": 411, "0x000001d9a8c73490": 438, "0x000001d9a8d58250": 437, "0x000001d9ab1b4bd0": 401, "0x000001d9ab1e0d90": 378, "0x000001d9adcc9150": 395, "0xarrai": [385, 413, 436, 437], "1": [3, 5, 11, 12, 21, 26, 27, 29, 30, 44, 47, 49, 50, 51, 55, 58, 66, 78, 82, 83, 84, 91, 93, 95, 101, 106, 110, 122, 124, 126, 127, 139, 146, 149, 152, 155, 160, 161, 163, 164, 167, 170, 174, 182, 187, 189, 193, 194, 198, 201, 207, 209, 232, 237, 246, 250, 252, 255, 256, 262, 263, 264, 265, 266, 270, 271, 272, 274, 284, 285, 292, 295, 297, 298, 299, 300, 301, 311, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 342, 343, 346, 347, 348, 351, 355, 356, 357, 359, 377, 378, 379, 380, 381, 382, 385, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 413, 415, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 435, 436, 437, 438, 439], "10": [26, 27, 66, 77, 111, 113, 115, 118, 163, 174, 285, 286, 299, 326, 329, 330, 342, 347, 348, 359, 378, 379, 380, 382, 385, 391, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 413, 419, 420, 425, 429, 430, 431, 432, 437, 438, 439, 441], "100": [27, 174, 290, 313, 346, 348, 379, 385, 391, 393, 394, 396, 398, 399, 400, 401, 404, 406, 408, 410, 411, 413, 417, 419, 422, 437, 438], "1000": [4, 26, 78, 81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 164, 165, 167, 168, 170, 171, 181, 185, 190, 196, 200, 245, 346, 348, 357, 393, 396, 401, 406, 432], "10000": [5, 269, 291, 292], "100000": [432, 437], "10000038": 439, "100_000": [290, 431], "101": 399, "101000": 432, "1016": [77, 382, 438], "102": 413, "102000": 432, "102150": 409, "1022": 431, "1025": [357, 393, 396], "102550": 409, "1029": 380, "103000": 432, "103150": 409, "103350": 409, "10344828": 438, "1035": 438, "103736": 413, "104": 174, "104000": 432, "10412979e": 437, "10419674e": 437, "1048": 437, "104b": [431, 437], "105": [396, 413], "1050": 438, "105000": 432, "105257": 77, "10539465e": 437, "10544491e": 437, "105e": [413, 431], "106": [174, 438], "106000": 432, "107": 413, "107000": 432, "1073": 438, "10752688": 438, "108000": 432, "108750": 409, "108774": 432, "1088": 438, "109": [430, 436, 441], "109000": 432, "109150": 409, "10_000": 5, "10kb": 394, "10mb": 401, "11": [299, 359, 385, 400, 401, 408, 413, 425, 429, 430, 431, 432, 437, 438, 439, 441], "110": 413, "110000": 432, "1104": 438, "110_000": 431, "111": [26, 385], "111000": 432, "1111": 163, "111378": 432, "111380": 432, "11185414": 438, "112": 413, "112000": 432, "112096": 432, "112098": 432, "1126": 438, "113000": 432, "114000": 432, "1141": 438, "114750": [413, 431], "114850": [413, 431], "114950": [413, 431], "115": [396, 413, 432], "1150": 399, "115000": 432, "11500013": 438, "115050": [413, 431], "115150": [413, 431], "115250": [413, 431], "115350": [413, 431], "11541767e": 437, "115450": [413, 431], "11550407e": 437, "115550": [413, 431], "115650": [409, 410, 411, 413, 431], "115926": 432, "115938": 432, "116000": 432, "1163": 438, "117": 413, "117000": 432, "117297": 432, "117298": 432, "117599": 437, "1179": 438, "118000": 432, "119000": 432, "1194": 438, "11999989": 438, "11kb": 401, "11layer": 385, "11mb": [413, 437], "12": [21, 297, 299, 359, 378, 385, 391, 397, 400, 401, 405, 408, 413, 425, 429, 431, 432, 437, 438, 439], "120": [377, 391, 413], "120176": 438, "120333": 438, "12068966": 438, "12087021e": 437, "12099190e": 437, "120_000": 432, "121": 377, "1218": 438, "122": 413, "1232": [437, 438], "123e": 394, "125": [384, 394, 396, 413, 437], "12500": 398, "1251": 437, "1252": 438, "125coordin": 437, "125dask": 437, "125nan": 437, "126": 394, "127": [394, 413], "1271": 438, "127409": 438, "1278333": 438, "1285": 438, "129": 438, "12960052": 438, "13": [359, 378, 400, 401, 408, 413, 425, 430, 431, 432, 437, 438, 439], "130": 413, "1300000": [431, 437], "1309": 438, "130983": 438, "132152": 411, "1324": 438, "1340": 438, "134641": 438, "135": [396, 413], "1359": 408, "1362": 438, "136363636": 380, "136b": 401, "13754582e": 437, "1377": 438, "13793103": 438, "138": 406, "13978495": 438, "1399": 438, "139b": 436, "13arrai": [401, 431, 437, 439], "13coordin": [431, 437, 439], "13kb": 401, "13nan": 401, "13time": 437, "13xarrai": [401, 431], "13y": [401, 431, 437], "14": [3, 21, 359, 394, 400, 401, 413, 432, 438], "140": 413, "14000034": 438, "140b": 436, "1415": 438, "142": 174, "143": 174, "1430": 438, "14381246": 438, "144": 438, "145": [396, 413], "14511347": 438, "1454": 438, "1468": 438, "147": 174, "1487": 438, "14964905e": 437, "14991608e": 437, "14th": 3, "15": [111, 113, 115, 286, 343, 344, 359, 378, 380, 393, 394, 396, 397, 398, 399, 400, 401, 404, 408, 413, 415, 417, 432, 438], "150": [27, 346, 348, 377, 378, 379, 380, 381, 382, 385, 391, 406, 408, 413, 438], "1500": 438, "15040016": 438, "15053763": 438, "1507": 438, "1521": 438, "152397": 431, "1545": 438, "155": 413, "15517241": 438, "155578": 432, "156": 437, "1560": 438, "156e": [413, 431], "157": [394, 430, 438, 441], "1574074074074073e": 437, "157407e": 437, "1576": 438, "157e": 437, "158": 437, "15840006": 438, "159": [377, 437], "159016": 438, "15979162": 438, "1598": 438, "16": [329, 330, 359, 381, 401, 402, 408, 413, 432, 437, 438], "160": [377, 413], "160b": 438, "161": 437, "1613": 438, "162": 438, "1635": 438, "165": [413, 432], "1651": 438, "166": 437, "166248": 438, "1666": 438, "1678": [41, 54], "1679": 42, "1690": 438, "169822": 438, "16982248058866": 438, "16b": [385, 394, 401, 436, 437], "16mb": [438, 439], "17": [193, 359, 394, 401, 413, 415, 432, 438], "170": 413, "170174": 438, "1704": 438, "1708": 377, "172": [108, 382, 384, 430], "17204301": 438, "1723": 438, "17241379": 438, "173": 437, "17348": 438, "1743": 438, "1745": 163, "175": [413, 437], "1757": 438, "17577079": 438, "177": 401, "177892": 411, "178": 401, "1781": 438, "179": 401, "1796": 438, "17x": 401, "18": [229, 359, 408, 413, 432, 438], "180": [21, 391, 401, 413], "181": 401, "1811": 438, "181818182": 380, "182": [401, 438], "1827957": 438, "183": 438, "1834": 438, "1849": 438, "185": 413, "186": 437, "187": [432, 437], "1870": 438, "187935": 408, "188": 437, "1887": 438, "18965517": 438, "1899": 50, "19": [359, 397, 405, 408, 413, 430, 432, 437, 438, 439], "190": 413, "1900": [50, 378], "1902": 438, "190894": 432, "19174995": 438, "19246": 411, "1926": 438, "192689": 432, "1940": 438, "194318": 438, "195": 413, "19585562e": 437, "1959": 438, "196b": 413, "197": 438, "197855": 438, "1979": [413, 438], "1984": 437, "19840002": 438, "1988": 398, "1990": [174, 343], "1992": 174, "1993": 438, "1996": 398, "1997": 380, "1999": [11, 12, 406], "1arrai": [391, 401, 431, 437], "1b": [436, 437, 438, 439], "1d": [0, 7, 303, 304, 305, 306, 307, 312, 336, 385, 403, 405, 419, 420, 423, 430], "1d_tpt_benchmark": 399, "1e": [44, 47, 48, 49, 111, 164, 329, 330, 331, 333, 334, 342, 343, 347, 394, 396, 401], "1e3": [115, 170, 285, 286], "1kb": [385, 394, 437, 438], "1layer": 394, "1mb": [437, 438], "1st": [329, 330, 331], "1xarrai": 401, "1y": 436, "2": [9, 13, 21, 26, 27, 44, 47, 49, 50, 55, 78, 80, 87, 93, 97, 103, 108, 111, 113, 115, 124, 126, 151, 152, 157, 163, 164, 167, 170, 174, 194, 198, 205, 235, 237, 249, 252, 255, 256, 294, 297, 298, 299, 300, 317, 329, 330, 331, 342, 343, 350, 355, 359, 370, 372, 377, 380, 385, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 408, 409, 413, 415, 416, 419, 420, 425, 426, 427, 429, 431, 432, 435, 436, 437, 438, 439], "20": [44, 47, 48, 49, 66, 111, 113, 115, 174, 285, 286, 343, 359, 378, 380, 391, 393, 397, 398, 400, 408, 413, 432, 438], "200": [290, 398, 400, 401, 404, 409, 410, 413, 431, 437, 438, 439], "2000": [3, 25, 124, 135, 151, 198, 354, 357, 377, 378, 379, 380, 381, 382, 394, 396, 398, 399, 400, 401, 404, 436], "2000d": 399, "2001": [25, 41, 54, 137, 354, 379], "2002": [4, 137, 406], "2003": [137, 377, 382], "2004": 382, "2005": [23, 35, 174, 194, 397, 398, 401], "2007": 408, "2008": [26, 408], "2009": [163, 401, 437], "200_000": 290, "200coordin": 438, "200layer": [431, 437, 438, 439], "200x": [401, 431, 437, 438], "201": 411, "2010": [380, 401, 437], "2011": [401, 408], "2012": [401, 408], "2013": [401, 404], "2014": [401, 408], "2015": 401, "2016": [26, 408], "2017": [385, 438], "2017a": 26, "2017b": 26, "2018": 385, "2019": 359, "202": 131, "2020": [163, 359, 377, 393, 419, 420, 421, 422, 427], "2021": [77, 359], "2022": 359, "2023": 359, "2024": 359, "203": 412, "2030": 396, "2032": 438, "20356822": 438, "2047": 438, "205": 413, "2050": 432, "205088": 438, "20539975": 438, "20689655": 438, "2070": 438, "20772911": 438, "2085": 438, "20898857e": 437, "20933380e": 437, "20arrai": 438, "20coordin": 438, "20xarrai": 438, "20y": 438, "21": [359, 381, 397, 413, 432, 436, 437, 438], "210": 413, "2106": 438, "211": 394, "211782": 408, "212": 394, "2123": 438, "21232": 438, "213": 394, "2138": 438, "214": 394, "215": [394, 413], "21505376": 438, "215arrai": 394, "215xarrai": 394, "216": 394, "2162": 438, "21656537": 438, "216b": 401, "216dask": 394, "216kb": 431, "2176": 438, "218": [413, 431], "218462": 438, "218x": [413, 431], "2195": 438, "2195519960724": 438, "219552": 438, "21kb": 385, "21mb": [431, 437], "22": [359, 408, 413, 432, 437, 438], "220": [413, 438], "2212": 437, "2215": 438, "2229": 438, "22370827": 438, "22413793": 438, "224736": 408, "225": 413, "22500": 398, "225211": 408, "2253": [380, 438], "22580645": 438, "225_500": 408, "2261": [41, 54, 127, 201, 380], "226134": 408, "2262": 42, "226410": 408, "226509": 408, "2268": 438, "226a": 372, "2272": 437, "227272727": 380, "2283": 438, "2295": 0, "2296": 0, "22996807": 438, "23": [359, 401, 413, 432, 437, 438], "230": [391, 413], "230500": 401, "2306": 438, "230_000": 401, "23147655": 438, "231500": 401, "2321": 438, "232500": 401, "233500": 401, "2342": 438, "234500": 401, "235": [413, 438], "235500": 401, "2359": 438, "236500": 401, "236695": 438, "2374": 438, "237500": [401, 437], "237512": [401, 431, 437, 438, 439], "237537": [401, 431, 437, 438, 439], "237550": 437, "237562": [401, 431, 437, 438, 439], "237587": [401, 431, 437, 438, 439], "237612": [401, 431, 437, 438, 439], "237637": [401, 431, 437, 438, 439], "237650": 437, "237662": [401, 431, 437, 438, 439], "237687": [401, 431, 437, 438, 439], "237712": [401, 431, 437, 438, 439], "237737": [401, 431, 437, 438, 439], "237750": 437, "237850": 437, "237950": 437, "237_500": 401, "238050": 437, "238150": 437, "238250": 437, "238350": 437, "238450": 437, "238500": 401, "238550": 437, "238650": 437, "238725": 438, "238737": 438, "238750": 437, "238762": 438, "238787": 438, "238812": 438, "238837": 438, "238850": 437, "238862": 438, "238887": 438, "238912": 438, "238937": 438, "238950": 437, "238962": 438, "238987": 438, "239012": 438, "239037": 438, "239050": 437, "239062": 438, "239087": 438, "239112": 438, "239137": 438, "239150": 437, "239162": 438, "239187": 438, "239212": 438, "239237": 438, "239250": 437, "239262": 438, "239287": 438, "239312": 438, "239337": 438, "239350": 437, "239362": 438, "239387": 438, "239412": 438, "239437": 438, "239450": 437, "239462": 438, "239487": 438, "239500": 401, "239512": 438, "239537": 438, "239550": 437, "239562": 438, "239587": 438, "239612": 438, "239637": 438, "239650": 437, "239662": 438, "239687": 438, "23968744": 438, "2397": 438, "239712": 438, "239737": 438, "239750": 437, "239762": 438, "239787": 438, "239812": 438, "239837": 438, "239850": 437, "239862": 438, "239887": 438, "239912": 438, "239937": 438, "239950": 437, "239962": 438, "239987": 438, "24": [3, 381, 408, 413, 432, 437, 438, 439], "240": [391, 413], "240012": [401, 438], "240037": 438, "240050": 437, "240062": 438, "240087": 438, "240112": 438, "240137": 438, "240150": 437, "240162": 438, "240187": 438, "240212": 438, "240237": 438, "240250": 437, "240262": 438, "240287": 438, "240312": 438, "240337": 438, "240350": 437, "240362": 438, "240387": 438, "240412": 438, "240437": 438, "240450": 437, "240462": 438, "240487": 438, "240500": 401, "240512": 438, "240537": 438, "240550": 437, "240562": 438, "240587": 438, "240612": 438, "240637": 438, "240650": 437, "240662": 438, "240687": 438, "240712": 438, "240737": 438, "240750": 437, "240762": 438, "240787": 438, "240812": 438, "240837": 438, "240850": 437, "240862": 438, "240887": 438, "240912": 438, "240937": 438, "240950": 437, "240962": 438, "240987": 438, "240_000": [401, 408], "241012": 438, "241037": 438, "241050": [437, 438], "241150": 437, "2412": 438, "241250": 437, "241350": 437, "24137931": 438, "241450": 437, "241500": 401, "241550": 437, "241650": 437, "241750": 437, "241850": 437, "24192309": 438, "241950": 437, "242050": 437, "242150": 437, "242250": 437, "242350": 437, "242450": 437, "242500": 401, "242550": 437, "242650": 437, "24273429": 401, "242750": 437, "242850": 437, "242950": 437, "2430": 438, "243050": 437, "243150": 437, "243250": 437, "243350": 437, "243450": 437, "243500": 401, "243550": 437, "243650": 437, "243750": 437, "243850": 437, "243927": 438, "243950": 437, "244012": 401, "244050": 437, "244150": 437, "244250": 437, "244350": 437, "2444": 438, "244450": 437, "244500": 401, "244550": 437, "244650": 437, "244750": 437, "244850": 437, "24491787e": 437, "244950": 437, "244_000": 401, "245": 413, "245050": 437, "2451": 438, "245150": 437, "245250": 437, "245350": 437, "245450": 437, "245500": 401, "245550": 437, "245650": 437, "245750": 437, "245850": 437, "245950": 437, "246050": 437, "246150": 437, "246250": 437, "24633751e": 437, "246350": 437, "246450": 437, "2465": 438, "246500": 401, "246550": 437, "246650": 437, "24668083e": 437, "24672249": 401, "246750": 437, "246850": 437, "246950": 437, "247050": 437, "247150": 437, "247250": 437, "24731183": 438, "247350": 437, "247450": 437, "247500": 401, "247525": 408, "247550": 437, "247650": 437, "247750": 437, "247850": 437, "247950": 437, "248": [413, 431], "248050": 437, "2481": 413, "248150": 437, "248250": 437, "248350": 437, "248450": 437, "248500": 401, "248550": 437, "248650": 437, "248750": 437, "248850": 437, "2489": 438, "248950": 437, "249050": 437, "249150": 437, "249250": 437, "249350": 437, "249450": 437, "249500": 401, "249550": 437, "249650": 437, "249750": 437, "249762": [401, 431, 437, 438, 439], "249787": [401, 431, 437, 438, 439], "249812": [401, 431, 437, 438, 439], "249837": [401, 431, 437, 438, 439], "249850": 437, "249862": [401, 431, 437, 438, 439], "249887": [401, 431, 437, 438, 439], "249912": [401, 431, 437, 438, 439], "249937": [401, 431, 437, 438, 439], "249950": 437, "249962": [401, 431, 437, 438, 439], "249987": [401, 431, 437, 438, 439], "24b": [385, 391, 436], "24kb": 438, "25": [174, 357, 359, 391, 396, 399, 401, 408, 413, 431, 432, 437, 438, 439], "250": [164, 167, 170, 378, 385, 397, 405, 413, 430, 438], "250000": 437, "2504": 438, "250500": 401, "250_000": 401, "251159": 438, "25116062": 438, "251500": 401, "2519": 438, "252500": 401, "253500": 401, "25355321": 401, "2542": 438, "254500": 401, "255500": 401, "2556666": 438, "2557": 438, "25598717": 438, "256": 437, "25620192": 401, "256500": 401, "2578": 438, "257_000": 401, "25806452": 438, "258392": 438, "25846219e": 437, "25862069": 438, "2595": 438, "25999999": 438, "25arrai": 391, "25kb": 437, "25th": 290, "26": [359, 402, 405, 408, 413, 430, 432, 438, 439], "2610": 438, "26131344": 438, "2633": 438, "26336139": 401, "2648": 438, "26504986": 401, "26550211": 401, "26586366e": 437, "266": [377, 384, 430], "2666": 438, "2677002": 438, "2687": 438, "2688172": 438, "269": 408, "26985601": 401, "26992607": 438, "27": [26, 103, 378, 401, 413, 431, 432, 438], "270": [21, 382, 401], "27008811": 401, "2701": 438, "2713542": 438, "27164576": 438, "27183901": 401, "2725": 438, "272727273": 380, "274": 438, "27431479": 401, "27500": 398, "275534": 438, "27586207": 438, "276": 437, "27649525": 401, "278": [382, 437], "27823924": 401, "27883947": 438, "27time": 401, "28": [0, 3, 378, 408, 413, 432, 437, 438], "280": [377, 380], "28070347": 401, "28274798": 438, "282767": 438, "28512": [377, 380, 381, 382], "28608515": 401, "28676046": 401, "287": 382, "28762492": 438, "289": 438, "28957748": 438, "28992": [290, 323, 411], "289999": 438, "28kb": 394, "28th": 3, "29": [359, 408, 413, 432, 438, 439], "29032258": 438, "2907364": 401, "291671": 438, "29310345": 438, "294117632": 408, "29513741": 438, "297": [391, 392, 430], "297231": 438, "29728577": 401, "2arrai": 394, "2coordin": [436, 437], "2d": [0, 13, 14, 26, 256, 275, 277, 278, 287, 290, 296, 301, 304, 305, 306, 314, 320, 323, 346, 347, 377, 378, 379, 380, 381, 382, 393, 401, 403, 405, 419, 420, 423, 430, 434, 440, 441], "2d6bb6b2": 372, "2f": [346, 347], "2gb": 372, "2kb": [385, 394, 401, 413, 431, 437, 438, 439], "2layer": [436, 437], "2mb": [401, 431, 438], "2mesh2d_nfac": 394, "2x": 436, "2y": [385, 437], "3": [3, 4, 6, 8, 11, 12, 26, 27, 47, 49, 111, 131, 163, 164, 174, 194, 237, 256, 297, 298, 299, 300, 324, 329, 330, 331, 334, 342, 349, 359, 377, 380, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 409, 413, 415, 419, 420, 422, 425, 426, 427, 429, 431, 432, 436, 437, 438, 439], "30": [27, 66, 258, 261, 317, 318, 320, 333, 334, 342, 346, 347, 348, 377, 378, 379, 380, 381, 382, 385, 391, 398, 400, 401, 408, 413, 437], "300": [327, 398, 400, 404], "30107527": 438, "30180931": 438, "302": 431, "30360409": 438, "303704": 408, "304": 380, "304463": 438, "3044632363935": 438, "305e": 401, "306": 437, "3072": 372, "308": 377, "309": 438, "30980277": 438, "30_000": 417, "30t23": [401, 437], "31": [382, 401, 406, 413, 437], "31001320e": 437, "31028404e": 437, "31034483": 438, "31123686e": 437, "3125604112": 411, "314374": 438, "315815": 438, "315e": 401, "316": [399, 405, 430], "318181818": 380, "31937456e": 437, "31958325": 438, "31arrai": [401, 413, 437], "31t00": [401, 413, 437], "31xarrai": 401, "32": [269, 329, 330, 413, 427], "3216": 437, "321606": 438, "32258065": 438, "32500": 398, "325kb": 437, "32630": 290, "32631": 411, "327": 438, "32758621": 438, "3288": 437, "3288002": 438, "328838": 438, "329": [437, 438], "32mb": 438, "33": [380, 401, 405, 408, 413, 430, 438], "33000016": 438, "331": 394, "33302832": 438, "33333333": 438, "33556241": 438, "33594632": 438, "336": 437, "336071": 438, "338": [430, 439, 441], "339": 394, "339959": 438, "34": [370, 372, 413, 438, 439], "340": 394, "341": 394, "342": [394, 408, 438], "343303": 438, "34408602": 438, "34453869": 438, "34482759": 438, "34805989": 438, "35": [189, 334, 377, 378, 379, 380, 381, 382, 391, 393, 396, 399, 405, 408, 413, 438], "350": 385, "35154157": 438, "353213": 438, "35321338409926": 438, "35387764e": 437, "35398254e": 437, "35500002": 438, "35537922": 438, "35661888": 438, "3572": 397, "358": 401, "36": [408, 413, 430, 438, 439], "360446": 438, "36107755": 438, "36206897": 438, "363636364": 380, "364": 406, "364103": 438, "364103388758": 438, "3648": 437, "365": [385, 406, 437, 438], "3655914": 438, "365655": 438, "365d": 406, "36704140e": 437, "36731339e": 437, "36752074": 438, "367678": 438, "37": 413, "371": 432, "3724": [432, 437], "3744": 438, "37491": 438, "375": [380, 384, 430, 432], "37500": 398, "375e": [401, 431, 437, 438, 439], "37634409": 438, "376e": [401, 431, 437, 438, 439], "3776": 438, "37846184": 438, "378e": 437, "379": 437, "37931034": 438, "37948227e": 437, "37981462e": 437, "38": [394, 413, 430, 437, 438, 441], "380": 438, "38137436": 438, "382142": 438, "3834999": 438, "3848": 437, "386406": 432, "387e": 438, "388e": 438, "389799": 438, "39": [372, 413, 438, 439], "390": [408, 431], "3915987": 438, "392b": 413, "39655172": 438, "39657822e": 437, "39692154e": 437, "397": 438, "399285": 438, "39947906": 438, "3arrai": [385, 391], "3coordin": [391, 436], "3d": [0, 5, 7, 15, 90, 100, 105, 121, 137, 148, 154, 160, 186, 191, 275, 277, 278, 301, 307, 317, 318, 320, 333, 385, 398, 401, 413, 414, 417, 419, 420, 423, 428, 430, 434, 440, 441], "3kb": 394, "3rd": [324, 355], "3xarrai": 391, "3y": 385, "4": [5, 27, 47, 49, 93, 97, 103, 108, 119, 124, 146, 151, 152, 157, 163, 174, 189, 193, 198, 205, 206, 256, 297, 298, 299, 300, 342, 347, 348, 357, 359, 372, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 411, 412, 413, 417, 425, 426, 431, 432, 434, 435, 436, 437, 438, 439], "40": [66, 194, 329, 330, 331, 377, 378, 381, 382, 393, 408, 413, 426, 435], "400000": 401, "400b": 437, "400kb": [437, 438], "402943": 438, "4030385": 438, "405": 430, "406517": 438, "407846": 432, "408": 437, "40860215": 438, "4088": 437, "409": 438, "409090909": 380, "40979767e": 437, "40993958e": 437, "40b": 431, "41": [377, 381, 382, 393, 413, 437, 439], "410998257": 411, "411": 377, "413168": 438, "41375": 438, "4137931": 438, "41486168": 438, "41545822": 438, "418": 438, "41935484": 438, "41958737": 438, "41e": 438, "42": [413, 438], "420982": 438, "422": 437, "42485857e": 437, "4252": 437, "42520046": 438, "43": [413, 432], "43103448": 438, "43143739": 438, "432": 437, "4324": 437, "4326": [290, 411], "43262911e": 437, "433": 438, "43572426": 438, "437311964137": 438, "437312": 438, "43812462444505": 438, "438125": 438, "4394": 438, "4399999": 439, "44": [413, 432, 438], "44086022": 438, "441782": 438, "445357": 438, "445850": [409, 410, 411, 413, 431], "445950": [413, 431], "446050": [413, 431], "446150": [413, 431], "446250": [413, 431], "446350": [413, 431], "446450": [413, 431], "446550": [413, 431], "446650": [413, 431], "446750": [413, 431], "447126": 411, "44741655": 438, "448065": 432, "44827586": 438, "44999999": 438, "44arrai": 438, "45": [380, 396, 397, 413, 432, 437], "450": [385, 398, 400, 404], "450000": 432, "450050": 413, "450851": 432, "450_000": [431, 432], "451000": 432, "4516129": 438, "452000": 432, "452589": 438, "453000": 432, "454000": 432, "454545455": 380, "455000": 432, "456": 438, "456000": 432, "457000": 432, "457177": 413, "457215": 413, "458000": 432, "458e": [413, 431], "459000": 432, "459821": 438, "46": [119, 406, 409, 413, 432, 438], "460": 406, "460000": 432, "46072292e": 437, "460_000": 431, "461000": 432, "462000": 432, "463000": 432, "463008": 438, "463013": 432, "46339571": 438, "464000": 432, "465000": 432, "46551724": 438, "465750": 409, "465950": 409, "466": 432, "466000": 432, "4664": 437, "466627": 432, "466650": [413, 431], "466750": [409, 413, 431], "4668": 437, "466850": [413, 431], "466950": [409, 413, 431], "467000": 432, "467050": [413, 431], "467150": [409, 413, 431], "467201": 411, "467233": 432, "467250": [413, 431], "467350": [409, 413, 431], "467450": [413, 431], "467550": [409, 410, 411, 413, 431], "468000": 432, "468151": 411, "4689": 432, "46896210e": 437, "469000": 432, "46933594e": 437, "46arrai": 438, "46e": [413, 431], "46xarrai": 438, "47": [413, 432], "470000": 432, "471": 438, "471000": 432, "472000": 432, "472222222222243": 437, "472890": 408, "473": 408, "473000": 432, "474000": 432, "47500": 398, "475000": 432, "476000": 432, "477000": 432, "47761154": 438, "478000": 432, "478782": 432, "479": 411, "479000": 432, "48": 413, "480622": 438, "480_000": 432, "48275862": 438, "48387097": 438, "484": [408, 412, 430], "484196": 438, "486": 438, "487152": 438, "487854": 438, "48b": [401, 436], "49": [408, 413], "491": 26, "491429": 438, "49462366": 438, "498579": 401, "498661": 438, "498e": 437, "4996": 437, "49976540e": 437, "49arrai": 413, "49y": 413, "4a": 357, "4arrai": 436, "4b": [357, 401, 437, 438], "4b9080cbb3354582": [401, 404, 432, 437], "4baa": 372, "4c": 357, "4d": 385, "4kb": [401, 431, 437, 438, 439], "4th": [329, 330, 331], "4y": 401, "5": [45, 124, 135, 151, 163, 167, 174, 198, 232, 255, 256, 269, 284, 295, 297, 298, 299, 300, 316, 317, 319, 324, 329, 330, 331, 359, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 408, 409, 411, 413, 415, 419, 420, 425, 426, 429, 431, 432, 435, 436, 437, 438, 439], "50": [27, 66, 174, 284, 342, 346, 347, 348, 379, 385, 398, 400, 411, 413, 437], "500": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 164, 165, 167, 168, 170, 171, 174, 181, 185, 190, 196, 200, 393, 394, 396, 398, 399, 400, 401, 404, 406, 431, 437, 438, 439], "5000": [385, 397, 398, 400, 404, 431], "50000": 355, "5001": 401, "500coordin": 438, "500dask": [431, 437], "500fals": 438, "500layer": 437, "500nan": [401, 438], "500time": 401, "500y": [431, 437, 438, 439], "5023": 432, "505e": 401, "50761642e": 437, "50784569e": 437, "50798958": 438, "50840683e": 437, "50853882e": 437, "508670464": 408, "5094004": 438, "50_000": [355, 417], "50kb": 437, "50m": 411, "50th": 290, "50x": 437, "51": [146, 393, 438, 439], "510": 438, "511": 408, "511296": 438, "511471": 432, "5116": 437, "51160002": 438, "51496162e": 437, "51531830e": 437, "515e": 401, "51612903": 438, "517": 413, "51724138": 438, "519461": 438, "52": [411, 413, 438, 439], "52303586468673": 438, "523036": 438, "52335644": 438, "52359343e": 437, "52396874": 438, "525": 438, "52500": 398, "52613735e": 437, "526694": 438, "52688172": 438, "52719975": 438, "52b": [401, 431, 437, 439], "53": [151, 438], "530268": 438, "5317909315": 411, "534013": 401, "53448276": 438, "536": 437, "5375": 438, "53750002": 438, "53761673": 438, "53763441": 438, "53865388624": 411, "53968716e": 437, "53994791": 438, "54064": 431, "54136038e": 437, "542414": 408, "545": 438, "5450002": 438, "545454545": 380, "54699516e": 437, "54708900e": 437, "54834080e": 437, "55": [396, 405, 406, 413, 430, 438], "550": 385, "550500": 401, "550747": 432, "550_000": 401, "551500": 401, "55172414": 438, "552500": 401, "553500": 401, "554500": 401, "555500": 401, "55592707": 438, "555e": 401, "556500": 401, "557": 413, "557500": 401, "55815029e": 437, "558301": 438, "558500": 401, "559000": 437, "559012": [401, 431, 437, 438, 439], "559037": [401, 431, 437, 438, 439], "559050": 437, "559062": [401, 431, 437, 438, 439], "559087": [401, 431, 437, 438, 439], "559112": [401, 431, 437, 438, 439], "559137": [401, 431, 437, 438, 439], "55913978": 438, "559150": 437, "559162": [401, 431, 437, 438, 439], "559187": [401, 431, 437, 438, 439], "559212": [401, 431, 437, 438, 439], "559237": [401, 431, 437, 438, 439], "559250": 437, "559262": [401, 431, 437, 438, 439], "559287": [401, 431, 437, 438, 439], "559312": [401, 431, 437, 438, 439], "559337": [401, 431, 437, 438, 439], "559350": 437, "559362": [401, 431, 437, 438, 439], "559387": [401, 431, 437, 438, 439], "559412": [401, 431, 437, 438, 439], "559437": [401, 431, 437, 438, 439], "559450": 437, "559462": [401, 431, 437, 438, 439], "559487": [401, 431, 437, 438, 439], "559500": 401, "559512": [401, 431, 437, 438, 439], "559537": [401, 431, 437, 438, 439], "559550": 437, "559562": [401, 431, 437, 438, 439], "559587": [401, 431, 437, 438, 439], "559612": [401, 431, 437, 438, 439], "559637": [401, 431, 437, 438, 439], "559650": 437, "559662": [401, 431, 437, 438, 439], "559687": [401, 431, 437, 438, 439], "559712": [401, 431, 437, 438, 439], "559737": [401, 431, 437, 438, 439], "559750": 437, "559762": [401, 431, 437, 438, 439], "559787": [401, 431, 437, 438, 439], "559812": [401, 431, 437, 438, 439], "559837": [401, 431, 437, 438, 439], "559850": 437, "559862": [401, 431, 437, 438, 439], "559887": [401, 431, 437, 438, 439], "559912": [401, 431, 437, 438, 439], "559937": [401, 431, 437, 438, 439], "559950": 437, "559962": [401, 431, 437, 438, 439], "559987": [401, 431, 437, 438, 439], "559_000": [401, 408], "56": [408, 437, 438], "560012": [401, 431, 437, 438, 439], "56002688e": 437, "560037": [401, 431, 437, 438, 439], "560050": 437, "560062": [401, 431, 437, 438, 439], "560087": [401, 431, 437, 438, 439], "560112": [401, 431, 437, 438, 439], "560137": [401, 431, 437, 438, 439], "560150": 437, "560162": [401, 431, 437, 438, 439], "560187": [401, 431, 437, 438, 439], "560212": [401, 431, 437, 438, 439], "560237": [401, 431, 437, 438, 439], "560250": 437, "560262": [401, 431, 437, 438, 439], "560287": [401, 431, 437, 438, 439], "560312": [401, 431, 437, 438, 439], "560337": [401, 431, 437, 438, 439], "560350": [437, 438], "560362": [401, 431, 437, 438, 439], "560387": [401, 431, 437, 438, 439], "560412": [401, 431, 437, 438, 439], "560437": [401, 431, 437, 438, 439], "560450": 437, "560462": [401, 431, 437, 438, 439], "560487": [401, 431, 437, 438, 439], "560500": 401, "560512": [401, 431, 437, 438, 439], "560537": [401, 431, 437, 438, 439], "560550": 437, "560562": [401, 431, 437, 438, 439], "560587": [401, 431, 437, 438, 439], "560612": [401, 431, 437, 438, 439], "560637": [401, 431, 437, 438, 439], "560650": 437, "560662": [401, 431, 437, 438, 439], "560687": [401, 431, 437, 438, 439], "560712": [401, 431, 437, 438, 439], "560737": [401, 431, 437, 438, 439], "560750": 437, "560762": [401, 431, 437, 438, 439], "560787": [401, 431, 437, 438, 439], "560812": [401, 431, 437, 438, 439], "560837": [401, 431, 437, 438, 439], "560850": 437, "560862": [401, 431, 437, 438, 439], "560887": [401, 431, 437, 438, 439], "560912": [401, 431, 437, 438, 439], "560937": [401, 431, 437, 438, 439], "560950": 437, "560962": [401, 431, 437, 438, 439], "560987": [401, 431, 437, 438, 439], "560_000": [401, 431], "561012": [401, 431, 437, 438, 439], "561037": [401, 431, 437, 438, 439], "561050": 437, "561062": [401, 431, 437, 438, 439], "561087": [401, 431, 437, 438, 439], "561112": [401, 431, 437, 438, 439], "561137": [401, 431, 437, 438, 439], "561150": 437, "561162": [401, 431, 437, 438, 439], "561187": [401, 431, 437, 438, 439], "561212": [401, 431, 437, 438, 439], "561237": [401, 431, 437, 438, 439], "561250": 437, "561262": [401, 431, 437, 438, 439], "561287": [401, 431, 437, 438, 439], "561312": [401, 431, 437, 438, 439], "561337": [401, 431, 437, 438, 439], "561350": 437, "561362": [401, 431, 437, 438, 439], "561387": [401, 431, 437, 438, 439], "561412": [401, 431, 437, 438, 439], "561437": [401, 431, 437, 438, 439], "561450": 437, "561462": [401, 431, 437, 438, 439], "561487": [401, 431, 437, 438, 439], "561500": 401, "561512": [401, 431, 437, 438, 439], "561537": [401, 431, 437, 438, 439], "561550": 437, "561562": [401, 431, 437, 438, 439], "561587": [401, 431, 437, 438, 439], "561612": [401, 431, 437, 438, 439], "561637": [401, 431, 437, 438, 439], "561650": 437, "561662": [401, 431, 437, 438, 439], "561687": [401, 431, 437, 438, 439], "561712": [401, 431, 437, 438, 439], "561737": [401, 431, 437, 438, 439], "561750": 437, "561762": [401, 431, 437, 438, 439], "561787": [401, 431, 437, 438, 439], "561800": 438, "561812": [401, 431, 437, 438, 439], "561837": [401, 431, 437, 438, 439], "561850": 437, "561862": [401, 431, 437, 438, 439], "561887": [401, 431, 437, 438, 439], "561912": [401, 431, 437, 438, 439], "561937": [401, 431, 437, 438, 439], "561950": 437, "561962": [401, 431, 437, 438, 439], "561987": [401, 431, 437, 438, 439], "562": [385, 387, 430], "562012": [401, 431, 437, 438, 439], "562037": [401, 431, 437, 438, 439], "562050": 437, "562062": [401, 431, 437, 438, 439], "562087": [401, 431, 437, 438, 439], "562112": [401, 431, 437, 438, 439], "562137": [401, 431, 437, 438, 439], "562150": 437, "562162": [401, 431, 437, 438, 439], "562187": [401, 431, 437, 438, 439], "562212": [401, 431, 437, 438, 439], "562237": [401, 431, 437, 438, 439], "562250": 437, "562262": [401, 431, 437, 438, 439], "562287": [401, 431, 437, 438, 439], "562312": [401, 431, 437, 438, 439], "562337": [401, 431, 437, 438, 439], "562350": 437, "562362": [401, 431, 437, 438, 439], "562387": [401, 431, 437, 438, 439], "562412": [401, 431, 437, 438, 439], "562437": [401, 431, 437, 438, 439], "562450": 437, "562462": [401, 431, 437, 438, 439], "562487": [401, 431, 437, 438, 439], "562500": 401, "562512": [401, 431, 437, 438, 439], "562537": [401, 431, 437, 438, 439], "562550": 437, "562562": [401, 431, 437, 438, 439], "562587": [401, 431, 437, 438, 439], "562612": [401, 431, 437, 438, 439], "562637": [401, 431, 437, 438, 439], "562650": 437, "562662": [401, 431, 437, 438, 439], "562687": [401, 431, 437, 438, 439], "562712": [401, 431, 437, 438, 439], "562737": [401, 431, 437, 438, 439], "562750": 437, "562762": [401, 431, 437, 438, 439], "562787": [401, 408, 431, 437, 438, 439], "562812": [401, 431, 437, 438, 439], "562837": [401, 431, 437, 438, 439], "562850": 437, "562862": [401, 431, 437, 438, 439], "562887": [401, 431, 437, 438, 439], "562912": [401, 431, 437, 438, 439], "562937": [401, 431, 437, 438, 439], "562950": 437, "562962": [401, 431, 437, 438, 439], "562987": [401, 431, 437, 438, 439], "562_000": 401, "563": 438, "563012": [401, 431, 437, 438, 439], "563037": [401, 431, 437, 438, 439], "563050": 437, "563062": [401, 431, 437, 438, 439], "563087": [401, 431, 437, 438, 439], "563112": [401, 431, 437, 438, 439], "563137": [401, 431, 437, 438, 439], "563150": 437, "563162": [401, 431, 437, 438, 439], "563187": [401, 431, 437, 438, 439], "563212": [401, 431, 437, 438, 439], "563237": [401, 431, 437, 438, 439], "563250": 437, "563262": [401, 431, 437, 438, 439], "563287": [401, 431, 437, 438, 439], "563312": [401, 431, 437, 438, 439], "563337": [401, 431, 437, 438, 439], "563350": 437, "563362": [401, 431, 437, 438, 439], "563387": [401, 431, 437, 438, 439], "56340003": 438, "563412": [401, 431, 437, 438, 439], "563437": [401, 431, 437, 438, 439], "563450": 437, "563462": [401, 431, 437, 438, 439], "563487": [401, 431, 437, 438, 439], "563500": 401, "563512": [401, 431, 437, 438, 439], "563537": [401, 431, 437, 438, 439], "563550": 437, "563562": [401, 431, 437, 438, 439], "563571": 408, "563587": [401, 431, 437, 438, 439], "563612": [401, 431, 437, 438, 439], "563637": [401, 431, 437, 438, 439], "563650": 437, "563662": [401, 431, 437, 438, 439], "563687": [401, 431, 437, 438, 439], "563712": [401, 431, 437, 438, 439], "563737": [401, 431, 437, 438, 439], "563750": 437, "563762": [401, 431, 437, 438, 439], "563787": [401, 431, 437, 438, 439], "563800": 408, "563812": [401, 431, 437, 438, 439], "563837": [401, 431, 437, 438, 439], "563850": 437, "563862": [401, 431, 437, 438, 439], "563887": [401, 431, 437, 438, 439], "563906": 408, "563912": [401, 431, 437, 438, 439], "563937": [401, 431, 437, 438, 439], "563950": 437, "563962": [401, 431, 437, 438, 439], "563987": [401, 431, 437, 438, 439], "564000": 437, "564392": 408, "564500": 401, "564_000": [401, 408], "565217280": 408, "565500": 401, "565533": 438, "565e": 401, "566500": 401, "567_000": 401, "56896552": 438, "569108": 438, "56989247": 438, "56b": 401, "57": 413, "57024": 393, "57190623": 438, "572": 405, "572368": 408, "572765": 438, "5727653802364": 438, "57323608e": 437, "57339859e": 437, "574": 437, "57500": 398, "57634": 438, "578": [379, 384, 430, 438], "57982802e": 437, "58": 408, "584505": 438, "5862069": 438, "58788539": 438, "59": [401, 437, 438], "590000": 408, "59039576206": 411, "590909091": 380, "59139785": 438, "592e": 437, "595": 432, "59714": 438, "5972": 437, "59arrai": 438, "59e": [401, 431, 437, 438, 439], "5arrai": [431, 436], "5d": 393, "5e": [401, 431, 437, 438, 439], "5kb": 394, "5mb": [431, 437, 439], "5th": 324, "5xarrai": [431, 436], "5y": 431, "6": [80, 82, 83, 90, 93, 97, 100, 103, 108, 111, 112, 113, 114, 115, 117, 119, 121, 124, 128, 130, 131, 143, 145, 146, 148, 151, 152, 154, 157, 163, 164, 166, 167, 169, 170, 173, 174, 186, 189, 191, 193, 198, 202, 204, 205, 206, 209, 225, 255, 256, 262, 263, 264, 265, 270, 271, 272, 297, 298, 299, 300, 323, 342, 347, 357, 359, 377, 378, 379, 380, 381, 382, 384, 385, 389, 393, 394, 396, 398, 400, 401, 402, 403, 404, 408, 413, 415, 428, 431, 432, 434, 436, 437, 438, 439], "60": [174, 399, 413, 437], "600": 174, "601": 438, "60215054": 438, "60344828": 438, "60386456": 438, "604": 437, "604373": 438, "604e": 438, "607947": 438, "60833979e": 437, "608649": 438, "61": 437, "611605": 438, "61290323": 438, "615179": 438, "616": 438, "6172": 437, "61737657e": 437, "618e": 438, "61984372": 438, "62": [413, 431], "62068966": 438, "6251": 397, "625149": 432, "63": [124, 198, 205, 206, 431], "632793": 438, "633": 438, "634": 437, "6344086": 438, "63479853e": 437, "635": [405, 406, 430, 437], "63573351": 401, "63582288": 438, "63598": 438, "636363636": 380, "63793103": 438, "638e": 437, "639e": [401, 431, 437, 438, 439], "64": [0, 408, 427, 431], "640x480": [415, 438, 439], "64275829": 401, "643": [393, 405, 430], "643212": 438, "64516129": 438, "64976361": 401, "64b": 436, "64e": [336, 401, 431, 437, 438, 439], "64mb": 438, "65": [396, 413], "650": 385, "650000e": 437, "650444": 438, "650kb": 437, "651": 437, "65149546e": 437, "6516": 437, "65180204": 438, "652kb": 437, "65319374": 401, "654": 438, "654019": 438, "65517241": 438, "6558001": 438, "655e": 401, "656": 437, "6576766205017": 438, "657677": 438, "6584": 163, "658489": 438, "65848928078788": 438, "66": 438, "66021213": 401, "6608": 437, "662": 432, "663": [398, 405, 430], "665e": 401, "66720984": 401, "66778121": 438, "669": 438, "66944365": 401, "66997651": 401, "67": [87, 413, 437, 438, 439], "670": 408, "67051889": 401, "6706604": 401, "672": 416, "67241379": 438, "674819": 438, "674e": [413, 431], "67500": 398, "67679977": 438, "676e": [413, 431], "67741935": 438, "67764711": 401, "67880011": 438, "679": 438, "679arrai": 438, "68": 438, "681": [402, 405, 430], "681818182": 380, "682052": 438, "682111": 401, "682634": 438, "6828": 431, "6834": 432, "68376037": 438, "68462064": 401, "687e": 438, "68817204": 438, "68908155e": 437, "689284": 438, "68965517": 438, "68arrai": 438, "68xarrai": 438, "69": 438, "6904": 437, "692": [432, 438], "692858": 438, "696516": 438, "69973953": 438, "6arrai": 401, "6mb": 401, "6xarrai": 401, "6y": 401, "7": [3, 26, 118, 174, 194, 295, 297, 298, 299, 300, 357, 359, 380, 385, 391, 394, 398, 400, 401, 404, 408, 413, 427, 431, 432, 436, 437, 438, 439], "70": [398, 400, 401, 413], "70168152": 401, "70234778": 401, "7024": 393, "702e": 438, "703": [413, 416, 430], "70303061": 401, "706": 437, "706002": 438, "70689655": 438, "707": 438, "70967742": 438, "71": [157, 377, 378, 379, 380, 381, 382, 437, 438, 439], "710": 413, "71045101e": 437, "7124": 437, "71310349e": 437, "71318932e": 437, "713659": 438, "714": 437, "7143": 357, "715": [430, 431, 441], "71571869": 438, "716": 437, "717647": 408, "72": [413, 432, 437], "72043011": 438, "72043324e": 437, "720891": 438, "722": [411, 438], "724": 437, "72413793": 438, "725e": 438, "727272727": 380, "728123": 438, "728261": 408, "7284": 437, "72873783e": 437, "72925758e": 437, "72b": 385, "73": [432, 437, 438], "730146": 438, "731060": 408, "731697856155446": 438, "73169786": 438, "731698": 438, "73389453": 401, "73469247": 401, "734arrai": 401, "735": 401, "735356": 438, "73551559": 401, "736": 401, "737": 401, "738": 401, "73mb": 401, "74": [404, 431, 432], "7412": 437, "74137931": 438, "7425878607337": 438, "742588": 438, "744": 432, "746": 438, "74767702": 438, "74989173946": 411, "75": [97, 328, 329, 330, 332, 377, 380, 396, 413, 432], "750": 385, "75000": 397, "75015": 397, "75020": 397, "752498": 438, "75268817": 438, "75328350e": 437, "755842": 438, "75605583e": 437, "75862069": 438, "75934601e": 437, "759731": 438, "75th": 290, "76": [380, 408, 432, 438], "760": 438, "76000023": 438, "763": 437, "76307201": 438, "76344086": 438, "76365618": 438, "764": [394, 437], "766": [378, 384, 430], "766963": 438, "768": 437, "769": [26, 430, 437, 441], "77": [124, 198, 408, 413, 432, 437], "7708": 438, "772727273": 380, "774195": 438, "77586207": 438, "778": 26, "77963534": 438, "779986": 438, "78": [431, 438], "780": 438, "781": [410, 412, 430], "781427": 438, "78494624": 438, "7864": 437, "787407": 401, "787419": 401, "79": [152, 374], "791338": 438, "79133800852065": 438, "792": 437, "79310345": 438, "79561451": 438, "79569892": 438, "79857": 438, "798822606ff1": 372, "799": 438, "7ec0e": [319, 323], "7layer": 401, "8": [174, 321, 336, 346, 347, 359, 372, 380, 385, 391, 396, 398, 400, 401, 404, 408, 413, 431, 432, 437, 438, 439], "80": [329, 330, 381, 382, 391, 393, 413], "800000": 408, "800kb": 401, "802": 437, "804131": 438, "805802": 438, "806310": 408, "80645161": 438, "809445": 432, "809999": 437, "80b": 436, "81": [124, 198, 377], "81034483": 438, "81159367": 438, "812": 432, "81238127": 438, "813035": 438, "814": 438, "818": 394, "818181818": 380, "82": [124, 198, 377, 413, 437], "820267": 438, "82757283": 438, "82758621": 438, "82795699": 438, "83": [124, 198], "83600044": 438, "837": 438, "83741": 438, "838": [395, 405, 430], "838150": 408, "83870968": 438, "84": [408, 437], "842105344": 408, "843018": 432, "84355199": 438, "844": [409, 412, 430], "844642": 438, "84482759": 438, "845": [394, 405, 430], "84568357": 438, "847584": 380, "8494001c276a4b96804cde7829c04d7f": 372, "85": [396, 413, 439], "850": 385, "851874": 438, "852": 438, "854890": 432, "855": 432, "859106": 438, "85953116": 438, "86": [93, 381, 382, 408, 438, 439], "8608": 437, "86091": 432, "86206897": 438, "86359978": 438, "863636364": 380, "864": 393, "864b": 391, "865": [430, 432, 441], "869": 438, "87": 413, "87096774": 438, "872": 437, "875": [377, 404, 405, 430, 438], "87510014": 438, "87551032": 438, "875arrai": 438, "876249": 438, "8762492488771": 438, "877339": 438, "878": [396, 405, 430], "87931034": 438, "88": 437, "88172043": 438, "883481": 438, "888": 437, "88b": 385, "890": 438, "89000003": 438, "890714": 438, "89148948": 438, "892": 432, "89221048e": 437, "8964": 431, "89655172": 438, "897946": 438, "89848566e": 437, "8arrai": 437, "8b": [385, 394, 401, 413, 431, 436, 437, 438, 439], "8mb": 438, "8xarrai": 437, "9": [174, 359, 379, 380, 385, 391, 394, 400, 401, 408, 413, 419, 422, 427, 431, 432, 437, 438, 439, 441], "90": [21, 398, 400, 413], "900": 385, "90000": 432, "9000001": 438, "901483": 438, "90279961": 438, "90322581": 438, "904": 432, "905": 438, "90746864": 438, "90870237e": 437, "909090909": 380, "90950": [409, 410, 411, 413, 431], "90_000": 432, "91": [385, 431, 438], "91000": 432, "91050": [413, 431], "91150": [413, 431], "91250": [413, 431], "913": 26, "91350": [413, 431], "9137931": 438, "91397849": 438, "914": 438, "91450": [413, 431], "91550": [413, 431], "91560221e": 437, "91650": [413, 431], "91750": [413, 431], "91759992": 438, "91850": [413, 431], "92": [413, 437, 438], "92000": 432, "92048049": 438, "922321": 438, "92344781": 438, "925628": 438, "9258001": 438, "9259787643396": 438, "925979": 438, "92645": 411, "928": [413, 438], "92900181e": 437, "929553": 438, "92arrai": 438, "92c5de": 327, "93": 26, "93000": 432, "93000031": 438, "931": [401, 405, 430], "93103448": 438, "93282318e": 437, "9358001": 438, "936785": 438, "93942697": 438, "94": 431, "94000": 432, "943": 438, "94623656": 438, "94827586": 438, "94934893e": 437, "94950": 409, "95": [396, 413], "95000": 432, "9508": 438, "95150": 409, "952": 437, "95350": 409, "954545455": 380, "95540613": 438, "95569086": 438, "95698925": 438, "958": 438, "96": [408, 431], "96000": 432, "96116": 438, "964818": 438, "96547222e": 437, "96551724": 438, "96773362e": 437, "968393": 438, "969": [381, 384, 415, 416, 430], "97": [27, 174, 346, 347, 348, 393, 394, 396, 398, 399, 400, 401, 404, 406, 413], "97000": 432, "97071409e": 437, "97132": 413, "972222222222214": 391, "974": 441, "975468": 438, "975625": 438, "977": 432, "97849462": 438, "97wr01926": 380, "98": [26, 27, 284, 346, 347, 348, 377, 378, 379, 380, 381, 382], "98000": 432, "982": 438, "98263748545648": 411, "98275862": 438, "984": 437, "98664236e": 437, "9874959": 438, "987arrai": 437, "98924731": 438, "99": [27, 346, 347, 348, 391, 411], "99000": 432, "99483585": 438, "996": 438, "9976": 437, "998836": 438, "999": 27, "9999": [26, 231, 245], "9999999": 0, "9nan": 385, "9x": 385, "A": [0, 9, 13, 26, 27, 29, 41, 42, 54, 58, 59, 66, 82, 83, 90, 93, 100, 105, 118, 119, 124, 127, 131, 132, 146, 152, 160, 163, 174, 192, 198, 201, 205, 206, 242, 258, 269, 278, 294, 301, 329, 330, 331, 337, 348, 355, 357, 372, 380, 382, 397, 401, 406, 419, 420, 423, 431, 432, 433, 435, 438], "ATS": 174, "And": [380, 415, 427], "As": [0, 7, 127, 174, 201, 374, 393, 394, 396, 397, 398, 399, 401, 404, 417, 426, 432], "At": [0, 25, 85, 92, 96, 102, 123, 129, 135, 150, 156, 162, 183, 188, 197, 203, 354, 427], "Be": [30, 32, 184], "But": 437, "By": [0, 55, 103, 139, 146, 174, 207, 298, 320, 388, 401, 413, 426, 431], "For": [0, 12, 25, 26, 27, 33, 77, 80, 87, 93, 97, 119, 124, 128, 135, 146, 151, 152, 157, 174, 198, 202, 205, 224, 249, 253, 254, 262, 263, 264, 265, 269, 278, 292, 317, 319, 328, 329, 330, 331, 332, 333, 334, 348, 354, 355, 357, 370, 371, 374, 380, 382, 388, 391, 394, 396, 397, 401, 403, 408, 418, 419, 420, 422, 423, 425, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439], "If": [0, 3, 6, 11, 12, 16, 27, 37, 41, 42, 43, 44, 45, 47, 54, 55, 56, 59, 77, 79, 80, 82, 86, 87, 93, 97, 103, 105, 108, 112, 113, 114, 117, 118, 124, 130, 131, 132, 137, 138, 141, 145, 146, 151, 152, 157, 163, 166, 169, 173, 174, 179, 180, 184, 189, 194, 198, 204, 205, 206, 237, 245, 249, 258, 261, 262, 263, 265, 270, 271, 272, 279, 285, 290, 295, 298, 301, 303, 312, 316, 317, 319, 322, 323, 326, 329, 330, 333, 334, 337, 343, 346, 347, 355, 357, 370, 371, 372, 396, 401, 403, 411, 423, 426, 427, 429, 435, 437], "In": [0, 5, 11, 18, 20, 26, 29, 39, 41, 44, 47, 49, 54, 55, 80, 82, 83, 124, 127, 146, 174, 194, 198, 201, 258, 261, 278, 290, 314, 320, 337, 341, 349, 350, 351, 352, 355, 371, 372, 373, 375, 380, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 411, 413, 426, 427, 431, 432, 435, 436, 437, 438, 439], "It": [0, 13, 14, 27, 44, 55, 76, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203, 225, 258, 261, 269, 318, 329, 330, 331, 335, 348, 372, 375, 391, 393, 396, 397, 400, 401, 402, 408, 413, 415, 419, 422, 426, 427, 428, 432, 436, 437, 439], "Its": [154, 186, 437], "NO": 174, "NOT": 423, "No": [0, 227, 237, 248], "Not": [47, 49, 79, 80, 87, 93, 97, 124, 131, 152, 157, 194, 198, 205, 206, 298, 374, 391, 419, 420, 427, 429], "On": [127, 201, 371, 373, 376, 429, 438], "One": [31, 66, 118, 119, 305, 307, 319, 324, 326, 333, 372, 408, 419, 422], "Or": [3, 5, 25, 135, 194, 295, 298, 354, 370, 429], "Such": 437, "That": [397, 439], "The": [0, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 25, 26, 27, 29, 30, 31, 33, 36, 37, 41, 44, 45, 47, 49, 51, 54, 55, 58, 59, 66, 68, 70, 72, 74, 76, 77, 78, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 103, 105, 106, 108, 110, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 132, 135, 137, 138, 139, 140, 141, 142, 144, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163, 174, 180, 182, 183, 186, 187, 188, 191, 192, 193, 194, 197, 198, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 234, 237, 242, 247, 248, 252, 254, 256, 257, 258, 261, 269, 274, 278, 288, 290, 291, 292, 294, 295, 298, 314, 317, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 370, 372, 374, 376, 377, 378, 379, 380, 382, 385, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 411, 413, 415, 417, 419, 420, 423, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 440], "Their": [426, 431], "Then": [138, 139, 140, 258, 261, 402, 406, 427], "There": [5, 45, 127, 201, 370, 371, 375, 385, 400, 402, 411, 426, 433, 435, 437, 438, 439], "These": [0, 13, 14, 25, 47, 49, 85, 92, 96, 102, 105, 123, 129, 135, 137, 150, 156, 162, 183, 188, 192, 197, 203, 224, 228, 285, 286, 319, 323, 325, 333, 354, 374, 383, 386, 388, 389, 403, 407, 417, 427, 429, 431, 432, 433, 436, 437, 438, 439], "To": [0, 5, 26, 35, 39, 41, 44, 45, 47, 55, 59, 81, 85, 89, 92, 94, 96, 99, 102, 116, 120, 123, 125, 129, 134, 135, 147, 150, 151, 153, 156, 159, 162, 165, 168, 171, 181, 183, 185, 188, 190, 196, 197, 200, 203, 269, 278, 290, 292, 298, 320, 334, 354, 370, 372, 374, 376, 377, 378, 379, 380, 381, 382, 385, 394, 397, 401, 406, 410, 413, 417, 419, 420, 422, 427, 429, 431, 435, 436, 437, 438, 439], "With": [127, 146, 201, 417, 418, 419, 427, 429, 431, 438], "_": [0, 41, 42, 43, 44, 47, 54, 55, 74, 75, 76, 77, 78, 79, 80, 86, 87, 93, 97, 111, 113, 115, 118, 119, 124, 131, 132, 146, 151, 152, 157, 164, 167, 170, 174, 178, 180, 184, 189, 193, 194, 195, 198, 205, 206, 385, 435, 437, 438], "__": [74, 75, 76, 77, 78, 79, 80, 86, 87, 93, 97, 111, 113, 115, 118, 119, 124, 131, 132, 146, 151, 152, 157, 164, 167, 170, 174, 178, 180, 184, 189, 193, 194, 195, 198, 205, 206], "__init__": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 58, 61, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 93, 97, 103, 108, 111, 113, 115, 118, 119, 124, 131, 132, 133, 146, 151, 152, 157, 164, 167, 170, 174, 178, 180, 184, 189, 193, 194, 195, 198, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 238, 242, 243, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 317, 318, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 376, 427], "__name__": 437, "__version__": 376, "_c": 43, "_dask": 0, "_dtype_lik": 269, "_dtypedict": [269, 288], "_l": [41, 42, 43, 44, 54, 55, 431], "_metadata_dict": 391, "_mf6io": 77, "_p": 43, "_provid": 323, "_regrid_method": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203, 397, 437], "_required_extra": 26, "_supportsdtyp": [269, 288], "_tricontour": 395, "_type": 269, "_valid": 0, "ab": [379, 385, 397, 398, 400, 404, 406], "abc": 269, "abil": 372, "abl": [0, 370, 396, 429, 436], "about": [146, 174, 194, 371, 377, 379, 393, 397, 401, 429], "abov": [0, 27, 146, 180, 184, 189, 255, 273, 346, 348, 370, 394, 401, 417, 429, 431, 432, 435, 437, 438], "abrupt": 343, "abruptli": 436, "absent": [310, 423], "absolut": [27, 145, 146, 174, 258, 346, 348], "abstract": [61, 126, 251, 252], "acceler": [174, 342], "accept": [0, 26, 104, 109, 124, 136, 198, 291, 292, 310, 311, 319, 323, 346, 347, 408, 426, 437, 439], "access": [0, 376, 391, 431, 436], "accessor": [419, 422], "accident": 0, "accompani": 431, "accord": [0, 41, 44, 47, 49, 54, 55, 228, 266, 376, 395, 431, 439], "accordingli": [0, 106, 110], "account": [0, 21, 160, 396, 423, 437, 438], "accumul": [253, 394], "accur": [0, 86, 319], "accuraci": [269, 284, 328, 329, 330, 331, 332], "achiev": [174, 329, 330, 331, 401, 437], "acitv": 333, "acronym": 427, "across": [262, 263, 264, 265, 278, 396, 401, 437, 438, 440], "act": [0, 427, 438], "activ": [0, 16, 26, 51, 78, 80, 82, 83, 84, 91, 95, 101, 103, 106, 110, 112, 114, 117, 118, 122, 127, 130, 132, 146, 149, 155, 161, 166, 169, 173, 174, 182, 187, 194, 201, 204, 227, 228, 229, 248, 255, 262, 263, 264, 265, 270, 271, 272, 275, 277, 280, 281, 282, 283, 293, 301, 333, 334, 343, 346, 347, 349, 357, 377, 378, 379, 380, 381, 382, 385, 401, 423, 427, 429, 436, 437, 438, 439], "active_grid_boundary_xi": [0, 359], "actual": [0, 44, 55, 209, 234, 254, 435], "ad": [44, 59, 77, 78, 105, 137, 143, 146, 174, 294, 295, 314, 343, 394, 398, 400, 403, 413, 427, 435, 437, 438], "adapt": [11, 12, 174, 294, 295], "add": [0, 25, 59, 61, 68, 70, 72, 78, 86, 105, 135, 137, 143, 317, 323, 354, 371, 372, 379, 393, 394, 398, 399, 401, 403, 404, 406, 415, 423, 427, 429, 432, 435, 436, 437, 438], "add_basemap": 323, "add_bounding_box": 317, "add_colorbar": 408, "add_default_file_handl": [56, 59, 68, 72], "add_default_stream_handl": [56, 59, 68, 72], "add_mesh": 317, "add_timemap": 0, "addit": [0, 12, 25, 39, 51, 61, 68, 70, 72, 127, 131, 135, 146, 174, 201, 254, 258, 269, 288, 354, 374, 388, 427, 431], "addition": [139, 207, 269, 427], "additional_depth": [61, 68, 70, 72], "additional_tim": [25, 135, 354, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 398, 399, 400, 401, 404, 406, 436], "address": [0, 371, 372], "adequ": [258, 261, 329, 330, 331, 342, 346, 347, 355], "adher": 0, "adjac": [26, 76, 146, 343], "adjust": [26, 249, 329, 330, 331, 355], "administr": [429, 432], "admiss": [140, 207, 208], "adv": [377, 378, 379, 380, 381, 382, 393, 396, 399, 406], "advanc": [0, 377, 403, 428], "advantag": [372, 374, 435], "advect": [11, 328, 329, 330, 331, 332, 355, 393, 396, 406], "advectiontvd": [377, 378, 379, 380, 381, 382, 393], "advectionupstream": [396, 399, 406], "advent": 331, "advic": [0, 37, 429, 437, 439], "advis": [249, 423], "affair": 427, "affect": [0, 27, 119, 333, 348, 439], "affin": [290, 315, 417, 431], "afresh": 373, "after": [0, 3, 41, 42, 54, 77, 79, 80, 87, 93, 97, 103, 105, 108, 124, 131, 135, 137, 152, 157, 194, 198, 205, 206, 234, 269, 302, 354, 357, 372, 373, 377, 378, 379, 380, 381, 382, 401, 439], "again": [0, 41, 54, 80, 127, 201, 371, 372, 427, 435, 437, 438], "against": [8, 401, 427], "aggreg": [0, 229, 289, 291, 292, 419, 420], "agnost": [0, 107, 124, 198], "agricultur": 401, "ahead": [401, 404, 437], "ahn": [411, 415, 431], "ahn_50m": 411, "ahn_utm": 411, "ahn_utm_50m": 411, "aim": [27, 348], "air": [194, 426], "air_entri": 194, "air_entry_potenti": 194, "al": [336, 396], "albedo": [237, 391], "algorithm": [174, 329, 330, 331, 357, 438], "alh": 86, "alias": 50, "align": [146, 270, 271, 272, 419, 420, 423, 439], "all": [0, 3, 5, 7, 8, 11, 25, 27, 31, 41, 42, 54, 61, 74, 75, 76, 82, 83, 85, 92, 93, 96, 102, 103, 105, 106, 108, 110, 119, 123, 127, 129, 135, 137, 139, 144, 145, 146, 150, 151, 156, 162, 174, 183, 186, 188, 191, 192, 193, 197, 201, 203, 207, 209, 235, 250, 254, 270, 271, 272, 279, 298, 316, 329, 330, 333, 334, 342, 346, 348, 354, 371, 373, 374, 375, 376, 383, 385, 386, 389, 391, 394, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 414, 419, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440], "all_boundaries_constant_head": 394, "all_package_inst": 437, "all_touch": 279, "allo": 372, "alloc": [0, 90, 100, 105, 107, 137, 146, 160, 255, 256, 259, 262, 263, 264, 265, 275, 276, 277, 279], "alloc_opt": 259, "allocate_drn_cel": [0, 275, 359, 423], "allocate_ghb_cel": [0, 359, 423], "allocate_rch_cel": [0, 255, 359], "allocate_riv_cel": [0, 277, 359, 423, 438], "allocation_opt": [0, 90, 100, 105, 137, 160, 259, 262, 263, 264, 265, 275, 277, 359, 438], "allow": [0, 3, 41, 54, 80, 118, 174, 194, 249, 262, 263, 265, 328, 329, 330, 331, 332, 334, 355, 401, 402, 408, 415, 417, 423, 427, 429, 431, 435], "alon": 401, "along": [0, 9, 10, 13, 14, 21, 86, 138, 141, 146, 232, 246, 278, 294, 295, 297, 304, 305, 306, 307, 343, 394, 401, 408, 413, 431], "alpha": [319, 323, 408, 415], "alreadi": [0, 80, 126, 252, 261, 324, 391, 406, 429, 435, 439, 440], "alright": 439, "also": [0, 21, 27, 39, 41, 44, 54, 55, 80, 87, 93, 97, 124, 140, 146, 152, 157, 174, 198, 205, 206, 207, 208, 225, 226, 232, 239, 247, 250, 269, 278, 301, 328, 329, 330, 331, 332, 333, 334, 346, 348, 370, 371, 372, 373, 374, 385, 394, 396, 397, 398, 401, 402, 409, 413, 415, 417, 419, 420, 426, 427, 429, 431, 432, 435, 436, 437, 438, 439], "alter": [323, 439], "altern": [0, 41, 54, 419, 420, 427, 429], "alternative_cell_averag": [146, 437], "alterra": 26, "although": [74, 343, 393], "altogeth": [419, 420], "alv": 86, "alwai": [0, 20, 25, 32, 44, 45, 50, 104, 109, 135, 136, 146, 184, 194, 336, 341, 354, 355, 371, 417, 419, 420, 427, 431, 435, 437, 439], "ambigu": [299, 300], "amersfoort": [323, 411], "among": [77, 334, 401], "amongst": [0, 423], "amount": [0, 26, 30, 174, 180, 343, 349, 350, 351, 396, 427, 436, 437], "amt": 146, "an": [0, 4, 5, 11, 13, 14, 21, 26, 27, 30, 39, 41, 45, 46, 47, 50, 51, 54, 56, 66, 75, 78, 80, 105, 106, 110, 112, 114, 117, 118, 121, 124, 126, 127, 132, 137, 146, 148, 151, 154, 163, 166, 169, 173, 174, 180, 198, 201, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 233, 252, 258, 266, 270, 271, 272, 279, 290, 294, 295, 297, 298, 299, 300, 304, 305, 306, 307, 315, 319, 323, 326, 334, 342, 343, 346, 347, 348, 357, 359, 370, 372, 374, 375, 378, 379, 380, 382, 385, 394, 396, 397, 398, 400, 401, 404, 408, 409, 415, 417, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 440], "anaconda": 429, "analys": 249, "analysi": [377, 394, 401, 419, 420, 422, 428], "analyz": [439, 440], "ananaconda": 427, "angl": [21, 146, 437], "angldegx": [0, 146], "angle1": [146, 219, 437], "angle2": [146, 219, 437], "angle3": [146, 219, 437], "ani": [0, 21, 47, 48, 50, 51, 80, 84, 86, 91, 93, 95, 101, 103, 104, 109, 118, 122, 124, 127, 131, 132, 136, 146, 149, 152, 155, 157, 161, 174, 182, 186, 187, 194, 198, 201, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 238, 266, 269, 288, 297, 299, 303, 304, 305, 306, 307, 310, 328, 329, 330, 331, 332, 343, 355, 371, 419, 420, 422, 423, 424, 429, 435, 437, 438], "anim": [0, 317, 318, 428, 440], "anisotrop": [21, 146, 400], "anisotropi": [21, 34, 146, 343], "anisotropy_angl": 21, "anisotropy_factor": 21, "anistropi": 423, "announc": [63, 64], "annoyingli": 435, "annualcropfactor": 359, "annualgrowthfactor": 391, "anoth": [8, 80, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203, 290, 397, 419, 420, 426, 431], "answer": 0, "anticip": [333, 334], "anymor": 0, "anyth": [58, 70, 104, 109, 136, 291, 292, 310], "anywai": 371, "anywher": [419, 420], "apart": [0, 253, 371], "api": [0, 77, 107, 288, 291, 292, 313, 374, 385, 404, 432], "apipackag": 0, "appar": 433, "append": [0, 417], "appli": [0, 4, 11, 12, 19, 25, 28, 45, 103, 106, 110, 113, 135, 146, 174, 194, 249, 324, 343, 346, 349, 350, 351, 354, 355, 357, 401, 411, 413, 433, 437], "applic": [0, 66, 336, 357], "approach": [13, 14, 174, 329, 330, 370, 435, 437], "appropri": [0, 174, 304, 305, 306, 307, 343, 419, 420, 429, 436], "approxim": [86, 269, 329, 330, 331, 342, 396, 426], "april": [0, 3, 385, 427], "aqueou": [118, 132], "aquif": [15, 23, 30, 32, 33, 34, 35, 97, 105, 118, 130, 132, 137, 180, 184, 204, 267, 323, 333, 343, 399, 401, 426, 431], "aquitard": [23, 35, 105, 137, 267, 319, 401, 431, 438], "ar": [0, 3, 4, 5, 7, 9, 10, 11, 13, 14, 22, 25, 26, 27, 31, 41, 42, 45, 47, 48, 49, 50, 51, 54, 66, 77, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 104, 105, 107, 109, 112, 114, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 142, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163, 166, 169, 173, 174, 179, 180, 182, 183, 184, 186, 187, 188, 191, 192, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 228, 232, 237, 242, 243, 248, 249, 250, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 277, 278, 285, 286, 290, 294, 297, 298, 299, 300, 303, 304, 305, 306, 307, 309, 311, 312, 314, 317, 319, 323, 324, 325, 326, 329, 330, 333, 334, 343, 346, 348, 349, 350, 351, 354, 357, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 408, 410, 411, 413, 417, 419, 420, 423, 424, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440], "arang": [290, 297, 377, 378, 379, 380, 381, 382, 385, 393, 396, 397, 398, 399, 400, 404, 406, 413, 415, 432, 438], "arbitrari": [0, 5, 297], "architectur": 427, "area": [26, 29, 32, 152, 163, 184, 224, 228, 229, 230, 250, 256, 269, 288, 291, 334, 349, 350, 351, 396, 401, 408, 409, 419, 420, 422, 426, 438, 439], "area_svat": [228, 423], "areal": 401, "arg": [58, 66, 73, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 255, 256, 372], "arguabl": 426, "argument": [0, 5, 11, 45, 46, 74, 75, 76, 85, 92, 96, 102, 119, 123, 129, 139, 140, 143, 150, 156, 162, 179, 183, 188, 192, 197, 203, 207, 208, 237, 254, 258, 261, 269, 288, 290, 297, 298, 299, 300, 317, 319, 320, 323, 324, 326, 372, 379, 431, 438], "aris": 4, "arithmet": 343, "arm": 427, "around": [3, 329, 330, 331, 371, 388, 429, 435], "arrai": [0, 5, 22, 77, 79, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 105, 106, 110, 118, 119, 121, 122, 123, 124, 126, 129, 132, 137, 139, 140, 144, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 180, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194, 195, 197, 198, 200, 203, 205, 206, 207, 208, 224, 226, 228, 231, 237, 242, 245, 247, 249, 251, 252, 262, 263, 264, 265, 269, 274, 275, 277, 278, 284, 297, 298, 299, 304, 305, 306, 307, 319, 323, 324, 326, 334, 336, 380, 385, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 406, 408, 413, 417, 427, 431, 435, 436, 437, 438, 439], "array_lik": [9, 13, 178, 294, 326], "array_nam": 437, "array_origin": 437, "array_regrid": 437, "arraynam": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203], "arri": 437, "arrow": 394, "articl": [375, 426, 427], "artifact": [370, 401, 404, 437], "artifical_recharge_lay": [126, 252], "artifici": 26, "artificial_recharg": [126, 252], "artificial_recharge_capac": [126, 252], "as_index": 269, "asc": [346, 347, 423], "ascii": [0, 37, 38, 227, 242, 248, 431], "asctim": 56, "asdict": 437, "ask": [0, 371, 424], "assert": 0, "assign": [0, 12, 59, 83, 107, 124, 127, 130, 145, 146, 174, 198, 201, 204, 266, 274, 320, 322, 324, 333, 343, 385, 408, 426, 436, 437, 438], "assign_coord": [320, 324, 396, 401], "assign_edge_coord": 394, "assign_wel": [0, 359], "assoc_column": [0, 47, 49], "assoc_ext": [47, 48], "assoc_kwarg": 45, "associ": [0, 45, 46, 47, 48, 49, 50, 78, 105, 127, 137, 146, 201, 393, 394, 396, 399, 406, 433, 437], "assum": [82, 83, 130, 146, 174, 194, 204, 262, 263, 265, 269, 393, 394, 396, 398, 401, 404, 435, 437], "assumpt": [13, 14, 146], "astyp": [385, 401, 408], "asymmetr": 78, "at_elev": [137, 255, 259, 262, 263, 275, 438], "at_first_act": [255, 264, 438], "ath1": 86, "ath2": 86, "atleast": 0, "ats_outer_maximum_fract": [0, 174], "attach": [0, 393, 398, 400, 404, 431], "attempt": [0, 80, 146, 343], "attent": 439, "attr": [41, 42, 54, 290], "attract": 427, "attribut": [0, 58, 66, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 92, 93, 96, 97, 102, 103, 108, 111, 113, 115, 118, 119, 123, 124, 129, 131, 132, 146, 150, 151, 152, 156, 157, 162, 164, 167, 170, 174, 178, 180, 183, 184, 188, 189, 192, 193, 194, 195, 197, 198, 200, 203, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 242, 243, 245, 247, 249, 251, 253, 254, 255, 256, 259, 260, 269, 290, 295, 310, 385, 391, 394, 397, 401, 413, 417, 431, 432, 435, 436, 437, 438, 439], "atv": 86, "au": 406, "auburn": 377, "author": 372, "autmat": 323, "auto": [0, 359, 423], "autom": 437, "automat": [0, 39, 41, 42, 44, 54, 128, 137, 138, 139, 140, 141, 151, 202, 207, 208, 317, 321, 326, 328, 329, 330, 331, 332, 333, 334, 335, 341, 357, 370, 371, 374, 385, 393, 397, 417, 429, 431, 435], "aux": [80, 87, 93, 97, 124, 152, 157, 198, 205, 206, 393, 406], "auxiliari": [0, 146], "auxiliary_variable_nam": 178, "auxmix": [80, 87, 93, 97, 124, 152, 157, 198, 205, 206], "avail": [0, 58, 66, 174, 191, 257, 258, 261, 262, 263, 264, 265, 275, 277, 290, 370, 374, 388, 393, 394, 396, 398, 401, 404, 408, 427, 429, 433, 435, 437, 438], "averag": [3, 146, 174, 290, 397, 401, 408, 411, 419, 420, 437], "avevap": 391, "avoid": [0, 174, 245, 266, 279, 299, 300, 419, 420], "avprec": 391, "awar": 435, "awrmat": 377, "ax": [0, 21, 25, 135, 146, 319, 323, 324, 326, 327, 354, 377, 378, 379, 380, 381, 382, 394, 395, 396, 397, 401, 402, 406, 408, 409, 410, 411, 413, 415, 432, 435, 437, 438, 439], "ax0": 437, "ax1": 437, "axesimag": [401, 404, 408, 410, 411], "axi": [21, 41, 42, 54, 86, 146, 258, 319, 323, 324, 326, 397, 408, 431, 433], "axix": 417, "b": [25, 32, 135, 184, 267, 268, 290, 316, 319, 323, 354, 399, 427, 435], "b12a1745001": 408, "b12a1745002": 408, "b12a1747001": 408, "b12a1747002": 408, "b12a1748001": 408, "b12a1805001": 408, "b12a1805002": 408, "b12a1806001": 408, "ba": [0, 377, 378, 379, 380, 381, 382], "back": [0, 45, 302, 323, 393, 394, 398, 404, 427, 431, 432], "backend": 0, "background": [323, 401, 413, 417, 426, 429, 438], "backtrack": 174, "backtracking_numb": 174, "backtracking_reduction_factor": 174, "backtracking_residual_limit": 174, "backtracking_toler": 174, "backward": [119, 313, 424], "bakker": 382, "balanc": [0, 254, 327, 329, 330, 331, 334, 346, 347, 395, 396, 423, 437, 440], "band": 290, "bar": [174, 391], "bardelta": 174, "bare": [224, 254, 427], "bare_soil_factor": 224, "barrier": [0, 22, 111, 112, 113, 114, 115, 117, 164, 166, 167, 169, 170, 173, 285, 286, 423], "barrier_gdf": [111, 113, 115, 164, 167, 170], "barrier_i": [164, 167, 170, 285, 286], "barrier_x": [164, 167, 170, 285, 286], "barrier_zbot": [285, 286], "barrier_zbottom": [285, 286], "barrier_ztop": [285, 286], "barycentr": [210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223], "base": [0, 13, 14, 21, 26, 47, 48, 50, 58, 61, 66, 68, 70, 72, 74, 85, 92, 96, 102, 112, 114, 117, 123, 128, 129, 130, 146, 150, 156, 162, 166, 169, 173, 174, 183, 188, 192, 194, 197, 202, 203, 204, 229, 249, 256, 261, 273, 322, 328, 329, 330, 331, 332, 355, 375, 393, 396, 399, 400, 401, 408, 413, 417, 419, 422, 426, 427, 428, 429, 431, 432, 437], "baseexcept": 311, "basemap": [0, 323, 415], "basenam": [103, 108], "baseregridd": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203], "basi": 417, "basic": [278, 319, 333, 334, 343, 380, 391, 438, 439], "basicconfig": 56, "basicflow": [0, 377, 378, 379, 380, 381, 382], "basictransport": [0, 377, 378, 379, 380, 381, 382], "bat": 373, "batch": [0, 423], "bbox_inch": 327, "bc": 194, "bcf": [401, 426], "bdec": 372, "bdgfff": [5, 413], "bdgflf": [5, 413], "bdgfrf": [5, 413], "becaus": [0, 151, 245, 333, 385, 391, 397, 399, 417, 423, 427, 435, 436], "becom": [0, 44, 55, 80, 146, 329, 330, 331, 343, 426, 436, 437], "bed": [15, 267, 269, 333, 398, 438], "bed_leak": 404, "been": [0, 73, 80, 138, 139, 140, 141, 146, 179, 249, 294, 295, 298, 330, 374, 390, 393, 394, 398, 401, 408, 417, 424, 427, 431, 435, 437, 439], "befor": [0, 9, 10, 26, 41, 42, 54, 107, 130, 143, 204, 289, 295, 385, 401, 402, 408, 419, 420, 423, 437, 438, 439], "beforehand": 12, "begin": [31, 63, 64, 90, 100, 140, 160, 207, 208, 237, 333, 334, 401, 404, 437], "behav": 23, "behavior": [0, 66, 174, 298, 299, 300, 323, 401, 404, 437], "behind": [377, 435], "being": [0, 127, 144, 174, 201, 313, 426, 437], "belong": [0, 105, 112, 114, 117, 126, 137, 144, 166, 169, 173, 252], "below": [3, 4, 7, 18, 27, 29, 41, 51, 54, 103, 146, 174, 180, 184, 189, 194, 255, 272, 273, 329, 330, 331, 334, 337, 346, 348, 352, 370, 372, 375, 388, 393, 396, 423, 427, 429, 435], "below_surfacelevel": 3, "benchmark": [377, 380, 382, 403, 405, 430], "bene": [19, 27, 28, 330, 336, 348], "benefit": 174, "best": [45, 355, 375, 396, 435, 439], "better": [0, 45, 130, 204, 329, 330, 331, 391, 397, 408, 426, 439], "between": [0, 7, 9, 10, 13, 17, 21, 23, 25, 35, 45, 74, 76, 97, 103, 118, 135, 146, 174, 194, 226, 247, 251, 256, 268, 284, 319, 323, 325, 329, 330, 331, 335, 342, 343, 347, 354, 355, 357, 374, 382, 385, 396, 397, 401, 406, 419, 420, 423, 427, 436, 437, 439, 440], "beyond": [127, 201, 258], "bhead": [20, 97, 341], "bi": 174, "bicgstab": [174, 347, 393, 396, 399, 406], "big": [419, 420], "big_align": [419, 420], "bilinear": 290, "billion": 424, "bimonth": 0, "bin": 437, "binari": [0, 37, 39, 78, 118, 138, 139, 140, 141, 145, 151, 207, 208, 374, 393, 396, 399, 401, 406, 417, 419, 422, 427], "binary_dil": [296, 394, 396, 400], "binary_eros": 401, "binaryfil": 417, "bind": [419, 422], "bisect": [346, 347], "bit": [0, 269, 435, 438], "black": [323, 394, 415, 438], "blank": [106, 110], "bloat": 374, "blob": 374, "block": [0, 50, 118, 132, 146, 194, 302, 329, 330, 374, 401, 437], "bnd": [51, 377, 378, 379, 380, 381, 382, 385, 423], "bodi": [0, 292], "bone": 427, "bookkeep": 385, "bool": [0, 3, 5, 41, 42, 43, 51, 54, 59, 68, 72, 77, 78, 79, 80, 86, 87, 93, 97, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 124, 130, 131, 132, 135, 136, 138, 139, 140, 142, 145, 146, 151, 152, 157, 164, 166, 167, 169, 170, 173, 174, 178, 179, 180, 184, 189, 191, 193, 194, 195, 198, 204, 205, 206, 207, 208, 228, 241, 254, 258, 266, 279, 284, 297, 301, 316, 320, 323, 335, 337, 341, 342, 345, 349, 350, 351, 352, 355, 357, 358, 394, 396, 400, 401, 404, 436, 437, 438, 439], "boolean": [0, 3, 8, 180, 184, 262, 263, 264, 265, 275, 277, 280, 281, 282, 283, 290, 319, 323, 401, 419, 420], "boolfalsearrai": [436, 437, 438, 439], "booltruearrai": 437, "bor": 372, "border": 394, "border_valu": [394, 396, 400], "borehol": [47, 408, 432], "borehole1d": [47, 49], "borehole3d": [47, 49], "bot": [6, 8, 11, 12, 23, 35, 146, 320, 343, 377, 378, 379, 380, 381, 382, 401, 413, 423], "bot_elev": 404, "both": [0, 5, 26, 27, 77, 86, 118, 132, 151, 160, 174, 237, 255, 269, 278, 291, 292, 294, 295, 298, 319, 323, 324, 326, 329, 330, 355, 376, 377, 380, 385, 397, 401, 402, 417, 426, 427, 429, 436, 437], "bottom": [0, 29, 81, 89, 93, 94, 99, 103, 112, 114, 116, 117, 119, 120, 125, 130, 146, 147, 153, 157, 159, 165, 166, 168, 169, 171, 173, 181, 185, 189, 190, 194, 195, 196, 198, 200, 204, 211, 255, 256, 261, 262, 263, 265, 266, 272, 273, 274, 275, 276, 277, 285, 286, 319, 320, 324, 326, 333, 352, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 398, 399, 400, 401, 404, 406, 413, 431, 437, 438, 439], "bottom_elev": [0, 29, 51, 157, 221, 256, 265, 272, 277, 352, 401, 437, 438, 439], "bottom_l": [418, 419], "bottom_l1": [418, 419], "bottom_resist": 231, "bottom_sourc": 0, "bound": [0, 29, 81, 89, 94, 99, 116, 120, 125, 127, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 201, 273, 279, 297, 298, 299, 300, 317, 352], "boundari": [0, 5, 7, 8, 17, 18, 19, 20, 26, 28, 29, 58, 66, 79, 80, 87, 93, 97, 105, 124, 137, 152, 157, 179, 198, 205, 206, 229, 255, 256, 258, 259, 260, 263, 271, 293, 296, 319, 323, 325, 333, 334, 335, 337, 341, 343, 352, 379, 393, 394, 396, 398, 399, 400, 401, 404, 406, 432, 438], "boundary_valu": 134, "boundarycondit": 0, "boundarynorm": 319, "box": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 317, 377], "branch": [370, 371, 376], "break": [0, 427, 429], "breviti": 391, "brief": 439, "bring": 424, "broadcast": [5, 385, 391, 438], "broader": 428, "broken": 0, "brook": 194, "brought": 439, "brows": 374, "btn": [0, 377, 378, 379, 380, 381, 382], "budget": [0, 5, 6, 11, 77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 139, 141, 146, 151, 152, 157, 179, 180, 184, 194, 198, 205, 206, 207, 209, 254, 335, 337, 341, 343, 345, 349, 350, 351, 352, 358, 401, 413, 423, 428], "budget_fil": [0, 151], "budget_fileout": 194, "budgetbinfil": 118, "budgetcsv_fileout": 194, "budgetcsvfil": [118, 404], "budgetzon": 5, "bug": [0, 371], "bui": 78, "build": [0, 376, 383, 386, 389, 397, 400, 401, 402, 403, 406, 427, 428, 437, 439, 440], "buildag": [401, 404, 432, 437], "builder": 370, "built": 417, "bulk": [118, 132, 399], "bulk_dens": [118, 132, 218, 399, 437], "bundl": 431, "buoyanc": [0, 393], "burden": 396, "burn": [269, 279, 288], "busi": 66, "button": [376, 403], "by_conduct": [256, 438], "by_corrected_transmiss": [256, 260, 277, 438], "by_crosscut_thick": [256, 438], "by_crosscut_transmiss": [256, 438], "by_layer_thick": [256, 438], "by_layer_transmiss": [256, 260, 275, 438], "bypass": [26, 372], "byte": [0, 209, 394, 431, 435, 437], "c": [0, 4, 25, 29, 135, 290, 354, 357, 372, 377, 378, 379, 380, 381, 382, 385, 399, 401, 404, 427, 432, 437, 438], "c0": [267, 269], "c1": [78, 267], "c2": 78, "c_leakag": 359, "c_radial": 359, "ca0020": 327, "cach": [0, 397, 437], "calcul": [0, 3, 5, 8, 11, 12, 21, 74, 78, 80, 103, 112, 114, 117, 146, 152, 166, 169, 173, 174, 180, 184, 193, 194, 269, 333, 334, 343, 345, 346, 349, 350, 351, 355, 357, 401, 408, 428, 433, 439], "calculate_gxg": [0, 359, 423], "calculate_gxg_point": 0, "calendar": [50, 140, 207, 208, 401, 427], "calibr": [26, 249], "call": [0, 26, 45, 77, 78, 85, 88, 92, 96, 98, 102, 107, 112, 114, 117, 123, 127, 128, 129, 135, 138, 139, 140, 141, 143, 150, 156, 158, 162, 166, 169, 173, 174, 183, 188, 197, 199, 201, 202, 203, 257, 258, 261, 269, 313, 317, 320, 329, 330, 354, 370, 371, 372, 385, 391, 401, 408, 419, 422, 423, 427, 435, 437, 439], "callabl": [63, 64, 291, 292], "calss": [27, 348], "camera": 317, "camera_posit": 317, "campbel": 380, "can": [0, 5, 8, 11, 12, 13, 14, 17, 21, 25, 26, 27, 39, 41, 42, 45, 47, 54, 59, 66, 77, 78, 80, 82, 83, 85, 87, 90, 92, 93, 96, 97, 100, 102, 103, 104, 108, 109, 111, 113, 115, 118, 119, 121, 123, 124, 126, 128, 129, 131, 135, 136, 137, 146, 148, 150, 151, 152, 154, 156, 157, 160, 162, 163, 164, 167, 170, 174, 180, 183, 184, 186, 188, 189, 191, 192, 197, 198, 202, 203, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 237, 239, 245, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 275, 277, 278, 279, 285, 286, 294, 295, 298, 314, 317, 319, 320, 323, 324, 326, 329, 330, 331, 334, 335, 348, 354, 355, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 388, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 406, 408, 409, 413, 417, 418, 419, 420, 422, 423, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439], "canal": 432, "cannot": [39, 50, 127, 146, 174, 201, 237, 275, 277, 423, 427, 435, 436, 437], "cap": [0, 26, 126, 227, 229, 232, 239, 244, 246, 248, 250, 423], "capabl": [174, 440], "capac": [26, 126, 132, 224, 231, 237, 251, 252], "capillari": [194, 249, 426], "captur": [429, 435], "care": [30, 32, 184, 298, 423, 435, 437], "carri": [396, 427, 437, 439], "cartesian": [21, 290], "cartodb": 323, "case": [0, 4, 5, 41, 44, 47, 49, 54, 55, 82, 83, 124, 127, 138, 141, 146, 174, 194, 198, 201, 258, 278, 290, 311, 314, 320, 355, 371, 375, 380, 385, 391, 393, 394, 395, 396, 399, 401, 408, 411, 426, 427, 429, 431, 435, 436, 437, 439], "cat": 47, "catch": 0, "categori": [427, 432], "caus": [0, 27, 146, 245, 249, 270, 271, 272, 329, 330, 343, 348, 355, 396, 401, 404, 411, 423, 437, 439], "caveat": 437, "cbar": 323, "cbc": [0, 139, 151, 194, 207, 209, 394], "cbc_content": 207, "cbc_grid": 394, "cbc_path": [207, 209], "cclose": [342, 347, 377, 378, 379, 380, 381, 382], "cd": [163, 359, 377, 378, 379, 380, 381, 382, 385, 427, 429], "cdist": 0, "cell": [0, 4, 5, 7, 8, 11, 12, 16, 18, 26, 27, 29, 31, 36, 74, 76, 77, 80, 84, 91, 93, 95, 97, 101, 103, 106, 110, 112, 114, 117, 119, 122, 124, 126, 127, 128, 130, 139, 144, 146, 149, 151, 152, 155, 161, 163, 166, 169, 173, 174, 180, 182, 184, 186, 187, 189, 194, 198, 201, 202, 204, 206, 207, 209, 225, 226, 227, 239, 247, 248, 252, 255, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 280, 281, 282, 283, 289, 291, 293, 301, 304, 305, 306, 307, 317, 318, 319, 320, 324, 328, 329, 330, 331, 332, 333, 334, 336, 337, 343, 346, 347, 348, 349, 350, 351, 352, 357, 358, 374, 377, 378, 379, 380, 381, 382, 385, 394, 396, 397, 398, 401, 404, 408, 420, 424, 431, 432, 434, 437, 439, 440], "cell2d": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 197, 203, 206], "cell_averag": 146, "cell_max_nparticl": [329, 330], "cell_min_nparticl": [329, 330], "cell_overlap": 258, "cellcentr": 397, "cellfac": 76, "cellid": [107, 130, 204], "cellsiz": [0, 9, 10, 13, 14, 26, 191, 267, 269, 279, 290, 291, 292, 294, 413, 422], "celltabl": [0, 289, 359], "center": [74, 146, 279, 377, 394, 396, 398, 400, 401, 404], "centimet": 26, "centr": [4, 396, 399, 401, 438], "central": [74, 328, 357, 380], "centroid": [409, 437], "centroidloc": [397, 437], "certain": [0, 5, 18, 29, 37, 333, 337, 352, 408, 427, 429], "cf": 394, "cftime": [0, 36, 41, 42, 54, 358, 417], "cftimeindex": 0, "cg": [174, 394, 398, 400, 401, 404, 406], "cghb": 341, "chanc": 320, "chang": [17, 27, 30, 45, 146, 174, 180, 184, 205, 206, 227, 248, 302, 308, 317, 335, 336, 343, 346, 348, 357, 371, 372, 373, 376, 385, 399, 401, 411, 426, 427, 429, 436, 439, 440], "changelog": [359, 376], "chani": 343, "channel": [427, 429], "character": [398, 400, 404], "characterist": [3, 111, 164, 174, 224, 329, 330, 331], "chart": 391, "chd": [80, 82, 83, 210, 385, 394, 398, 399, 400, 404, 406, 423, 436, 437], "chd_chd": 394, "chd_clip": 394, "chd_concentr": 406, "chd_data": 436, "chd_field": 406, "chd_locat": [394, 396, 400], "chd_time": 436, "cheatsheet": 371, "check": [0, 8, 24, 139, 174, 207, 227, 248, 297, 317, 328, 329, 330, 331, 332, 353, 371, 393, 401, 419, 420, 431, 437, 439], "checkout": 370, "chemic": [334, 406], "choco": 372, "chocolatei": 372, "chocolateyusewindowscompress": 372, "choic": [321, 427, 438], "choleski": [27, 342], "choos": [0, 13, 14, 237, 316, 319, 323], "chosen": [146, 262, 263, 264, 265, 278, 326, 329, 330, 355, 372, 406, 437, 438], "chunk": [0, 258, 394, 417, 431, 437], "chunksiz": [269, 291, 292, 394, 431, 437], "chunktyp": [394, 431, 437], "chunkwis": [0, 269], "ci": [163, 370, 372], "cim": 118, "cimfil": 118, "cinact": 334, "circl": [39, 400, 403, 405, 430], "circle_partit": [395, 405, 430], "circle_transport": [396, 405, 430], "circular": [394, 395, 396], "clai": [266, 426], "clarif": 371, "class": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 57, 58, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 92, 93, 96, 97, 102, 103, 108, 111, 113, 115, 118, 119, 123, 124, 129, 131, 132, 133, 146, 150, 151, 152, 156, 157, 162, 164, 167, 170, 174, 178, 180, 183, 184, 188, 189, 192, 193, 194, 195, 197, 198, 203, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 238, 242, 243, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 394, 397, 398], "classic": [377, 379], "classmethod": [82, 83, 90, 100, 105, 121, 126, 127, 137, 148, 154, 160, 163, 172, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 252], "clean": [0, 88, 98, 158, 199, 270, 271, 272, 273, 371, 373], "cleaned_d": 439, "cleanup": [0, 423, 430, 440, 441], "cleanup_drn": [0, 88, 359, 423], "cleanup_ghb": [0, 98, 359, 423], "cleanup_riv": [0, 158, 359, 423, 439], "cleanup_wel": [0, 199, 359, 423], "clement": 377, "clemept": 377, "cli": 372, "cli_secret": 372, "click": [372, 403], "clip": [0, 81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 273, 394, 401, 423, 437], "clip_box": [0, 394, 423, 437], "clip_by_grid": 0, "clipped_half_simulation_constant_head": 394, "clockwis": 146, "clone": [370, 427, 429], "close": [119, 284, 408, 427], "closer": 431, "closur": [174, 284], "cm": [26, 194, 229, 323], "cmap": [317, 319, 321, 393, 396, 408, 413], "cmd": 372, "coarsen": 0, "coarser": [226, 247, 437], "code": [0, 26, 124, 198, 205, 206, 269, 311, 355, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "coeffici": [26, 30, 32, 86, 118, 132, 146, 174, 184, 231, 336, 399], "coerc": 0, "col_index": [269, 289], "colleagu": [427, 439], "colleagues_river_data": 439, "collect": [25, 51, 135, 209, 269, 354, 377, 378, 380, 381, 382, 393, 397, 398, 400, 401, 404, 406, 409, 427, 428, 431, 438], "collis": 50, "colloqui": 427, "color": [319, 321, 323, 325, 327, 394, 409, 413, 415, 437], "colorbar": [319, 323, 415], "colorbrewer2": [319, 323], "colormap": [319, 323], "column": [0, 5, 9, 10, 11, 12, 13, 14, 26, 39, 45, 47, 48, 49, 107, 118, 146, 205, 235, 266, 269, 273, 279, 288, 289, 291, 292, 343, 349, 350, 378, 380, 381, 385, 397, 398, 400, 401, 404, 406, 408, 417, 419, 420, 431, 432], "column_a": 291, "column_b": 291, "column_name_in_geodatafram": [419, 420], "column_name_in_vector_data": [419, 420], "com": [0, 41, 54, 163, 372, 427, 429], "comand": [377, 378, 379, 380, 381, 382, 385], "combin": [0, 8, 34, 35, 41, 42, 43, 45, 54, 126, 146, 252, 393, 396, 397, 401, 426, 431, 433], "combine_first": 401, "come": [0, 76, 374, 396, 401, 406, 419, 420, 427, 431, 432, 433, 440], "comma": [0, 118], "command": [370, 373, 377, 378, 379, 380, 381, 382, 385, 419, 422, 427, 429, 431], "comment": [0, 374], "commerci": [427, 429], "commit": [372, 374], "common": [33, 146, 270, 271, 272, 273, 278, 311, 313, 333, 426, 431, 439], "commonli": [174, 388, 426, 429, 431], "commun": [0, 194, 372, 375, 427, 429, 439], "compani": 429, "compar": [0, 29, 42, 127, 174, 201, 401, 402, 426, 431, 437, 438], "comparison": [402, 428, 439], "compat": [119, 313, 345, 424], "compil": [41, 42, 54, 257, 258, 261, 427], "complain": 379, "complenetess": 376, "complet": [0, 55, 375, 427, 439], "complex": [385, 417, 424, 427], "compli": [0, 439], "compliant": [0, 104, 109, 136, 310, 418, 419], "complic": [45, 127, 201, 427], "compon": [0, 6, 9, 10, 13, 14, 146, 324], "componenti": 395, "compos": [44, 55], "composit": 0, "compress": 426, "comput": [0, 5, 6, 11, 12, 27, 41, 54, 80, 87, 90, 93, 97, 100, 112, 114, 117, 124, 139, 146, 152, 157, 163, 166, 169, 173, 174, 198, 205, 206, 207, 229, 253, 256, 258, 267, 269, 291, 292, 329, 330, 357, 385, 394, 395, 396, 399, 400, 401, 406, 409, 413, 417, 419, 420, 423, 426, 427, 429, 431, 436, 437, 438], "computation": [329, 330, 331], "conc": [377, 378, 379, 380, 381, 382, 393, 406], "concat": 401, "concaten": [138, 141, 232, 246, 396, 401], "concentr": [0, 74, 76, 78, 79, 80, 87, 93, 97, 118, 119, 124, 138, 141, 151, 152, 157, 179, 198, 205, 206, 210, 213, 216, 220, 221, 270, 271, 272, 317, 329, 330, 331, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 347, 349, 350, 351, 352, 356, 357, 358, 377, 378, 380, 381, 382, 393, 396, 399, 406, 437], "concentration_boundary_typ": [80, 87, 93, 97, 124, 152, 157, 178, 198, 205, 206, 393, 406], "concentration_fil": [0, 151], "concentration_l1": 0, "concept": [401, 426, 435], "conceptu": [377, 378, 379, 380, 382], "concis": 417, "concret": 435, "cond": [20, 29, 87, 97, 316, 341], "cond_d": 163, "cond_drn": 163, "cond_riv": 163, "conda": [0, 376, 417, 427], "condens": 254, "condiat": 393, "condit": [0, 5, 8, 19, 27, 28, 32, 84, 91, 95, 101, 105, 119, 122, 137, 146, 149, 155, 161, 174, 179, 182, 184, 187, 235, 236, 316, 334, 379, 393, 394, 396, 398, 400, 404, 406, 438], "condition1": [419, 420], "condition2": [419, 420], "conduct": [0, 18, 20, 21, 23, 26, 29, 34, 35, 51, 87, 90, 97, 100, 105, 107, 112, 114, 117, 124, 127, 130, 137, 146, 157, 160, 163, 166, 169, 173, 194, 198, 201, 204, 213, 216, 221, 249, 256, 258, 260, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 337, 341, 343, 352, 357, 380, 385, 393, 394, 396, 397, 398, 400, 419, 420, 422, 423, 426, 431, 439], "conductances_distribut": [275, 277], "conductivity_factor": 26, "config": 56, "config_run": [0, 385], "configur": [0, 56, 424, 426, 437], "confin": [15, 32, 130, 146, 180, 184, 186, 204, 333, 343, 398, 401, 426], "confirm": [403, 425], "confus": 426, "confusingli": 0, "conjug": [27, 174, 342, 348, 355], "conjunct": [174, 317], "connect": [0, 74, 103, 139, 146, 189, 207, 225, 226, 247, 372, 432, 434], "connection_length": 404, "connection_width": 404, "connectiondata": 146, "connectiontyp": 404, "consecut": 357, "consequ": [191, 391, 401, 408, 424, 427], "conserv": [27, 330, 357], "consid": [5, 44, 55, 66, 205, 206, 270, 271, 272, 320, 329, 330, 331, 334, 336, 371, 401, 408, 413, 427, 437], "consider": [0, 426, 435], "consist": [0, 44, 55, 74, 174, 238, 385, 394, 396, 398, 399, 404, 408, 427, 431, 432, 437, 439], "consistenli": 0, "consol": 372, "constant": [0, 16, 17, 51, 77, 79, 80, 82, 83, 126, 127, 146, 194, 201, 252, 301, 317, 318, 333, 334, 335, 343, 355, 356, 377, 378, 379, 380, 381, 382, 385, 393, 394, 397, 398, 399, 400, 404, 406, 419, 420, 422, 423, 426, 434, 436, 437, 438], "constant_conc": 399, "constant_concentr": 396, "constant_head": [394, 396, 398, 399, 400, 404], "constantconcentr": 334, "constanthead": [0, 210, 385, 394, 398, 399, 400, 401, 404, 406, 423, 436, 437], "constantheadregridmethod": [0, 82, 83], "constraint": [11, 12, 328, 329, 330, 331, 332, 437], "constrast": 435, "construct": [0, 41, 54, 82, 83, 90, 100, 121, 148, 154, 160, 186, 191, 227, 229, 232, 239, 244, 246, 248, 250, 285, 286, 295, 320, 391, 406, 438], "constructor": [0, 74, 75, 76, 317, 401, 404, 437], "consum": [419, 420, 440], "conta": [48, 394, 398], "contact": [393, 439], "contain": [0, 3, 6, 7, 8, 11, 12, 26, 45, 46, 47, 48, 49, 78, 105, 126, 137, 139, 141, 142, 144, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 238, 242, 243, 247, 251, 252, 255, 256, 259, 260, 262, 263, 264, 265, 266, 269, 275, 277, 278, 290, 317, 319, 323, 324, 326, 327, 343, 372, 375, 385, 391, 393, 394, 400, 401, 402, 408, 413, 414, 426, 429, 431, 432, 433, 437, 438, 439], "contamin": 406, "content": [0, 47, 50, 51, 139, 194, 207, 249], "context": [0, 302, 309, 372], "contextili": [0, 323, 415], "contextmanag": 309, "continu": [66, 174, 311, 357, 371, 406, 431, 433], "contour": [13, 14, 326, 393, 396, 398, 404, 406, 413], "contourf": [393, 395, 396, 398, 404, 406], "contrast": [427, 435], "contribut": [375, 437], "control": [0, 5, 27, 77, 78, 79, 80, 86, 87, 93, 97, 103, 105, 108, 118, 124, 131, 132, 137, 139, 146, 151, 152, 157, 174, 179, 180, 184, 193, 194, 198, 205, 206, 207, 239, 254, 278, 298, 323, 329, 343, 345, 385, 393, 404, 428, 429], "convect": 377, "conveni": [0, 269, 388, 396, 409, 410, 417, 419, 420, 431, 433, 437, 439], "convent": [41, 42, 43, 44, 54, 55, 314, 394, 431], "converg": [27, 174, 329, 330, 342, 346, 347, 348, 357, 393, 404, 426], "convers": [0, 126, 138, 139, 140, 141, 207, 208, 252], "convert": [0, 4, 26, 39, 45, 80, 103, 104, 107, 109, 124, 127, 130, 136, 138, 139, 140, 141, 146, 151, 160, 180, 184, 191, 198, 201, 204, 207, 208, 222, 223, 229, 313, 314, 334, 341, 343, 352, 391, 393, 394, 396, 398, 399, 400, 401, 404, 406, 409, 420, 422, 423, 426, 437], "convert_pointwaterhead_freshwaterhead": 359, "convert_to_disv": 0, "convolut": [419, 420], "convolv": [419, 420], "coo": 269, "coolei": 174, "cooordin": 400, "cooper": 435, "coord": [0, 78, 85, 92, 96, 102, 123, 124, 129, 150, 151, 156, 162, 183, 188, 197, 198, 203, 290, 297, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 399, 400, 404, 406, 436, 438], "coord_refer": [0, 359], "coordin": [0, 7, 9, 10, 13, 14, 36, 41, 44, 50, 78, 124, 140, 146, 180, 189, 198, 200, 207, 208, 224, 228, 231, 242, 245, 249, 251, 258, 261, 269, 278, 288, 290, 291, 294, 295, 297, 298, 299, 300, 303, 304, 305, 306, 307, 312, 315, 319, 320, 322, 324, 326, 346, 347, 358, 385, 391, 394, 397, 400, 401, 408, 411, 413, 417, 419, 420, 432, 433, 436, 437, 438, 439], "copi": [0, 142, 236, 243, 385, 394, 396, 400, 401, 429, 438, 439], "copyfil": 0, "core": [0, 82, 83, 90, 100, 121, 148, 154, 160, 186, 191, 269, 291, 292, 372, 429, 435], "corei": 194, "corner": 432, "correct": [0, 61, 68, 70, 72, 256, 267, 290, 357, 372, 401, 438, 439], "correct_water_t": 357, "correctli": [0, 66, 417], "correpsond": [140, 207, 208], "correspond": [0, 146, 200, 249, 336, 357, 370, 385, 401, 408, 431], "cost": 374, "costli": 397, "could": [0, 27, 105, 194, 348, 374, 375, 408, 432], "couldn": 429, "count": [269, 437], "counter": [146, 437], "coupl": [0, 146, 229, 245, 357, 389, 392, 401, 423, 430], "coupler": [0, 359], "couplermap": [359, 423], "couplingmap": 0, "courant": [328, 329, 330, 331, 332, 355, 377, 378, 379, 380, 381, 382, 437], "cover": [224, 375], "coverag": 371, "cpg": 432, "cpt": [47, 49], "cpu": 435, "cpython": 427, "cr": [0, 104, 109, 136, 290, 294, 295, 310, 323, 411, 432], "crash": 0, "creat": [0, 44, 45, 47, 55, 83, 85, 92, 96, 102, 103, 104, 108, 109, 123, 124, 126, 127, 129, 135, 142, 150, 151, 156, 162, 179, 183, 188, 192, 197, 198, 201, 203, 237, 254, 269, 274, 285, 286, 290, 297, 304, 305, 306, 307, 319, 324, 346, 347, 371, 372, 373, 376, 377, 378, 379, 380, 382, 385, 393, 395, 397, 399, 400, 401, 406, 409, 410, 411, 413, 415, 417, 423, 426, 427, 429, 431, 435, 436, 437, 438], "create_circle_simul": [395, 400], "create_layered_top": [359, 393], "create_time_discret": [0, 24, 127, 137, 201, 353, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 398, 399, 400, 401, 404, 406, 436], "create_transport_model": 399, "create_twri_simul": [397, 400], "creation": [0, 82, 386, 387, 430], "credenti": 372, "criter": 284, "criteria": [174, 355, 408], "criterion": [0, 27, 174, 342, 346, 347, 348, 439], "critic": [61, 66, 68, 70, 72, 329, 427], "cross": [0, 9, 10, 13, 14, 21, 294, 295, 319, 324, 326, 329, 330, 342, 359, 377, 378, 379, 380, 382, 413, 414, 423, 428, 431, 438, 440], "cross_sect": [0, 295, 324, 359, 413, 423, 438], "cross_section_lin": [319, 359, 413], "cross_section_linestr": [319, 359, 438], "crosscut": [256, 438], "crossect": 396, "crosssect": 438, "crucial": 437, "crunch": 427, "csv": [118, 174, 194, 254, 408, 433], "csv_output": [0, 174], "ctx": [323, 415], "cube": [118, 132, 174], "cubic": [5, 11, 27, 290, 346, 348], "cubic_splin": 290, "cumsum": 385, "cumul": 385, "current": [0, 26, 136, 151, 174, 245, 334, 355, 391, 427, 428, 435], "curv": 237, "custom": [0, 41, 42, 44, 54, 55, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 320, 415, 437], "cuthil": 174, "cyclic": [0, 174], "d": [0, 4, 6, 9, 10, 13, 14, 22, 25, 26, 41, 44, 54, 55, 56, 135, 138, 139, 140, 141, 207, 208, 237, 242, 267, 268, 294, 317, 327, 349, 350, 351, 354, 357, 375, 379, 382, 385, 391, 393, 394, 399, 401, 413, 417, 418, 419, 420, 427, 438], "da": [0, 41, 44, 54, 55, 278, 287, 297, 298, 299, 300, 301, 314, 317, 318, 319, 320, 321, 326, 401, 418, 419, 420], "da1": [419, 420], "da2": [419, 420], "da3": [419, 420], "da_coord": 303, "da_firstlay": [419, 420], "da_gdal": [418, 419], "da_kd": [419, 420], "da_layer1": [419, 420], "da_select": [419, 420], "da_with_gap": [419, 420], "dai": [3, 5, 11, 19, 26, 28, 140, 207, 208, 232, 237, 245, 251, 253, 336, 401, 406], "daili": [253, 401, 419, 420], "damp": [27, 174, 348, 377, 378, 379, 380, 381, 382], "damp_transi": 27, "dan": [419, 420], "darci": 146, "darcian": 0, "dash": [44, 55], "dask": [0, 298, 309, 394, 417, 428, 429, 431, 435, 437], "dat": 118, "data": [0, 25, 27, 41, 45, 47, 48, 49, 50, 54, 80, 82, 83, 85, 87, 90, 92, 93, 96, 97, 100, 102, 104, 105, 109, 111, 113, 115, 118, 121, 123, 124, 126, 127, 129, 135, 136, 137, 138, 139, 140, 141, 146, 148, 150, 151, 152, 154, 156, 157, 160, 162, 164, 167, 170, 183, 186, 188, 191, 192, 197, 198, 201, 203, 205, 207, 208, 209, 225, 226, 227, 228, 229, 231, 232, 238, 239, 242, 243, 244, 246, 247, 248, 250, 252, 261, 269, 270, 271, 272, 279, 284, 285, 286, 288, 290, 291, 292, 294, 295, 297, 298, 301, 314, 317, 318, 319, 324, 326, 327, 333, 337, 345, 346, 348, 354, 377, 378, 379, 380, 381, 382, 385, 388, 391, 393, 394, 396, 400, 402, 404, 406, 407, 408, 409, 410, 412, 413, 415, 422, 423, 427, 428, 429, 430, 434, 435, 436, 437, 440, 441], "data_var": 8, "dataarai": [5, 237], "dataarrai": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 50, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 224, 226, 228, 231, 237, 242, 245, 247, 249, 251, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 315, 316, 317, 319, 320, 322, 323, 324, 326, 333, 334, 335, 337, 341, 343, 344, 346, 347, 349, 350, 351, 352, 356, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 399, 400, 401, 406, 411, 413, 420, 431, 435, 436, 437, 438, 439], "dataarrayi": [401, 437], "dataarraylay": [385, 431, 438], "dataarraytim": [385, 401], "databas": [0, 238, 249, 439], "dataclass": [82, 83, 90, 100, 121, 148, 154, 160, 186, 191, 229, 437], "datafram": [0, 12, 45, 46, 47, 48, 49, 50, 111, 113, 115, 127, 164, 167, 170, 194, 201, 266, 269, 273, 289, 291, 292, 327, 346, 347, 379, 380, 382, 385, 391, 401, 419, 420, 422, 432, 433, 437], "dataframegroupbi": [291, 292], "datarrai": [7, 19, 319], "dataset": [0, 3, 6, 8, 11, 12, 41, 54, 105, 126, 127, 137, 139, 141, 201, 207, 252, 261, 294, 295, 308, 310, 314, 316, 391, 394, 395, 396, 401, 417, 431, 432, 435, 436, 437, 438, 439], "datasetdimens": [391, 431, 436, 437, 438, 439], "datatyp": 269, "date": [0, 3, 25, 41, 42, 44, 50, 54, 55, 135, 140, 207, 208, 354, 385, 427], "date_rang": [124, 198, 379, 385, 396, 419, 420], "datecolumn": 327, "daterang": [25, 354], "datetim": [0, 25, 36, 80, 81, 87, 89, 90, 93, 94, 97, 99, 100, 105, 116, 120, 124, 125, 127, 134, 135, 137, 140, 147, 152, 153, 157, 159, 160, 165, 168, 171, 181, 185, 190, 196, 198, 200, 201, 205, 207, 208, 239, 310, 313, 354, 358, 401, 404, 437], "datetime64": [0, 36, 41, 42, 54, 81, 89, 94, 99, 116, 120, 125, 134, 138, 139, 140, 141, 147, 151, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 207, 208, 305, 307, 358, 385, 401, 404, 413, 436, 437], "datetimeindex": [385, 401, 436, 437], "datetimeprolepticgregorian": [0, 41, 42, 54], "datimeprolepticgregorian": 0, "datum": 3, "day_of_year": 224, "dbd": 174, "dbf": 432, "dcep": [329, 330, 331], "dchmoc": 329, "dconcentration_epsilon": [329, 330, 331], "dconcentration_hybrid": 329, "deactiv": [86, 127, 174, 201, 232, 270, 271, 272, 439], "deal": [0, 258, 261, 388, 417, 419, 422, 424, 427, 438, 440], "dear": 439, "debug": [0, 61, 63, 64, 66, 68, 70, 72, 107, 346, 347, 372], "dec": 401, "decai": [118, 132, 218, 399, 437], "decay_sorb": [118, 132, 218, 399, 437], "decid": [44, 55], "decim": 334, "declin": [32, 184], "declxml": 0, "decomposit": 174, "decor": [61, 63, 64, 68, 70, 72], "decreas": [0, 174, 438], "dedic": 397, "deep": [26, 438], "deepcopi": 0, "deeper": 438, "deepest": 438, "def": [258, 261, 399, 400, 401, 435, 437], "default": [0, 3, 6, 8, 11, 12, 22, 24, 26, 27, 39, 41, 42, 44, 47, 48, 49, 54, 55, 56, 58, 59, 72, 77, 78, 79, 80, 82, 83, 85, 86, 87, 90, 92, 93, 96, 97, 100, 102, 103, 104, 107, 109, 118, 119, 121, 123, 124, 129, 130, 131, 132, 136, 138, 139, 140, 141, 143, 146, 148, 150, 151, 152, 154, 156, 157, 160, 162, 163, 174, 179, 180, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 197, 198, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 256, 257, 258, 259, 260, 261, 266, 269, 278, 279, 288, 290, 298, 299, 300, 301, 316, 317, 319, 320, 323, 328, 330, 331, 333, 334, 335, 336, 337, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 370, 373, 396, 397, 401, 413, 419, 420, 426, 429, 432], "defer": [24, 353], "defin": [0, 5, 11, 12, 13, 14, 21, 22, 25, 29, 34, 41, 42, 44, 54, 55, 82, 83, 85, 92, 96, 102, 123, 126, 127, 129, 135, 144, 146, 150, 156, 162, 174, 183, 188, 192, 194, 197, 201, 203, 249, 252, 258, 264, 291, 292, 297, 298, 314, 334, 336, 343, 350, 354, 370, 372, 377, 378, 379, 380, 381, 382, 391, 393, 394, 396, 398, 400, 401, 404, 406, 408, 413, 415, 423, 427, 431, 432, 435, 437, 438, 439], "definin": 437, "definit": [0, 104, 109, 136, 334, 406], "deflat": 346, "degre": [21, 146, 174], "del": 372, "delai": [0, 309, 429], "delc": 406, "delet": [205, 206, 429], "delim_whitespac": [45, 46], "delimet": 0, "delimit": 0, "delr": 406, "delta": [11, 12, 174, 401], "delta_z": 400, "deltar": [0, 163, 370, 372, 376, 377, 378, 379, 380, 381, 382, 385, 427, 428, 429, 437], "deltares_email": 372, "delz": 406, "dem": 320, "demand": [0, 237, 329, 330, 331], "demonstr": [377, 379, 381, 382, 383, 386, 388, 389, 401, 403, 407, 417, 431, 436, 438, 440], "denot": [0, 21], "dens": [138, 139, 140, 141, 207, 208, 401], "densemax": 357, "densemin": 357, "denseref": 357, "denseslp": 357, "densiti": [0, 4, 78, 118, 132, 341, 352, 357, 377, 380, 393, 396, 399, 428, 437], "density_concentration_slop": [78, 357, 377, 378, 379, 380, 381, 382, 393, 396], "density_criterion": 357, "density_fresh": 4, "density_max": 357, "density_min": 357, "density_ref": 357, "density_speci": 357, "densityfil": 78, "depenc": 427, "depend": [0, 18, 20, 29, 87, 97, 107, 126, 127, 145, 174, 192, 194, 201, 252, 269, 329, 330, 337, 341, 352, 355, 377, 401, 404, 419, 422, 424, 428, 435, 436, 437], "deploi": 376, "deprec": [205, 206], "deprecationwarn": 0, "depress": 194, "depth": [0, 19, 26, 61, 68, 70, 72, 93, 107, 194, 200, 215, 228, 229, 245, 246, 249, 275, 277, 375, 408, 432, 437, 438], "depth_perched_water_t": 249, "deriv": [0, 163, 179, 189, 396, 408], "descend": [0, 419, 420], "describ": [111, 113, 115, 139, 146, 164, 167, 170, 174, 200, 207, 226, 228, 230, 231, 245, 247, 249, 251, 269, 393, 394, 396, 398, 401, 404, 426, 428, 436, 437, 438], "descript": [174, 254, 375, 382, 398, 425, 438], "design": [0, 9, 10, 13, 14, 41, 54, 80, 146, 280, 281, 282, 283, 294, 295, 417, 427, 431], "desir": [44, 55, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203, 284, 290, 329, 330, 355, 399], "desktop": 372, "despit": 433, "destin": [419, 420], "detail": [0, 25, 27, 88, 98, 135, 158, 199, 348, 354, 375, 382, 401, 403, 423, 425, 431, 438], "detect": [0, 299, 300], "determin": [25, 130, 135, 146, 151, 194, 204, 229, 269, 326, 334, 337, 343, 354, 357, 393, 401, 436, 437], "dev": [0, 258, 261], "devault": [346, 347], "develop": [0, 26, 194, 258, 261, 379, 381, 417, 419, 422, 428], "dewat": [146, 398, 399, 400, 401, 404, 437], "df": [45, 47, 48, 49, 269, 292, 327, 391, 418, 419, 420, 422], "di": [0, 82, 83, 88, 90, 98, 100, 131, 138, 139, 140, 141, 146, 154, 158, 160, 199, 205, 207, 208, 211, 393, 397, 398, 399, 400, 404, 406, 428, 437, 439], "diagon": [5, 78, 174, 385], "dict": [8, 42, 45, 46, 47, 49, 50, 51, 52, 82, 83, 90, 100, 105, 121, 126, 127, 134, 137, 139, 141, 148, 154, 160, 172, 186, 191, 201, 207, 209, 238, 239, 240, 252, 270, 271, 272, 279, 290, 298, 317, 319, 323, 324, 326], "dictionari": [0, 40, 42, 45, 46, 47, 49, 50, 51, 80, 82, 83, 85, 87, 90, 92, 93, 96, 97, 100, 102, 105, 121, 123, 124, 126, 129, 137, 148, 150, 152, 154, 156, 157, 160, 162, 183, 186, 188, 191, 192, 197, 198, 203, 205, 209, 239, 252, 298, 385, 391, 394, 438, 439], "did": [0, 439], "diff": [402, 406, 439], "diff_for_plot": 402, "diff_riv_bot": 439, "diff_stag": 439, "diffc": 86, "differ": [0, 4, 20, 27, 35, 41, 45, 54, 83, 85, 90, 92, 96, 100, 102, 105, 121, 123, 126, 127, 129, 137, 144, 146, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 201, 203, 228, 231, 245, 249, 252, 259, 260, 261, 290, 316, 328, 329, 330, 331, 332, 334, 341, 348, 355, 357, 370, 377, 378, 379, 380, 381, 382, 391, 393, 399, 401, 402, 403, 405, 406, 408, 410, 419, 422, 423, 427, 429, 430, 431, 436, 437, 438, 439], "different_ways_to_regrid_model": [397, 405, 430], "difficult": [0, 401], "diffus": [86, 336, 396, 399, 437], "diffusion_coeffici": [86, 212, 336, 377, 378, 379, 380, 381, 382, 393, 396, 399, 406, 437], "digit": [44, 55, 118], "dim": [0, 18, 19, 20, 23, 28, 29, 30, 32, 34, 35, 124, 151, 198, 278, 284, 290, 291, 297, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 406, 419, 420, 435, 436, 439], "dimens": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 26, 33, 44, 55, 80, 87, 93, 97, 118, 124, 127, 132, 138, 139, 141, 152, 157, 179, 198, 201, 205, 207, 227, 232, 248, 255, 258, 262, 263, 264, 265, 269, 274, 275, 277, 278, 285, 286, 290, 291, 292, 293, 294, 295, 296, 298, 310, 314, 316, 317, 319, 320, 324, 326, 333, 385, 391, 394, 401, 406, 413, 417, 419, 420, 422, 427, 435, 436, 437, 438, 439], "dimension": [0, 5, 9, 10, 13, 14, 26, 128, 202, 281, 294, 295, 319, 320, 324, 326, 329, 330, 385, 393, 398, 406, 419, 420, 431, 435], "dimensionless": [32, 93, 118, 184, 343], "dimes": [293, 296], "diminish": 332, "dinoloket": 408, "direct": [0, 5, 6, 9, 10, 11, 13, 14, 86, 107, 146, 328, 329, 330, 331, 332, 343, 344, 356, 374, 393, 396, 397, 401], "directli": [0, 3, 39, 56, 290, 295, 370, 374, 411, 417, 419, 420, 423, 426, 429, 431], "directori": [0, 42, 55, 104, 109, 136, 145, 241, 302, 321, 371, 373, 374, 385, 391, 393, 394, 396, 398, 403, 404, 427, 431, 435], "dirti": 439, "dirty_d": 439, "dis6": 189, "dis_pkg": 439, "disabl": [41, 44, 174, 245], "disappear": [127, 201], "disast": 427, "discard": 3, "discharg": [0, 12, 124, 146, 194, 198, 205, 206, 327], "discontinu": 0, "discrep": [329, 330], "discret": [0, 25, 85, 88, 92, 96, 98, 102, 105, 123, 129, 131, 135, 137, 142, 146, 150, 154, 156, 158, 162, 183, 188, 189, 192, 193, 195, 197, 199, 203, 205, 206, 229, 239, 269, 354, 359, 393, 396, 398, 399, 400, 404, 406, 423, 428, 430, 437, 439, 440, 441], "discretis": 355, "discretizationregridmethod": [0, 191], "discretizationvertic": 0, "discuss": 431, "disk": [394, 423, 427, 435], "dispers": [0, 212, 342, 377, 378, 379, 380, 381, 382, 393, 396, 399, 406, 437], "dispersionregridmethod": 0, "displac": 438, "displai": [317, 318, 372, 437], "display": 437, "dispsers": 86, "disquisit": 0, "dist_opt": 260, "distanc": [74, 146, 268], "distcoef": [118, 132, 218, 399, 437], "distinct": 323, "distort": 401, "distrcond": [256, 423], "distribut": [0, 90, 100, 105, 118, 130, 132, 137, 160, 204, 256, 260, 266, 275, 277, 329, 330, 349, 350, 351, 398, 399, 401, 423, 427, 429, 435], "distribute_drn_conduct": [0, 359, 423], "distribute_ghb_conduct": [0, 359, 423], "distribute_riv_conduct": [0, 359, 423, 438], "distributing_data": 438, "distributing_opt": [0, 90, 100, 105, 137, 160, 260, 275, 276, 277, 359, 438], "distribution_coeffici": 118, "disu": 146, "disu6": 189, "disv": [0, 138, 139, 140, 141, 195, 206, 207, 208, 394, 395, 396, 400, 428], "disv6": 189, "ditch": [0, 401, 432, 438], "diverg": [13, 14, 329, 330], "divid": [0, 194, 269, 329, 330, 426, 435], "dll": [0, 77], "dnscrit": 357, "do": [0, 41, 42, 45, 54, 119, 140, 207, 208, 245, 249, 261, 269, 270, 271, 272, 278, 290, 298, 299, 300, 370, 371, 372, 385, 400, 401, 408, 409, 417, 420, 422, 424, 427, 429, 431, 437, 438, 439], "do_something_in_doc": 302, "doc": [0, 258, 261, 291, 292, 302, 320, 373, 385, 400, 427], "docstr": [0, 374], "documen": 431, "document": [0, 88, 98, 158, 199, 311, 317, 320, 371, 374, 375, 376, 394, 396, 401, 406, 419, 420, 428, 429, 435, 437, 438], "doe": [0, 23, 27, 82, 83, 90, 100, 121, 126, 127, 148, 154, 160, 180, 184, 186, 189, 201, 226, 229, 232, 247, 252, 279, 298, 316, 333, 348, 355, 396, 399, 419, 420, 422, 426, 429, 435], "doesn": [58, 66, 70, 200, 279, 371, 379, 399, 427, 429, 431], "doi": [77, 163, 380, 382], "domain": [0, 84, 91, 95, 101, 118, 122, 128, 132, 144, 149, 155, 161, 182, 187, 202, 266, 270, 271, 272, 290, 346, 347, 378, 385, 393, 396, 397, 399, 401, 402, 408], "domin": [329, 330, 331], "don": [317, 372, 396], "done": [82, 138, 139, 140, 141, 207, 208, 227, 234, 248, 346, 347, 372, 373, 397, 401, 403, 419, 420, 426, 435, 437], "doubl": [0, 44, 397], "down": [0, 7, 11, 12, 174], "download": [24, 372, 374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "downloadstr": 372, "downscal": 437, "downsid": 435, "downward": [231, 438], "downward_resist": [0, 231], "dpi": 327, "drain": [87, 118, 255, 262, 268, 270, 275, 337, 398, 400, 401, 404, 426, 437, 438], "drain_elev": [262, 275], "drainag": [0, 139, 160, 163, 207, 213, 259, 260, 398, 400, 423, 437], "drainage_conduct": 163, "drainagepackag": 8, "drainageregridmethod": [0, 90], "draw": [0, 5, 319, 320, 324, 326, 396], "drawdown": [333, 345], "drawn": [295, 319, 324, 326], "driven": [375, 429], "driver": [0, 55, 431], "drn": [0, 8, 50, 139, 207, 209, 213, 255, 256, 259, 260, 275, 398, 400, 423, 437, 438], "drn_budget": [139, 207], "drop": [0, 8, 18, 174, 273, 337, 343, 409], "drop_allnan": 8, "drop_var": [401, 438], "dropna": 409, "drought": 237, "dry": [119, 130, 138, 140, 146, 174, 204, 208, 334, 343], "dry_nan": [138, 140, 208], "ds_flux": 413, "ds_ugrid": [418, 419], "dsp": [212, 377, 378, 379, 380, 381, 382, 393, 396, 399, 406], "dst_cr": [290, 411], "dt": [3, 11, 12], "dt0": 355, "dt_all": 8, "dt_min": 8, "dt_xyz": 11, "dtadj": 174, "dtype": [0, 44, 55, 151, 180, 269, 279, 288, 297, 299, 304, 305, 306, 307, 316, 385, 391, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 413, 431, 432, 436, 437, 438, 439], "dtypelik": [269, 288], "due": [258, 336, 393, 397, 398, 399, 404, 423, 427], "dummi": [58, 70, 409, 410, 436], "dump": [0, 321], "duplic": [0, 45, 80, 87, 93, 97, 124, 152, 157, 198, 205, 269, 398, 433, 438], "durat": [0, 140, 207, 208, 237, 393, 399, 401, 406, 436], "dure": [0, 26, 27, 36, 66, 107, 130, 174, 204, 237, 343, 346, 348, 358, 370, 437], "dutch": [3, 423], "dvc": 428, "dx": [0, 267, 279, 303, 304, 305, 306, 307, 312, 377, 378, 379, 380, 381, 382, 385, 393, 397, 398, 399, 400, 401, 404, 406, 408, 409, 410, 411, 413, 419, 420, 431, 437, 438, 439], "dx_coars": 410, "dy": [0, 267, 279, 290, 304, 305, 306, 307, 312, 377, 378, 379, 380, 381, 382, 385, 393, 397, 398, 400, 401, 404, 406, 408, 409, 410, 411, 413, 419, 420, 431, 437, 438, 439], "dy_coars": 410, "dynam": 329, "dz": [6, 7, 11, 12, 377, 378, 379, 380, 381, 382, 385, 393, 413], "e": [0, 3, 5, 25, 26, 27, 45, 46, 50, 80, 87, 93, 97, 105, 124, 135, 137, 144, 152, 157, 179, 198, 205, 209, 245, 254, 261, 269, 278, 279, 290, 291, 292, 315, 319, 320, 323, 326, 329, 330, 334, 348, 354, 355, 370, 380, 388, 391, 417, 427, 428, 429, 432, 433], "each": [0, 22, 27, 41, 42, 44, 45, 47, 51, 54, 55, 77, 79, 80, 87, 93, 97, 104, 109, 118, 124, 126, 131, 136, 146, 152, 157, 174, 179, 180, 184, 189, 194, 198, 205, 206, 224, 252, 253, 294, 295, 329, 330, 334, 336, 343, 348, 349, 350, 355, 385, 391, 396, 397, 400, 401, 406, 408, 432, 433, 435, 436, 437, 438], "eager": [24, 353, 435], "eager_da": 435, "eager_head": 435, "eager_result": 435, "eagerli": 50, "earlier": [397, 438], "eas": [0, 414], "easi": [371, 372, 429], "easier": [0, 41, 54, 396, 426, 428], "easiest": [45, 419, 420], "easili": [0, 295, 317, 318, 324, 372, 374, 391, 394, 396, 431, 432, 435, 437], "east": [5, 21, 401], "eastern": 401, "eb": 254, "echo": 108, "ecosystem": 429, "edg": [0, 4, 5, 139, 207, 377, 385, 394, 423], "edgecolor": [319, 323, 438], "edit": [0, 403], "editor": [374, 429], "edu": 377, "effect": [0, 8, 86, 112, 114, 117, 118, 132, 146, 166, 169, 173, 174, 334, 336, 344, 356, 401, 426, 437, 438], "effici": [0, 13, 14, 41, 54, 194, 279, 342, 419, 420, 427], "effort": [330, 385], "ehead": 80, "eic": 254, "either": [0, 41, 42, 47, 49, 54, 80, 118, 126, 127, 132, 174, 194, 201, 252, 293, 296, 329, 370, 426, 435, 438], "elast": 426, "elder": [383, 384, 430], "element": [26, 419, 420, 435], "elev": [0, 4, 15, 18, 19, 26, 33, 87, 93, 146, 157, 189, 213, 228, 255, 262, 265, 270, 272, 275, 277, 333, 337, 398, 400, 401, 408, 431, 437, 438, 439], "ellipsoid": [86, 146], "els": [0, 26, 399, 438], "elsewher": [329, 330, 331], "em": [13, 14], "email": 372, "embarrassingli": 435, "embed": 374, "empti": [0, 290, 298, 304, 305, 306, 307, 394, 398, 400, 408], "empty_2d": [0, 359, 408, 409, 410, 411, 419, 420, 437], "empty_2d_transi": [0, 359, 419, 420], "empty_3d": [0, 359, 419, 420], "empty_3d_transi": [0, 359, 419, 420], "emptyregridmethod": 0, "en": [30, 32, 77, 180, 184, 288, 333, 385], "enabl": [0, 371, 388, 429], "encod": [41, 42, 54, 310, 431], "encompass": 401, "encount": 26, "end": [0, 9, 10, 13, 25, 27, 63, 64, 80, 90, 100, 105, 135, 137, 160, 237, 294, 324, 329, 330, 335, 354, 377, 378, 379, 380, 381, 382, 385, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 411, 413, 415, 419, 420, 431, 432, 433, 434, 435, 436, 437, 438, 439], "end_level": [63, 64], "end_sprinkling_season": [237, 391], "endtim": [24, 353, 385, 436], "enforc": [0, 437, 438], "enforce_dim_ord": 438, "eng": 377, "enorm": 424, "enough": [124, 400], "ensur": [0, 50, 270, 271, 272, 310, 401], "enter": [5, 146, 164, 167, 170, 333, 343, 399, 403, 426], "entir": [0, 4, 107, 113, 130, 146, 204, 273, 328, 329, 330, 331, 332, 334, 391, 426, 427, 431, 435, 439], "entri": [0, 42, 50, 51, 78, 108, 124, 127, 174, 194, 198, 201, 310, 376, 394], "enu": 372, "enum": [58, 66], "enumer": [255, 256, 262, 263, 264, 265, 275, 277, 438], "env": [372, 432], "environ": [0, 143, 370, 373, 376, 381, 403, 429], "envrion": 427, "envsoft": 77, "epd": 254, "epsg": [290, 323, 411], "epsilon": 194, "eq": 4, "equal": [0, 21, 26, 27, 29, 33, 74, 76, 86, 146, 163, 174, 180, 184, 226, 247, 256, 266, 284, 329, 330, 333, 336, 343, 346, 347, 348, 355, 372, 395, 401, 426, 433, 438], "equat": [5, 27, 78, 146, 163, 174, 342, 343, 348, 357, 401, 419, 420, 422], "equidist": [0, 230, 294, 304, 305, 306, 307, 419, 420], "equilibrium": [118, 132, 233, 234], "equival": [174, 255, 256, 262, 263, 264, 265, 314, 398], "ernst": 268, "erron": [0, 145, 439], "error": [0, 26, 47, 49, 61, 66, 68, 70, 72, 80, 107, 118, 130, 132, 174, 204, 254, 258, 298, 311, 385, 396, 417, 423, 439], "escap": 372, "esp": 254, "especi": [0, 174, 391, 417, 426, 427, 429, 431, 436, 437], "espg": 0, "esri": [242, 432], "esrii": [0, 431], "essenti": [269, 427, 432], "essink": 382, "establish": [27, 146, 226, 247, 343, 346, 348], "estim": [174, 401, 426], "et": [93, 194], "et_pot": 194, "etact": 254, "etc": [0, 24, 51, 209, 314, 353, 427, 431, 435, 440], "euler": [329, 330, 331], "eulerian": [329, 330, 331], "evalu": [0, 324, 326, 359, 413, 417, 423, 428, 430, 440, 441], "evapor": [19, 224, 237, 254], "evapotranspir": [0, 194, 215, 226, 242, 254, 327, 401, 437, 438], "evapotranspiration_lay": 339, "evapotranspirationmap": [242, 243, 359, 423], "evapotranspirationregridmethod": 0, "evapotranspor": 226, "even": [0, 13, 14, 27, 127, 146, 201, 328, 329, 330, 331, 332, 333, 334, 346, 347, 426, 431, 435, 436, 437, 438], "event": 66, "eventu": [401, 404, 437], "everi": [0, 3, 5, 25, 31, 45, 51, 77, 78, 79, 80, 87, 93, 97, 103, 108, 119, 124, 131, 135, 139, 146, 152, 157, 179, 180, 184, 194, 198, 205, 206, 207, 258, 324, 329, 330, 333, 334, 336, 343, 354, 401, 406, 431, 432, 433, 434, 435, 440], "everybodi": 374, "everywher": [160, 382], "evt": [0, 93, 215, 401], "evt_ss": 401, "evt_ss_mean": 401, "evt_tran": 401, "ex": [372, 377, 378, 379, 380, 381, 382, 385, 427], "ex01": [398, 400, 404, 406], "ex01_twri": [397, 398, 400, 405, 430], "exact": [370, 399, 429], "exactli": [0, 5, 6, 11, 12, 174, 372, 431], "exampl": [0, 3, 5, 24, 25, 41, 42, 44, 45, 47, 51, 54, 55, 56, 73, 78, 85, 92, 96, 102, 111, 113, 115, 123, 124, 129, 135, 137, 138, 139, 140, 143, 146, 150, 151, 156, 162, 164, 167, 170, 183, 188, 197, 198, 203, 207, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 269, 275, 277, 278, 279, 285, 286, 288, 290, 291, 292, 295, 297, 298, 299, 300, 302, 309, 311, 317, 318, 319, 320, 323, 324, 327, 353, 354, 370, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441], "example_1d_transport": [399, 405, 430], "example_bc": 436, "example_l1": [41, 54], "example_model": [395, 397, 400, 405, 430], "example_with_tim": 45, "examplesimod": 384, "examplesimodflow": 387, "examplesmetaswap": 392, "examplesmf6": 405, "examplesprepar": 412, "examplesvisu": 416, "exce": [4, 272, 284, 328, 329, 330, 331, 332, 355, 435, 437, 439], "exceed": [7, 146, 249, 329, 330, 357, 437], "excel": [371, 433], "except": [0, 119, 250, 298, 299, 300, 311, 323, 431], "exception_typ": 311, "excess": 245, "exchang": [0, 103, 108, 146, 174], "exclud": [189, 437], "exclus": 0, "excpet": 266, "exe": 249, "execut": [0, 119, 143, 357, 374, 377, 378, 379, 380, 381, 382, 384, 385, 387, 392, 393, 394, 396, 398, 401, 403, 404, 405, 412, 416, 427, 430, 441], "executionpolici": 372, "exercis": [45, 439], "exfiltr": [29, 163], "exhaust": 440, "exist": [0, 45, 56, 160, 189, 243, 284, 290, 323, 388, 389, 392, 427, 430, 431, 435, 437, 440], "exit": 370, "expand": [90, 100, 160, 440], "expand_dim": [393, 396, 399, 406], "expans": [41, 42, 45, 54], "expect": [66, 90, 100, 112, 114, 117, 121, 143, 148, 154, 160, 166, 169, 173, 174, 186, 191, 311, 394, 399, 403, 419, 420, 432], "expens": 75, "experi": [27, 174, 348, 417, 429], "experiment": 0, "explain": [163, 399, 435, 440], "explan": [21, 439, 440], "explicit": [174, 328, 329, 330, 331, 332, 355, 357], "explicitli": [41, 54, 174, 290, 323, 334, 336, 355, 357, 398], "explor": 0, "expon": [132, 194], "exponenti": [118, 174], "export": [0, 417], "express": [41, 42, 54, 334, 435], "extdp": 194, "extend": [0, 194, 226, 247, 417], "extens": [0, 44, 47, 48, 55, 103, 108, 371, 429, 431, 437], "extent": [0, 191, 431], "exterior": [0, 320, 322, 394], "exterior_depth": 320, "exterior_onli": 320, "extern": [26, 394, 396, 401], "extinct": [93, 194], "extinction_depth": [19, 194, 338, 339, 340], "extinction_theta": 194, "extra": [0, 26, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 396, 431], "extra_overlap": 258, "extra_storage_coeffici": 231, "extract": [0, 5, 26, 124, 127, 130, 198, 201, 204, 205, 206, 254, 295, 298, 303, 312, 315, 435], "extrat": 0, "extrem": [0, 174], "f": [4, 25, 135, 163, 354, 380, 437, 438], "f4a582": 327, "face": [0, 5, 9, 10, 11, 13, 14, 74, 139, 146, 207, 209, 293, 296, 343, 394, 395, 396, 413], "face_area": 396, "face_budget_right": 5, "face_dimens": [394, 396, 400], "facebudget": [359, 423], "facebudget_front": 5, "facebudget_low": 5, "facebudget_net": 5, "facecolor": [319, 323, 415, 438], "facet": 417, "fact": 423, "fact_mswp": 26, "fact_svat": [224, 391], "factor": [11, 12, 21, 26, 27, 29, 34, 51, 127, 146, 160, 163, 174, 201, 224, 249, 250, 329, 330, 331, 343, 346, 348, 399, 423], "fail": [0, 27, 37, 43, 311, 370, 371, 372], "fairli": 433, "fall": [7, 18, 29, 41, 42, 54, 103, 127, 128, 130, 201, 202, 204, 297, 299, 300, 323, 337, 352, 400, 427], "fallback": [0, 435], "fals": [0, 3, 5, 41, 42, 43, 54, 56, 59, 77, 78, 79, 80, 86, 87, 93, 97, 103, 104, 108, 109, 111, 113, 115, 118, 119, 124, 130, 131, 132, 136, 138, 139, 140, 145, 146, 151, 152, 157, 164, 167, 170, 174, 178, 179, 180, 184, 189, 193, 194, 195, 198, 204, 205, 206, 207, 208, 258, 261, 269, 279, 290, 301, 316, 319, 320, 323, 335, 337, 338, 339, 340, 341, 343, 345, 346, 347, 349, 350, 351, 352, 355, 357, 358, 372, 377, 378, 379, 380, 381, 382, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 408, 413, 419, 420, 436, 437, 438, 439], "falsearrai": 438, "falsexarrai": [436, 437], "familiar": [394, 398, 400], "faq": [0, 429], "far": [399, 427, 429, 438], "fast": [313, 388, 429, 433, 435], "faster": [0, 86, 317, 318, 342, 357, 427, 429], "fault": 22, "faulti": 0, "favor": 431, "favorit": 429, "feasibl": 427, "featur": [0, 66, 258, 261, 267, 268, 269, 279, 288, 371, 374, 375, 385, 396, 401, 423, 427, 432, 435, 438, 440], "feature_typ": 39, "fedd": 237, "feddes_p1": [237, 391], "feddes_p2": [237, 391], "feddes_p3h": [237, 391], "feddes_p3l": [237, 391], "feddes_p4": [237, 391], "feddes_t3h": [237, 391], "feddes_t3l": [237, 391], "feed": [394, 398, 439], "feedstock": 0, "feel": 423, "few": [0, 373, 393, 397, 398, 404, 427, 433], "fewer": [329, 330], "fff": [9, 10, 13, 14], "fiddli": [41, 54], "field": [0, 9, 10, 13, 14, 85, 92, 96, 102, 123, 129, 146, 150, 156, 162, 183, 188, 197, 203, 294, 295, 324, 329, 330, 336, 396, 397, 399, 406, 413], "fig": [319, 323, 327, 377, 378, 379, 380, 381, 382, 394, 395, 396, 397, 401, 402, 406, 408, 409, 410, 411, 413, 437, 438, 439], "figsiz": [321, 323, 438], "figur": [319, 323, 371, 415, 435, 436, 438, 439], "file": [0, 5, 22, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 77, 78, 79, 80, 87, 93, 97, 103, 104, 105, 108, 109, 111, 113, 115, 118, 119, 124, 126, 127, 131, 132, 136, 137, 138, 139, 140, 141, 145, 146, 151, 152, 157, 164, 167, 170, 174, 179, 180, 184, 189, 194, 198, 201, 205, 206, 207, 208, 209, 224, 225, 226, 228, 231, 233, 234, 235, 236, 238, 242, 243, 245, 247, 251, 252, 254, 269, 279, 290, 291, 292, 317, 325, 333, 343, 346, 347, 370, 372, 373, 374, 384, 385, 387, 388, 392, 393, 394, 395, 398, 400, 401, 404, 405, 408, 411, 412, 416, 417, 420, 427, 428, 429, 430, 431, 432, 433, 440, 441], "filehandl": [56, 59], "filenam": [41, 42, 43, 44, 54, 55, 56, 61, 68, 70, 72, 174, 431, 432], "fileout": [77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 152, 157, 179, 180, 184, 194, 198, 205, 206, 401], "fill": [0, 127, 174, 201, 284, 288, 304, 305, 306, 307, 359, 385, 401, 433], "fill_between": 319, "fill_valu": [378, 404], "filt_bot": 408, "filt_top": 408, "filter": [0, 106, 110, 266, 273, 320, 400, 431], "filternumm": 408, "final": [0, 25, 135, 269, 354, 377, 378, 379, 380, 381, 382, 385, 401, 402, 406, 429, 431, 433, 438], "find": [0, 42, 355, 370, 371, 390, 394, 423, 427, 429], "fine": [374, 423], "finest": 423, "finish": [138, 139, 140, 141, 317, 385], "finit": [27, 328, 329, 330, 331, 332, 348, 355], "fiona": 432, "first": [0, 5, 9, 10, 13, 14, 25, 37, 41, 42, 43, 45, 50, 51, 54, 76, 80, 87, 93, 97, 118, 119, 124, 127, 132, 135, 137, 138, 139, 140, 143, 146, 151, 152, 157, 174, 189, 194, 198, 201, 205, 207, 227, 248, 255, 257, 258, 261, 267, 269, 290, 301, 324, 329, 330, 331, 354, 357, 372, 379, 385, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 411, 413, 419, 420, 423, 426, 427, 429, 431, 432, 436, 437, 438, 439, 440], "first_active_to_elev": [255, 259, 438], "first_order_decai": [118, 132, 399], "firstli": 316, "fit": [45, 417, 435, 439, 440], "fix": [19, 28, 118, 174, 270, 271, 272, 273, 329, 330, 331, 371, 375, 393, 401, 439], "fixed_cel": [0, 93, 152, 436, 437], "fixed_format": 391, "fixed_format_pars": 391, "fixtur": [0, 437], "flag": [27, 41, 54, 59, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206, 329, 330, 335, 337, 341, 342, 343, 346, 347, 349, 350, 351, 352, 355, 357, 358], "flatten": 51, "flexibl": [0, 5, 314, 423, 428], "flf": [9, 10], "flip": 0, "float": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 41, 44, 47, 49, 51, 55, 78, 79, 80, 81, 84, 87, 89, 91, 93, 94, 95, 97, 99, 101, 116, 118, 119, 120, 122, 124, 125, 127, 131, 132, 134, 146, 147, 149, 152, 153, 155, 157, 159, 161, 163, 165, 168, 171, 174, 180, 181, 182, 184, 185, 187, 189, 190, 193, 194, 195, 196, 198, 200, 201, 205, 206, 224, 226, 228, 231, 235, 237, 242, 245, 247, 249, 251, 266, 267, 268, 269, 273, 279, 284, 285, 286, 288, 289, 291, 292, 299, 303, 304, 305, 306, 307, 310, 312, 317, 319, 320, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 391, 393, 394, 396, 398, 399, 400, 401, 404, 419, 420], "float32": [44, 54, 401, 413, 431, 437, 438, 439], "float326": 437, "float32nan": [437, 438, 439], "float64": [0, 44, 139, 141, 207, 385, 391, 394, 401, 408, 413, 431, 435, 436, 437, 438, 439], "float640": [391, 436], "float641": [391, 394, 401, 436, 437], "float6410": [391, 413], "float64100": [413, 437], "float64120": 391, "float6414": 438, "float642": [401, 431, 437, 438, 439], "float6420": 391, "float64230": 391, "float6425": [401, 431, 437, 438, 439], "float6429": 438, "float644": [413, 431], "float645": [391, 401, 431, 437, 438, 439], "float6450": 385, "float646": 438, "float648": 413, "float64850": 385, "float649": [413, 431], "float6499": 391, "float64nan": [437, 438], "float_format": [346, 347], "flopi": 398, "flow": [0, 5, 6, 9, 10, 11, 13, 14, 44, 47, 49, 76, 77, 78, 79, 80, 86, 87, 93, 97, 103, 105, 108, 111, 112, 113, 114, 115, 117, 118, 124, 131, 132, 137, 139, 145, 146, 152, 157, 164, 166, 167, 169, 170, 173, 174, 179, 180, 184, 194, 198, 205, 206, 207, 209, 245, 285, 286, 324, 329, 330, 333, 334, 343, 344, 346, 355, 356, 357, 359, 377, 380, 393, 394, 395, 397, 399, 404, 406, 414, 416, 426, 428, 430, 431, 436, 437, 440], "flow_solv": [393, 396, 399, 406], "flow_veloc": [0, 9, 10, 359, 413], "flowfront": 5, "flowja": [0, 139, 207], "flowlow": 5, "flowmodel": 399, "flowright": 5, "flowvel_streamlin": [413, 416, 430], "fluid": [78, 357, 382, 396], "flux": [0, 5, 8, 9, 12, 18, 19, 20, 28, 29, 36, 87, 90, 93, 97, 100, 152, 234, 253, 337, 341, 349, 350, 351, 352, 358, 393, 396, 401, 413], "flux_concentr": 393, "fmt": 398, "focus": [397, 400, 428, 431, 432], "folder": [0, 238, 371, 372, 377, 378, 379, 380, 381, 382, 385, 427], "follow": [0, 13, 14, 25, 43, 44, 55, 78, 105, 127, 135, 137, 146, 163, 201, 229, 259, 260, 269, 270, 271, 272, 273, 285, 286, 298, 346, 347, 354, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 385, 388, 391, 393, 394, 396, 397, 398, 401, 403, 404, 408, 415, 423, 427, 428, 429, 431, 433, 435, 436, 437, 438, 439], "forc": [25, 135, 354, 372, 424, 438], "foremost": 427, "forg": [0, 376, 427, 429], "forget": 372, "form": [105, 139, 207, 314, 393, 394, 398, 400, 417, 419, 422, 427, 431, 432, 433, 440], "format": [0, 56, 78, 82, 83, 90, 93, 100, 118, 121, 126, 127, 137, 148, 154, 160, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 252, 315, 317, 327, 345, 346, 347, 359, 371, 388, 401, 417, 423, 428, 432, 433, 435, 440], "former": [374, 439], "formul": [0, 78, 103, 146, 174, 180, 184, 194, 332, 336, 396], "forth": 0, "fortran": 427, "fortun": 433, "forward": [0, 127, 201, 317, 319, 323, 385], "found": [0, 103, 108, 139, 207, 370, 372, 397, 401, 427, 437], "four": [5, 329, 330, 399], "fourth": [329, 330, 331], "frac": [4, 11, 12], "fraction": [118, 174, 237, 328, 329, 330, 331, 332, 334], "fraction_evaporated_sprinkl": [237, 391], "frame": 401, "framework": [26, 56, 58, 59, 68, 72], "framewotk": 401, "free": [0, 93, 377, 423, 435], "freeli": 245, "freq": [379, 385, 396, 401, 436, 437], "frequenc": [3, 151, 433], "frequent": [0, 309, 424], "fresh": [377, 378, 379, 381, 382, 393], "freshwat": [4, 341, 352, 357, 383, 384, 403, 405, 430], "freshwaterhead": 4, "freshwaterlen": [378, 384, 430], "freundlich": 132, "frf": [9, 10, 13, 14], "from": [0, 3, 4, 6, 7, 8, 18, 21, 25, 26, 27, 29, 30, 32, 35, 36, 39, 45, 50, 55, 56, 66, 76, 78, 82, 83, 90, 100, 105, 111, 113, 115, 119, 121, 126, 127, 135, 137, 146, 148, 154, 160, 163, 164, 167, 170, 174, 179, 180, 184, 186, 189, 191, 194, 200, 201, 209, 227, 229, 232, 234, 239, 244, 246, 248, 250, 252, 254, 255, 259, 260, 262, 263, 264, 265, 274, 275, 277, 284, 285, 286, 290, 292, 294, 295, 300, 301, 310, 312, 315, 323, 324, 329, 330, 337, 342, 343, 346, 348, 352, 354, 355, 358, 370, 371, 372, 374, 377, 380, 384, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 408, 411, 412, 416, 423, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441], "from_datafram": 391, "from_edg": 401, "from_fil": 0, "from_flow_model": [0, 393, 396, 399, 406], "from_imod5_cap_data": [0, 423], "from_imod5_data": [0, 359, 423], "from_imod5_shd_data": [82, 423], "from_lakes_and_outlet": 404, "from_mdal_compliant_ugrid2d": [0, 359], "from_user_input": [104, 109, 136, 310], "front": [0, 5, 6, 9, 10, 11, 13, 14, 139, 207, 324, 343, 399, 413], "frost": 26, "frustrat": [427, 431], "fulfil": [0, 66], "full": [0, 21, 317, 342, 370, 377, 378, 379, 380, 381, 382, 385, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413, 415, 417, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439], "full_lik": [298, 378, 382, 391, 393, 394, 396, 398, 399, 400, 401, 404, 413, 419, 420], "fulli": [0, 25, 30, 90, 100, 121, 135, 148, 154, 160, 180, 186, 191, 354, 378, 417, 423, 427, 429, 431, 435, 436, 438], "function": [0, 4, 5, 7, 8, 9, 10, 11, 37, 42, 43, 44, 45, 50, 55, 57, 62, 66, 80, 82, 83, 85, 86, 88, 90, 92, 96, 98, 100, 102, 106, 107, 110, 121, 123, 126, 129, 135, 148, 150, 154, 156, 158, 160, 162, 174, 183, 186, 188, 191, 192, 194, 197, 199, 203, 209, 227, 229, 232, 237, 239, 244, 246, 248, 250, 257, 258, 261, 275, 277, 292, 294, 295, 296, 298, 299, 300, 301, 313, 323, 324, 326, 354, 371, 388, 390, 391, 394, 396, 397, 399, 400, 401, 406, 408, 409, 410, 411, 415, 417, 419, 420, 422, 423, 427, 428, 429, 431, 433, 435, 436, 437, 438, 439, 440], "function_nam": 437, "function_that_throws_warn": 309, "functionali": 388, "fundament": 417, "funtion": 388, "further": [21, 127, 174, 201, 394, 438], "furthermor": [0, 107, 151, 189, 256, 334, 372, 374, 401, 426, 438, 439], "futur": [205, 206, 371, 372], "g": [0, 3, 5, 25, 27, 45, 46, 50, 80, 87, 93, 97, 105, 124, 135, 137, 152, 157, 179, 198, 205, 209, 245, 254, 269, 278, 279, 290, 291, 292, 315, 319, 320, 323, 348, 354, 370, 382, 388, 391, 417, 427, 428, 429, 432, 433], "galleri": [374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "gamma": 174, "gap": [278, 284, 320], "gapfil": 440, "gash": 237, "gatkin": 0, "gauss": 290, "gcg": [355, 377, 378, 379, 380, 381, 382], "gcr": 347, "gdal": [0, 54, 55, 104, 109, 136, 279, 290, 418, 419, 431, 432], "gdal_compliant_grid": [0, 418, 419], "gdal_raster": [359, 419, 420], "gdf": [5, 269, 323, 415, 419, 422, 432, 438], "gen": [0, 22, 50, 359, 423], "gener": [0, 5, 20, 27, 41, 44, 47, 49, 54, 55, 97, 118, 119, 124, 179, 198, 249, 255, 258, 259, 260, 261, 263, 269, 271, 278, 290, 304, 305, 306, 307, 328, 329, 330, 331, 332, 336, 341, 342, 347, 348, 355, 359, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 420, 424, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "generalheadboundari": [0, 179, 216, 385, 393, 396, 423, 437], "generalheadboundarypackag": 8, "generalheadboundaryregridmethod": 0, "generalizedconjugategradientsolv": [377, 378, 379, 380, 381, 382], "geodatafram": [0, 37, 38, 39, 45, 50, 111, 113, 115, 164, 167, 170, 269, 279, 285, 286, 287, 288, 295, 323, 385, 409, 411, 419, 420, 422, 432, 433, 438], "geohydrolog": 431, "geohydrologi": 433, "geojson": 432, "geom_typ": 432, "geometr": [0, 355, 400], "geometri": [0, 10, 14, 22, 39, 45, 111, 113, 115, 164, 167, 170, 269, 279, 285, 286, 291, 292, 295, 322, 385, 394, 398, 401, 402, 404, 409, 419, 420, 422, 432, 433, 438], "geometric_mean": [0, 219, 257, 258, 261, 397, 437], "geopackag": 432, "geopanda": [0, 5, 37, 38, 39, 45, 50, 269, 287, 288, 295, 385, 388, 411, 419, 420, 422, 428, 429, 430, 438, 440, 441], "geoseri": 411, "geospati": [290, 429, 431, 432], "geotiff": 431, "get": [0, 5, 44, 55, 77, 139, 174, 207, 290, 298, 300, 301, 324, 335, 341, 349, 350, 351, 370, 373, 391, 401, 410, 427, 429, 431, 435, 437, 439], "get_alldata": 417, "get_cmap": 323, "get_data": 417, "get_label_arrai": [0, 395, 402, 406], "get_lower_active_grid_cel": [0, 359], "get_lower_active_layer_numb": [0, 359], "get_model": 417, "get_regrid_method": 437, "get_upper_active_grid_cel": [0, 359], "get_upper_active_layer_numb": [0, 359], "getlogg": 56, "ghb": [0, 8, 20, 100, 216, 255, 256, 259, 260, 263, 341, 385, 396, 423, 438], "ghb2": 385, "ghb_conc": 393, "ghb_head": 393, "ghbssmden": 341, "ghg": 3, "gi": [295, 417, 428, 429, 431, 432, 440], "gift": [237, 391], "gift_dur": [237, 391], "gigabyt": [417, 427, 429], "git": [371, 372, 374, 427, 428, 429], "github": [0, 314, 371, 376, 427, 428, 429, 437], "gitlab": 0, "give": [0, 44, 55, 426, 437], "given": [0, 5, 7, 9, 10, 13, 14, 25, 47, 49, 103, 124, 135, 142, 174, 194, 228, 288, 294, 295, 317, 323, 354, 355, 413, 426, 437], "glg": 3, "glob": [41, 42, 45, 54, 431], "global": 43, "globpath": 42, "gmre": 347, "go": [119, 200, 376, 377, 378, 379, 380, 381, 382, 385, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413, 415, 431, 432, 433, 434, 435, 436, 437, 438, 439], "goal": [388, 394, 417], "goe": 435, "good": [317, 319, 323, 324, 401, 437], "got": [0, 429], "gov": [87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 164, 167, 170, 174, 189, 193, 198, 205, 206], "gpd": [5, 37, 38, 39, 45, 111, 113, 115, 164, 167, 170, 269, 285, 286, 287, 288, 295, 385, 419, 422, 432, 438], "gpkg": 432, "grab": 435, "gracefulli": [258, 261, 417], "gradient": [27, 174, 329, 330, 331, 342, 348, 355], "gradual": [343, 436], "granular": [66, 174], "graph": [394, 431, 435, 437], "grassland": 391, "gray_r": 408, "grb": [138, 139, 140, 141, 207, 208, 398, 404, 417, 435], "grb_path": [207, 208], "great": [388, 439, 440], "greater": [0, 27, 32, 144, 146, 174, 180, 184, 194, 328, 329, 330, 331, 332, 336, 342, 346, 347, 348, 355, 357, 375, 417, 426], "greatli": [0, 320, 427], "grei": [319, 438], "grid": [0, 74, 82, 83, 85, 86, 90, 92, 96, 100, 102, 104, 107, 109, 112, 114, 117, 121, 123, 124, 126, 127, 129, 130, 136, 138, 139, 140, 141, 146, 148, 150, 154, 156, 160, 162, 166, 169, 173, 183, 186, 188, 189, 191, 192, 197, 198, 201, 203, 204, 207, 208, 226, 227, 228, 229, 230, 242, 243, 247, 248, 252, 255, 256, 262, 263, 264, 265, 266, 270, 271, 272, 273, 275, 277, 280, 281, 282, 283, 288, 290, 293, 294, 295, 296, 320, 323, 328, 329, 330, 331, 332, 336, 346, 347, 351, 359, 385, 393, 394, 396, 397, 399, 400, 401, 402, 406, 408, 409, 410, 411, 417, 419, 420, 422, 423, 428, 430, 436, 437, 438, 439, 440, 441], "grid_3d": [0, 359], "grid_boundary_xi": [0, 359], "grid_coord": 399, "grid_dim": 399, "grid_shap": 399, "grid_triangl": 396, "gridagnosticwel": [127, 128, 201, 202], "gridanimation3d": [0, 318, 359, 423], "gridblock": 437, "griddata": [0, 118, 359, 423], "griddataarrai": [81, 89, 94, 99, 105, 112, 114, 116, 117, 120, 121, 125, 126, 137, 147, 148, 153, 154, 159, 165, 166, 168, 169, 171, 173, 181, 185, 186, 190, 196, 200, 252], "groenendijk": 26, "ground": [163, 426], "groundwat": [0, 3, 9, 10, 13, 14, 19, 26, 28, 29, 80, 93, 103, 108, 118, 124, 126, 130, 131, 145, 152, 157, 179, 194, 198, 204, 205, 206, 249, 251, 252, 254, 344, 356, 377, 380, 381, 388, 393, 394, 396, 397, 401, 406, 419, 420, 422, 424, 428, 431, 432, 433, 436, 438, 440], "groundwater_et_funct": 194, "groundwaterflowmodel": [0, 137, 179, 259, 260, 393, 394, 396, 398, 399, 400, 401, 404, 406, 436], "groundwatertransport": 78, "groundwatertransportmodel": [0, 393, 396, 399, 406], "group": [0, 45, 209, 289, 428, 433, 437], "groupbi": [45, 269, 291, 292, 408, 419, 420], "growth": 378, "gt": [385, 391, 394, 401, 413, 431, 436, 437, 438, 439], "guarante": 439, "guess": 55, "gui": 0, "guid": [0, 26, 374, 375, 406, 430, 431, 432, 438, 441], "guide_jupyt": 440, "guide_python": 440, "guo": 4, "gvg": [0, 3], "gwf": [0, 77, 80, 103, 105, 111, 113, 115, 119, 137, 146, 164, 167, 170, 174, 180, 184, 194, 401, 402, 437, 439], "gwf_1": [394, 395, 397, 398, 400, 401, 404, 406, 417, 436], "gwf_model": [393, 394, 396, 398, 399, 400, 401, 404, 406, 436, 439], "gwf_simul": [402, 439], "gwfgwf": 0, "gwl": 3, "gwrch_uzf": 0, "gwseep": 194, "gwt": [77, 78, 108, 118, 174], "gwt_model": 393, "gxg": [0, 3, 423], "h": [0, 4, 25, 135, 140, 146, 174, 207, 208, 343, 354, 382], "h1": 406, "h_": 4, "h_fstrict": 346, "h_fstrictpk": 346, "ha": [0, 5, 16, 25, 39, 44, 45, 55, 73, 78, 80, 85, 92, 96, 102, 106, 110, 111, 113, 115, 118, 123, 124, 129, 130, 135, 138, 139, 140, 141, 146, 150, 156, 162, 164, 167, 170, 174, 179, 183, 188, 197, 203, 204, 249, 255, 256, 262, 263, 265, 269, 270, 271, 272, 279, 290, 301, 317, 333, 344, 354, 356, 357, 372, 374, 385, 390, 391, 393, 396, 397, 398, 399, 400, 401, 408, 411, 417, 424, 426, 427, 429, 431, 433, 434, 435, 437, 438, 439], "had": [0, 397], "half": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 393, 394], "half_simul": 394, "half_simulation_constant_head": 394, "hand": [78, 86, 146, 174, 342, 391, 427, 439], "handbook": 371, "handi": 391, "handl": [0, 41, 54, 127, 201, 334, 427, 433], "handler": [56, 59], "happen": [66, 160, 371, 401, 437], "harbaugh": [397, 398], "hard": [0, 427], "harder": 174, "hardli": 427, "hardwar": 435, "harmon": [146, 343], "harmonic_mean": [219, 257, 258, 261, 437], "has_nodata": [419, 420], "hasattr": 437, "hassl": 371, "hatch": 319, "hatchl": 0, "have": [0, 25, 41, 44, 45, 54, 55, 80, 87, 93, 97, 105, 107, 118, 124, 127, 132, 135, 137, 144, 146, 152, 157, 174, 179, 180, 184, 198, 200, 201, 205, 224, 226, 228, 231, 245, 247, 249, 251, 261, 262, 263, 265, 269, 285, 294, 295, 298, 319, 324, 326, 330, 333, 334, 354, 370, 371, 372, 374, 375, 379, 380, 385, 391, 394, 395, 396, 398, 399, 400, 401, 403, 404, 406, 408, 411, 417, 419, 420, 422, 423, 426, 427, 429, 431, 432, 435, 436, 437, 438, 439], "haven": 438, "haywir": 435, "hclose": [27, 346, 348, 377, 378, 379, 380, 381, 382], "hclose_inn": 346, "hclosepk": 346, "hd": [151, 208, 394, 398, 401, 404, 417, 435], "hdry": 343, "hds_origin": [402, 437], "hds_path": 208, "hds_regrid": 437, "hds_split": 402, "head": [0, 3, 4, 16, 17, 18, 20, 27, 29, 30, 31, 32, 41, 42, 44, 54, 55, 77, 78, 79, 80, 82, 83, 87, 97, 103, 118, 119, 140, 146, 151, 157, 174, 179, 180, 184, 194, 208, 210, 216, 235, 237, 249, 250, 255, 259, 260, 263, 271, 301, 323, 333, 334, 335, 337, 341, 343, 345, 346, 348, 352, 371, 377, 378, 379, 380, 381, 382, 385, 393, 394, 395, 396, 398, 399, 400, 402, 404, 406, 407, 409, 412, 413, 417, 423, 426, 430, 431, 433, 435, 436, 437, 440], "head_2001": [41, 54], "head_20010101_l1": [41, 54], "head_centr": 385, "head_dri": 343, "head_edg": 385, "head_edge_ris": 385, "head_end": 335, "head_fil": [0, 151], "head_l": [41, 54], "head_l1": [41, 44, 54, 55], "head_l2": [41, 44, 54, 55], "head_observ": 408, "head_period": 385, "head_start": 335, "header": [0, 209, 346, 347, 359], "headfil": 417, "headl11": [41, 54], "heads_grid": 408, "heartili": 371, "heat": 377, "height": [326, 431], "held": 146, "hell": 427, "help": [41, 54, 174, 371, 419, 422, 424, 437, 438, 439, 440], "helpfil": [346, 347], "henc": [50, 377, 378, 379, 380, 382, 399], "henri": [377, 383, 384, 403, 405, 430], "here": [0, 9, 10, 13, 14, 24, 41, 42, 54, 73, 74, 103, 108, 258, 261, 298, 330, 355, 371, 372, 376, 377, 378, 379, 380, 381, 382, 385, 390, 394, 396, 397, 399, 401, 403, 406, 423, 427, 429, 431, 435, 438, 439], "heterogen": 0, "heterogeneous_k": 397, "hex": [319, 323, 325], "hexidecim": [319, 323], "hfb": [0, 111, 112, 113, 114, 115, 117, 164, 166, 167, 169, 170, 173, 285, 286, 385, 423], "hfb6": [111, 113, 115, 164, 167, 170], "hfb_gdf": 385, "hfb_layer": 385, "hhformulation_rh": 78, "high": [323, 393, 435], "higher": [9, 10, 13, 14, 174, 294, 295, 320, 343, 419, 422], "highest": [0, 3, 21, 349], "highli": [342, 400, 427], "hill": [174, 343], "hist": 437, "histori": 174, "hit": [130, 204], "hk": 343, "hm": 146, "hmk": 146, "hmmmm": 439, "hmoc": 329, "hn": 343, "hnoflo": [333, 343], "hoffman": 237, "hold": [23, 256, 269], "hole": [278, 320], "hollow": 320, "homepag": 427, "homogen": 399, "hondsrug": [401, 402, 405, 430, 439], "hondsrug_crosssect": 0, "hondsrug_drainag": 401, "hondsrug_initi": 401, "hondsrug_layermodel": [401, 431], "hondsrug_layermodel_topsystem": 438, "hondsrug_meteorologi": 401, "hondsrug_partit": [402, 405, 430], "hondsrug_planar_riv": 438, "hondsrug_riv": 401, "hondsrug_sav": [402, 437, 439], "hondsrug_simul": [0, 402, 437, 439], "horizont": [0, 5, 13, 14, 21, 22, 23, 34, 86, 105, 111, 112, 113, 114, 115, 117, 124, 127, 137, 139, 146, 164, 166, 167, 169, 170, 173, 189, 198, 201, 207, 266, 267, 268, 278, 285, 286, 329, 330, 336, 343, 349, 350, 351, 380, 394, 395, 397, 401, 423, 437], "horizontal_anisotropi": 343, "horizontalflowbarri": [0, 112, 114, 117, 166, 169, 173, 385], "horizontalflowbarrierbas": [116, 165, 168, 171], "horizontalflowbarrierhydrauliccharacterist": 0, "horizontalflowbarriermultipli": 0, "horizontalflowbarrierresist": [0, 285, 286, 423], "horizontalflowbarriersinglelayerresist": 0, "horizontalhydraulicconduct": [34, 35, 385], "hotfix": 0, "hour": [140, 207, 208], "hourli": [419, 420], "how": [0, 44, 55, 80, 87, 93, 97, 124, 127, 143, 144, 146, 151, 152, 157, 198, 201, 205, 206, 258, 320, 370, 371, 383, 386, 389, 393, 394, 396, 397, 398, 401, 402, 403, 404, 407, 411, 424, 431, 436, 437, 438, 440], "howev": [0, 9, 10, 13, 14, 23, 41, 42, 45, 54, 80, 119, 127, 174, 201, 258, 261, 328, 329, 330, 331, 332, 355, 373, 374, 391, 396, 417, 419, 422, 426, 431, 435, 438, 439], "hoyningen": 237, "html": [55, 77, 258, 261, 288, 291, 292, 320, 373, 374, 385, 427, 437], "http": [0, 30, 32, 41, 54, 55, 77, 87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 163, 164, 167, 170, 174, 180, 184, 189, 193, 198, 205, 206, 258, 261, 288, 291, 292, 314, 319, 320, 323, 372, 377, 378, 379, 380, 381, 382, 385, 427, 428, 429, 437], "hue": 399, "human": [145, 427], "hundr": [424, 431], "hurri": 429, "hybrid": [329, 330, 331], "hydraul": [21, 23, 30, 32, 34, 35, 78, 97, 107, 111, 112, 114, 117, 119, 130, 146, 157, 164, 166, 169, 173, 180, 184, 194, 204, 249, 256, 267, 269, 275, 277, 343, 380, 437, 438], "hydraulic_characterist": [111, 164], "hydrocoin": [383, 384, 430], "hydrogeolog": 438, "hydrolog": [3, 380, 401, 424, 438], "hydrologi": 382, "hydrology_product_line_imod": [370, 372], "hydrostat": 393, "hysteresi": 26, "i": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 43, 44, 45, 47, 50, 51, 54, 55, 59, 66, 68, 70, 72, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 92, 93, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 123, 124, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 150, 151, 152, 156, 157, 160, 162, 163, 164, 166, 167, 169, 170, 173, 174, 179, 180, 183, 184, 186, 188, 189, 193, 194, 195, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 242, 245, 247, 248, 249, 250, 251, 252, 254, 256, 258, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 274, 278, 279, 288, 290, 291, 292, 294, 295, 298, 301, 303, 311, 313, 314, 316, 317, 318, 319, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 411, 413, 415, 420, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 438, 439, 440], "iboud": [377, 378, 380, 381, 382], "ibound": [0, 16, 26, 51, 82, 83, 210, 284, 301, 333, 346, 347, 377, 378, 379, 380, 381, 382, 385, 423, 437], "ic": [119, 217, 393, 394, 396, 398, 399, 400, 404, 406, 437], "ic6": 119, "icbcfl": 343, "icbund": [334, 377, 378, 379, 380, 381, 382], "icelltyp": [146, 219, 393, 394, 396, 398, 399, 400, 404, 406, 437], "ichdcb": 335, "iconvert": [180, 184], "id": [0, 45, 47, 48, 124, 198, 266, 269, 273, 292, 401, 408], "id_cod": 45, "id_nam": [22, 36, 358, 377, 379, 380, 381, 382, 385], "idea": [324, 391, 401, 427, 429], "ideflay": [255, 423], "idem": 51, "ident": [82, 83, 90, 100, 121, 148, 154, 160, 186, 355, 431], "identifi": [0, 41, 54, 124, 194, 198, 333, 435, 438], "idf": [0, 3, 5, 47, 49, 50, 54, 126, 230, 252, 254, 313, 320, 345, 346, 347, 359, 377, 378, 379, 380, 381, 382, 385, 417, 423, 431, 435], "idf_svat": 423, "idfmap": [0, 359, 423], "idomain": [0, 84, 91, 95, 101, 106, 110, 112, 114, 117, 122, 146, 149, 155, 161, 166, 169, 173, 182, 187, 189, 195, 211, 229, 262, 263, 264, 265, 270, 271, 272, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 423, 431, 437, 438, 439], "iex": 372, "if_fals": [316, 419, 420], "if_tru": [316, 419, 420], "iff": [29, 423], "ighbcb": 341, "ignor": [0, 41, 66, 74, 75, 76, 126, 127, 201, 231, 237, 252, 298, 299, 300, 309, 439], "ignore_warn": 359, "ignorecas": [41, 54], "ihdwet": [146, 343], "illustr": [378, 393, 394, 395, 396, 397], "iloc": 432, "ilogg": [68, 70, 72], "ilpfcb": 343, "ilu": [174, 346, 347], "ilut": 174, "im": [137, 174, 406], "imag": [374, 401, 404, 408, 410, 411, 413, 435], "imeth": 209, "imeth1": 0, "imeth1head": 209, "imeth6head": 209, "immedi": [77, 79, 80, 87, 93, 97, 103, 108, 124, 131, 152, 157, 194, 198, 205, 206, 435], "immisc": 382, "immobil": 118, "immobile_poros": 118, "imod": [0, 359, 370, 376, 377, 378, 379, 380, 381, 382, 385, 386, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 418, 419, 420, 422, 423, 424, 425, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440], "imod5": [0, 24, 43, 82, 83, 90, 100, 105, 121, 126, 127, 137, 148, 154, 160, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 252, 259, 260, 377, 378, 379, 380, 381, 382, 385, 424], "imod5_data": [0, 82, 83, 90, 100, 105, 121, 126, 127, 137, 148, 154, 160, 172, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 252], "imod5datadict": [126, 227, 229, 232, 239, 244, 246, 248, 250, 252], "imod_v5_3_x64r": 385, "imodenv": 429, "imodflow": [0, 19, 21, 23, 24, 26, 28, 163, 191, 359, 385, 417, 428, 430], "imodflow_jupyt": 386, "imodflow_python": 386, "imodflow_v5_3_metaswap_svn1977_x64r": 385, "imodflowmodel": [0, 385, 436], "imodflowprojectfil": [385, 387, 430], "imodlfow": 423, "imperm": 22, "implement": [26, 61, 77, 146, 388, 427], "implicit": [0, 75, 328, 329, 330, 331, 332, 342, 355], "import": [0, 3, 5, 41, 45, 54, 56, 82, 105, 124, 137, 198, 207, 239, 252, 255, 259, 260, 262, 263, 264, 265, 269, 275, 277, 292, 295, 313, 323, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 406, 408, 409, 410, 411, 413, 415, 417, 422, 423, 429, 431, 432, 435, 436, 437, 438, 439], "importantli": 0, "imported_model": 137, "imposs": [4, 41, 54], "improv": [0, 174, 375], "imread": 435, "imshow": [323, 401, 404, 408, 410, 411, 435], "imshow_topview": [0, 359], "imt": 357, "in_bound": 297, "inact": [0, 16, 84, 91, 93, 95, 101, 106, 110, 122, 128, 130, 149, 152, 155, 161, 182, 187, 194, 202, 204, 227, 239, 248, 270, 271, 272, 301, 333, 334, 343, 377, 380, 382, 401, 437, 439], "inactict": 437, "inactive_concentr": 334, "inactive_head": 333, "inbetween": 438, "includ": [0, 12, 15, 25, 26, 31, 33, 41, 42, 45, 51, 54, 78, 80, 107, 119, 135, 145, 146, 174, 179, 180, 184, 225, 249, 278, 290, 294, 295, 301, 333, 334, 342, 343, 344, 346, 347, 354, 356, 371, 374, 375, 378, 380, 381, 382, 394, 396, 400, 401, 415, 427, 429, 436, 437, 439], "include_constant_head": 301, "incompat": [0, 427], "incomplet": [27, 174, 342], "inconsist": [0, 127, 201, 439], "inconvert": [186, 426], "incorpor": 278, "incorrect": 0, "incorrectli": 0, "increas": [0, 174, 326, 329, 330, 331, 355, 393, 394, 397, 426, 436, 437, 438], "increment": 174, "ind_i": 298, "ind_x": 298, "inde": 439, "independ": [435, 437], "index": [0, 5, 11, 45, 55, 124, 198, 224, 295, 298, 320, 346, 347, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 401, 406, 413, 419, 420, 422, 427, 431, 436, 437, 438, 439], "indexcolumn": 48, "indic": [26, 27, 77, 78, 79, 80, 86, 87, 93, 97, 103, 107, 108, 118, 119, 124, 131, 132, 144, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206, 237, 269, 298, 328, 329, 330, 331, 334, 335, 341, 343, 346, 347, 348, 349, 350, 351, 352, 355, 357, 358, 400, 401, 408, 413, 432], "individu": [0, 5, 36, 80, 279, 358, 391, 401, 419, 420, 435], "indivudu": 437, "inequ": [419, 420], "infer": [0, 179, 239, 258, 264, 323, 431], "infi_svat": [231, 423], "infiltr": [0, 26, 29, 160, 163, 194, 254, 359, 423], "infiltration_capac": [231, 232], "infiltration_capacity_rur": 26, "infiltration_capacity_urban": 26, "infiltration_factor": [29, 51, 163, 221, 437], "infiltration_r": 194, "infin": 174, "inflow": [80, 87, 93, 97, 124, 152, 157, 198, 205, 206, 327, 393, 406], "influenc": [26, 174], "info": [56, 61, 63, 64, 66, 68, 70, 72, 377], "inform": [26, 27, 40, 45, 66, 77, 78, 79, 80, 87, 90, 93, 97, 100, 103, 107, 108, 118, 119, 124, 127, 131, 138, 139, 140, 141, 146, 152, 157, 174, 189, 194, 198, 201, 205, 206, 207, 208, 242, 243, 269, 315, 334, 380, 385, 394, 396, 397, 408, 413, 417, 426, 427, 429, 431, 432, 437, 438], "ingo": 5, "inher": 424, "inherit": 0, "ini": [0, 127, 201, 385], "inic": [346, 347], "inifil": 385, "init": [0, 385, 429], "init_svat": [233, 234, 235, 236], "initi": [0, 31, 63, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206, 233, 234, 235, 236, 237, 258, 259, 260, 261, 317, 329, 330, 331, 333, 334, 343, 355, 393, 396, 397, 399, 404, 436], "initial_immmobile_concentr": 118, "initial_immobile_concentr": 118, "initial_pf": 235, "initialcondit": [217, 393, 394, 396, 398, 399, 400, 401, 404, 406, 437], "initialconditionsequilibrium": 359, "initialconditionspercol": 359, "initialconditionsregridmethod": [0, 121], "initialconditionsrootzonepressurehead": 359, "initialconditionssavedst": 359, "inject": [124, 127, 198, 201, 205, 206, 379, 380, 382, 406], "injection_concentr": 406, "inlin": 374, "inner": [27, 146, 174, 284, 320, 342, 343, 346, 347, 348], "inner_csvfil": [0, 174, 175, 176, 177], "inner_dvclos": [174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "inner_it": [27, 342, 346, 347, 348, 377, 378, 379, 380, 381, 382], "inner_maximum": [174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "inner_rclos": [174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "innerit": [346, 347], "inp": [0, 26, 224, 225, 226, 227, 228, 231, 233, 234, 235, 236, 237, 241, 242, 243, 245, 247, 248, 249, 251, 423], "inplac": [88, 98, 158, 199, 439], "input": [0, 9, 10, 24, 25, 26, 78, 79, 80, 82, 83, 85, 86, 87, 90, 92, 93, 96, 97, 100, 102, 106, 110, 111, 113, 115, 118, 119, 121, 123, 124, 129, 130, 131, 132, 135, 142, 145, 146, 148, 150, 151, 152, 154, 156, 157, 160, 162, 164, 167, 170, 174, 179, 180, 183, 184, 186, 188, 189, 192, 193, 194, 195, 197, 198, 203, 204, 205, 206, 234, 238, 249, 254, 258, 269, 278, 323, 333, 354, 355, 359, 375, 389, 392, 394, 395, 397, 399, 401, 415, 417, 423, 426, 430, 433, 435, 437, 438, 440], "input_fil": 391, "inputfil": 145, "insert": [50, 329, 330, 341, 380, 385, 401, 437], "insid": [0, 66, 152, 372, 396, 427, 436], "insight": 375, "insignific": [329, 330, 334], "inspect": [0, 432, 439], "instal": [0, 104, 109, 136, 310, 372, 417, 419, 422, 424], "install_requir": 417, "instanc": [7, 242, 243, 319, 323, 324, 326], "instead": [0, 27, 41, 42, 45, 47, 49, 50, 54, 82, 119, 127, 174, 200, 201, 261, 279, 292, 303, 311, 312, 317, 348, 355, 357, 385, 417, 419, 420, 423, 426, 427, 431, 435, 438, 439], "instruct": [371, 403, 427], "insuffici": [371, 388], "int": [16, 22, 26, 27, 36, 47, 49, 51, 61, 68, 70, 72, 77, 81, 84, 89, 91, 94, 95, 99, 101, 106, 110, 116, 118, 120, 122, 124, 125, 134, 146, 147, 149, 153, 155, 159, 161, 165, 168, 171, 174, 180, 181, 182, 184, 185, 187, 190, 193, 196, 200, 205, 206, 258, 269, 279, 284, 288, 289, 291, 292, 299, 306, 307, 320, 326, 329, 330, 331, 334, 342, 343, 346, 347, 348, 350, 355, 357, 358, 391, 393, 396, 397, 398, 399, 400, 401, 404, 406], "int32": [269, 394, 396, 400, 401, 413, 431, 437, 438, 439], "int320arrai": 437, "int321": [401, 413, 431, 437, 439], "int321arrai": [401, 438], "int64": [306, 307, 385, 391, 394, 431, 436, 437, 438], "int640": 394, "int641": [385, 391, 394, 431, 437, 438], "int641arrai": [385, 436], "int642": 436, "integ": [47, 48, 49, 84, 91, 95, 101, 106, 110, 122, 146, 149, 151, 155, 161, 174, 182, 187, 189, 195, 228, 237, 258, 269, 281, 283, 292, 306, 307, 319, 323, 333, 334, 342, 346, 347, 350, 401, 417, 419, 420], "integr": [56, 371, 428], "intellig": 0, "intend": [26, 399, 436, 440], "intens": [234, 342, 437], "interact": [0, 29, 77, 163, 267, 370, 371, 423, 427, 429, 435], "interblock": 343, "intercept": [224, 237, 254], "interception_capac": 224, "interception_capacity_per_lai": [237, 391], "interception_capacity_per_lai_rutt": [237, 391], "interception_capacity_per_lai_vonhoyningen": [237, 391], "interception_factor": 224, "interception_intercept": [237, 391], "interception_opt": [237, 391], "intercomparison": 380, "interconnect": 132, "interest": [5, 385, 400, 402, 432, 437, 439], "interfac": [61, 97, 379, 383, 384, 385, 393, 396, 430], "interfer": 429, "interflow": 26, "intermedi": 0, "intermitt": 427, "intern": [0, 77, 189, 232, 237, 426], "internod": 357, "interpl": [419, 420, 422], "interpol": [0, 7, 74, 80, 258, 278, 284, 294, 295, 407, 412, 430, 433], "interpolate_na": [419, 420], "interpolate_value_boundari": [0, 359], "interpolated_head": [401, 408], "interpolated_head_larg": 401, "interpret": [0, 39, 151, 301, 355, 374, 427, 431, 435], "intersect": [417, 432], "intersphinx": 374, "interv": [27, 81, 89, 94, 99, 116, 118, 120, 125, 134, 146, 147, 153, 159, 165, 168, 171, 174, 181, 185, 190, 194, 196, 200, 326, 343], "interval_wet": 343, "intra": [8, 267], "intra_cell_boundary_condit": 359, "intrins": 437, "introduc": [374, 388, 417, 437, 440], "introduct": [393, 394, 396, 398, 401, 404], "intuit": 417, "invalid": 0, "invent": 404, "invers": 437, "invert": [9, 10], "investig": [398, 439], "invididu": 427, "involv": [45, 80, 87, 93, 97, 124, 152, 157, 198, 205, 206, 417, 437], "io": [0, 77, 288, 314, 427, 428, 437], "ipest": 423, "ipf": [0, 12, 50, 126, 127, 201, 252, 359, 417, 423, 433], "ipf_point": 45, "ipn": 423, "ipykernel": 427, "ipynb": [377, 378, 379, 380, 381, 382, 385, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 411, 413, 415, 431, 432, 433, 434, 435, 436, 437, 438, 439], "ipython": [374, 427], "irivcb": [352, 358], "irreduc": 194, "irregular": 434, "irrelev": 0, "irrig": 26, "is_act": 438, "is_const": 51, "is_edg": 401, "is_ibound": 301, "is_lak": 404, "is_observ": 408, "is_partit": 0, "is_split": 179, "is_x_centr": 385, "is_x_edg": 385, "isel": [0, 5, 298, 324, 393, 394, 395, 396, 398, 399, 401, 402, 404, 406, 413, 419, 420, 437], "isg": 423, "isggrid": 423, "isin": 385, "isnan": [408, 438], "isnul": 394, "isol": [45, 427], "isolv": [342, 346, 347], "isotherm": [118, 132, 342, 346, 347], "isotrop": [21, 336, 400, 437], "issu": [0, 375, 396, 424, 427, 428, 429, 433, 437, 439], "issueboard": 423, "ist": 118, "item": [357, 419, 420], "iter": [25, 27, 86, 135, 146, 174, 284, 317, 342, 343, 346, 347, 348, 354, 357, 408], "iter1": [27, 284, 342, 348, 408], "iterdir": [431, 432], "itrack": [329, 330, 331], "its": [0, 66, 107, 127, 130, 139, 146, 151, 194, 200, 201, 204, 207, 278, 291, 294, 295, 314, 385, 399, 401, 411, 424, 429, 431, 432, 433, 435], "itself": [397, 431], "ityp": [0, 47, 49, 344, 356], "ivertcon": 194, "iwetit": [146, 343], "iwr": 372, "iwtabl": 357, "iybg": 234, "j": [16, 25, 77, 135, 163, 319, 323, 333, 354, 377, 380, 382], "ja": [139, 207, 209], "jacobi": 342, "jarvi": 237, "jarvis_drought_stress": [237, 391], "jarvis_o2_stress": [237, 391], "jet": [317, 323], "jhydrol": 382, "jinja2": 417, "jit": [257, 258, 261], "join": [269, 401, 419, 420, 431, 432], "journal": [26, 382], "judg": 408, "jump": 320, "jupyt": [374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "just": [0, 41, 54, 127, 201, 279, 374, 382, 391, 396, 410, 419, 420, 429, 431, 437, 438, 439], "k": [16, 21, 85, 92, 96, 102, 112, 114, 117, 123, 129, 130, 146, 150, 156, 162, 166, 169, 173, 183, 188, 197, 203, 204, 219, 266, 275, 276, 277, 319, 333, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 409, 413, 431, 437, 438], "k11": 146, "k22": [146, 219, 437], "k33": [146, 219, 394, 396, 398, 400, 401, 404, 437], "k_horizont": [23, 343, 377, 378, 379, 380, 381, 382], "k_valu": 396, "k_vertic": [35, 343, 377, 378, 379, 380, 381, 382], "kappa": 174, "kd": [320, 399, 419, 420], "kdif": [237, 391], "kdir": [237, 391], "kdw": 423, "keep": [0, 316, 419, 420, 426, 431, 438], "keep_nan": 316, "kei": [0, 42, 50, 51, 66, 80, 82, 87, 90, 93, 97, 100, 105, 124, 126, 127, 137, 139, 152, 157, 160, 172, 198, 201, 205, 207, 252, 270, 271, 272, 279, 319, 323, 394, 403, 419, 420, 436, 437], "kept": [50, 106, 110], "kernel": [419, 420], "keyboard": 403, "keyerror": 0, "keysview": 394, "keyword": [0, 45, 46, 77, 79, 80, 87, 93, 97, 103, 118, 124, 131, 132, 146, 152, 157, 174, 194, 198, 205, 206, 254, 278, 288, 290, 297, 298, 299, 300, 317, 319, 323, 324, 326, 438], "kg": [4, 393], "kh": [34, 42, 267, 268, 385], "khv": [380, 385, 423], "kib": [394, 431, 437], "kind": 375, "km": 431, "knmi": 401, "know": [372, 396, 417, 429], "knowledg": 429, "known": [12, 424], "konikow": 380, "krylov": [346, 347], "kutta": [329, 330, 331], "kv": [34, 267, 268], "kv_sat": 194, "kva": [385, 423], "kvv": 423, "kwarg": [45, 46, 73, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 254, 288, 317], "kwargs_aquitard": [319, 438], "kwargs_basemap": [323, 415], "kwargs_colorbar": [319, 323, 415, 438], "kwargs_contour": 326, "kwargs_pcolormesh": 319, "kwargs_quiv": [324, 413], "kwargs_rast": 323, "kwd": [58, 66, 255, 256], "l": [23, 29, 30, 35, 41, 54, 93, 163, 174, 268, 295, 336, 380], "l2": [29, 174], "l2norm": 174, "l2norm_rclos": 174, "l2t": 336, "lab": [27, 348], "label": [0, 146, 323, 372, 395, 401, 406, 415, 417, 431, 433], "label_arrai": 406, "lag": 357, "lagrangian": [329, 330, 331], "lai": 237, "lak": [0, 404, 428], "lake": [0, 377, 403, 405, 409, 410, 411, 415, 430, 432, 437, 438], "lake_grid": [409, 410], "lake_grid_coars": 410, "lake_i": 404, "lake_lay": 404, "lake_x": 404, "lakedata": [0, 404], "lakes_shp": [409, 410, 411, 415, 432], "lakes_wgs84": 411, "lanczo": [290, 342], "land": [33, 194, 231, 237, 245, 333, 432], "landus": [26, 228, 229, 232, 246, 249, 391], "landuse_index": 391, "landuse_indexpandasindexpandasindex": 391, "landuse_nam": [237, 391], "landuse_opt": 391, "landuseopt": [359, 391], "langevin": [4, 382], "langmuir": 132, "languag": 427, "lanuag": 424, "laplac": [0, 284, 419, 420, 422], "laplace_interpol": [0, 359, 408, 419, 420, 422], "larg": [0, 8, 27, 41, 54, 174, 194, 245, 320, 348, 374, 388, 419, 420, 427, 428, 429, 433, 435, 437], "larger": [27, 29, 186, 226, 247, 319, 329, 330, 348, 357, 394, 401, 408, 426, 435, 437], "last": [0, 5, 25, 77, 79, 80, 87, 93, 97, 124, 127, 131, 135, 151, 152, 157, 179, 194, 198, 201, 205, 206, 278, 314, 354, 357, 393, 396, 397, 399, 401, 406, 432, 436], "lat": 411, "later": [127, 194, 201, 427, 439], "latest": [174, 370, 403, 427, 435], "latitud": [9, 13, 294], "latter": [124, 194, 198, 374, 432, 439], "law": 146, "layavg": 343, "layer": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 47, 51, 54, 55, 81, 89, 94, 99, 107, 112, 113, 114, 116, 117, 120, 124, 125, 126, 127, 130, 134, 139, 141, 144, 147, 153, 159, 164, 165, 166, 167, 168, 169, 170, 171, 173, 181, 185, 189, 190, 196, 200, 201, 204, 205, 206, 207, 231, 252, 254, 255, 256, 257, 261, 262, 263, 265, 266, 272, 274, 275, 277, 278, 281, 283, 301, 306, 307, 308, 310, 316, 319, 320, 324, 326, 333, 334, 336, 343, 346, 347, 350, 351, 358, 377, 378, 379, 380, 381, 382, 385, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 413, 426, 431, 433, 435, 436, 437, 438, 439], "layer1": 0, "layer2": 0, "layer_grid": 438, "layer_max": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200], "layer_min": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200], "layer_model": 438, "layer_typ": 343, "layer_wet": 343, "layeredhorizontalflowbarri": 0, "layeredhorizontalflowbarrierhydrauliccharacterist": 0, "layeredhorizontalflowbarriermultipli": 0, "layeredhorizontalflowbarrierresist": 0, "layeredwel": [0, 107, 423], "layermodel": [401, 431], "layernumb": 301, "layerpandasindexpandasindex": [385, 394, 401, 413, 431, 436, 437, 438, 439], "layerpropertyflow": [377, 378, 379, 380, 381, 382], "layerregridd": [0, 359], "layout": 438, "laytyp": 343, "lazi": [417, 430, 440, 441], "lazili": [0, 41, 50, 54, 138, 139, 140, 141, 207, 208], "lazy_da": 435, "lazy_result": 435, "lead": [0, 47, 49, 329, 330, 355, 397, 436, 437], "leaf": 224, "leaf_area_index": 224, "leakag": 267, "learn": 174, "least": [8, 15, 25, 33, 135, 319, 324, 326, 333, 343, 354, 437], "leav": [5, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203, 396], "led": 427, "left": [11, 12, 393, 398, 400, 401, 404, 406, 438], "left_boundari": 393, "left_low": 385, "left_upp": 385, "leg": [325, 423], "legal": 429, "legend": [319, 323, 325, 415, 423], "legend_level": 319, "len": [383, 384, 385, 403, 404, 405, 430, 437], "length": [0, 25, 27, 118, 132, 135, 146, 174, 193, 194, 200, 266, 267, 285, 286, 319, 323, 325, 328, 329, 330, 331, 332, 346, 348, 349, 350, 351, 354, 355, 396, 397, 401, 413, 426, 431, 432, 437, 438, 439], "length3": [36, 358], "leq": [11, 12], "less": [0, 27, 86, 119, 146, 174, 329, 330, 343, 346, 348, 357, 374, 417, 419, 420, 426], "lesson": 380, "let": [42, 234, 254, 385, 393, 394, 397, 417, 419, 420, 427, 431, 435, 436, 437, 438, 439], "letter": [25, 135, 354], "level": [0, 3, 26, 51, 56, 59, 61, 66, 68, 70, 72, 103, 112, 114, 117, 127, 166, 169, 173, 174, 194, 201, 250, 273, 292, 319, 321, 323, 325, 326, 377, 378, 379, 380, 381, 382, 385, 406, 413, 415, 427, 432, 433, 437], "levelnam": 56, "lgr": 417, "li": 146, "lib": 432, "libari": 429, "libmf6": [0, 77], "librari": [427, 435], "lift": 0, "like": [0, 5, 26, 44, 45, 55, 84, 85, 91, 92, 95, 96, 101, 102, 106, 110, 122, 123, 129, 146, 149, 150, 155, 156, 161, 162, 174, 182, 183, 187, 188, 197, 203, 238, 258, 261, 269, 279, 288, 289, 290, 291, 292, 317, 323, 326, 371, 374, 375, 394, 396, 409, 410, 411, 417, 419, 420, 427, 432, 436, 437, 438, 439, 440], "like_2d": [401, 409, 410], "like_2d_coars": 410, "like_3d": 401, "limit": [0, 174, 269, 328, 329, 330, 331, 332, 357, 427, 429, 439, 440], "line": [0, 5, 9, 13, 14, 22, 39, 61, 68, 70, 72, 78, 279, 285, 286, 294, 319, 322, 326, 378, 385, 391, 393, 394, 396, 398, 399, 401, 404, 413, 415, 427, 431, 432, 435], "line1": 385, "line2": 385, "line2d": [378, 391, 399, 431], "line_3d": [0, 359], "line_intercept": 5, "line_slop": 5, "linear": [0, 27, 74, 78, 80, 118, 132, 163, 174, 194, 258, 346, 347, 348, 357, 399, 419, 420, 422, 426], "linear_acceler": [0, 174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "linearli": 7, "linearsegmentedcolormap": 323, "lineno": 56, "liner": 258, "linestr": [0, 10, 14, 22, 164, 167, 170, 285, 286, 295, 385, 413, 438], "linestring_to_square_zpolygon": [0, 359], "linestring_to_trapezoid_zpolygon": [0, 111, 113, 115, 359], "linewidth": 438, "link": [251, 374, 388, 401, 429, 433, 440], "linspac": [437, 438, 439], "linux": 427, "liquid": 103, "list": [0, 8, 22, 25, 26, 36, 41, 45, 47, 49, 51, 52, 54, 55, 77, 79, 80, 82, 87, 90, 93, 97, 100, 103, 105, 108, 124, 127, 130, 131, 137, 138, 141, 151, 152, 157, 160, 174, 179, 194, 198, 201, 204, 205, 206, 209, 239, 258, 261, 269, 285, 286, 288, 317, 319, 323, 325, 343, 354, 358, 370, 379, 401, 415, 417, 429], "listedcolormap": 319, "listing_fil": [103, 108, 401], "listlik": [36, 319, 323, 327, 358], "littl": [45, 426], "ll": [298, 371, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 401, 404, 408, 409, 410, 411, 413, 427, 429, 431, 436, 437, 438, 439], "lmk": 146, "load": [0, 3, 5, 41, 50, 54, 82, 83, 90, 100, 121, 127, 131, 148, 154, 160, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 269, 279, 295, 344, 346, 347, 394, 402, 406, 413, 417, 432, 435, 437, 438], "load_balance_weight": [346, 347], "loadset": 0, "loam": 249, "loc": [404, 408, 437], "local": [174, 371, 372, 376], "locat": [0, 4, 5, 7, 16, 22, 26, 82, 83, 107, 124, 130, 194, 198, 204, 205, 206, 230, 251, 266, 269, 275, 277, 280, 282, 285, 286, 291, 293, 296, 298, 299, 300, 316, 317, 318, 319, 322, 328, 329, 330, 331, 332, 333, 334, 385, 401, 408, 413, 417, 427, 431, 432, 437, 438], "lock": 429, "lockfil": 429, "log": [0, 359], "log_level": [59, 68, 72], "logarithm": [146, 343], "logger": [56, 58, 61, 66, 70], "logger_typ": 59, "loggertyp": [56, 59], "login": 372, "loglevel": [56, 59, 61, 63, 64, 68, 70, 72], "lognorm": 397, "logspac": 438, "loguru": [0, 56, 58, 68], "logurulogg": 58, "lon": 411, "long": [334, 393, 400, 419, 420, 427, 431], "longer": [0, 419, 420, 427], "longitud": [9, 13, 294], "longitudin": [86, 336, 377, 378, 379, 380, 381, 382], "longitudinal_horizont": [86, 212, 393, 396, 399, 406, 437], "longitudinal_vert": [86, 212, 437], "look": [26, 146, 179, 228, 290, 317, 319, 323, 343, 370, 371, 375, 397, 400, 402, 409, 431, 435, 437, 438, 439], "lookup": [0, 26, 226, 247, 249, 391, 437], "lookup_and_forcing_fil": 26, "loop": [279, 295, 417, 431, 438], "loos": 375, "lot": [371, 391, 401, 419, 420, 424, 427, 431, 438], "low": [112, 114, 117, 166, 169, 173, 174, 427, 438], "lower": [0, 4, 5, 6, 9, 10, 11, 29, 41, 54, 119, 124, 127, 139, 174, 198, 201, 207, 237, 272, 281, 323, 324, 343, 352, 394, 413, 438, 439], "lowermost": 280, "lowest": [0, 3], "lowland": 26, "lpf": [343, 377, 378, 379, 380, 381, 382, 401, 426], "lst": [103, 108], "lt": [93, 152, 194, 385, 391, 394, 401, 413, 431, 436, 437, 438, 439], "ltsc2022": 372, "lu": [174, 391], "luckili": [401, 439], "lump": 342, "lump_dispers": [342, 377, 378, 379, 380, 381, 382], "luse_mswp": 26, "luse_svat": [26, 237, 249, 391], "lx": 406, "ly": 438, "m": [0, 3, 4, 6, 19, 24, 25, 26, 44, 55, 74, 139, 140, 207, 208, 229, 237, 245, 254, 269, 317, 323, 327, 336, 343, 349, 350, 351, 353, 354, 372, 377, 378, 379, 380, 381, 382, 385, 393, 394, 401, 406, 408, 411, 413, 415, 426, 439], "m2": [26, 224, 343], "m3": [4, 6, 224, 251, 327, 343, 393, 406], "maa": 237, "machin": [372, 376, 427, 429], "maco": 427, "macro": 0, "macropor": 249, "made": [0, 104, 109, 127, 136, 201, 273, 275, 277, 317, 391], "magma": [413, 438], "magnitud": [174, 284], "mai": [26, 33, 41, 44, 45, 47, 54, 55, 81, 86, 89, 93, 94, 99, 116, 119, 120, 125, 134, 146, 147, 152, 153, 159, 165, 168, 171, 174, 181, 185, 190, 196, 200, 258, 269, 298, 304, 305, 306, 307, 316, 328, 329, 330, 331, 332, 333, 355, 394, 401, 419, 420, 422, 424, 426, 431, 432, 433, 437], "main": [0, 13, 14, 21, 127, 201], "mainli": 427, "maintain": [0, 119, 174, 258, 261, 329, 330, 372, 376], "maiz": 391, "major": [375, 433], "make": [0, 41, 47, 54, 56, 80, 138, 139, 140, 143, 231, 258, 261, 310, 323, 371, 372, 373, 393, 397, 398, 401, 404, 413, 417, 420, 423, 426, 429, 431, 437, 438], "makedir": 391, "mamba": 0, "mambaforg": 429, "manag": [26, 44, 55, 298, 417, 427, 428, 429, 435], "mandatori": [0, 423, 436, 437], "mangl": 0, "mani": [0, 5, 7, 45, 118, 174, 258, 320, 330, 343, 371, 375, 388, 417, 426, 431, 432, 433, 437, 440], "manner": [78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206, 269, 435, 439], "manual": [0, 21, 26, 105, 137, 163, 371, 393, 397, 401, 431, 435, 437, 439], "map": [0, 39, 45, 47, 49, 85, 92, 96, 102, 105, 123, 126, 129, 137, 150, 156, 162, 183, 188, 192, 197, 203, 227, 248, 252, 323, 414, 416, 423, 430, 431, 432, 440, 441], "mapnik": 415, "march": [0, 3], "mark": [284, 427, 437], "markdown": 374, "marker": 438, "mask": [0, 106, 110], "mask_all_model": 0, "mask_all_packag": [0, 437], "mass": [30, 118, 131, 132, 180, 329, 330, 331, 334, 344, 357, 396, 399, 426, 437], "mass_budget": 399, "massload": 0, "match": [0, 41, 42, 54, 255, 256, 258, 288, 372, 419, 422, 433], "materi": 426, "mathemat": 427, "matplot": 323, "matplotlib": [319, 323, 324, 326, 327, 377, 378, 380, 381, 382, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 406, 408, 409, 410, 411, 413, 414, 415, 417, 427, 429, 431, 435, 437, 438], "matplotlig": 319, "matric": 427, "matrix": [27, 78, 146, 174, 269, 336, 342, 343, 408, 431], "matrix_conditioning_method": 27, "matter": [399, 427, 438], "max": [210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 290, 323, 401, 402, 437, 439], "max_abstraction_groundwat": [0, 251], "max_abstraction_surfacewat": [0, 251], "max_concentr": [393, 396], "max_dens": [393, 396], "max_diff": 439, "max_it": [27, 342, 346, 347, 348, 377, 378, 379, 380, 381, 382], "max_n_transport_timestep": 355, "max_nparticl": 330, "max_overlap": [257, 261], "max_particl": 329, "max_row": 437, "maxbound": 77, "maxim": [7, 19], "maximum": [3, 26, 27, 93, 174, 251, 257, 258, 261, 329, 330, 342, 346, 347, 348, 355, 357, 396, 401, 435], "maximum_r": [338, 339, 340], "mayavi": 435, "mb": [384, 387, 392, 405, 412, 416, 430, 441], "mcdonald": 398, "mckee": 174, "mcr": 372, "mcve": 375, "md": 174, "mdal": [0, 104, 109, 136, 310, 418, 419], "mdal_compli": [0, 104, 109, 136], "mdal_compliant_ugrid2d": [0, 104, 109, 136, 308, 359, 418, 419], "mean": [0, 26, 41, 54, 85, 92, 96, 102, 123, 127, 129, 139, 143, 146, 150, 156, 162, 174, 183, 188, 197, 201, 203, 207, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 257, 258, 261, 269, 291, 292, 320, 343, 370, 371, 373, 401, 406, 408, 417, 419, 420, 427, 429, 433, 434, 435, 437, 438, 439], "mean_head": [408, 417, 435], "mean_heads_in_grid": 408, "mean_regridd": 258, "mean_voxel": 261, "measur": [0, 3, 21, 254, 291, 401, 408, 433], "mechan": [86, 396], "med": 290, "median": [257, 258, 261], "medium": [334, 426], "meet": 355, "meetpunt": 408, "mem": [384, 387, 392, 405, 412, 416, 430, 441], "memmap": 0, "memori": [0, 27, 41, 54, 86, 146, 174, 194, 245, 269, 329, 330, 342, 394, 417], "mention": [105, 126, 137, 252], "merg": [0, 45, 207, 269, 371, 402, 433], "merge_to_dataset": 207, "mesh": [0, 310, 314, 317, 400, 418], "mesh2d": 394, "mesh2d_edge_i": 394, "mesh2d_edge_nod": 394, "mesh2d_edge_x": 394, "mesh2d_face_nod": 394, "mesh2d_nedg": 394, "mesh2d_nfac": 394, "mesh2d_nfacespandasindexpandasindex": 394, "mesh2d_nmax_face_nod": 394, "mesh2d_nnod": 394, "mesh2d_node_i": 394, "mesh2d_node_x": 394, "mesh2d_x": 396, "mesh_kwarg": [317, 318], "mesher": [419, 422], "meshzoo": 0, "messag": [0, 56, 61, 63, 64, 68, 70, 72], "met": [127, 174, 201], "meta": [394, 431, 437], "metadata": [41, 42, 54, 290], "metadata_dict": 391, "metamod": [0, 359], "metasvap": [226, 247], "metaswap": [0, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 359, 392, 430], "metaswap_exampl": [390, 392, 430], "metaswap_jupyt": 389, "metaswap_python": 389, "metaswapact": 229, "metaswapmodel": [0, 359, 423], "mete_grid": [0, 227, 242, 243, 248, 423], "mete_mswp": 26, "mete_stat": 423, "meteo": [0, 26, 234], "meteo_station_numb": 26, "meteogrid": [359, 423], "meteogridcopi": [0, 359, 423], "meteomap": 0, "meteorolog": [26, 242, 243, 401, 438], "meteorologi": 401, "meteost": 423, "meter": [3, 5, 11, 174, 245, 249, 336, 343], "meth": 0, "method": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 61, 63, 64, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 90, 92, 93, 96, 97, 98, 100, 102, 103, 105, 108, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 127, 128, 129, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 154, 156, 157, 158, 160, 162, 163, 164, 166, 167, 169, 170, 173, 174, 178, 180, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 290, 291, 292, 298, 317, 318, 320, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 370, 394, 395, 396, 397, 399, 401, 411, 413, 417, 419, 420, 422, 423, 431, 435, 436], "method_nam": 437, "method_wet": 343, "metpi": [294, 295], "mf6": [0, 229, 239, 285, 286, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 417, 423, 430, 435, 436, 437, 438, 439], "mf6_di": 241, "mf6_jupyt": 403, "mf6_python": 403, "mf6_regridded_di": 240, "mf6_sim": 137, "mf6_wel": 241, "mf6_wel_adapt": 0, "mf6horizontalflowbarri": [112, 114, 117, 166, 169, 173], "mf6io": 87, "mf6io_6": [93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 164, 167, 170, 174, 189, 193, 198, 205, 206], "mf6path": 143, "mf6wel": [0, 107, 130, 204, 241], "mfnadvfd": 357, "mfsimul": 417, "mib": [431, 437], "mic": [342, 377, 378, 379, 380, 381, 382], "microsecond": [140, 207, 208], "microsoft": 372, "mid": [7, 77, 391], "midpoint": [0, 7, 256, 304, 305, 306, 307, 438], "might": [0, 237, 295, 371, 377, 378, 379, 380, 381, 382, 391, 408, 427, 435, 438, 439], "migrat": 0, "million": 431, "milu": 174, "milut": 174, "mimic": [127, 201], "miminum": 401, "min": [26, 290, 323, 401], "min_concentr": [393, 396], "min_dens": [393, 396], "mind": 435, "miniconda": 429, "miniforg": 429, "minim": [12, 334, 375], "minima": 174, "minimum": [8, 11, 12, 26, 174, 257, 258, 261, 266, 273, 329, 330, 334, 357, 375, 401], "minimum_active_thick": 334, "minimum_k": [124, 127, 198, 201, 266, 398, 400], "minimum_thick": [0, 124, 127, 198, 201, 266, 273, 393], "minor": 0, "minu": [146, 174, 194], "minut": [140, 207, 208, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 411, 413, 415, 431, 432, 435, 436, 437, 438, 439], "mipwa": 249, "mipwa2": 401, "misconcept": 427, "mismatch": 256, "misnom": 74, "miss": [0, 298, 299, 300, 401, 423, 433, 436], "mistak": [270, 271, 272, 273, 439], "mix": [0, 151, 179, 180, 184, 314, 334], "mixelm": [328, 329, 330, 331, 332], "ml": 334, "mm": [19, 26, 28, 237, 242, 254, 401], "mmoc": [329, 331], "mobil": [118, 132], "mobile_immobile_mass_transfer_r": 118, "mobilestoragetransf": [218, 393, 396, 399, 406, 437], "mobilestoragetransferregridmethod": 0, "moc": 329, "mod2svat": [225, 423], "mode": [210, 211, 219, 222, 223, 257, 258, 261, 290, 291, 292, 437], "model": [0, 8, 13, 14, 15, 18, 22, 24, 25, 26, 27, 29, 31, 36, 42, 45, 77, 78, 80, 88, 90, 93, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 124, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 154, 157, 158, 160, 164, 166, 167, 169, 170, 173, 174, 179, 180, 184, 186, 189, 191, 193, 194, 198, 199, 204, 205, 206, 207, 209, 229, 233, 234, 237, 238, 239, 241, 249, 253, 256, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 277, 301, 320, 328, 329, 330, 331, 332, 333, 334, 336, 337, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 391, 392, 395, 399, 403, 405, 406, 408, 413, 419, 420, 422, 423, 424, 430, 431, 432, 433, 435, 437, 440, 441], "model_nam": 0, "modeldir": [377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 398, 399, 401, 404, 406], "modelgrid": 417, "modellay": [26, 206], "modelnam": [0, 24, 78, 104, 109, 174, 175, 176, 177, 353, 393, 394, 396, 398, 399, 400, 401, 404, 406], "moder": 423, "modern": [429, 432], "modflow": [0, 23, 25, 27, 35, 74, 77, 80, 82, 83, 84, 87, 90, 91, 93, 95, 97, 100, 101, 103, 108, 111, 112, 113, 114, 115, 117, 119, 121, 122, 124, 128, 130, 131, 135, 143, 145, 146, 148, 149, 151, 152, 154, 155, 157, 161, 163, 164, 166, 167, 169, 170, 173, 174, 182, 186, 187, 189, 191, 193, 194, 198, 202, 204, 205, 206, 225, 254, 262, 263, 264, 265, 270, 271, 272, 348, 349, 350, 351, 354, 355, 357, 388, 389, 393, 394, 396, 398, 400, 401, 403, 404, 417, 424, 426, 432, 436, 440], "modflow2005": [417, 423, 426], "modflow6": [0, 77, 107, 137, 145, 207, 208, 209, 229, 359, 389, 392, 393, 394, 397, 398, 399, 401, 404, 417, 428, 430, 434, 435, 436], "modflow6_write_kwarg": 0, "modflow6simul": [0, 127, 201, 393, 394, 396, 398, 399, 400, 401, 404, 406, 423, 436], "modif": 371, "modifi": [27, 329, 331, 336, 342, 377, 393, 398, 401, 428], "modlfow": 0, "modlow6": 239, "modpath": 417, "modul": [0, 21, 56, 58, 66, 245, 255, 256, 346, 347, 374, 407, 427, 431], "modular": 406, "moistur": [26, 249], "molecular": [86, 336, 396, 437], "moment": [0, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 197, 203], "momentum": 174, "monteith": 237, "month": [0, 3, 140, 207, 208, 385], "monthli": [3, 385], "more": [0, 13, 14, 25, 27, 41, 44, 45, 47, 54, 55, 66, 75, 77, 86, 103, 108, 135, 145, 146, 174, 249, 254, 269, 279, 305, 307, 320, 328, 329, 330, 331, 332, 342, 348, 354, 357, 377, 380, 385, 391, 394, 396, 397, 399, 401, 403, 417, 423, 426, 427, 428, 432, 433, 437, 438, 439], "most": [0, 5, 27, 41, 54, 174, 269, 281, 283, 328, 329, 330, 331, 332, 342, 343, 346, 347, 348, 357, 388, 397, 419, 420, 426, 427, 429, 435, 437, 438], "mostli": [417, 440], "mother": 433, "mound": 394, "move": [0, 73, 329, 330, 390, 394], "movement": 382, "mover": 194, "mp4": 317, "mpimg": 435, "msl": [19, 26], "mst": [218, 393, 396, 399, 406], "msw": [0, 359, 391, 423], "mt3d": [11, 12, 74, 355, 417], "mt3dm": [344, 356, 357, 406, 428], "mtdnconc": 357, "much": [0, 27, 146, 317, 318, 328, 329, 330, 331, 332, 348, 357, 385, 426, 427, 429, 439], "multi": [0, 130, 204, 334, 424, 427, 428, 431, 435, 437], "multidimension": 417, "multilinear": [0, 258, 401], "multimodel": [0, 395, 402, 406], "multipl": [0, 27, 41, 42, 43, 47, 50, 54, 78, 126, 127, 130, 138, 141, 201, 204, 252, 262, 263, 264, 265, 275, 277, 289, 295, 319, 399, 401, 426, 427, 431, 438], "multipli": [0, 112, 113, 114, 117, 152, 163, 166, 167, 169, 173, 193, 249, 343, 349, 350, 351, 355, 385, 426, 431, 436], "multispeci": [334, 406], "must": [3, 5, 6, 9, 10, 11, 12, 25, 31, 47, 78, 80, 105, 106, 110, 119, 124, 135, 137, 140, 146, 174, 180, 184, 198, 207, 208, 224, 226, 228, 231, 245, 247, 249, 251, 261, 290, 294, 295, 316, 317, 319, 324, 326, 328, 329, 330, 331, 332, 333, 334, 354, 355, 406, 426, 435, 437], "mutat": 0, "mwe": 375, "mxiter": [27, 284, 342, 346, 347, 348, 408], "mxpart": [329, 330], "mxstrn": 355, "my": [207, 419, 422], "my_first_imodflow_model": 385, "my_project": 429, "mydask": 435, "mypi": 370, "mypy_lint": 370, "myth": 427, "n": [0, 41, 42, 54, 74, 126, 139, 140, 207, 208, 252, 274, 285, 286, 319, 323, 325, 326, 385, 401, 413, 429, 431, 432, 436, 437], "n_face": [394, 396, 400], "n_speci": 334, "n_streamlin": [326, 413], "n_timestep": [135, 193, 355, 393, 396, 399, 406, 436], "n_years_gvg": 3, "n_years_gxg": 3, "nadvfd": 328, "nam": 385, "name": [0, 22, 26, 36, 41, 42, 43, 44, 45, 47, 54, 55, 56, 58, 66, 78, 85, 92, 93, 96, 102, 103, 105, 107, 108, 111, 113, 115, 118, 123, 127, 129, 133, 137, 138, 141, 142, 150, 152, 156, 162, 164, 167, 170, 174, 179, 183, 188, 192, 197, 201, 203, 209, 237, 249, 254, 255, 256, 269, 279, 288, 289, 291, 292, 313, 314, 321, 323, 358, 370, 376, 377, 378, 379, 380, 381, 382, 385, 391, 394, 401, 413, 419, 420, 431, 432, 436, 437, 438, 439], "namefil": 0, "namespac": 0, "namfil": 0, "nan": [0, 5, 44, 47, 49, 55, 84, 91, 95, 101, 122, 138, 140, 149, 155, 161, 182, 187, 194, 208, 258, 261, 278, 288, 290, 298, 304, 305, 306, 307, 316, 385, 393, 398, 399, 400, 401, 404, 408, 409, 419, 420, 437, 438, 439], "nan_lik": 406, "nanarrai": [385, 401, 437, 438, 439], "nanosecond": [140, 207, 208, 401, 404, 437], "nanpercentil": [258, 261], "nanxarrai": 438, "nap": 408, "natur": [151, 329, 330, 433, 438], "navig": 372, "nbstripout": 374, "nc": [417, 418, 419, 431], "ncol": [297, 377, 378, 379, 380, 381, 382, 385, 393, 397, 398, 399, 400, 404, 406], "ncomp": 334, "ncr": 342, "ndarrai": [124, 198, 297, 299, 303, 304, 305, 306, 307, 312, 394, 431, 435, 437], "ndim_regrid": 258, "ndimag": [401, 419, 420], "ndp48": 372, "nearest": [3, 226, 247, 258, 278, 290, 401, 413, 417, 419, 420, 431, 435, 437], "nearli": [417, 440], "neatli": [44, 55], "necesarili": 404, "necessari": [0, 118, 258, 329, 330, 385, 401, 410, 415, 427, 437], "necessit": [11, 12], "need": [0, 26, 36, 41, 42, 44, 45, 54, 55, 66, 82, 83, 90, 100, 106, 110, 121, 127, 137, 143, 148, 151, 154, 160, 174, 186, 201, 258, 261, 275, 277, 285, 311, 329, 330, 331, 334, 342, 343, 349, 350, 351, 355, 358, 372, 373, 376, 380, 385, 393, 394, 396, 401, 408, 410, 413, 417, 429, 431, 433, 435, 437, 439], "neg": [0, 5, 11, 27, 118, 124, 131, 132, 146, 198, 205, 206, 290, 377, 378, 379, 380, 381, 382, 401], "neglig": [329, 330, 331, 426, 427], "neighbor": [146, 278, 343, 419, 420, 434], "neighbour": [226, 247, 278, 437], "neither": 26, "nest": [0, 51], "net": [5, 254, 372], "netcdf": [0, 104, 109, 136, 310, 401, 417, 428], "netcdf4": [304, 305, 306, 307], "netflow": 5, "netflow_lay": 5, "netflow_right": 5, "netflow_right_of_diagon": 5, "netherland": [0, 401, 431], "network": [401, 423], "new": [0, 9, 10, 13, 14, 82, 83, 90, 100, 121, 142, 144, 148, 160, 186, 249, 290, 294, 295, 298, 329, 330, 371, 372, 375, 388, 393, 394, 395, 396, 397, 398, 403, 404, 413, 419, 420, 427, 437], "new_model": 397, "new_npf": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 197, 203], "new_riv": 439, "new_riv_d": 439, "new_sim": 395, "new_simul": 397, "new_top": 274, "newer": 0, "newton": [0, 103, 174, 401], "next": [0, 25, 127, 135, 201, 242, 243, 329, 330, 331, 354, 370, 385, 401, 403, 406, 408, 413, 415, 435, 436, 437, 438], "nface": [394, 396, 400], "ngwa": 163, "nice": [41, 54, 374, 408, 436, 438], "nieuwkoopse_pla": 404, "nl": [163, 370, 372, 377, 378, 379, 380, 381, 382, 385], "nlai": [333, 377, 378, 379, 380, 381, 382, 385, 393, 397, 398, 399, 400, 404, 406], "nlayer": [394, 396, 400], "nlsink": 331, "no_ptc": [0, 174, 175, 176, 177], "nodata": [0, 44, 47, 48, 49, 55, 84, 91, 95, 101, 122, 149, 155, 161, 182, 187, 230, 270, 271, 272, 279, 288, 316, 439], "nodatavalu": 26, "node": [27, 146, 174, 346, 348, 398, 400, 404], "nodepropertyflow": [0, 90, 100, 160, 219, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 423, 437], "nodepropertyflowregridmethod": [0, 85, 92, 96, 102, 123, 129, 148, 150, 156, 162, 183, 188, 197, 203, 397], "nois": 374, "nomenclatur": 74, "nomin": 194, "non": [0, 5, 7, 13, 14, 50, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 197, 203, 290, 294, 304, 305, 306, 307, 343, 357, 393, 397, 401, 404, 419, 420, 426], "nonconverg": 174, "none": [0, 5, 8, 22, 23, 24, 35, 36, 39, 41, 42, 43, 44, 47, 48, 49, 54, 55, 58, 59, 61, 66, 68, 70, 72, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 116, 118, 119, 120, 121, 123, 124, 125, 129, 131, 132, 134, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 168, 171, 174, 175, 176, 177, 181, 183, 185, 186, 188, 190, 191, 192, 194, 196, 197, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237, 238, 240, 245, 255, 256, 258, 259, 260, 265, 266, 269, 270, 271, 272, 278, 279, 284, 288, 290, 310, 319, 321, 323, 324, 327, 341, 346, 347, 352, 353, 355, 358, 385, 391, 393, 394, 396, 398, 399, 400, 401, 404, 406, 413, 436, 437, 438, 439], "nonequidist": [0, 303, 312], "nonexarrai": [436, 437, 438, 439], "nonlinear": [27, 174, 342, 346, 347, 348], "nonuniform": [329, 330], "nonzero": 194, "norm": [174, 319], "normal": [41, 42, 54, 66, 127, 201, 234, 329, 330, 357, 426, 437], "north": 21, "northeast": 401, "nota": [19, 27, 28, 330, 336, 348], "notabl": 0, "notat": [41, 54], "note": [5, 9, 10, 13, 14, 19, 23, 26, 28, 35, 39, 41, 42, 45, 47, 54, 74, 75, 76, 77, 78, 143, 146, 174, 194, 230, 237, 285, 290, 295, 304, 305, 306, 307, 317, 328, 329, 330, 331, 332, 334, 346, 347, 355, 374, 377, 378, 379, 380, 381, 382, 394, 396, 397, 401, 413, 417, 427, 431, 432, 438, 439], "notebook": [0, 374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "noth": 174, "notic": [0, 411, 436], "notimplementederror": 0, "notnul": [419, 420], "now": [0, 26, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 397, 398, 400, 401, 402, 404, 406, 409, 427, 436, 437, 438, 439], "np": [0, 5, 36, 41, 42, 44, 54, 124, 137, 151, 194, 198, 258, 261, 288, 290, 297, 298, 358, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 408, 409, 413, 415, 419, 420, 431, 432, 435, 436, 437, 438, 439], "nparticles_advect": [329, 330], "nparticles_no_advect": [329, 330], "npc": [346, 347], "npf": [0, 85, 90, 92, 96, 100, 102, 123, 129, 146, 148, 150, 156, 160, 162, 183, 188, 197, 203, 219, 393, 394, 396, 397, 398, 399, 400, 404, 406, 426, 437], "npf_regrid": 397, "nph": [329, 330], "npl": [329, 330], "nplane": [329, 330], "npmax": [329, 330], "npmin": [329, 330], "npsink": 331, "nrchop": [349, 350, 351], "nrow": [297, 377, 378, 379, 380, 381, 382, 385, 393, 397, 398, 399, 400, 404, 406, 437], "nseg": 0, "nstp": [193, 355], "nswtcpl": 357, "nt": 372, "ntrailwav": 194, "null": 58, "nulllogg": 58, "numba": [258, 261, 417], "numba_celltre": 429, "number": [0, 3, 26, 27, 44, 47, 48, 49, 50, 55, 61, 68, 70, 72, 77, 80, 93, 118, 124, 131, 135, 152, 157, 174, 193, 198, 205, 206, 234, 255, 258, 269, 281, 283, 297, 299, 326, 328, 329, 330, 331, 332, 333, 334, 342, 343, 346, 347, 348, 350, 355, 357, 374, 376, 378, 380, 381, 388, 393, 398, 399, 400, 401, 404, 406, 408, 414, 419, 420, 424, 426, 427, 429, 431, 432, 434, 435, 437, 438], "number_orthogon": 174, "number_partit": [395, 402], "numer": [0, 174, 375, 399, 401, 426, 437], "numpi": [0, 44, 151, 258, 261, 269, 279, 298, 305, 307, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 408, 413, 415, 417, 427, 429, 431, 432, 435, 436, 437, 438, 439], "numpysupport": [258, 261], "nutshel": [429, 435], "nwaveset": 194, "o": 391, "object": [0, 22, 41, 42, 54, 61, 82, 83, 90, 100, 105, 107, 121, 127, 130, 135, 137, 142, 148, 151, 154, 160, 186, 191, 201, 204, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237, 257, 258, 259, 260, 261, 315, 316, 323, 354, 359, 372, 377, 378, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 401, 404, 406, 408, 409, 410, 411, 413, 417, 423, 431, 432, 436, 437, 438, 439], "objectnonearrai": [436, 437, 438, 439], "observ": [79, 80, 87, 93, 97, 124, 131, 152, 157, 194, 198, 205, 206, 394, 408, 432, 436, 437, 438, 439], "obsolet": 0, "obstruct": 22, "obtain": [9, 10, 13, 14, 294, 295, 319, 324, 326, 343, 401, 402, 408, 411, 413], "obviou": [374, 435], "oc": [0, 105, 137, 151, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 398, 399, 400, 404, 406], "occupi": [26, 112, 114, 117, 166, 169, 173], "occur": [0, 26, 27, 50, 80, 118, 119, 269, 291, 292, 320, 357, 401, 426, 438], "occurr": 26, "octob": 385, "off": [0, 78, 377, 378, 379, 380, 382, 385, 398, 409, 431, 436, 437, 438], "offici": 0, "often": [357, 426, 427, 432, 439], "ogr": [269, 279, 291, 292, 432], "ogw": 87, "oh": 439, "ok": 403, "old": [372, 376, 419, 420], "old_riv": 439, "older": [0, 370, 426], "olsthoorn": [13, 14], "omit": 174, "ommit": 435, "onc": [0, 42, 80, 257, 258, 261, 314, 372, 427, 435], "one": [0, 5, 8, 25, 27, 39, 41, 44, 45, 47, 50, 54, 55, 82, 83, 85, 90, 92, 96, 100, 102, 111, 113, 115, 118, 119, 121, 123, 124, 126, 129, 132, 135, 146, 148, 150, 151, 154, 156, 160, 162, 164, 167, 170, 174, 180, 183, 184, 186, 188, 189, 192, 197, 198, 203, 250, 252, 258, 261, 266, 269, 270, 271, 272, 278, 284, 290, 314, 317, 328, 329, 330, 331, 332, 334, 336, 342, 343, 346, 347, 348, 354, 355, 357, 370, 376, 393, 397, 399, 400, 401, 408, 410, 417, 423, 427, 431, 433, 435, 437], "ones": [385, 391, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 419, 420, 435, 436, 437], "ones_lik": [5, 391, 393, 437, 438], "onli": [0, 5, 8, 11, 12, 13, 14, 19, 26, 27, 28, 36, 41, 44, 54, 55, 80, 82, 85, 92, 96, 102, 105, 111, 112, 113, 114, 115, 117, 118, 119, 123, 129, 137, 140, 146, 150, 151, 156, 162, 164, 166, 167, 169, 170, 173, 174, 180, 183, 184, 188, 189, 194, 197, 203, 207, 208, 230, 237, 249, 258, 264, 269, 278, 290, 291, 318, 320, 324, 329, 330, 331, 342, 343, 344, 346, 347, 355, 356, 357, 358, 372, 373, 377, 378, 379, 380, 381, 382, 385, 394, 396, 401, 408, 417, 423, 426, 428, 429, 435, 436, 437, 438, 439], "onlin": [371, 374, 435, 439], "onlinelibrari": 163, "onto": [9, 10, 13, 14, 142, 288, 397], "open": [0, 3, 5, 42, 50, 137, 138, 139, 140, 141, 207, 208, 227, 248, 290, 292, 320, 359, 372, 377, 378, 379, 380, 381, 382, 385, 399, 403, 418, 419, 423, 427, 428, 431, 435, 437], "open_": 0, "open_cbc": [0, 423], "open_concentr": [0, 393, 396, 399, 406], "open_dataarrai": [418, 419], "open_dataset": [0, 359, 401, 418, 419, 431], "open_dv": 0, "open_flow_budget": [0, 394, 395, 423], "open_hd": [0, 398, 401, 404, 417, 423, 435], "open_head": [0, 393, 394, 395, 396, 401, 402, 423, 437], "open_projectfile_data": [0, 82, 83, 90, 100, 121, 126, 127, 137, 148, 154, 160, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 252, 359, 423], "open_rasterio": 290, "open_subdomain": [0, 359], "open_transport_budget": [0, 399], "openstreetmap": [0, 415], "oper": [0, 45, 66, 106, 110, 316, 329, 330, 331, 396, 401, 409, 419, 420, 422, 427, 429, 432, 435], "opposit": 174, "opt": 437, "optim": [174, 355, 427, 435], "option": [0, 3, 4, 5, 6, 8, 11, 12, 19, 22, 24, 27, 28, 36, 39, 41, 42, 43, 44, 45, 47, 49, 54, 55, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 105, 108, 109, 116, 118, 120, 121, 123, 124, 125, 127, 129, 131, 132, 134, 136, 137, 140, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 165, 168, 171, 174, 179, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 203, 205, 206, 207, 208, 237, 249, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271, 272, 275, 277, 278, 279, 288, 290, 291, 292, 301, 310, 316, 319, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 358, 371, 396, 401, 411, 426, 429, 431, 432, 437], "optionalkeyword": 174, "order": [0, 75, 76, 80, 118, 124, 132, 174, 198, 273, 284, 316, 326, 329, 330, 331, 355, 399, 401, 408, 419, 420, 438], "ordin": 391, "ordinari": [419, 420, 435], "org": [30, 32, 55, 77, 180, 184, 258, 261, 291, 292, 319, 320, 323, 372, 380, 382, 385], "organ": [424, 429], "orient": [146, 393], "origin": [0, 4, 45, 106, 110, 174, 194, 266, 355, 374, 393, 394, 395, 397, 398, 400, 401, 402, 411, 431, 437, 439], "original_modeldir": 402, "original_rch_packag": 437, "original_simul": 437, "orthomin": 342, "oscil": 76, "oss": [163, 377, 378, 379, 380, 381, 382, 385], "other": [0, 41, 42, 47, 54, 55, 74, 77, 135, 146, 174, 209, 262, 263, 265, 291, 319, 324, 326, 354, 374, 394, 399, 401, 406, 419, 420, 423, 426, 427, 429, 432, 435, 436, 438], "otherwis": [47, 151, 289, 336, 385, 429, 436], "oud": 382, "our": [371, 372, 374, 385, 394, 409, 411, 423, 429, 436, 438, 439], "out": [0, 127, 146, 201, 298, 299, 320, 324, 370, 371, 400, 417, 420, 426, 427, 429, 435, 436, 437, 438], "out_of_bound": [0, 298, 299, 300], "outcom": 406, "outer": [27, 146, 174, 284, 342, 343, 346, 347, 348, 377, 380, 401, 419, 420], "outer_csvfil": [0, 174, 175, 176, 177], "outer_dvclos": [174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "outer_edg": 401, "outer_maximum": [174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "outflow": [80, 87, 93, 97, 124, 152, 157, 198, 205, 206, 327], "outgo": 5, "outletman": 0, "outletspecifi": 0, "outletweir": 0, "outlin": [127, 201, 393], "output": [0, 4, 5, 25, 26, 45, 56, 59, 77, 78, 79, 80, 87, 93, 97, 103, 105, 108, 118, 124, 131, 132, 135, 137, 140, 142, 146, 151, 152, 157, 174, 179, 180, 184, 189, 194, 198, 205, 206, 207, 208, 239, 253, 254, 274, 288, 317, 343, 345, 354, 359, 374, 385, 393, 394, 397, 402, 404, 417, 423, 433, 435, 437, 440], "outputcontrol": [0, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 398, 399, 400, 401, 404, 406], "outsid": [0, 84, 91, 95, 101, 122, 127, 149, 155, 161, 182, 187, 201, 266, 270, 271, 272, 273, 299, 300, 408, 435], "over": [0, 8, 11, 34, 80, 87, 93, 97, 118, 124, 132, 152, 157, 194, 198, 205, 206, 227, 229, 245, 248, 255, 256, 258, 275, 277, 279, 285, 286, 295, 316, 317, 318, 323, 324, 328, 329, 330, 331, 332, 346, 347, 349, 350, 351, 374, 385, 393, 394, 396, 417, 427, 431, 435, 437, 438], "overal": 399, "overcom": 174, "overhaul": 0, "overhead": [257, 258, 261, 437], "overlai": [319, 321, 323, 408, 415, 438], "overlap": [8, 85, 92, 96, 102, 113, 123, 129, 150, 156, 162, 183, 188, 197, 203, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 256, 258, 266, 397, 437], "overli": [146, 262, 263, 265], "overrid": [82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 137, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 203], "overridden": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203], "overview": [393, 394, 396, 397, 398, 401, 404, 423, 427, 440], "overwhelm": 324, "overwrit": [106, 110], "overwritten": [0, 289], "own": [0, 44, 55, 56, 258, 261, 385, 424], "oxygen": 237, "p": [26, 41, 54, 63, 64, 372, 377, 380, 382, 406], "p1": 237, "p2": 237, "p30": [258, 261], "p30_regridd": 258, "p30_result": [258, 261], "p30_voxel": 261, "p3h": 237, "p3l": 237, "p4": 237, "p54": [11, 12], "pack": 436, "packag": [0, 12, 17, 18, 19, 20, 25, 26, 28, 29, 34, 36, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 232, 239, 241, 244, 246, 248, 249, 250, 252, 255, 256, 259, 260, 269, 275, 277, 333, 334, 335, 337, 341, 343, 344, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 372, 376, 379, 380, 385, 388, 390, 391, 393, 394, 396, 397, 398, 399, 400, 403, 405, 406, 410, 415, 417, 419, 422, 423, 424, 426, 428, 429, 430, 431, 432, 435, 436, 439, 440], "package_convergence_filenam": 404, "package_instance_cr": 437, "package_nam": [178, 427, 437], "packagenam": 160, "pad": [44, 55, 262, 263, 265], "page": [87, 93, 97, 103, 108, 119, 124, 131, 146, 151, 152, 157, 174, 189, 193, 198, 205, 206, 359, 370, 375, 417, 427], "pair": [9, 13, 294, 413, 432], "panda": [0, 45, 46, 47, 48, 49, 50, 127, 201, 266, 269, 273, 289, 291, 292, 305, 307, 327, 379, 380, 382, 385, 388, 391, 393, 394, 396, 399, 401, 404, 406, 408, 409, 417, 419, 420, 422, 428, 429, 430, 432, 436, 437, 440, 441], "pandamesh": [419, 422], "para_sim": [234, 241, 423], "parallel": [0, 346, 347, 402, 429, 435, 437], "paramet": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 391, 393, 394, 398, 399, 400, 404, 408, 424, 426, 432, 437], "parameter": 26, "paraview": 345, "parent": 0, "parenthes": 50, "pars": [0, 41, 294, 295, 313, 391], "part": [0, 5, 26, 41, 42, 54, 84, 91, 95, 101, 113, 122, 149, 155, 161, 182, 187, 313, 316, 317, 373, 377, 378, 379, 380, 381, 382, 385, 401, 402, 427, 432, 433], "partial": [112, 114, 117, 166, 169, 173, 417, 437], "particl": [328, 329, 330, 331, 332, 355], "partit": [0, 144, 179, 346, 347, 403, 405, 406, 430], "partition_gener": [0, 395, 402, 406], "partopt": [346, 347], "pass": [0, 5, 41, 54, 189, 292, 395, 401, 404, 437], "passthrough": [84, 91, 95, 101, 106, 110, 122, 149, 155, 161, 182, 187, 437, 438], "past": [174, 427], "path": [0, 26, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 104, 109, 136, 137, 138, 139, 140, 143, 145, 194, 207, 208, 209, 236, 238, 241, 243, 269, 279, 291, 292, 302, 325, 346, 347, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 398, 401, 403, 404, 418, 419, 420, 427, 431, 432], "path_a": 291, "path_b": 291, "pathcollect": 438, "pathlib": [26, 46, 47, 48, 49, 50, 145, 207, 208, 209, 269, 279, 291, 292, 431], "pathlik": [50, 51, 52], "pattern": [0, 40, 41, 42, 43, 44, 45, 53, 54, 55, 174, 329, 330, 331, 431], "pcg": [27, 50, 174, 343, 346, 377, 378, 379, 380, 381, 382, 385, 423], "pcolormesh": 319, "pd": [3, 12, 25, 36, 45, 124, 194, 198, 266, 292, 346, 347, 354, 358, 379, 380, 382, 385, 391, 393, 396, 399, 401, 406, 408, 419, 420, 436, 437], "pdf": [87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 164, 167, 170, 174, 189, 193, 198, 205, 206, 377], "peat": 426, "peatland": 401, "peclet": 437, "peek": 317, "peilgestuurd": 423, "penetr": [423, 438], "penman": 237, "peopl": [427, 429], "per": [0, 3, 5, 11, 27, 30, 32, 47, 105, 118, 132, 137, 138, 139, 140, 141, 151, 174, 180, 184, 207, 208, 209, 229, 251, 259, 260, 266, 267, 269, 289, 329, 330, 346, 348, 396, 397, 406, 408, 426], "perc": 250, "percel": [328, 329, 330, 331, 332], "percentag": 132, "percentil": [290, 291, 292], "perch": [26, 146, 249, 398, 399, 400, 401, 404, 423, 437], "perched_water_t": 26, "percol": 234, "perfect": 371, "perforation_length": 400, "perform": [0, 24, 45, 78, 174, 278, 313, 353, 397, 427, 435], "perimet": [267, 268], "period": [17, 25, 26, 27, 50, 77, 79, 80, 87, 90, 93, 97, 100, 103, 105, 108, 119, 124, 131, 135, 137, 151, 152, 157, 160, 174, 179, 193, 194, 198, 205, 206, 237, 253, 335, 343, 348, 354, 355, 393, 396, 401, 436], "period_data": [0, 90, 100, 105, 137, 160], "period_tim": 385, "periodic_stress": 385, "periods_da": 385, "perlen": [193, 355], "permeabl": [21, 423], "perpendicular": [13, 14, 21, 396], "perspect": [427, 432, 437], "pet": 194, "petm": 93, "pf": 235, "pfree": 391, "phase": [118, 132], "phenomenon": 21, "phreatic": [0, 231, 267], "physic": [0, 4, 26, 228, 238, 249, 393, 396, 404], "picard": 174, "pick": 371, "pictur": [409, 435], "pie": 395, "piec": [311, 395, 435], "piecewis": 163, "pile": 22, "pip": [0, 417, 419, 422, 427], "pipe": [401, 437], "pipe_cond": 401, "pipe_elev": 401, "pipelin": [372, 376], "pixel": [279, 323], "pixi": [0, 370, 373, 376, 417, 427, 432], "pixi_vers": 372, "pkg": [391, 423, 437], "pkg_name": 134, "pkgname": 107, "place": [0, 36, 124, 126, 127, 139, 163, 198, 201, 207, 252, 266, 316, 329, 330, 358, 394, 401, 437], "placed_wel": 266, "placement": [329, 330, 331, 423], "plai": 343, "plan": [0, 329, 330], "planar": [0, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 197, 203, 255, 262, 263, 264, 265, 275, 277, 283, 438], "planar_riv": 438, "plane": [146, 278, 293, 296, 329, 330, 437], "plant": 194, "planview": 431, "pleas": [5, 42, 45, 78, 119, 295, 297, 375, 401], "plot": [0, 9, 10, 317, 319, 320, 323, 324, 326, 377, 378, 379, 380, 381, 382, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 406, 408, 409, 410, 411, 414, 416, 417, 423, 427, 430, 431, 432, 433, 437, 438, 439], "plot_colorbar": [319, 438], "plot_histograms_side_by_sid": 437, "plot_kwarg": 437, "plot_map": [0, 359, 415, 416, 423, 430, 437, 438, 439], "plote": 413, "plotter": 317, "plotter_kwarg": [317, 318], "plt": [323, 327, 377, 378, 379, 380, 381, 382, 391, 394, 395, 396, 397, 401, 402, 406, 408, 409, 410, 411, 413, 435, 437, 438], "plume": 399, "pm": [254, 419, 422], "png": [0, 321, 327, 435], "pocket": [383, 384, 430], "point": [0, 4, 9, 13, 39, 45, 104, 109, 124, 126, 127, 136, 146, 198, 201, 252, 273, 279, 294, 297, 298, 299, 300, 341, 352, 359, 406, 407, 409, 412, 413, 417, 423, 427, 430, 432, 435, 436], "point_interpol": [408, 412, 430], "point_valu": 0, "pointer": [346, 347], "points_from_xi": [45, 432], "points_gdf": 432, "points_in_bound": [0, 299, 300, 359], "points_indic": [0, 359], "points_outside_grid": 408, "points_set_valu": [0, 298, 359, 408], "points_valu": [0, 359, 401, 419, 420], "pointwaterhead": 4, "polcg": 174, "polydata": 322, "polygon": [0, 39, 45, 111, 113, 115, 269, 279, 285, 286, 288, 291, 292, 322, 359, 407, 412, 430, 432, 438], "polygonize_rast": [409, 412, 430], "polygonized_lak": 409, "polygontyp": [285, 286], "polynomi": 27, "pond": [26, 224, 250, 254, 359, 423], "ponding_depth": 245, "ponding_depth_rur": 26, "ponding_depth_urban": 26, "ponding_factor": 224, "pooch": [417, 429], "pop": [317, 437, 439], "popular": [427, 428, 440], "pore": [118, 343, 426, 437], "poros": [0, 6, 8, 11, 12, 118, 132, 218, 334, 377, 378, 379, 380, 381, 382, 393, 396, 399, 406, 413, 426, 437], "porou": [334, 426], "portion": [30, 180, 374], "posit": [5, 11, 27, 124, 131, 146, 198, 205, 206, 209, 317, 326, 343, 380, 382], "positron": 323, "possibl": [0, 13, 14, 26, 44, 47, 49, 55, 80, 86, 254, 258, 261, 391, 401, 408, 413, 415, 419, 420, 422, 429, 437, 438], "possibli": 294, "post": [146, 417, 423], "pota": 391, "potato": 391, "potenti": [127, 194, 201], "power": 435, "powershel": 372, "pp": [26, 401], "pp_ss": 401, "pp_ss_mean": 401, "pp_tran": 401, "pr": 372, "practic": 427, "pragmat": [41, 54, 426, 427], "pre": [0, 8, 427, 429], "precipit": [234, 242, 247, 254, 401, 438], "precipitationmap": [242, 243, 359, 423], "precis": [0, 44, 401, 404, 437], "precomput": 284, "precondit": [27, 174, 348], "precondition": [174, 342, 346, 347, 377, 378, 379, 380, 381, 382], "preconditionedconjugategradientsolv": [377, 378, 379, 380, 381, 382, 385], "preconditioner_drop_toler": 174, "preconditioner_level": 174, "predefin": 174, "predifin": 174, "prefer": [0, 329, 330], "preferenti": 26, "prepar": [0, 5, 88, 90, 98, 100, 104, 107, 109, 136, 137, 158, 160, 199, 234, 334, 359, 393, 401, 408, 409, 410, 411, 419, 420, 423, 428, 430, 432, 438, 439, 440], "prepare_jupyt": 407, "prepare_python": 407, "prepare_wel_for_mf6": 0, "prepend": 0, "prerequisit": 372, "prescrib": [80, 396, 400], "presenc": [0, 249, 437], "present": [0, 3, 5, 7, 26, 47, 50, 78, 80, 82, 83, 106, 110, 118, 139, 140, 174, 207, 208, 269, 319, 323, 324, 326, 400, 429], "preserv": [0, 316, 419, 420], "preset": 423, "press": [317, 376, 403], "pressur": [194, 235, 237, 249, 250, 357], "prevent": [0, 66, 78, 127, 201, 258, 437], "preview": 435, "previou": [80, 174, 193, 236, 401, 408, 413, 415, 429, 439], "previous": [0, 236, 313, 391, 401, 408, 413, 427, 438], "price": 427, "primari": [0, 401, 432, 435], "primarili": [428, 431, 432], "primod": [73, 390], "princip": [21, 146, 388], "principl": 45, "print": [0, 26, 27, 63, 64, 77, 79, 80, 87, 93, 97, 103, 108, 124, 131, 139, 151, 152, 157, 174, 179, 194, 198, 205, 206, 207, 311, 317, 333, 394, 401, 402, 406, 411, 431, 432, 437, 438], "print_convergence_info": 27, "print_flow": [77, 79, 80, 87, 93, 97, 103, 108, 124, 131, 152, 157, 178, 179, 194, 198, 205, 206, 393, 394, 396, 398, 400, 401, 404, 406, 436, 437, 438, 439], "print_if_error": [0, 359, 439], "print_input": [77, 79, 80, 87, 93, 97, 103, 108, 111, 113, 115, 124, 131, 152, 157, 164, 167, 170, 194, 198, 205, 206, 285, 286, 393, 394, 396, 398, 400, 401, 404, 406, 436, 437, 438, 439], "print_opt": [0, 174, 175, 176, 177, 393, 394, 396, 398, 399, 400, 401, 404, 406], "print_stag": 404, "printout": [27, 334], "printout_interv": 27, "priori": 396, "priorit": 316, "prj": [0, 82, 83, 90, 100, 121, 126, 127, 137, 148, 154, 160, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 252, 359, 423, 432], "probabl": [371, 439], "problem": [27, 174, 334, 342, 346, 347, 348, 375, 377, 379, 380, 382, 393, 396, 397, 398, 399, 426, 427, 439], "problemat": [0, 439], "procedur": 357, "process": [0, 26, 41, 54, 56, 127, 146, 201, 269, 357, 372, 396, 401, 417, 423, 426, 427, 431, 437, 438], "processor": 427, "produc": [0, 289, 320, 438, 440], "product": [118, 132, 174], "prof": [13, 14], "profil": [233, 234, 372, 399], "program": [74, 118, 132, 146, 152, 174, 189, 295, 355, 357, 385, 401, 403, 424, 427], "progress": [355, 372], "project": [0, 9, 10, 13, 14, 50, 51, 56, 105, 126, 137, 249, 252, 290, 371, 374, 375, 376, 411, 413, 428, 429, 432, 439], "projectfil": [0, 26, 105, 127, 137, 201, 385, 423], "prompt": [377, 378, 379, 380, 381, 382, 385, 427], "prone": 417, "proper": 0, "properli": [0, 427], "properti": [0, 23, 35, 146, 343, 398, 400, 404, 426, 431, 432, 433, 437], "proport": [20, 93, 341, 401], "proportion": 401, "proportion_depth": [0, 93, 215, 437], "proportion_r": [0, 93, 215, 437], "provid": [0, 9, 10, 13, 14, 19, 25, 26, 28, 43, 56, 78, 79, 80, 81, 86, 87, 89, 93, 94, 97, 99, 116, 118, 119, 120, 124, 125, 131, 132, 134, 135, 140, 146, 147, 151, 152, 153, 157, 159, 163, 165, 168, 171, 174, 179, 180, 181, 184, 185, 189, 190, 193, 194, 195, 196, 198, 200, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237, 254, 258, 261, 269, 288, 290, 304, 305, 306, 307, 319, 323, 354, 359, 370, 374, 375, 385, 388, 393, 394, 396, 401, 409, 411, 413, 415, 417, 419, 420, 424, 427, 428, 431, 432, 433, 436, 438, 439, 440], "provis": 429, "prsiti": [334, 406], "ps1": 372, "pseudo": 174, "psgw": 254, "pssw": 254, "pstem": 391, "ptc": 174, "public": [107, 313], "publish": 0, "publsihed_pdf": 377, "pull": [0, 370, 371, 427], "pump": [36, 266, 358, 379, 380, 432], "pun": 237, "pure": [66, 427, 436], "purpos": [0, 107, 424], "push": [376, 401], "put": [105, 137, 146, 385], "pxdp": 93, "py": [373, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441], "pydata": [258, 261, 291, 292], "pyogrio": 432, "pypi": [376, 427], "pyplot": [377, 378, 380, 381, 382, 391, 394, 395, 396, 397, 401, 402, 406, 408, 409, 410, 411, 413, 435, 437, 438], "pyproj": [411, 429], "pytest": [0, 371], "python": [0, 25, 45, 56, 58, 59, 72, 127, 135, 151, 201, 237, 295, 354, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 419, 420, 422, 423, 424, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "pythonlogg": 58, "pyton": 56, "pyvista": [0, 317, 320, 322, 414, 429], "q": [12, 124, 198, 205, 206, 317, 379, 380, 382, 406], "q1": 290, "q3": 290, "q_": 12, "qdr": 254, "qg": 0, "qgi": [0, 432], "qmodf": 254, "qrun": 254, "qscale": 379, "qspgw": 254, "quadcontourset": [326, 393, 396, 398, 404, 406, 413], "quadmesh": [377, 378, 380, 381, 382, 397, 401, 409, 431], "quadrilater": [0, 314], "qualiti": [0, 408, 439], "qualnam": [58, 66, 255, 256], "quantil": 321, "quantile_colorscal": 321, "quantiti": [0, 32, 184], "quasi": [15, 26, 90, 100, 105, 121, 137, 148, 154, 160, 186, 191, 333, 398, 423], "queri": 77, "question": [0, 424], "quickli": [394, 396], "quiet": 372, "quit": [431, 433, 438], "quiver": [0, 9, 10, 359, 394, 423], "quiver_lin": [0, 324, 359, 413], "quiver_linestr": [0, 324, 359], "quiverplot": 423, "quot": [0, 417], "r": [11, 12, 41, 54, 319, 323, 427], "r_fstrict": 346, "r_fstrictpk": 346, "radial": 268, "radial_c": 268, "rag": 151, "rainfal": [327, 404], "rais": [0, 47, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206, 258, 266, 298, 299, 300, 309, 311, 439], "ram": 435, "random": [329, 330, 331, 397], "randomli": [329, 330, 372], "rang": [0, 26, 27, 127, 146, 174, 194, 201, 319, 348, 377, 378, 379, 380, 381, 382, 426, 437], "rangeindex": 394, "raphson": [103, 174], "rare": [0, 329, 330, 388], "raster": [0, 5, 54, 55, 269, 278, 279, 289, 290, 291, 292, 323, 359, 407, 412, 415, 418, 423, 430, 434, 440, 441], "rasterio": [0, 41, 42, 104, 109, 136, 279, 288, 290, 292, 310, 315, 359, 423, 428, 429, 431], "rasterize_cellt": [269, 359], "rasterize_shp": [410, 412, 430], "rasterr": [409, 410], "rate": [0, 19, 28, 36, 77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 127, 130, 131, 132, 152, 157, 174, 179, 194, 198, 201, 204, 205, 206, 215, 220, 255, 264, 266, 349, 350, 351, 358, 377, 378, 379, 380, 381, 382, 385, 393, 396, 398, 400, 401, 406, 436, 437], "rate_factor_tim": [124, 198], "rate_transi": [124, 198], "rate_wel": 398, "rather": [0, 41, 42, 54, 146, 258, 316, 374, 388, 426, 427, 431, 435, 440], "ratio": [336, 343], "ratio_horizont": 336, "ratio_vert": 336, "rational": 388, "ravel": 438, "raw": 417, "rbot": [29, 352], "rcb": [346, 347], "rch": [0, 152, 154, 220, 255, 378, 394, 396, 398, 400, 423, 436, 437, 438], "rch_conc": 378, "rch_concentr": 396, "rch_data": 436, "rch_rate": [378, 394, 396, 398, 400], "rch_ss": 401, "rch_ss_tran": 401, "rch_time": 436, "rch_total": 401, "rch_tran": 401, "rch_trans_yr": 401, "rclose": [27, 174, 346, 348, 377, 378, 379, 380, 381, 382], "rclose_inn": 346, "rclose_opt": [0, 174], "rclosepk": 346, "rcm": 174, "rd": 290, "rdnew": 323, "rdylbu": 413, "rdylbu_r": [393, 396, 415], "re": [0, 9, 10, 41, 45, 54, 258, 308, 317, 370, 371, 411, 427, 431, 435], "reach": [234, 258], "reaction": 406, "reactiv": 428, "read": [0, 27, 31, 38, 40, 46, 50, 51, 77, 79, 80, 87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 138, 139, 140, 141, 152, 157, 164, 167, 170, 189, 194, 198, 205, 206, 207, 208, 209, 333, 343, 355, 357, 359, 374, 375, 389, 392, 394, 401, 408, 417, 418, 419, 420, 423, 426, 427, 429, 430, 431, 433], "read_ascii": [0, 37, 359], "read_associ": 359, "read_binari": 37, "read_csv": [45, 46, 408], "read_dens": 357, "read_fil": [5, 45, 269, 295, 419, 422, 432], "read_grb": 0, "read_imod_legend": [359, 423], "read_metaswap_fil": [391, 392, 430], "read_projectfil": [0, 359, 423], "read_timfil": 359, "readabl": [0, 145, 427], "reader": 0, "readthedoc": [77, 288], "real": [174, 329, 336, 342, 347, 437], "reason": [0, 25, 33, 127, 135, 174, 201, 313, 328, 329, 330, 331, 332, 333, 354, 419, 420, 426, 435], "reassign": [93, 152], "reattach": 437, "rebuild": 372, "rebuilt": 373, "recalcul": [174, 357], "recent": [174, 336], "recharg": [0, 19, 25, 26, 132, 135, 220, 264, 349, 350, 351, 354, 378, 394, 398, 400, 404, 423, 436, 437], "recharge_lay": 350, "rechargehighestact": 378, "rechargeregridmethod": [0, 154, 437], "recip": [0, 427], "recogn": [0, 374], "recommend": [146, 269, 357, 371, 427, 429, 437], "recomput": [130, 204], "record": [0, 118, 209, 343, 355], "rectangl": [39, 393], "rectangular": [393, 398, 400, 401, 402, 404, 431], "recurs": [42, 346, 347], "redirect": 0, "reduc": [0, 19, 27, 29, 174, 194, 320, 346, 347, 348, 419, 420, 437, 438], "reduct": [174, 237, 419, 420], "refer": [0, 4, 5, 11, 26, 42, 45, 78, 82, 163, 189, 258, 261, 269, 291, 292, 295, 297, 312, 315, 318, 320, 334, 357, 385, 401, 408, 410, 411, 429, 432, 435], "reference_concentr": [78, 393, 396], "reference_dens": [78, 393, 396], "refin": 0, "reflect": 437, "regard": 5, "regardless": [27, 355], "regex": [41, 42, 43, 54], "regex101": [41, 54], "region": [26, 27, 326, 336, 348, 403, 405, 430, 437], "registri": [370, 372], "regrid": [0, 82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 137, 142, 146, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 203, 257, 258, 261, 359, 400, 401, 403, 405, 419, 420, 423, 430, 440, 441], "regrid_cach": [82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 203, 397, 437], "regrid_context": 240, "regrid_lik": [0, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 359, 397, 423, 437], "regrid_method": [210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 437], "regrid_method_setup": 437, "regrid_method_t": 437, "regrid_method_typ": [100, 191], "regrid_schem": [82, 83, 90, 121, 148, 154, 160, 186], "regridd": [0, 82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 203, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 261, 359, 397, 401, 419, 420, 437], "regridded_k_1": 397, "regridded_k_2": 397, "regridded_k_3": 397, "regridded_recharg": 437, "regridded_simul": 437, "regridded_simulation_nam": 142, "regridded_twri": 397, "regridder_typ": [0, 82, 83, 85, 90, 92, 96, 100, 102, 105, 121, 123, 129, 137, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 203, 240, 397, 437], "regriddertyp": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 197, 203, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 397, 437], "regridderweightscach": [0, 82, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 203, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 397, 437], "regridmethod": 0, "regridmethodtyp": [82, 85, 92, 96, 100, 102, 105, 123, 129, 137, 148, 150, 156, 162, 183, 188, 191, 192, 197, 203], "regular": [41, 42, 54, 86, 104, 109, 136, 146, 294, 295, 401, 409], "reinstal": [0, 429], "reinstat": 0, "rel": [3, 47, 48, 146, 174, 258, 329, 330, 331, 342, 347, 426, 435, 439], "relat": [26, 245, 249, 357, 401, 437, 440], "relativ_rclos": 174, "relative_rclos": 174, "relativeoverlap": [210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 437], "relax": [0, 27, 103, 174, 284, 346, 347, 348, 377, 378, 379, 380, 381, 382, 401, 404, 437], "relaxation_factor": [174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "releas": [0, 30, 32, 180, 184, 205, 206, 343, 377, 378, 379, 380, 381, 382, 385, 427], "relev": [0, 269, 397, 427], "reli": [41, 54, 290, 427], "remain": [0, 30, 80, 127, 146, 180, 194, 201, 334, 355, 426], "rememb": [41, 54], "remot": 427, "remov": [107, 128, 130, 131, 194, 202, 204, 266, 270, 271, 272, 278, 298, 310, 329, 330, 370, 374, 401, 408, 419, 420, 427, 437, 438], "renam": [0, 41, 47, 49, 54, 401], "render": [0, 279, 317, 318, 320, 374, 439], "reorder": 174, "reordering_method": [0, 174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "rep": 26, "repeat": [0, 50, 80, 87, 93, 97, 105, 124, 137, 152, 157, 198, 205, 385, 438], "repeat_item": [80, 87, 93, 97, 124, 152, 157, 198, 205], "repeat_stress": [80, 87, 93, 97, 105, 124, 137, 152, 157, 198, 205, 436, 437, 438, 439], "repeatedli": [257, 258, 261], "replac": [0, 45, 50, 316, 329, 330, 397, 401, 419, 420, 426, 437], "report": [0, 26, 406], "reposistori": 427, "repositori": [0, 370, 371, 372, 374, 427], "repres": [0, 24, 33, 39, 44, 86, 118, 140, 146, 174, 207, 208, 317, 333, 343, 393, 401, 406, 419, 422, 426, 431, 432, 433], "represent": [0, 107, 112, 114, 117, 140, 166, 169, 173, 207, 208, 320, 431, 437], "reproduc": [370, 372, 375, 428, 429], "reproject": [0, 359, 407, 412, 430, 431], "reproject_kwarg": 290, "repsect": 163, "request": [0, 127, 201, 249, 371, 375], "requir": [0, 4, 11, 24, 25, 26, 27, 39, 41, 45, 50, 54, 78, 86, 104, 109, 118, 124, 127, 132, 135, 136, 138, 139, 140, 141, 146, 174, 198, 201, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 242, 243, 258, 269, 273, 310, 314, 316, 319, 323, 324, 326, 333, 334, 346, 347, 348, 354, 372, 374, 385, 391, 396, 401, 408, 417, 418, 419, 422, 423, 427, 429, 435, 436, 437, 438, 439], "rergrid": 437, "resampl": [3, 105, 127, 137, 201, 290, 401, 417, 419, 420, 433], "research": 380, "resembl": 397, "reserv": 45, "reset": [317, 328, 329, 330, 331, 332, 357], "reset_index": 401, "reshap": 297, "resid": 372, "residu": [27, 174, 194, 249, 346, 348], "resisit": 231, "resist": [22, 26, 29, 111, 112, 114, 115, 117, 163, 166, 169, 170, 173, 231, 232, 245, 246, 267, 268, 269, 285, 286, 385], "resistor": 437, "resolut": [269, 291, 292, 329, 330, 411, 423, 433], "resolv": 0, "resourc": [93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 164, 167, 170, 174, 189, 193, 198, 205, 206, 371, 377, 380, 398, 423], "respect": [0, 3, 25, 37, 135, 138, 139, 140, 141, 146, 163, 207, 208, 255, 319, 354, 418, 419, 431, 436], "respectivli": 323, "respons": [224, 225, 226, 228, 231, 233, 234, 235, 236, 237, 242, 245, 247, 251, 426], "rest": [385, 397, 406, 437], "restack": [0, 308], "restor": 426, "restructur": [0, 374], "result": [0, 4, 5, 8, 11, 12, 26, 45, 118, 127, 132, 174, 201, 258, 269, 288, 290, 298, 316, 317, 320, 333, 334, 342, 343, 355, 357, 374, 379, 380, 382, 399, 402, 406, 408, 411, 413, 419, 420, 426, 427, 429, 431, 435, 437, 438], "result_dir": 435, "resultdir_is_workdir": [377, 378, 379, 380, 381, 382], "resultdir_is_workspac": 0, "retain": [74, 174], "retard": [11, 12, 399], "retent": 194, "retriev": 377, "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 107, 112, 114, 116, 117, 120, 121, 122, 123, 125, 126, 129, 130, 134, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 173, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 196, 197, 200, 203, 204, 207, 208, 209, 227, 229, 232, 239, 244, 246, 248, 250, 252, 255, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 317, 319, 320, 322, 323, 324, 325, 326, 327, 391, 394, 395, 399, 400, 401, 419, 420, 439], "return_cbar": 323, "return_cmap_norm": 319, "return_index": 320, "reus": [391, 437], "revers": [106, 110, 174], "revert": 0, "revisit": 417, "revolv": 388, "rewet": [119, 146, 437], "rewet_factor": [146, 437], "rewet_iter": [146, 437], "rewet_lay": [146, 219, 437], "rewet_method": [146, 437], "rewrit": 163, "rgb": 319, "rgba": 323, "rho": [4, 357], "rho_": 4, "rhobulk": 399, "rhs_option": [146, 437], "rich": 431, "richard": 26, "rid": 373, "ridg": [401, 438], "right": [0, 5, 6, 9, 10, 11, 12, 13, 14, 78, 86, 139, 146, 174, 207, 324, 342, 343, 372, 393, 406, 413, 429, 438], "right_boundari": 393, "right_low": 385, "right_upp": 385, "rioxarrai": [104, 109, 136, 290, 310], "rise": 249, "risk": 0, "riv": [0, 8, 24, 51, 137, 157, 221, 255, 256, 259, 260, 277, 353, 423, 437, 438, 439], "riv_alloc": 438, "riv_bot": 401, "riv_bottom": 438, "riv_cleaned_dict": 439, "riv_cond": 401, "riv_conduc": 438, "riv_conduct": 438, "riv_pkg": 439, "riv_primari": 0, "riv_stag": [401, 438], "river": [0, 8, 24, 25, 105, 135, 137, 221, 255, 259, 260, 265, 272, 277, 327, 353, 354, 423, 437, 439], "river_conduct": 163, "riverb": [29, 157, 352, 437], "riverpackag": 8, "riverregridmethod": [0, 160], "rivssmden": 352, "rm": 370, "robin": 438, "robust": [75, 174, 427], "rock": 132, "role": [343, 440], "root": [194, 235, 371], "root_act": 194, "root_potenti": 194, "rootact": 194, "rootzon": [26, 228, 229], "rootzone_depth": 228, "rootzone_thick": 26, "rotat": [146, 237, 290, 382, 411, 431, 437], "rotated_exampl": 290, "rotational_period": [237, 391], "roughli": [395, 437, 438], "round_ext": 0, "routin": [27, 174, 348, 440], "row": [0, 5, 9, 10, 11, 13, 14, 86, 107, 205, 269, 343, 377, 378, 380, 381, 397, 398, 400, 401, 404, 406, 417, 431, 432, 433, 437], "row_index": [269, 289], "rsc": [237, 391], "rsoil": [237, 391], "rst": 374, "rsw": [237, 391], "ru": 0, "ruff": 371, "rule": [27, 348, 431, 437], "run": [0, 24, 107, 130, 138, 139, 140, 141, 204, 234, 236, 371, 372, 373, 374, 376, 391, 395, 397, 399, 400, 402, 406, 408, 409, 410, 411, 413, 415, 417, 423, 427, 429, 431, 432, 435, 436, 437, 438, 439], "runfil": [0, 378, 380, 381, 382, 423], "rung": [329, 330, 331], "runoff": [26, 245, 246], "runoff_resist": [232, 245], "runoff_resistance_rur": 26, "runoff_resistance_urban": 26, "runon": [26, 245, 246, 254], "runon_resist": [232, 245], "runon_resistance_rur": 26, "runon_resistance_urban": 26, "runtim": [130, 204], "runtimewarn": 309, "rural": [26, 229, 232, 246], "rutter": 237, "sai": [253, 258, 419, 420], "salin": [78, 378, 393, 396], "salt": [237, 377, 379, 382], "saltmax": 391, "saltslop": 391, "saltwat": [383, 384, 430], "saltwaterpocket": [381, 384, 430], "same": [0, 4, 25, 27, 30, 32, 41, 42, 45, 54, 78, 83, 85, 90, 92, 96, 100, 102, 118, 121, 123, 127, 129, 135, 144, 148, 150, 154, 156, 160, 162, 174, 183, 184, 186, 188, 191, 192, 197, 201, 203, 256, 278, 290, 334, 346, 348, 354, 370, 385, 388, 393, 396, 397, 399, 401, 408, 411, 413, 419, 420, 427, 429, 431, 433, 437, 438], "sampl": [0, 10, 14, 291, 292, 295, 419, 420, 431, 435, 437], "sand": 377, "sandi": 426, "sanford": 380, "sat": 146, "satisfi": [11, 27, 194, 317, 346, 348], "satur": [0, 30, 146, 180, 194, 249, 267, 268, 334, 343, 401, 426], "save": [0, 104, 108, 109, 118, 136, 146, 194, 234, 236, 258, 335, 337, 341, 343, 345, 349, 350, 351, 352, 358, 359, 371, 385, 401, 423, 431, 435], "save_budget": [151, 335, 337, 338, 339, 340, 341, 343, 349, 350, 351, 352, 358, 393, 394, 396, 398, 399, 400, 401, 404, 406], "save_budget_idf": 345, "save_budget_tec": 345, "save_budget_vtk": 345, "save_concentr": [151, 393, 396, 399, 406], "save_concentration_idf": [345, 377, 378, 379, 380, 381, 382], "save_concentration_tec": 345, "save_concentration_vtk": 345, "save_flow": [0, 77, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 146, 152, 157, 178, 179, 180, 184, 194, 198, 205, 206, 393, 394, 396, 398, 399, 400, 401, 404, 406, 436, 437, 438, 439], "save_flux": 385, "save_head": [151, 385, 393, 394, 396, 398, 399, 400, 401, 404, 406], "save_head_idf": [345, 377, 378, 379, 380, 381, 382], "save_head_tec": 345, "save_head_vtk": 345, "save_satur": [0, 146, 437], "save_specific_discharg": [146, 400, 406, 437], "saved_st": 236, "savefig": 327, "scalar": [0, 27, 304, 305, 306, 307, 316, 419, 420], "scale": [174, 194, 249, 379, 423], "scale_hydraulic_conduct": 249, "scale_pressure_head": 249, "scale_soil_moistur": 249, "scaling_method": [0, 174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "scalingfactor": [359, 423], "scanopi": 391, "scap_svat": [0, 251, 423], "scatter": [398, 400, 438], "scene": 435, "schedul": [309, 435], "schemat": [23, 35], "schemata": 439, "scheme": [26, 74, 75, 76, 174, 328, 329, 330, 331, 332, 342, 355], "schemit": 438, "scientic": 417, "scientif": [118, 428, 429], "scipi": [401, 417, 419, 420, 429], "sconc": [334, 377, 378, 380, 381, 382], "scope": 372, "scraper": 435, "scratch": 385, "screen": [107, 130, 198, 204, 400], "screen_bottom": [0, 198, 200, 266, 273, 393, 398, 400, 406], "screen_lay": 400, "screen_top": [0, 198, 200, 266, 273, 393, 398, 400, 406], "script": [0, 311, 374, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 411, 413, 415, 427, 428, 429, 431, 432, 435, 436, 437, 438, 439], "sea": [3, 327, 438], "search": [3, 7, 278, 403], "searchabl": 371, "season": [80, 87, 93, 97, 124, 152, 157, 198, 205, 237], "seawat": [0, 4, 346, 347, 353, 357, 393, 417, 428], "seawat_get_runfil": 0, "seawat_writ": 0, "seawat_write_runfil": 0, "seawatmodel": [0, 377, 378, 379, 380, 381, 382, 436], "second": [0, 51, 75, 80, 86, 87, 93, 97, 124, 140, 146, 152, 157, 174, 198, 205, 207, 208, 229, 319, 324, 326, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 411, 413, 415, 426, 431, 432, 435, 436, 437, 438, 439], "second_result": 258, "second_sourc": 258, "secondli": [0, 316, 427, 440], "secret": 372, "section": [0, 9, 10, 13, 14, 21, 294, 295, 319, 324, 326, 329, 330, 359, 377, 378, 379, 380, 382, 401, 413, 414, 423, 424, 428, 429, 431, 435, 438, 440], "securityprotocol": 372, "sediment": [26, 266], "see": [0, 21, 27, 41, 44, 47, 54, 55, 73, 77, 88, 98, 143, 158, 199, 254, 288, 314, 317, 343, 346, 348, 370, 371, 380, 382, 393, 394, 396, 397, 398, 399, 401, 403, 409, 411, 419, 420, 423, 425, 426, 427, 429, 431, 435, 436, 438, 439], "seem": [433, 435, 439], "seen": [377, 437], "segment": [0, 93, 437], "sel": [0, 3, 5, 139, 207, 298, 385, 394, 396, 397, 398, 400, 401, 402, 404, 413, 417, 419, 420, 421, 422, 431, 435, 437, 438], "select": [0, 5, 11, 27, 45, 81, 89, 94, 99, 116, 120, 125, 127, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 201, 262, 263, 264, 265, 269, 275, 277, 319, 329, 330, 331, 359, 372, 376, 385, 394, 396, 401, 403, 408, 413, 417, 428, 431, 433, 435, 438, 440], "select_point": [419, 422], "self": [135, 375, 428], "semant": [0, 376], "semi": [3, 22], "send": [25, 135, 354, 371], "sens": 427, "sensit": 249, "sentenc": 429, "sep": [47, 346, 347], "separ": [0, 11, 41, 42, 54, 104, 105, 109, 118, 126, 136, 137, 151, 234, 252, 310, 319, 393, 400, 401, 402, 417, 419, 422, 426, 437, 439], "seper": [163, 237, 429], "sequenc": [78, 269, 278, 288, 306, 307], "sequenti": 146, "seri": [0, 3, 80, 93, 152, 292, 419, 420, 422, 428, 430, 440, 441], "serial": 437, "serv": [45, 174, 258, 329, 330, 333], "server": [370, 372], "servic": 427, "servicepointmanag": 372, "session": 370, "set": [0, 3, 7, 25, 26, 27, 29, 33, 42, 50, 59, 76, 77, 78, 80, 84, 86, 87, 91, 93, 95, 97, 101, 105, 106, 107, 110, 122, 124, 127, 130, 135, 137, 142, 143, 146, 149, 151, 152, 155, 157, 161, 174, 179, 182, 186, 187, 198, 201, 204, 205, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 231, 237, 238, 239, 241, 245, 249, 250, 254, 255, 256, 259, 260, 262, 263, 264, 265, 266, 270, 271, 272, 273, 298, 299, 310, 314, 317, 319, 320, 323, 328, 329, 330, 331, 332, 333, 334, 336, 342, 346, 347, 348, 352, 354, 355, 357, 359, 370, 372, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 400, 404, 406, 408, 423, 426, 428, 437, 438, 439, 440], "set_aspect": [394, 396], "set_axis_off": 435, "set_index": [45, 391, 437], "set_opt": 437, "set_repeat_stress": [0, 80, 87, 93, 97, 124, 152, 157, 198, 205], "set_text": 437, "set_titl": [402, 438, 439], "set_ylabel": 437, "setnodatahead": 0, "setup": [0, 56, 59, 317, 318, 372, 377, 381, 393, 394, 396, 398, 399, 400, 404], "setuptool": 0, "seven": 401, "sever": [26, 61, 68, 70, 72, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 154, 156, 160, 162, 174, 183, 186, 188, 191, 192, 197, 203, 372, 427], "sfr": 423, "sft": 423, "sg": 295, "sh": 372, "shallow": [26, 249], "shape": [0, 10, 14, 22, 39, 144, 164, 167, 170, 279, 285, 286, 288, 290, 295, 322, 385, 393, 394, 395, 397, 398, 399, 400, 404, 406, 409, 410, 429, 431, 435, 437, 438], "shape_area": 432, "shape_leng": 432, "shapefil": [5, 269, 279, 291, 292, 295, 407, 409, 411, 412, 430, 432], "share": [0, 74, 334, 427, 433], "sharei": [437, 438], "sharex": [437, 438], "sharp": 399, "shd": [31, 82, 83, 380, 385, 423], "shead": 80, "sheet": 22, "shell": [427, 429], "ship": 372, "shorter": [0, 25, 135, 298, 354, 371, 437], "shortli": [393, 394, 396, 398, 401, 404], "should": [0, 5, 7, 8, 15, 22, 25, 26, 27, 33, 59, 78, 79, 80, 82, 83, 86, 87, 90, 93, 97, 100, 105, 118, 119, 121, 124, 126, 131, 132, 135, 137, 144, 145, 146, 148, 151, 152, 157, 160, 174, 179, 180, 184, 186, 189, 193, 194, 195, 198, 205, 206, 227, 229, 237, 245, 248, 252, 258, 261, 266, 284, 289, 290, 292, 318, 320, 323, 328, 333, 335, 337, 341, 342, 345, 346, 347, 348, 352, 354, 355, 358, 370, 372, 376, 393, 397, 399, 400, 401, 402, 408, 429, 431, 435, 436, 437, 439], "show": [44, 55, 290, 397, 399, 401, 402, 406, 408, 413, 415, 426, 435, 438], "shown": [406, 431, 438], "shp": [5, 45, 269, 292, 295, 419, 420, 422, 432], "shx": 432, "side": [5, 86, 146, 174, 342, 380, 438, 439], "sign": 174, "signifi": 0, "signific": [0, 396], "significantli": [0, 174, 279, 342, 417], "silenc": [401, 404, 437], "silent": 0, "sim_concentr": 396, "sim_head": 396, "sim_w": 417, "simgro": [26, 245, 254], "similar": [0, 23, 26, 85, 92, 96, 102, 123, 129, 144, 150, 156, 162, 174, 183, 188, 192, 197, 203, 257, 258, 261, 343, 399, 402, 409, 419, 420, 422, 427, 437], "similarli": 0, "simpl": [0, 5, 74, 174, 377, 378, 379, 380, 382, 385, 393, 394, 396, 397, 398, 399, 404, 435, 438], "simplest": [415, 438], "simpli": [0, 295, 371, 427, 429, 435], "simplif": 26, "simplifi": [0, 401, 427], "simpson": 377, "simtim": 396, "simul": [0, 17, 18, 20, 25, 26, 29, 31, 36, 77, 78, 80, 82, 83, 87, 90, 93, 97, 100, 103, 104, 105, 108, 109, 118, 119, 124, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 154, 157, 160, 163, 174, 179, 186, 189, 193, 194, 198, 201, 205, 206, 207, 208, 239, 241, 259, 260, 329, 330, 333, 334, 335, 337, 341, 342, 343, 346, 347, 349, 350, 351, 352, 354, 355, 357, 358, 393, 394, 395, 397, 398, 399, 400, 402, 404, 406, 417, 426, 431, 436, 437, 438], "simulate_groundwater_seepag": 194, "simulate_seepag": 194, "simulation_bc": 436, "simulation_start_tim": [0, 138, 139, 140, 141, 207, 208], "simulationallocationopt": [0, 105, 137, 359], "simulationdistributingopt": [0, 105, 137, 359], "sinc": [0, 41, 45, 54, 269, 329, 330, 377, 378, 379, 380, 382, 393, 396, 401, 409, 419, 422, 427, 431, 435, 437, 438], "singl": [0, 5, 25, 27, 41, 42, 44, 45, 47, 48, 49, 51, 54, 55, 78, 80, 83, 93, 108, 118, 124, 131, 135, 146, 152, 157, 164, 167, 170, 174, 198, 205, 206, 209, 258, 290, 334, 354, 393, 398, 399, 400, 401, 404, 426, 427, 431, 433, 435], "single_valu": [419, 420], "singlelayerhorizontalflowbarrierhydrauliccharacterist": 0, "singlelayerhorizontalflowbarriermultipli": 0, "singlelayerhorizontalflowbarrierresist": [0, 423], "sink": [0, 8, 12, 13, 14, 56, 179, 329, 330, 331, 334, 344, 356, 393, 396], "sink_nparticl": [329, 331], "sink_particle_plac": [329, 331], "site": 432, "situat": [33, 333, 355, 388, 439], "six": 401, "size": [0, 80, 87, 93, 97, 124, 145, 152, 157, 174, 198, 205, 269, 291, 292, 304, 305, 306, 307, 346, 347, 385, 391, 393, 394, 395, 398, 401, 404, 413, 415, 419, 420, 431, 436, 437, 438, 439, 440], "sizeabl": 399, "skip": [0, 112, 114, 117, 166, 169, 173, 391, 413, 419, 420], "slice": [0, 5, 81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 294, 295, 320, 324, 401, 413, 419, 420, 431], "slightli": [397, 411, 419, 422, 426], "slip": 439, "slope": [26, 78, 357, 393, 396], "slow": [0, 11, 12, 174, 427, 435, 440], "small": [11, 12, 174, 269, 329, 330, 331, 394, 406, 419, 420, 426, 439], "small_align": [419, 420], "smaller": [27, 145, 174, 232, 284, 319, 329, 330, 348, 394, 429, 435], "smallest": [27, 191, 348, 423], "smassrat": 131, "smear": 399, "smoothli": 194, "snakemak": 428, "snap": [0, 423], "snap_to_grid": 0, "snippet": [0, 375, 437], "snow": 26, "so": [0, 12, 13, 14, 26, 55, 83, 127, 201, 237, 269, 275, 277, 290, 294, 295, 313, 323, 324, 371, 372, 375, 379, 380, 382, 391, 394, 396, 401, 402, 406, 408, 409, 417, 419, 420, 426, 427, 429, 431, 435, 436, 437, 438, 439], "soft": 426, "softwar": [0, 66, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 164, 167, 170, 174, 189, 193, 198, 205, 206, 371, 374, 417, 427, 432], "soil": [26, 194, 224, 235, 238, 245, 249, 254, 426], "soil_cov": 224, "soil_moisture_factor": 26, "soil_physical_unit": [26, 228], "solut": [0, 27, 41, 54, 74, 108, 118, 119, 131, 132, 189, 329, 334, 342, 348, 355, 357, 377, 380, 382, 393, 394, 396, 398, 400, 401, 403, 404, 405, 406, 426, 427, 430, 435], "solutionpresetcomplex": [137, 174], "solutionpresetmoder": [137, 174], "solutionpresetsimpl": 174, "solv": [0, 27, 174, 328, 330, 331, 336, 342, 346, 347, 348, 355, 393, 396, 401, 402, 426, 427], "solver": [27, 137, 142, 174, 284, 336, 342, 343, 346, 347, 348, 355, 359, 393, 394, 398, 399, 400, 404, 423], "some": [0, 27, 66, 127, 174, 201, 249, 258, 270, 271, 272, 273, 292, 308, 317, 324, 336, 346, 347, 348, 371, 373, 385, 391, 394, 396, 399, 400, 401, 402, 406, 408, 413, 417, 423, 427, 431, 435, 436, 437, 438, 439], "someth": [26, 323, 400, 419, 420], "sometim": [370, 388, 427], "somewhat": [23, 374, 397], "sophist": 146, "sorb": [118, 132], "sorption": [11, 12, 118, 132, 342, 346, 347, 399], "sort": [0, 44, 55], "sound": 249, "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 63, 64, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 90, 93, 97, 98, 100, 103, 105, 108, 111, 113, 115, 118, 119, 121, 124, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 154, 157, 158, 160, 163, 164, 167, 170, 172, 174, 175, 176, 177, 178, 179, 180, 184, 186, 189, 191, 192, 193, 194, 195, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 419, 420, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "source_cells": 258, "sourcesinkmix": [0, 393, 396, 399, 406], "south": 21, "sp2": [132, 218, 437], "space": [0, 74, 118, 304, 305, 306, 307, 357, 400, 417, 426, 427, 429, 431, 432], "span": 255, "spandasindexpandasindex": 438, "spars": 269, "spatial": [0, 45, 104, 109, 136, 289, 292, 312, 315, 399, 418, 419, 420, 429, 432, 433, 437], "spatial_refer": [279, 359], "speci": [0, 43, 78, 108, 138, 141, 179, 334, 357, 393, 396, 399, 406, 428], "special": [26, 85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203, 234, 317, 374, 419, 420, 437], "species_a": 399, "species_b": 399, "species_c": 399, "species_d": 399, "species_l": [0, 138, 141, 399], "speciesnam": 399, "specif": [0, 5, 12, 26, 30, 32, 39, 80, 82, 83, 90, 100, 121, 137, 146, 148, 154, 160, 174, 180, 184, 186, 191, 249, 254, 269, 290, 334, 343, 350, 370, 388, 401, 406, 427, 429, 431, 432, 433, 440], "specifi": [0, 16, 17, 23, 25, 26, 27, 29, 31, 34, 35, 36, 39, 41, 44, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 83, 85, 86, 87, 92, 93, 96, 97, 102, 103, 108, 111, 113, 115, 118, 119, 123, 124, 127, 129, 131, 132, 135, 137, 146, 150, 151, 152, 156, 157, 162, 164, 167, 170, 174, 179, 180, 183, 184, 188, 189, 192, 194, 197, 198, 201, 203, 205, 206, 224, 237, 242, 243, 253, 259, 260, 269, 290, 297, 299, 300, 326, 328, 329, 330, 331, 332, 333, 334, 335, 343, 345, 349, 350, 351, 352, 354, 355, 357, 358, 377, 378, 380, 381, 382, 385, 396, 397, 401, 417, 431, 437], "specific_storag": [30, 32, 180, 184, 222, 343, 377, 378, 379, 380, 381, 382, 393, 394, 396, 398, 399, 400, 401, 404, 406, 437], "specific_yield": [0, 180, 184, 222, 223, 343, 393, 394, 396, 398, 399, 400, 401, 404, 406, 437], "specificstorag": [0, 222, 393, 394, 396, 398, 399, 400, 401, 404, 406, 437], "specificstorageregridmethod": 0, "speed": [0, 83, 85, 90, 92, 96, 100, 102, 121, 123, 129, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 203, 320, 435], "sphinx": [373, 374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "spin": 370, "split": [0, 5, 44, 55, 179, 329, 330, 331, 395, 402, 406, 431, 433], "split_conc": 406, "split_conduct": 423, "split_modeldir": [402, 406], "split_simul": [402, 406], "splitter": 374, "spread": 86, "spring": [3, 401], "sprinkl": [0, 26, 126, 237, 254, 359, 423], "sprinkling_capac": 26, "sprinkling_lay": 26, "sprinkling_typ": 26, "spy": 423, "spyder": 374, "squar": [194, 285, 431], "squeez": 290, "src": [131, 323, 415], "src_cr": [290, 411], "src_nodata": 290, "src_transform": 290, "ss": [32, 180, 184, 209, 343, 401], "ssm": [0, 335, 341, 344, 356, 393, 396, 399, 406], "ssor": 342, "ssume": 290, "stabil": [11, 12, 174, 328, 329, 330, 331, 332, 355, 437], "stability_constraint_advect": 359, "stability_constraint_wel": 359, "stabl": [77, 288, 385], "stack": [308, 394, 431, 437], "stacked_y_x": [419, 420], "stackoverflow": 375, "stage": [0, 29, 51, 105, 127, 137, 157, 194, 201, 221, 255, 256, 262, 265, 272, 277, 352, 385, 401, 423, 437, 438, 439], "stage_above_riv_bot": 439, "stage_bottom": 438, "stage_lin": 438, "stage_to_riv_bot": [255, 259, 265, 277, 438], "stage_to_riv_bot_drn_abov": [255, 438], "stagefil": 404, "stai": 186, "stamen": [0, 323], "standard": [336, 355, 393, 419, 422, 427, 428, 437], "start": [0, 9, 10, 13, 25, 31, 42, 50, 58, 66, 80, 82, 83, 105, 119, 135, 137, 146, 209, 217, 234, 237, 255, 256, 294, 317, 324, 333, 334, 335, 343, 354, 373, 374, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 399, 400, 403, 404, 406, 408, 409, 411, 413, 417, 423, 427, 429, 431, 436, 437, 438, 439], "start_dat": 393, "start_hour": 0, "start_level": [63, 64], "start_minut": 0, "start_sprinkling_season": [237, 391], "starting_concentr": [334, 377, 378, 379, 380, 381, 382], "starting_head": [31, 333, 377, 378, 379, 380, 381, 382, 385, 401], "starting_head_as_confined_thick": [146, 437], "starting_heads_larg": 408, "startinghead": 385, "starttim": [239, 401], "starttime_steadi": 401, "stat": [419, 420], "state": [0, 13, 14, 26, 27, 31, 78, 119, 127, 174, 180, 184, 201, 234, 236, 333, 346, 347, 355, 357, 394, 399, 400, 406, 427, 429], "state_for_boundari": [81, 89, 94, 99, 120, 147, 153, 159, 181, 185, 190, 196], "statement": [0, 439], "states_for_boundari": [0, 134, 394], "static": [47, 105, 137, 179, 385], "staticgridanimation3d": [0, 317, 359], "station": 26, "statist": 440, "statu": [189, 423, 439], "stdout": 56, "steadi": [0, 13, 14, 26, 27, 31, 119, 127, 174, 180, 184, 201, 333, 355, 394, 399, 400, 406], "steadyst": 119, "steamlin": 413, "steep": 26, "steer": 423, "step": [27, 77, 79, 80, 87, 93, 97, 103, 118, 124, 131, 151, 152, 157, 174, 179, 193, 194, 198, 205, 206, 269, 328, 329, 330, 331, 332, 348, 355, 357, 372, 373, 376, 391, 393, 394, 396, 397, 398, 400, 401, 404, 406, 417, 419, 420, 435, 437], "stepsiz": [334, 355], "stiff": 426, "still": [0, 105, 127, 201, 334, 408, 436, 439], "stitl": 317, "sto": [180, 184, 222, 223, 385, 393, 394, 396, 398, 399, 400, 404, 406, 423], "stop": [27, 174, 346, 348, 357, 394, 427], "stor": [32, 184], "storag": [0, 30, 32, 118, 132, 180, 184, 209, 231, 343, 393, 396, 404, 406, 427, 435, 437], "storage_coeffici": [32, 184, 186, 223, 437], "storagecoeffici": [0, 223, 385, 423, 426, 437], "storagecoefficientregridmethod": [0, 186], "store": [0, 47, 49, 83, 85, 90, 92, 96, 100, 102, 104, 109, 121, 123, 127, 129, 136, 138, 139, 140, 141, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 201, 203, 207, 208, 209, 313, 333, 372, 374, 391, 394, 397, 399, 401, 417, 427, 429, 431, 432, 433, 435, 438], "str": [22, 24, 25, 26, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 61, 68, 70, 72, 74, 75, 76, 78, 81, 82, 83, 85, 89, 90, 92, 94, 96, 99, 100, 102, 103, 104, 105, 107, 108, 109, 116, 118, 120, 121, 123, 125, 126, 127, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 153, 154, 156, 159, 160, 162, 165, 168, 171, 172, 174, 178, 179, 181, 183, 185, 186, 188, 190, 191, 192, 194, 196, 197, 200, 201, 203, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 236, 238, 240, 241, 243, 252, 257, 258, 261, 269, 270, 271, 272, 278, 279, 288, 289, 291, 292, 298, 299, 302, 305, 307, 313, 319, 323, 325, 327, 353, 354, 357, 358, 385, 399], "straight": [5, 26, 427], "straightforward": [374, 397, 406, 435], "stream": [13, 14, 59, 326], "streamfunct": [0, 13, 14, 359, 413, 423], "streamfunction_lin": [0, 326, 359, 413], "streamfunction_linestr": [0, 326, 359], "streamhandl": 56, "streamlin": [0, 414, 416, 430], "streamplot": 423, "strength": 19, "stress": [17, 25, 27, 77, 79, 80, 87, 93, 97, 103, 105, 108, 119, 124, 131, 135, 137, 145, 151, 152, 157, 174, 179, 193, 194, 198, 205, 206, 237, 254, 335, 343, 348, 354, 355, 385, 393, 396, 401, 428, 436], "strict": [0, 107, 112, 114, 117, 130, 166, 169, 173, 174, 204], "strict_hfb_valid": [112, 114, 117, 166, 169, 173], "strict_well_valid": [0, 107, 130, 204], "stricter": 346, "strictli": [4, 86, 146], "string": [0, 39, 41, 42, 44, 47, 49, 54, 55, 78, 107, 124, 138, 140, 141, 151, 198, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237, 290, 313, 327, 328, 330, 331], "strt": [119, 146, 333], "structer": 189, "structur": [0, 51, 104, 109, 118, 131, 136, 205, 314, 388, 393, 397, 398, 404, 428, 429, 433, 434, 440], "structureddiscret": [0, 82, 83, 88, 90, 98, 100, 154, 158, 160, 199, 211, 229, 239, 240, 241, 393, 398, 399, 400, 401, 404, 406, 423, 437, 439], "stuck": 174, "studi": [27, 336, 348, 401, 408, 419, 422], "style": 319, "subclass": 105, "subdirectori": [104, 109], "subdivid": 266, "subdivis": 266, "subdomain": [0, 43, 346, 347, 395], "subject": [375, 424], "submit": [334, 375], "submodel": [0, 395, 402], "submodel_label": [144, 395, 402], "subplot": [323, 327, 377, 378, 379, 380, 381, 382, 394, 395, 396, 397, 401, 402, 406, 408, 409, 410, 411, 413, 435, 437, 438], "subprocess": 143, "subsequ": [25, 80, 135, 234, 354, 355], "subset": [0, 438], "subsoil": 26, "substract": 3, "subtl": 439, "subtract": 385, "subunit": [0, 228, 229, 231, 232, 245, 246, 249, 250, 251], "succe": 427, "succesfulli": [0, 377, 378, 379, 380, 381, 382, 439], "success": [0, 7, 193, 355], "suction": 426, "suddenli": 427, "suffer": 0, "suffici": [27, 174, 329, 330, 348], "suffix": 0, "suggest": [0, 174, 336, 371], "suit": [371, 432], "suitabl": [174, 393, 433], "sum": [0, 5, 146, 194, 253, 254, 257, 258, 261, 269, 346, 347, 385, 431], "summari": [118, 174, 175, 176, 177, 359, 393, 394, 396, 398, 399, 400, 401, 404, 406], "summed_conduct": 269, "summer": [0, 50, 105, 137, 385], "sunni": 372, "sup": 393, "suppli": [3, 26, 319, 385], "support": [0, 44, 54, 55, 56, 79, 80, 85, 87, 92, 93, 96, 97, 102, 103, 105, 118, 123, 124, 127, 129, 131, 137, 140, 150, 151, 152, 156, 157, 162, 183, 188, 194, 197, 198, 201, 203, 205, 206, 207, 208, 237, 245, 258, 261, 269, 279, 291, 292, 298, 315, 317, 391, 396, 401, 404, 423, 428, 429, 432, 433, 434, 435, 436, 437, 438], "supportsindex": [269, 288], "sure": [41, 47, 54, 138, 139, 140, 143, 258, 261, 372, 401, 419, 420, 423], "surfac": [3, 5, 26, 29, 33, 93, 152, 163, 174, 194, 215, 228, 245, 251, 254, 267, 273, 292, 333, 338, 339, 340, 385, 401, 415, 431, 437], "surface_depression_depth": 194, "surface_elev": [26, 228], "surface_level": [292, 415], "surfacelevel": 3, "surfacewat": [126, 251, 252], "surflevel": 3, "surpress": 76, "surprisingli": 427, "surround": 266, "suspici": 439, "svat": [0, 26, 225, 226, 227, 228, 230, 231, 245, 247, 248, 251], "svat2etrefgrid": 226, "svat2precgrid": 247, "svat2swnr_roff": [245, 423], "switch": [0, 227, 248], "sy": [0, 32, 56, 180, 184, 209, 343, 401], "symmetr": 174, "synchon": 437, "synchron": 437, "synonym": 426, "syntax": 374, "synthet": [0, 393, 397, 398, 404], "sys1": 0, "system": [0, 19, 28, 50, 66, 118, 127, 201, 267, 268, 290, 334, 372, 385, 401, 403, 406, 411, 427, 429, 432, 438], "t": [11, 12, 23, 35, 58, 63, 64, 66, 70, 163, 200, 279, 317, 346, 347, 371, 372, 379, 385, 396, 399, 427, 429, 431, 438], "t3h": 237, "t3l": 237, "tab": [376, 403], "tab20": 438, "tabl": [0, 26, 27, 33, 126, 228, 249, 250, 252, 269, 289, 333, 357, 391, 423, 426, 432, 433, 437], "tabular": [401, 432, 433], "tact": 254, "tag": [370, 372, 376], "tail": 437, "take": [0, 36, 45, 55, 163, 258, 261, 294, 295, 298, 317, 358, 371, 385, 393, 419, 420, 423, 431, 435, 437, 438], "taken": [0, 3, 290, 295, 399, 435, 437], "target": [0, 191, 239, 411, 423, 437], "target_di": [82, 83, 90, 100, 154, 160, 229, 239], "target_grid": [85, 92, 96, 102, 121, 123, 129, 142, 148, 150, 156, 162, 183, 186, 188, 192, 197, 203, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 397, 437], "target_npf": [90, 100, 160], "task": [334, 370, 417, 435], "tdbg": 234, "tdi": 193, "teamciti": [372, 376], "tec": 0, "tech": 26, "technic": 427, "techniqu": 398, "tecplot": [0, 345], "tediou": 429, "tell": [385, 396], "temp_dir": [409, 410, 411], "tempdir": [415, 431, 432], "temperatur": [357, 437], "templat": [0, 279, 401], "template_data": 436, "tempor": 193, "temporari": [0, 391, 431], "temporarili": [45, 427, 435], "temporary_directori": [377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 398, 399, 401, 402, 404, 406, 409, 410, 411, 415, 431, 432, 435, 437, 439], "tend": 44, "tensor": [21, 146, 342, 437], "term": [5, 11, 21, 77, 78, 79, 80, 84, 86, 87, 91, 93, 95, 97, 101, 103, 108, 118, 122, 124, 131, 132, 146, 149, 152, 155, 157, 161, 174, 179, 180, 182, 184, 187, 194, 198, 205, 206, 268, 290, 328, 330, 331, 334, 336, 342, 343, 347, 355, 401, 426, 427], "termin": [118, 132, 174, 355, 357], "tesselate_centroidal_voronoi": 396, "test": [0, 330, 370, 423, 425, 437], "text": [0, 38, 118, 127, 145, 146, 201, 209, 374, 391, 402, 413, 427, 437, 439], "textfil": [127, 201, 427, 429], "than": [0, 4, 27, 29, 32, 41, 42, 54, 75, 119, 124, 127, 146, 174, 180, 184, 186, 194, 198, 201, 226, 232, 247, 258, 269, 273, 279, 284, 316, 318, 319, 323, 328, 329, 330, 331, 332, 336, 342, 343, 346, 347, 348, 355, 357, 374, 388, 399, 401, 408, 426, 427, 429, 431, 433, 435, 437, 439], "thank": 417, "thei": [0, 41, 42, 45, 50, 54, 82, 140, 174, 186, 207, 208, 258, 261, 266, 309, 349, 350, 351, 370, 374, 394, 401, 419, 422, 426, 427, 429, 431, 432, 435, 437, 440], "them": [0, 44, 45, 55, 258, 261, 371, 372, 374, 394, 399, 401, 406, 409, 413, 427, 429, 431, 435], "theme": 0, "theoret": [377, 427], "theori": [26, 377], "thereaft": 372, "therebi": [5, 11, 12], "therefor": [0, 106, 110, 174, 370, 396, 399, 401, 423, 427, 436, 437, 438, 439, 440], "thermodynam": 437, "theta": [12, 174, 194], "theta_init": 194, "theta_r": 194, "theta_sat": 194, "thetaim": 118, "thi": [0, 4, 5, 9, 10, 11, 21, 23, 25, 26, 27, 29, 30, 32, 34, 35, 37, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 61, 68, 70, 72, 73, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 90, 92, 93, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 114, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 131, 132, 135, 137, 140, 142, 143, 146, 148, 150, 151, 152, 154, 156, 157, 158, 160, 162, 163, 166, 169, 173, 174, 179, 180, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 239, 242, 245, 247, 249, 251, 252, 254, 255, 256, 258, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 277, 278, 279, 288, 290, 294, 295, 297, 298, 299, 300, 311, 313, 316, 320, 323, 329, 330, 331, 333, 336, 343, 346, 347, 348, 349, 350, 351, 354, 355, 357, 359, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 411, 413, 417, 418, 419, 420, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "thick": [0, 26, 32, 124, 127, 146, 184, 198, 201, 256, 266, 267, 268, 273, 333, 334, 343, 394, 400, 401, 406, 426, 431, 438], "thicker": 438, "thickstrt": 146, "thin": 324, "thing": [77, 127, 201, 229, 249, 427, 431, 438], "think": 439, "thinner": 273, "third": [86, 146, 174, 397], "thirdli": 427, "thirteen": 401, "thk": 423, "thkmin": 334, "those": [279, 334, 355, 409, 419, 422, 437], "though": [146, 346, 347, 426, 435, 436], "thought": 435, "thousand": 431, "three": [0, 3, 5, 9, 10, 11, 13, 14, 127, 128, 146, 174, 201, 202, 249, 258, 294, 295, 320, 324, 329, 330, 382, 385, 398, 401, 406, 411, 419, 420, 431, 432, 436], "threedimension": [9, 10], "thresh": [146, 343], "threshold": [7, 18, 29, 146, 337, 352], "threshold_sprinkl": [237, 391], "threw": 0, "through": [0, 5, 9, 10, 13, 14, 127, 189, 194, 201, 294, 295, 323, 334, 343, 385, 396, 413, 439], "throughout": [186, 333, 334, 398, 400, 404], "throw": [0, 107, 130, 145, 204, 385], "thrown": [0, 423], "thu": [29, 138, 141, 180, 184, 256, 328, 329, 330, 331, 332, 343, 401], "thumb": [27, 348], "tidi": [41, 54, 431], "tie": 278, "tif": [54, 55, 290, 292, 401, 431], "tight": [327, 438], "tight_layout": [437, 438], "tightli": 401, "tile": [0, 385], "tileprovid": 323, "tim": 385, "time": [0, 3, 5, 17, 19, 25, 26, 27, 28, 31, 36, 41, 42, 43, 44, 50, 51, 54, 55, 77, 79, 80, 81, 83, 85, 87, 89, 90, 92, 93, 94, 96, 97, 99, 100, 102, 103, 105, 116, 118, 119, 120, 121, 123, 124, 125, 127, 129, 131, 132, 134, 135, 137, 139, 140, 141, 142, 145, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 165, 168, 171, 174, 179, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 203, 205, 206, 207, 208, 227, 234, 237, 239, 242, 248, 253, 258, 275, 277, 278, 298, 305, 307, 313, 317, 318, 327, 333, 334, 335, 346, 348, 349, 350, 351, 354, 355, 356, 358, 371, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 406, 408, 409, 410, 411, 413, 415, 417, 427, 428, 431, 432, 435, 437, 438, 439, 440], "time_discret": [0, 135, 385, 393, 396, 399, 406, 436], "time_max": [81, 89, 90, 94, 99, 100, 116, 120, 125, 134, 147, 153, 159, 160, 165, 168, 171, 181, 185, 190, 196, 200, 437], "time_min": [81, 89, 90, 94, 99, 100, 116, 120, 125, 134, 147, 153, 159, 160, 165, 168, 171, 181, 185, 190, 196, 200], "time_unit": [0, 138, 139, 140, 141, 207, 208], "timedelta": [3, 140, 207, 208, 401], "timedelta64": [385, 401, 404, 437], "timediscret": [135, 354, 436], "timemap": 385, "timeoutputcontrol": 359, "timepandasindexpandasindex": [385, 394, 401, 436, 437], "timeri": 433, "times_rainfal": 404, "times_sto": 401, "timeseri": [0, 45, 47, 49, 93, 105, 127, 137, 194, 201, 401, 418, 423, 430, 441], "timespan": 0, "timestamp": [36, 41, 54, 127, 201, 305, 307, 317, 358], "timestap": [11, 12], "timestep": [0, 8, 11, 12, 135, 138, 139, 140, 141, 207, 208, 253, 357, 385, 394, 396, 401, 431, 436, 437], "timestep_dur": [193, 355, 436], "timestep_multipli": [193, 355, 436], "timestr": 0, "timevaryingconstantconcentr": 0, "tip": 408, "titl": [317, 413, 437], "titu": 372, "tmp_dir": 439, "tmp_path": 395, "tmpdir": [402, 437, 439], "to_cr": 411, "to_csv": [346, 347], "to_datafram": [401, 419, 420, 422], "to_datetim": [359, 393, 399, 401, 406, 436], "to_fil": 432, "to_list": 408, "to_mf6_pkg": [0, 127, 128, 201, 202, 423], "to_netcdf": [0, 417, 418, 419, 431], "to_timedelta": [393, 399, 401, 406], "to_ugrid2d": [0, 359, 418, 419], "todo": 194, "togeth": [394, 408, 428, 440], "token": 0, "toler": [3, 174], "toml": [0, 104, 109, 136, 370, 376, 429], "tomli": 0, "tonerlit": 323, "too": 440, "tool": [374, 401, 408, 424, 428, 433], "toolset": 428, "toolz": 417, "top": [0, 6, 7, 8, 11, 12, 19, 23, 28, 35, 51, 81, 89, 94, 99, 112, 114, 116, 117, 120, 125, 130, 146, 147, 153, 159, 165, 166, 168, 169, 171, 173, 180, 181, 184, 185, 189, 190, 194, 195, 196, 198, 200, 204, 211, 256, 261, 262, 263, 265, 266, 267, 268, 273, 274, 275, 276, 277, 285, 286, 319, 320, 324, 326, 333, 349, 350, 351, 372, 377, 378, 379, 380, 381, 382, 385, 393, 394, 395, 396, 398, 399, 400, 401, 404, 406, 413, 417, 423, 428, 429, 431, 437, 438, 440], "top1d": [377, 378, 379, 380, 381, 382], "top_bot": [6, 8, 11, 12, 413], "top_elev": [19, 404], "top_sourc": 0, "topic": [50, 51], "topographi": 26, "topologi": [144, 310, 314, 394, 419, 422, 431], "topsystem": [0, 90, 100, 137, 160, 255, 259, 260, 262, 263, 264, 265, 430, 440, 441], "total": [26, 27, 118, 174, 254, 329, 330, 332, 334, 377, 378, 379, 380, 381, 382, 384, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 430, 431, 432, 435, 436, 437, 438, 439, 441], "total_flux": 393, "total_kd": [419, 420], "touch": 279, "tov": 408, "toward": [146, 329, 330, 331, 343, 394, 401, 423], "tox": 0, "tpt_1": 406, "tpt_a": 399, "tpt_b": 399, "tpt_c": 399, "tpt_d": 399, "tpt_model": [399, 406], "tqdm": 417, "track": [328, 329, 330, 331, 332, 355], "tradit": 431, "tradition": 377, "transfer": 118, "transform": [0, 3, 127, 201, 261, 359, 411], "transient": [0, 27, 36, 47, 124, 174, 180, 184, 186, 198, 305, 307, 317, 318, 343, 355, 358, 393, 394, 396, 398, 399, 400, 404, 406], "transient_da": [419, 421], "transient_uda": [419, 422], "translat": 427, "transluc": 323, "transmiss": [130, 204, 256, 266, 343, 401, 426, 431, 438], "transmissivity_l": 431, "transmissivity_l1": 431, "transmissivity_l10": 431, "transmissivity_l11": 431, "transmissivity_l12": 431, "transmissivity_l13": 431, "transmissivity_l2": 431, "transmissivity_l3": 431, "transmissivity_l4": 431, "transmissivity_l5": 431, "transmissivity_l6": 431, "transmissivity_l7": 431, "transmissivity_l8": 431, "transmissivity_l9": 431, "transpar": [232, 319, 323, 408], "transpir": [237, 254], "transport": [0, 74, 77, 80, 87, 93, 97, 108, 124, 138, 141, 145, 152, 157, 179, 198, 205, 206, 328, 329, 330, 331, 332, 334, 342, 347, 355, 357, 359, 377, 380, 382, 393, 403, 405, 428, 430], "transport_2d": [405, 406, 430], "transport_initial_timestep": 355, "transport_model": 396, "transport_solv": [393, 396, 399, 406], "transport_timestep_multipli": 355, "transportmodel": 399, "transpos": 401, "transsmis": 431, "transvers": [86, 336], "transversal_horizont": 212, "transversal_horizontal1": [86, 212, 393, 396, 399, 406, 437], "transversal_horizontal2": [86, 212, 437], "transversal_vert": [86, 212, 396, 437], "transverse_horizontal1": 86, "transverse_horizontal2": 86, "tranverse_vert": 86, "trapezoid": 286, "treat": [0, 25, 127, 135, 146, 201, 334, 354], "treatment": 342, "trend": [224, 385], "trend_da": 385, "treshold": 7, "tri": [37, 55, 395, 423], "triangl": [314, 319, 323, 419, 422, 438], "trianglemesh": [419, 422], "triangular": [394, 396], "trick": 298, "tricontourset": 395, "tripl": 118, "troublesom": 439, "trpt": 336, "trpv": 336, "true": [0, 3, 5, 8, 45, 46, 56, 59, 77, 78, 79, 80, 86, 87, 93, 97, 104, 107, 108, 109, 112, 114, 117, 118, 119, 124, 130, 131, 132, 135, 136, 139, 142, 145, 146, 151, 152, 157, 166, 169, 173, 174, 178, 179, 180, 184, 189, 191, 193, 194, 195, 198, 204, 205, 206, 207, 241, 254, 266, 279, 290, 301, 316, 319, 320, 321, 323, 337, 342, 346, 347, 355, 357, 377, 378, 379, 380, 381, 382, 393, 394, 396, 398, 399, 400, 401, 404, 406, 419, 420, 437, 438], "truncat": 26, "try": [43, 319, 323, 370, 371, 423, 427, 435], "tslngh": 355, "tsmult": [193, 355], "ttsmult": 355, "tupl": [6, 50, 85, 92, 96, 102, 123, 129, 150, 156, 160, 162, 183, 188, 192, 197, 203, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 240, 265, 269, 288, 303, 312, 319, 323, 327], "turn": [0, 47, 112, 114, 117, 166, 169, 173, 269, 428, 431, 432], "tutori": [0, 371], "tutorial_03": 0, "tvd": [75, 332, 355], "tweak": 437, "twice": [329, 330], "two": [26, 39, 44, 45, 55, 76, 78, 127, 128, 146, 201, 202, 246, 253, 258, 281, 284, 314, 316, 319, 320, 323, 324, 326, 329, 330, 357, 385, 393, 394, 401, 406, 413, 417, 419, 420, 426, 427, 429, 432, 435, 436, 438], "twodimension": [329, 330], "twri": [0, 397, 400, 403, 404, 405, 406, 430, 435], "twri_output": 435, "txt": [45, 46, 47, 48, 49], "type": [0, 3, 4, 6, 12, 13, 14, 24, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 58, 66, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 200, 203, 204, 207, 208, 209, 224, 227, 228, 232, 234, 239, 244, 246, 248, 250, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 320, 322, 324, 326, 327, 328, 329, 330, 331, 332, 334, 342, 343, 353, 394, 401, 403, 406, 431, 432, 435, 437, 438], "typeerror": [0, 311], "typic": [26, 27, 174, 278, 348, 401, 427, 431, 432, 433, 435], "typo": 0, "u": [0, 9, 10, 324, 372, 394, 401, 408, 413, 417, 431, 435], "ucn": 151, "uda": [418, 419, 422], "uda_md": [418, 419], "ugrid": [0, 104, 109, 136, 310, 314, 394, 395, 396, 400, 422], "ugrid2d": [394, 396, 419, 422], "ugrid2d_dataset": 314, "ugrid_d": [418, 419], "ugriddataarrai": [0, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 106, 110, 112, 114, 116, 117, 120, 121, 122, 123, 125, 127, 128, 129, 130, 134, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 168, 169, 171, 172, 173, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 200, 201, 202, 203, 204, 207, 208, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 293, 296, 297, 298, 299, 300, 396, 400], "ugriddatarrai": [262, 263, 265], "ugriddataset": [139, 141, 207, 308, 394], "ultim": 332, "unabl": 370, "unambigu": [140, 207, 208], "unassoci": [127, 201], "uncertainti": 249, "uncompromis": 371, "unconfin": [0, 32, 180, 184, 343, 426], "unconsolid": 26, "uncoupl": 357, "under": [0, 32, 42, 103, 105, 126, 137, 174, 184, 252, 313, 323, 401, 403, 436], "under_relax": [103, 174, 393, 394, 396, 398, 399, 400, 401, 404, 406], "under_relaxation_gamma": 174, "under_relaxation_kappa": 174, "under_relaxation_momentum": 174, "under_relaxation_theta": 174, "undergo": 437, "underli": [4, 93, 146, 152, 194], "underrelax": 174, "underscor": [41, 42, 54], "understand": [396, 427], "undesir": 437, "undo": 308, "undul": 26, "unexpect": [66, 258, 419, 420], "unfortun": 298, "unidata": [294, 295], "uniform": [329, 330, 343, 346, 347, 394, 398, 400, 404, 406], "unify_chunk": 0, "unimport": 336, "uninstal": 0, "unintend": 237, "union": [37, 38, 39, 134, 138, 140, 143, 208, 291, 292, 314], "unionimeth1head": 209, "uniqu": [25, 47, 124, 135, 198, 354], "unit": [0, 4, 26, 27, 30, 32, 36, 140, 174, 180, 184, 207, 208, 228, 231, 245, 249, 251, 254, 327, 334, 336, 343, 346, 348, 349, 350, 351, 357, 358, 370, 393, 396, 401, 426], "unitless": 174, "unittest": 370, "unless": [27, 118, 132, 146, 334, 348], "unlik": [19, 28, 355, 396, 429, 434], "unlimit": 26, "unmodifi": [85, 92, 96, 102, 123, 129, 150, 156, 162, 183, 188, 192, 197, 203], "unnam": 408, "unpack": [298, 413], "unpartit": [402, 406], "unreli": 44, "unrend": 374, "unrot": 146, "unsatisfi": 427, "unsatur": [26, 194, 426], "unsaturated_databas": 238, "unsaturatedzoneflow": 0, "unsplit": 406, "unstabl": [396, 437], "unstack": [0, 310], "unstructur": [0, 104, 109, 136, 146, 394, 396, 400, 418, 430, 440, 441], "unstructuredgrid": 320, "until": [0, 25, 41, 54, 80, 135, 317, 354, 385, 435, 438], "unus": 333, "unwant": 316, "up": [0, 13, 14, 44, 55, 83, 85, 88, 90, 92, 96, 98, 100, 102, 121, 123, 129, 146, 148, 150, 154, 156, 158, 160, 162, 183, 186, 188, 191, 192, 197, 199, 203, 228, 255, 270, 271, 272, 273, 317, 320, 370, 371, 377, 378, 379, 380, 381, 382, 385, 394, 396, 398, 404, 406, 419, 420, 435, 437, 438, 439, 440], "updat": [0, 106, 110, 279, 376, 427, 429], "upload": [372, 376], "upon": [0, 78, 79, 80, 86, 87, 93, 97, 107, 112, 114, 117, 118, 119, 124, 131, 132, 146, 151, 152, 157, 166, 169, 173, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206], "upond": 0, "upper": [0, 255, 262, 263, 265, 283, 301, 385], "upper_active_lay": [0, 359], "uppermost": [4, 282, 401], "upscal": 437, "upsid": 0, "upstream": [75, 76, 327, 328, 357, 401], "upw": 401, "upward": [231, 438], "upward_resist": [0, 231], "upwind": 76, "urban": [26, 229, 232, 246, 250], "urban_area": 26, "urgenc": [61, 68, 70, 72], "url": 0, "us": [0, 3, 4, 5, 9, 10, 11, 17, 18, 20, 23, 25, 26, 27, 29, 34, 35, 36, 37, 41, 42, 44, 45, 50, 54, 55, 56, 59, 61, 66, 68, 70, 72, 74, 77, 78, 80, 82, 83, 85, 86, 87, 90, 92, 93, 96, 97, 100, 102, 104, 105, 107, 109, 118, 119, 121, 123, 124, 127, 129, 130, 135, 137, 138, 140, 141, 144, 146, 148, 150, 152, 154, 156, 157, 160, 162, 174, 180, 183, 184, 186, 188, 189, 191, 192, 194, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 224, 226, 227, 231, 233, 234, 235, 236, 237, 239, 245, 247, 248, 249, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 278, 279, 284, 285, 286, 290, 291, 292, 295, 297, 298, 299, 300, 304, 305, 306, 307, 311, 313, 316, 317, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 333, 335, 336, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413, 415, 417, 419, 420, 422, 423, 427, 428, 429, 431, 432, 435, 436, 438, 439], "usabl": 432, "usag": [261, 269, 330, 435], "uscl_svat": 423, "use_absolute_path": 145, "use_binari": 145, "use_cftim": [41, 42, 43, 54], "use_relative_weight": [258, 261], "use_src_attr": 290, "useb": 372, "usecas": 313, "user": [0, 13, 14, 26, 37, 105, 107, 118, 137, 146, 174, 194, 237, 333, 355, 372, 374, 403, 406, 427, 429, 430, 437, 438, 441], "user_guid": 437, "usernam": 372, "userspecifi": 355, "userwarn": [401, 404, 432, 437], "usg": [87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 164, 167, 170, 174, 189, 193, 198, 205, 206, 417, 428], "usual": [27, 31, 174, 290, 329, 330, 333, 342, 346, 347, 348, 349, 350, 351, 377, 378, 379, 380, 381, 382, 385, 391, 393, 397, 398, 401, 404, 408, 413, 436, 438, 439], "util": [0, 44, 55, 82, 83, 90, 100, 121, 148, 154, 160, 186, 191, 294, 295, 359, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 406, 408, 409, 410, 411, 414, 415, 417, 418, 419, 420, 431, 432, 435, 437, 438, 439], "utm30n": 290, "uzf": [0, 194, 428, 437], "v": [0, 9, 10, 26, 324, 394, 406, 413], "v0": [0, 372], "v1": [0, 425], "v34": 370, "v5": [21, 163, 377, 378, 379, 380, 381, 382, 385], "v7": 26, "v8": 237, "v_": 11, "vados": 26, "valid": [0, 50, 77, 78, 79, 80, 86, 87, 93, 97, 104, 107, 109, 112, 114, 117, 118, 119, 124, 127, 130, 131, 132, 135, 136, 142, 145, 146, 151, 152, 157, 166, 169, 173, 174, 178, 179, 180, 184, 189, 191, 193, 194, 195, 198, 201, 204, 205, 206, 241, 266, 278, 423, 437, 439], "validationerror": [0, 78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 145, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206, 270, 271, 272, 439], "valu": [0, 3, 4, 5, 7, 20, 26, 27, 31, 39, 41, 42, 44, 45, 47, 48, 49, 54, 55, 58, 66, 78, 80, 84, 86, 87, 91, 93, 95, 97, 101, 105, 106, 110, 118, 119, 122, 124, 131, 132, 137, 138, 139, 140, 141, 144, 146, 149, 152, 155, 157, 161, 174, 180, 182, 184, 187, 189, 193, 194, 198, 200, 205, 206, 207, 208, 235, 245, 255, 256, 258, 261, 262, 263, 265, 269, 278, 279, 284, 285, 288, 289, 297, 298, 299, 300, 301, 316, 320, 323, 326, 328, 329, 330, 331, 332, 333, 334, 336, 341, 342, 343, 345, 346, 347, 348, 355, 357, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 399, 401, 404, 406, 408, 409, 417, 424, 426, 431, 435, 437, 438, 439], "valueerror": [0, 299, 300], "values_to_set": 298, "van": 26, "vanilla": 388, "vari": [0, 146, 285, 286, 343, 356, 401, 419, 420, 426, 438], "variabl": [0, 16, 23, 41, 54, 78, 82, 83, 90, 93, 100, 118, 121, 126, 143, 146, 148, 154, 160, 174, 179, 186, 191, 250, 252, 254, 270, 271, 272, 310, 314, 333, 334, 350, 357, 380, 391, 393, 394, 396, 401, 403, 404, 427, 431, 436, 437, 438, 439], "variable_vertical_conduct": [146, 398, 399, 400, 401, 404, 437], "variablecv": 146, "variabledensityflow": [377, 378, 379, 380, 381, 382], "variableoutputcontrol": 359, "variant": [17, 335], "variat": 332, "varieti": [0, 401, 428], "variou": [0, 355], "vcr": 254, "vcw": 423, "vdf": [377, 378, 379, 380, 381, 382], "ve": [0, 317, 419, 422, 427], "vector": [5, 27, 269, 279, 288, 291, 292, 323, 385, 409, 423, 430, 431, 435, 440, 441], "veget": [224, 237], "vegetation_factor": 224, "vegetation_index": [224, 237, 391], "vegetation_index_da": 391, "veldhuizen": 26, "veloc": [0, 6, 9, 10, 399, 406, 414, 416, 430], "veri": [27, 269, 348, 385, 393, 394, 396, 423, 426, 429, 431, 435, 436], "verifi": [128, 202, 375, 435, 437, 439], "versa": [227, 248, 440], "versatil": [428, 431], "version": [0, 45, 77, 80, 142, 174, 316, 370, 377, 378, 379, 380, 381, 382, 396, 398, 401, 419, 420, 426, 428, 439], "versu": 427, "vertic": [0, 5, 23, 26, 34, 35, 84, 86, 91, 95, 101, 105, 106, 110, 122, 137, 146, 149, 155, 161, 182, 187, 189, 194, 195, 206, 249, 255, 256, 261, 262, 263, 264, 265, 267, 268, 275, 277, 278, 285, 286, 294, 295, 329, 330, 336, 343, 349, 350, 383, 384, 385, 393, 396, 401, 404, 413, 419, 422, 428, 430, 432, 437, 438], "vertical_anisotropi": 34, "vertical_exagger": [317, 318, 320], "verticalanisotropi": [35, 385], "verticalinterfac": [382, 384, 430], "verticesdiscret": [0, 88, 98, 158, 192, 199, 211, 394, 396, 400, 437], "via": [0, 5, 138, 139, 140, 141, 207, 208, 344, 356, 374, 417, 426, 429, 431, 432, 433], "vice": [227, 248, 440], "view": [0, 26, 146, 329, 330, 423, 431, 432, 436], "viewer": [423, 431], "violat": [13, 14], "viridi": [321, 437, 438, 439], "visibl": [298, 432], "visual": [0, 13, 14, 25, 51, 135, 354, 359, 374, 395, 399, 413, 415, 417, 428, 429, 430, 435, 437, 438, 439, 440], "visualis": [379, 380, 382], "visualize_jupyt": 414, "visualize_python": 414, "visualstudio": 372, "visualstudiocod": 371, "vka": 343, "void": 132, "volum": [5, 27, 30, 32, 118, 132, 146, 180, 184, 194, 343, 348, 396, 426, 437], "volumetr": [124, 152, 198, 205, 206, 349, 350, 351, 396], "von": 237, "voronoi": 396, "voxel": [0, 319, 320, 324, 326, 359], "vpt": 437, "vscode": [374, 429, 435], "vtk": 345, "vx": [6, 376, 413], "vy": [6, 413], "vz": [6, 413], "w": [0, 4, 41, 54, 140, 163, 207, 208, 380], "wa": [0, 80, 126, 140, 207, 208, 252, 377, 396, 401, 427, 429, 432, 437, 439], "wageningen": 26, "wai": [0, 5, 13, 14, 45, 127, 201, 269, 319, 375, 388, 403, 405, 408, 415, 419, 420, 430, 433, 438, 439], "wall": 22, "walsum": 26, "wang": [11, 12], "want": [56, 82, 85, 92, 96, 102, 105, 123, 129, 137, 150, 156, 162, 183, 188, 192, 197, 203, 258, 370, 372, 376, 385, 396, 397, 419, 420, 427, 429, 435, 437, 439], "warn": [0, 59, 61, 66, 68, 70, 72, 298, 299, 300, 401, 404, 437], "warp": 290, "wast": 433, "water": [0, 4, 26, 29, 30, 32, 33, 87, 93, 97, 103, 108, 111, 113, 115, 119, 124, 131, 146, 151, 152, 157, 163, 164, 167, 170, 174, 180, 184, 189, 193, 194, 198, 205, 206, 237, 245, 250, 251, 254, 267, 268, 292, 327, 333, 343, 357, 377, 378, 379, 380, 382, 385, 393, 396, 398, 399, 401, 423, 426, 428, 432, 437, 440], "water_content_fil": 194, "water_mov": 194, "waterbal": [327, 423], "waterbalance_barchart": [359, 423], "watert": [26, 249], "waterwai": [269, 432], "wd": [329, 330, 331], "we": [0, 12, 82, 85, 92, 96, 102, 123, 127, 129, 150, 151, 156, 162, 163, 183, 188, 192, 194, 197, 201, 203, 237, 245, 269, 294, 295, 316, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 411, 413, 417, 419, 420, 422, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440], "web": [163, 377, 378, 379, 380, 381, 382, 385], "webclient": 372, "websit": [41, 54, 401, 408], "week": [140, 207, 208], "weight": [0, 74, 75, 76, 83, 85, 90, 92, 96, 100, 102, 121, 123, 127, 129, 148, 150, 154, 156, 160, 162, 183, 186, 188, 191, 192, 197, 201, 203, 256, 258, 261, 328, 329, 330, 331, 346, 347, 357, 397, 401, 419, 420, 437, 438], "weighting_factor": [329, 330, 331], "wel": [12, 107, 124, 198, 205, 206, 377, 379, 380, 381, 382, 385, 398, 400, 406, 423, 436], "wel_df": 385, "welcom": 375, "weldata": [379, 380, 382], "well": [0, 25, 45, 105, 107, 124, 126, 127, 128, 130, 135, 137, 174, 205, 206, 209, 225, 229, 239, 242, 243, 249, 252, 255, 266, 273, 354, 371, 372, 374, 376, 377, 379, 380, 381, 382, 393, 396, 397, 398, 400, 406, 408, 417, 419, 420, 423, 429, 431, 432, 433, 435, 436, 437], "well_i": 400, "well_rat": 400, "well_x": 400, "welldisstructur": 0, "welldisvertic": 0, "wellid": [126, 252], "wells_i": 398, "wells_l": 45, "wells_l1": 45, "wells_l2": 45, "wells_x": 398, "weltim": [124, 198], "were": [0, 80, 401, 408, 413, 437, 438, 439], "west": [21, 401, 431, 439], "western": 439, "wet": [146, 174, 229, 267, 268, 343], "wetdri": 146, "wetfactor": 343, "wetfct": [146, 343], "wether": 355, "wetted_area": 26, "wgs84": [290, 411], "what": [0, 45, 290, 298, 299, 300, 317, 401, 417, 429, 437, 438, 439], "wheel": [419, 422], "when": [0, 3, 4, 11, 12, 24, 27, 45, 50, 61, 66, 68, 70, 72, 78, 80, 86, 103, 127, 130, 139, 146, 151, 174, 180, 184, 194, 201, 204, 207, 259, 260, 266, 290, 311, 317, 318, 323, 329, 330, 331, 333, 342, 343, 346, 347, 348, 353, 370, 374, 394, 401, 402, 419, 420, 423, 426, 427, 435, 436, 437, 438, 440], "whenev": [27, 78, 370], "where": [0, 4, 5, 7, 22, 29, 32, 41, 54, 76, 82, 83, 105, 106, 110, 137, 163, 184, 194, 229, 239, 258, 264, 266, 269, 270, 271, 272, 284, 291, 303, 329, 330, 334, 350, 359, 372, 376, 377, 378, 379, 380, 381, 382, 385, 391, 394, 396, 398, 400, 401, 404, 413, 419, 420, 422, 423, 426, 427, 429, 435, 437, 438, 439], "wherea": [127, 201, 385, 401], "whether": [0, 5, 8, 44, 78, 79, 80, 86, 87, 93, 97, 103, 104, 109, 118, 119, 124, 131, 132, 136, 138, 139, 140, 145, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206, 207, 208, 227, 228, 248, 258, 297, 316, 319, 320, 329, 330, 331, 355, 396, 408], "which": [0, 4, 10, 11, 14, 19, 21, 25, 26, 27, 33, 36, 39, 41, 42, 44, 45, 47, 54, 55, 77, 78, 79, 80, 87, 93, 97, 103, 104, 105, 107, 108, 109, 112, 114, 117, 119, 124, 126, 127, 131, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 152, 157, 160, 166, 169, 173, 174, 179, 194, 198, 200, 201, 205, 206, 227, 237, 243, 248, 249, 252, 253, 254, 258, 262, 263, 264, 265, 269, 272, 275, 277, 278, 284, 291, 292, 294, 295, 297, 298, 316, 323, 328, 329, 330, 331, 332, 333, 334, 343, 345, 348, 349, 350, 351, 354, 355, 358, 370, 371, 372, 374, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 399, 401, 404, 406, 408, 410, 411, 417, 426, 427, 428, 431, 432, 436, 437, 438, 439], "while": [0, 30, 174, 180, 194, 278, 329, 330, 331, 374, 394, 419, 420, 426, 427, 440], "white": [323, 394, 413], "whiten": 319, "whiten_triangl": [319, 323], "whitespac": 438, "who": [0, 429], "whole": [66, 397, 402, 437], "whose": [279, 437], "why": [127, 201, 417, 427, 439], "wide": 5, "width": [118, 406, 432], "wiki": [30, 32, 180, 184], "wikipedia": [30, 32, 180, 184, 426], "wil": 42, "wildcard": 431, "wildli": 438, "wilei": 163, "window": [3, 143, 317, 370, 372, 373, 377, 378, 379, 380, 381, 382, 385, 403, 417, 427, 433], "winter": [0, 50, 105, 137, 385], "wise": [419, 420, 439], "wish": [45, 269, 316], "with_gap": [419, 420, 422], "within": [0, 45, 80, 146, 269, 279, 295, 297, 329, 330, 335, 349, 350, 351, 355, 371, 396, 397, 401, 427, 436], "within_polygon": 45, "without": [0, 3, 8, 13, 14, 47, 50, 74, 80, 87, 93, 97, 124, 127, 152, 157, 198, 201, 205, 257, 258, 261, 266, 274, 290, 346, 347, 394, 402, 408, 419, 422, 429, 435, 437, 438], "wofost": 224, "wonder": [127, 201], "word": 426, "work": [0, 13, 14, 25, 41, 44, 54, 66, 135, 136, 140, 174, 207, 208, 290, 297, 298, 329, 330, 354, 371, 375, 377, 378, 379, 380, 381, 382, 385, 394, 396, 401, 404, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 437, 439], "workaround": [423, 426], "workflow": [371, 428, 440], "world": 437, "worri": 427, "worsen": 174, "worth": 375, "worthi": 377, "would": [0, 4, 44, 55, 146, 371, 394, 427, 435, 437], "wouldn": 385, "wq": [0, 19, 28, 43, 359, 377, 378, 379, 380, 381, 382, 384, 417, 428, 430, 436], "wq_jupyt": 383, "wq_python": 383, "wq_v5_3_svn359_x64r": [377, 378, 379, 380, 381, 382], "wrap": [82, 83, 90, 100, 121, 148, 154, 160, 186, 191, 296, 316, 319, 324, 326, 371, 431, 432], "wrapper": 61, "write": [0, 24, 41, 42, 44, 47, 49, 54, 55, 56, 78, 104, 107, 109, 112, 114, 117, 118, 128, 130, 136, 138, 139, 140, 143, 163, 166, 169, 173, 202, 204, 230, 237, 238, 253, 254, 298, 315, 317, 319, 324, 326, 353, 359, 375, 377, 378, 379, 380, 381, 382, 385, 391, 393, 395, 396, 399, 401, 402, 404, 406, 417, 423, 427, 428, 431, 432, 436, 437], "write_assoc": [0, 359], "write_qgis_project": 0, "writecontext": 0, "writeup": [143, 403], "written": [0, 44, 47, 48, 49, 55, 59, 77, 78, 79, 80, 87, 93, 97, 103, 108, 118, 124, 131, 132, 145, 146, 151, 152, 157, 174, 179, 180, 184, 189, 194, 198, 205, 206, 209, 242, 253, 254, 310, 335, 343, 374, 385, 401, 427, 431, 435, 439], "wrong": [78, 79, 80, 86, 87, 93, 97, 118, 119, 124, 131, 132, 146, 151, 152, 157, 174, 179, 180, 184, 189, 193, 194, 195, 198, 205, 206], "www": 377, "x": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 81, 85, 86, 89, 92, 94, 96, 99, 102, 107, 111, 113, 115, 116, 120, 123, 124, 125, 129, 134, 139, 141, 146, 147, 150, 153, 156, 159, 162, 163, 165, 168, 171, 181, 183, 185, 188, 189, 190, 196, 197, 198, 200, 203, 207, 261, 266, 267, 269, 273, 278, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 314, 316, 317, 319, 320, 324, 326, 343, 358, 376, 377, 378, 379, 380, 381, 382, 385, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 408, 411, 413, 417, 419, 420, 421, 422, 432, 433, 435, 436, 437, 438, 439], "x27": [385, 391, 394, 401, 413, 431, 436, 437, 438, 439], "x64": 372, "x86": [372, 427], "x_line": 438, "x_max": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200, 394], "x_min": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200], "xarrai": [0, 5, 9, 10, 13, 14, 41, 42, 43, 44, 50, 54, 55, 82, 83, 90, 100, 105, 121, 126, 137, 148, 151, 154, 160, 186, 191, 194, 252, 266, 269, 270, 271, 272, 273, 278, 279, 288, 290, 291, 292, 293, 294, 295, 296, 298, 301, 303, 304, 305, 306, 307, 310, 312, 315, 316, 346, 347, 375, 377, 378, 379, 380, 381, 382, 385, 388, 391, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 413, 417, 419, 420, 422, 428, 429, 430, 433, 435, 436, 437, 438, 439, 440, 441], "xarri": [130, 204], "xlabel": 391, "xmax": [279, 303, 304, 305, 306, 307, 312, 385, 393, 397, 398, 399, 400, 401, 404, 408, 409, 410, 411, 419, 420, 437], "xmi": 77, "xmin": [279, 303, 304, 305, 306, 307, 312, 385, 393, 397, 398, 399, 400, 401, 404, 408, 409, 410, 411, 419, 420, 437], "xor": [419, 420], "xpandasindexpandasindex": [385, 401, 413, 431, 436, 437, 438, 439], "xr": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 79, 80, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 101, 102, 106, 110, 118, 119, 122, 123, 124, 129, 131, 132, 134, 138, 139, 140, 141, 142, 146, 149, 150, 151, 152, 155, 156, 157, 161, 162, 163, 180, 182, 183, 184, 187, 188, 189, 192, 194, 197, 198, 203, 205, 206, 207, 208, 224, 226, 228, 231, 237, 242, 245, 247, 249, 251, 253, 267, 268, 278, 279, 284, 287, 289, 290, 297, 298, 299, 300, 301, 304, 305, 306, 307, 310, 314, 317, 319, 320, 322, 323, 324, 326, 333, 334, 335, 337, 341, 343, 344, 349, 350, 351, 352, 356, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 413, 418, 419, 420, 431, 435, 436, 437, 438], "xsection_alloc": 438, "xsection_distribut": 438, "xsection_k": 438, "xsection_layer_nr": 438, "xt3d": [86, 146, 396, 423], "xt3d_off": [86, 393, 396, 399, 406], "xt3d_option": [146, 437], "xt3d_rh": [86, 393, 396, 399, 406], "xtick": 391, "xu": [84, 85, 91, 92, 95, 96, 101, 102, 106, 110, 122, 123, 129, 134, 138, 139, 140, 141, 142, 149, 150, 155, 156, 161, 162, 182, 183, 187, 188, 192, 195, 197, 203, 207, 208, 298, 394, 396, 400, 419, 422], "xugrid": [0, 82, 83, 90, 100, 121, 130, 148, 154, 160, 186, 191, 204, 266, 270, 271, 272, 273, 293, 296, 308, 394, 396, 400, 417, 419, 422, 429, 437], "xxxx": 0, "xy": [293, 296, 322, 437], "xy0": [285, 286], "xy1": [285, 286], "xy2": [285, 286], "xyz": 0, "y": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 81, 85, 86, 89, 92, 94, 96, 99, 102, 107, 111, 113, 115, 116, 120, 123, 124, 125, 129, 134, 139, 141, 146, 147, 150, 153, 156, 159, 162, 165, 168, 171, 181, 183, 185, 188, 189, 190, 196, 197, 198, 200, 203, 207, 261, 266, 267, 269, 273, 278, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 314, 316, 317, 320, 327, 343, 358, 372, 376, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 408, 411, 413, 417, 419, 420, 421, 422, 432, 433, 435, 436, 437, 438, 439], "y_max": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200], "y_min": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200], "ye": 401, "year": [0, 3, 41, 50, 54, 127, 140, 201, 207, 208, 234, 237, 385, 396, 401], "yearli": [224, 401], "yet": [0, 79, 80, 87, 93, 97, 124, 131, 146, 152, 157, 194, 198, 205, 206, 298, 316, 403, 419, 422, 425, 438], "yield": [32, 180, 184, 186, 329, 330, 343, 396, 397, 401], "yincreas": [377, 378, 379, 380, 381, 382, 393, 397, 413], "ylabel": 391, "ymax": [279, 304, 305, 306, 307, 312, 385, 397, 398, 400, 401, 404, 408, 409, 410, 411, 419, 420, 437], "ymin": [279, 304, 305, 306, 307, 312, 385, 397, 398, 400, 401, 404, 408, 409, 410, 411, 419, 420, 437], "yml": 0, "you": [0, 5, 25, 26, 41, 42, 44, 45, 54, 55, 56, 59, 61, 68, 70, 72, 105, 127, 128, 135, 137, 138, 139, 140, 143, 201, 202, 249, 254, 258, 259, 260, 261, 285, 286, 295, 298, 317, 323, 354, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 390, 391, 394, 400, 401, 402, 403, 407, 418, 419, 420, 423, 424, 427, 429, 435, 436, 437, 438, 439], "your": [0, 41, 45, 54, 56, 138, 139, 140, 143, 205, 206, 258, 261, 324, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 385, 391, 393, 394, 396, 398, 401, 403, 404, 423, 427, 429, 435, 436, 437, 439], "yourself": [298, 323, 370, 423, 429, 437], "ypandasindexpandasindex": [385, 401, 413, 431, 436, 437, 438, 439], "z": [0, 4, 6, 7, 11, 86, 146, 200, 285, 286, 320, 322, 376, 393, 396, 413], "zaadnoordijk": 163, "zarr": 0, "zb0": [285, 286], "zb1": [285, 286], "zb2": 286, "zbot": [111, 113, 115, 285, 286], "zbottom": [0, 285, 286], "zero": [0, 5, 18, 19, 27, 44, 55, 118, 132, 144, 146, 174, 194, 249, 329, 330, 337, 343, 355, 357, 399, 401, 406, 437], "zero_order_decai": [118, 132], "zerodivisionerror": 0, "zeros_lik": [391, 394, 396, 397, 400, 406], "zetaim": 118, "zheng": [11, 12], "zip": [0, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "zmax": 393, "zmin": 393, "zonal": [0, 291, 292], "zonal_aggreg": [291, 292], "zonal_aggregate_polygon": [0, 359], "zonal_aggregate_rast": [0, 359], "zone": [5, 22, 26, 194, 235, 291, 292, 419, 420, 432], "zone2d": 5, "zone_of_interest": 5, "zt0": [285, 286], "zt1": [285, 286], "zt2": 286, "ztop": [0, 111, 113, 115, 285, 286]}, "titles": ["Changelog", "Evaluate model output", "iMODFLOW", "imod.evaluate.calculate_gxg", "imod.evaluate.convert_pointwaterhead_freshwaterhead", "imod.evaluate.facebudget", "imod.evaluate.flow_velocity", "imod.evaluate.interpolate_value_boundaries", "imod.evaluate.intra_cell_boundary_conditions", "imod.evaluate.quiver_line", "imod.evaluate.quiver_linestring", "imod.evaluate.stability_constraint_advection", "imod.evaluate.stability_constraint_wel", "imod.evaluate.streamfunction_line", "imod.evaluate.streamfunction_linestring", "imod.flow.Bottom", "imod.flow.Boundary", "imod.flow.ConstantHead", "imod.flow.Drain", "imod.flow.EvapoTranspiration", "imod.flow.GeneralHeadBoundary", "imod.flow.HorizontalAnisotropy", "imod.flow.HorizontalFlowBarrier", "imod.flow.HorizontalHydraulicConductivity", "imod.flow.ImodflowModel", "imod.flow.ImodflowModel.create_time_discretization", "imod.flow.MetaSwap", "imod.flow.PreconditionedConjugateGradientSolver", "imod.flow.Recharge", "imod.flow.River", "imod.flow.SpecificStorage", "imod.flow.StartingHead", "imod.flow.StorageCoefficient", "imod.flow.Top", "imod.flow.VerticalAnisotropy", "imod.flow.VerticalHydraulicConductivity", "imod.flow.Well", "imod.formats.gen.read", "imod.formats.gen.read_ascii", "imod.formats.gen.write", "imod.formats.idf.header", "imod.formats.idf.open", "imod.formats.idf.open_dataset", "imod.formats.idf.open_subdomains", "imod.formats.idf.save", "imod.formats.ipf.read", "imod.formats.ipf.read_associated", "imod.formats.ipf.save", "imod.formats.ipf.write", "imod.formats.ipf.write_assoc", "imod.formats.prj.open_projectfile_data", "imod.formats.prj.read_projectfile", "imod.formats.prj.read_timfile", "imod.formats.rasterio.header", "imod.formats.rasterio.open", "imod.formats.rasterio.save", "imod.logging", "imod.logging.config", "imod.logging.config.LoggerType", "imod.logging.config.configure", "imod.logging.ilogger", "imod.logging.ilogger.ILogger", "imod.logging.logging_decorators", "imod.logging.logging_decorators.init_log_decorator", "imod.logging.logging_decorators.standard_log_decorator", "imod.logging.loglevel", "imod.logging.loglevel.LogLevel", "imod.logging.logurulogger", "imod.logging.logurulogger.LoguruLogger", "imod.logging.nulllogger", "imod.logging.nulllogger.NullLogger", "imod.logging.pythonlogger", "imod.logging.pythonlogger.PythonLogger", "imod.couplers.metamod.MetaMod", "imod.mf6.AdvectionCentral", "imod.mf6.AdvectionTVD", "imod.mf6.AdvectionUpstream", "imod.mf6.ApiPackage", "imod.mf6.Buoyancy", "imod.mf6.ConstantConcentration", "imod.mf6.ConstantHead", "imod.mf6.ConstantHead.clip_box", "imod.mf6.ConstantHead.from_imod5_data", "imod.mf6.ConstantHead.from_imod5_shd_data", "imod.mf6.ConstantHead.mask", "imod.mf6.ConstantHead.regrid_like", "imod.mf6.Dispersion", "imod.mf6.Drainage", "imod.mf6.Drainage.cleanup", "imod.mf6.Drainage.clip_box", "imod.mf6.Drainage.from_imod5_data", "imod.mf6.Drainage.mask", "imod.mf6.Drainage.regrid_like", "imod.mf6.Evapotranspiration", "imod.mf6.Evapotranspiration.clip_box", "imod.mf6.Evapotranspiration.mask", "imod.mf6.Evapotranspiration.regrid_like", "imod.mf6.GeneralHeadBoundary", "imod.mf6.GeneralHeadBoundary.cleanup", "imod.mf6.GeneralHeadBoundary.clip_box", "imod.mf6.GeneralHeadBoundary.from_imod5_data", "imod.mf6.GeneralHeadBoundary.mask", "imod.mf6.GeneralHeadBoundary.regrid_like", "imod.mf6.GroundwaterFlowModel", "imod.mf6.GroundwaterFlowModel.dump", "imod.mf6.GroundwaterFlowModel.from_imod5_data", "imod.mf6.GroundwaterFlowModel.mask_all_packages", "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "imod.mf6.GroundwaterTransportModel", "imod.mf6.GroundwaterTransportModel.dump", "imod.mf6.GroundwaterTransportModel.mask_all_packages", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierMultiplier", "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierResistance", "imod.mf6.HorizontalFlowBarrierResistance.clip_box", "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.ImmobileStorageTransfer", "imod.mf6.InitialConditions", "imod.mf6.InitialConditions.clip_box", "imod.mf6.InitialConditions.from_imod5_data", "imod.mf6.InitialConditions.mask", "imod.mf6.InitialConditions.regrid_like", "imod.mf6.LayeredWell", "imod.mf6.LayeredWell.clip_box", "imod.mf6.LayeredWell.from_imod5_cap_data", "imod.mf6.LayeredWell.from_imod5_data", "imod.mf6.LayeredWell.mask", "imod.mf6.LayeredWell.regrid_like", "imod.mf6.LayeredWell.to_mf6_pkg", "imod.mf6.MassSourceLoading", "imod.mf6.MobileStorageTransfer", "imod.mf6.Modflow6Simulation", "imod.mf6.Modflow6Simulation.clip_box", "imod.mf6.Modflow6Simulation.create_time_discretization", "imod.mf6.Modflow6Simulation.dump", "imod.mf6.Modflow6Simulation.from_imod5_data", "imod.mf6.Modflow6Simulation.open_concentration", "imod.mf6.Modflow6Simulation.open_flow_budget", "imod.mf6.Modflow6Simulation.open_head", "imod.mf6.Modflow6Simulation.open_transport_budget", "imod.mf6.Modflow6Simulation.regrid_like", "imod.mf6.Modflow6Simulation.run", "imod.mf6.Modflow6Simulation.split", "imod.mf6.Modflow6Simulation.write", "imod.mf6.NodePropertyFlow", "imod.mf6.NodePropertyFlow.clip_box", "imod.mf6.NodePropertyFlow.from_imod5_data", "imod.mf6.NodePropertyFlow.mask", "imod.mf6.NodePropertyFlow.regrid_like", "imod.mf6.OutputControl", "imod.mf6.Recharge", "imod.mf6.Recharge.clip_box", "imod.mf6.Recharge.from_imod5_data", "imod.mf6.Recharge.mask", "imod.mf6.Recharge.regrid_like", "imod.mf6.River", "imod.mf6.River.cleanup", "imod.mf6.River.clip_box", "imod.mf6.River.from_imod5_data", "imod.mf6.River.mask", "imod.mf6.River.regrid_like", "imod.mf6.River.split_conductance", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.clip_box", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.clip_box", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.clip_box", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.Solution", "imod.mf6.SolutionPresetComplex", "imod.mf6.SolutionPresetModerate", "imod.mf6.SolutionPresetSimple", "imod.mf6.SourceSinkMixing", "imod.mf6.SourceSinkMixing.from_flow_model", "imod.mf6.SpecificStorage", "imod.mf6.SpecificStorage.clip_box", "imod.mf6.SpecificStorage.mask", "imod.mf6.SpecificStorage.regrid_like", "imod.mf6.StorageCoefficient", "imod.mf6.StorageCoefficient.clip_box", "imod.mf6.StorageCoefficient.from_imod5_data", "imod.mf6.StorageCoefficient.mask", "imod.mf6.StorageCoefficient.regrid_like", "imod.mf6.StructuredDiscretization", "imod.mf6.StructuredDiscretization.clip_box", "imod.mf6.StructuredDiscretization.from_imod5_data", "imod.mf6.StructuredDiscretization.regrid_like", "imod.mf6.TimeDiscretization", "imod.mf6.UnsaturatedZoneFlow", "imod.mf6.VerticesDiscretization", "imod.mf6.VerticesDiscretization.clip_box", "imod.mf6.VerticesDiscretization.regrid_like", "imod.mf6.Well", "imod.mf6.Well.cleanup", "imod.mf6.Well.clip_box", "imod.mf6.Well.from_imod5_data", "imod.mf6.Well.mask", "imod.mf6.Well.regrid_like", "imod.mf6.Well.to_mf6_pkg", "imod.mf6.WellDisStructured", "imod.mf6.WellDisVertices", "imod.mf6.open_cbc", "imod.mf6.open_hds", "imod.mf6.read_cbc_headers", "imod.mf6.regrid.ConstantHeadRegridMethod", "imod.mf6.regrid.DiscretizationRegridMethod", "imod.mf6.regrid.DispersionRegridMethod", "imod.mf6.regrid.DrainageRegridMethod", "imod.mf6.regrid.EmptyRegridMethod", "imod.mf6.regrid.EvapotranspirationRegridMethod", "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "imod.mf6.regrid.InitialConditionsRegridMethod", "imod.mf6.regrid.MobileStorageTransferRegridMethod", "imod.mf6.regrid.NodePropertyFlowRegridMethod", "imod.mf6.regrid.RechargeRegridMethod", "imod.mf6.regrid.RiverRegridMethod", "imod.mf6.regrid.SpecificStorageRegridMethod", "imod.mf6.regrid.StorageCoefficientRegridMethod", "imod.msw.AnnualCropFactors", "imod.msw.CouplerMapping", "imod.msw.EvapotranspirationMapping", "imod.msw.EvapotranspirationMapping.from_imod5_data", "imod.msw.GridData", "imod.msw.GridData.from_imod5_data", "imod.msw.IdfMapping", "imod.msw.Infiltration", "imod.msw.Infiltration.from_imod5_data", "imod.msw.InitialConditionsEquilibrium", "imod.msw.InitialConditionsPercolation", "imod.msw.InitialConditionsRootzonePressureHead", "imod.msw.InitialConditionsSavedState", "imod.msw.LanduseOptions", "imod.msw.MetaSwapModel", "imod.msw.MetaSwapModel.from_imod5_data", "imod.msw.MetaSwapModel.regrid_like", "imod.msw.MetaSwapModel.write", "imod.msw.MeteoGrid", "imod.msw.MeteoGridCopy", "imod.msw.MeteoGridCopy.from_imod5_data", "imod.msw.Ponding", "imod.msw.Ponding.from_imod5_data", "imod.msw.PrecipitationMapping", "imod.msw.PrecipitationMapping.from_imod5_data", "imod.msw.ScalingFactors", "imod.msw.ScalingFactors.from_imod5_data", "imod.msw.Sprinkling", "imod.msw.Sprinkling.from_imod5_data", "imod.msw.TimeOutputControl", "imod.msw.VariableOutputControl", "imod.prepare.ALLOCATION_OPTION", "imod.prepare.DISTRIBUTING_OPTION", "imod.prepare.LayerRegridder", "imod.prepare.Regridder", "imod.prepare.SimulationAllocationOptions", "imod.prepare.SimulationDistributingOptions", "imod.prepare.Voxelizer", "imod.prepare.allocate_drn_cells", "imod.prepare.allocate_ghb_cells", "imod.prepare.allocate_rch_cells", "imod.prepare.allocate_riv_cells", "imod.prepare.assign_wells", "imod.prepare.c_leakage", "imod.prepare.c_radial", "imod.prepare.celltable", "imod.prepare.cleanup_drn", "imod.prepare.cleanup_ghb", "imod.prepare.cleanup_riv", "imod.prepare.cleanup_wel", "imod.prepare.create_layered_top", "imod.prepare.distribute_drn_conductance", "imod.prepare.distribute_ghb_conductance", "imod.prepare.distribute_riv_conductance", "imod.prepare.fill", "imod.prepare.gdal_rasterize", "imod.prepare.get_lower_active_grid_cells", "imod.prepare.get_lower_active_layer_number", "imod.prepare.get_upper_active_grid_cells", "imod.prepare.get_upper_active_layer_number", "imod.prepare.laplace_interpolate", "imod.prepare.linestring_to_square_zpolygons", "imod.prepare.linestring_to_trapezoid_zpolygons", "imod.prepare.polygonize", "imod.prepare.rasterize", "imod.prepare.rasterize_celltable", "imod.prepare.reproject", "imod.prepare.zonal_aggregate_polygons", "imod.prepare.zonal_aggregate_raster", "imod.select.active_grid_boundary_xy", "imod.select.cross_section_line", "imod.select.cross_section_linestring", "imod.select.grid_boundary_xy", "imod.select.points_in_bounds", "imod.select.points_indices", "imod.select.points_set_values", "imod.select.points_values", "imod.select.upper_active_layer", "imod.util.cd", "imod.util.coord_reference", "imod.util.empty_2d", "imod.util.empty_2d_transient", "imod.util.empty_3d", "imod.util.empty_3d_transient", "imod.util.from_mdal_compliant_ugrid2d", "imod.util.ignore_warnings", "imod.util.mdal_compliant_ugrid2d", "imod.util.print_if_error", "imod.util.spatial_reference", "imod.util.to_datetime", "imod.util.to_ugrid2d", "imod.util.transform", "imod.util.where", "imod.visualize.GridAnimation3D", "imod.visualize.StaticGridAnimation3D", "imod.visualize.cross_section", "imod.visualize.grid_3d", "imod.visualize.imshow_topview", "imod.visualize.line_3d", "imod.visualize.plot_map", "imod.visualize.quiver", "imod.visualize.read_imod_legend", "imod.visualize.streamfunction", "imod.visualize.waterbalance_barchart", "imod.wq.AdvectionFiniteDifference", "imod.wq.AdvectionHybridMOC", "imod.wq.AdvectionMOC", "imod.wq.AdvectionModifiedMOC", "imod.wq.AdvectionTVD", "imod.wq.BasicFlow", "imod.wq.BasicTransport", "imod.wq.ConstantHead", "imod.wq.Dispersion", "imod.wq.Drainage", "imod.wq.EvapotranspirationHighestActive", "imod.wq.EvapotranspirationLayers", "imod.wq.EvapotranspirationTopLayer", "imod.wq.GeneralHeadBoundary", "imod.wq.GeneralizedConjugateGradientSolver", "imod.wq.LayerPropertyFlow", "imod.wq.MassLoading", "imod.wq.OutputControl", "imod.wq.ParallelKrylovFlowSolver", "imod.wq.ParallelKrylovTransportSolver", "imod.wq.PreconditionedConjugateGradientSolver", "imod.wq.RechargeHighestActive", "imod.wq.RechargeLayers", "imod.wq.RechargeTopLayer", "imod.wq.River", "imod.wq.SeawatModel", "imod.wq.SeawatModel.create_time_discretization", "imod.wq.TimeDiscretization", "imod.wq.TimeVaryingConstantConcentration", "imod.wq.VariableDensityFlow", "imod.wq.Well", "API Reference", "Input/output", "Logging", "MetaMod", "MODFLOW6", "MetaSWAP", "Prepare model input", "Select points and cross sections", "Utilities", "Visualize", "iMOD-WQ", "Debugging Continuous Integration", "Contributing Code", "Docker build image", "Building documentation and examples", "Developing examples", "Developing", "How to release a new version", "Elder", "Freshwater Lens", "Henry", "Hydrocoin", "Saltwater Pocket", "Vertical Interface", "iMOD-WQ", "Computation times", "Model Creation", "iMODFLOW", "Computation times", "Examples", "MetaSWAP", "Coupled MetaSWAP - Modflow6 model", "Reading existing MetaSWAP input", "Computation times", "Henry", "Circle", "Circle partitioned", "Freshwater lens (circle)", "Different ways to regrid models", "TWRI", "1D Solute Transport Benchmarks", "Example models", "Regional model", "Partitioning a regional model", "MODFLOW6", "Lake package example", "Computation times", "Transport 2d example", "Prepare", "Head point interpolation", "Polygonize raster", "Rasterize shapefiles", "Reproject data", "Computation times", "Flow velocities and streamlines", "Visualization", "Plot maps", "Computation times", "General Questions", "Data In/Out", "How do I \u2026", "Data modification", "Plot a timeseries for a single cell", "Unstructured", "iMOD5 backwards compatibility", "FAQ", "Known Issues", "Groundwater Modeling with iMOD", "Installing Python and packages", "iMOD Python: make massive MODFLOW models", "Installing", "Computation times", "Raster data and xarray", "Vector data and Geopandas", "Time series data and Pandas", "Unstructured Grids", "Lazy evaluation", "Model time discretization", "Regridding", "Topsystem: from 2D map to 3D model", "Data cleanup", "User Guide", "Computation times"], "titleterms": {"0": 0, "01": 0, "02": 0, "03": 0, "04": 0, "05": 0, "06": 0, "07": 0, "08": 0, "09": 0, "0b0": 0, "1": [0, 411], "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "1d": 399, "2": [0, 411], "20": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 0, "2024": 0, "21": 0, "22": 0, "23": 0, "25": 0, "26": 0, "29": 0, "2d": [406, 438], "3": [0, 411], "3d": 438, "4": 0, "5": 0, "6": [0, 425], "7": 0, "8": 0, "9": 0, "A": [427, 437], "If": [419, 420], "In": [418, 419], "The": 439, "active_grid_boundary_xi": 293, "ad": [0, 401], "add": 396, "advectioncentr": 74, "advectionfinitediffer": 328, "advectionhybridmoc": 329, "advectionmoc": 330, "advectionmodifiedmoc": 331, "advectiontvd": [75, 332], "advectionupstream": 76, "agon": 427, "alloc": 438, "allocate_drn_cel": 262, "allocate_ghb_cel": 263, "allocate_rch_cel": 264, "allocate_riv_cel": 265, "allocation_opt": 255, "along": [419, 420], "an": [391, 419, 420, 427], "anaconda": 427, "annualcropfactor": 224, "api": 359, "apipackag": 77, "ar": 426, "arithmet": [419, 420], "arrai": [419, 420], "assign": [396, 401], "assign_wel": 266, "attach": 401, "autom": 371, "background": 427, "backward": [423, 425], "barrier": 385, "basic": 436, "basicflow": 333, "basictransport": 334, "benchmark": 399, "beta": 429, "bit": 427, "bottom": 15, "boundari": [16, 377, 378, 380, 381, 382, 385, 436, 437], "bug": 375, "build": [370, 372, 373, 377, 378, 379, 380, 381, 382, 385], "buoyanc": [78, 396], "c_leakag": 267, "c_radial": 268, "calcul": 413, "calculate_gxg": 3, "cd": 302, "cell": [419, 421, 422, 438], "cellsiz": [411, 419, 420], "celltabl": 269, "central": 385, "chang": [0, 419, 420], "changelog": 0, "chd": 401, "chunk": 435, "circl": [394, 395, 396], "clean": 439, "cleanup": [88, 98, 158, 199, 439], "cleanup_drn": 270, "cleanup_ghb": 271, "cleanup_riv": 272, "cleanup_wel": 273, "clip_box": [81, 89, 94, 99, 116, 120, 125, 134, 147, 153, 159, 165, 168, 171, 181, 185, 190, 196, 200], "code": 371, "coeffici": 426, "comparison": 437, "compat": [423, 425], "comput": [384, 387, 392, 405, 412, 416, 430, 435, 441], "conda": 429, "condit": [377, 378, 380, 381, 382, 385, 401, 419, 420, 436, 437], "conduct": [401, 437, 438], "config": [57, 58, 59], "configur": 59, "conflict": 427, "constant": 401, "constantconcentr": 79, "constanthead": [17, 80, 81, 82, 83, 84, 85, 335], "constantheadregridmethod": 210, "contain": 370, "continu": 370, "contribut": 371, "control": [371, 401], "convers": 432, "convert": [418, 419], "convert_pointwaterhead_freshwaterhead": 4, "coord_refer": 303, "coordin": [396, 398, 404, 431], "coupl": 390, "coupler": 73, "couplermap": 225, "cr": 431, "creat": [370, 391, 394, 396, 398, 404, 419, 420], "create_layered_top": 274, "create_time_discret": [25, 135, 354], "creation": 385, "cross": 366, "cross_sect": 319, "cross_section_lin": 294, "cross_section_linestr": 295, "dask": [419, 420], "data": [401, 411, 417, 418, 419, 420, 431, 432, 433, 438, 439], "dataarrai": [398, 404, 418, 419], "dataset": [411, 418, 419, 420, 422], "date": 401, "debug": 370, "default": 437, "delai": 435, "deltaforg": 429, "depend": [417, 427, 429], "deprec": 0, "develop": [374, 375, 427, 429], "di": 401, "differ": [397, 417], "dimens": 431, "discret": [363, 377, 378, 379, 380, 382, 385, 401, 436], "discretizationregridmethod": 211, "dispers": [86, 336], "dispersionregridmethod": 212, "distribut": 438, "distribute_drn_conduct": 275, "distribute_ghb_conduct": 276, "distribute_riv_conduct": 277, "distributing_opt": 256, "ditch": 385, "do": 419, "docker": [370, 372], "dockerfil": 372, "document": 373, "domain": [394, 411, 437], "dr": 429, "drain": 18, "drainag": [87, 88, 89, 90, 91, 92, 337, 401], "drainageregridmethod": 213, "drn": 401, "dump": [104, 109, 136], "e": [419, 420], "edg": 401, "elder": 377, "els": [419, 420], "empti": [419, 420], "empty_2d": 304, "empty_2d_transi": 305, "empty_3d": 306, "empty_3d_transi": 307, "emptyregridmethod": 214, "environ": 427, "evalu": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 419, 420, 435], "evapotranspir": [19, 93, 94, 95, 96], "evapotranspirationhighestact": 338, "evapotranspirationlay": 339, "evapotranspirationmap": [226, 227], "evapotranspirationregridmethod": 215, "evapotranspirationtoplay": 340, "exampl": [373, 374, 388, 391, 400, 404, 406, 438], "exist": [391, 439], "experienc": 429, "extent": [419, 420], "extra": 436, "extract": 401, "facebudget": 5, "factor": 426, "faq": 424, "file": [391, 418, 419, 423, 435], "fill": [278, 419, 420, 422], "final": 437, "fix": 0, "flopi": 417, "flow": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 363, 369, 385, 396, 401, 413], "flow_veloc": 6, "forc": [419, 420], "format": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 431], "freshwat": [378, 396], "from": [417, 419, 420, 422, 438], "from_flow_model": 179, "from_imod5_cap_data": 126, "from_imod5_data": [82, 90, 100, 105, 121, 127, 137, 148, 154, 160, 172, 186, 191, 201, 227, 229, 232, 239, 244, 246, 248, 250, 252], "from_imod5_shd_data": 83, "from_mdal_compliant_ugrid2d": 308, "function": 413, "g": [419, 420], "gdal_raster": 279, "gen": [37, 38, 39], "gener": [417, 419, 422, 426], "generalheadboundari": [20, 97, 98, 99, 100, 101, 102, 341], "generalheadboundaryregridmethod": 216, "generalizedconjugategradientsolv": 342, "geopanda": 432, "get": [419, 420], "get_lower_active_grid_cel": 280, "get_lower_active_layer_numb": 281, "get_upper_active_grid_cel": 282, "get_upper_active_layer_numb": 283, "grid": [2, 398, 404, 434], "grid_3d": 320, "grid_boundary_xi": 296, "gridanimation3d": 317, "griddata": [228, 229], "groundwat": 426, "groundwaterflowmodel": [103, 104, 105, 106, 107], "groundwatertransportmodel": [108, 109, 110], "guid": 440, "head": [401, 408, 419, 421, 422], "header": [40, 53], "henri": [379, 393], "histogram": 437, "horizont": 385, "horizontalanisotropi": 21, "horizontalflowbarri": 22, "horizontalflowbarrierhydrauliccharacterist": [111, 112], "horizontalflowbarriermultipli": [113, 114], "horizontalflowbarrierresist": [115, 116, 117], "horizontalhydraulicconduct": 23, "how": [372, 376, 417, 419], "hydraul": 401, "hydrocoin": 380, "hydrogeologi": [380, 385], "i": [417, 419, 435, 437], "ic": 401, "icelltyp": 401, "idf": [40, 41, 42, 43, 44, 418, 419], "idfmap": 230, "ignore_warn": 309, "ilogg": [60, 61], "imag": [370, 372], "immobilestoragetransf": 118, "imod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 369, 383, 417, 426, 427, 428, 429], "imod5": [423, 425], "imodflow": [2, 386], "imodflowmodel": [24, 25], "import": [401, 418, 419], "imshow_topview": 321, "increas": [419, 420], "infiltr": [231, 232, 426], "inform": 401, "init_log_decor": 63, "initi": [377, 378, 380, 381, 382, 385, 401], "initialcondit": [119, 120, 121, 122, 123], "initialconditionsequilibrium": 233, "initialconditionspercol": 234, "initialconditionsregridmethod": 217, "initialconditionsrootzonepressurehead": 235, "initialconditionssavedst": 236, "inp": 391, "input": [360, 365, 391, 431, 432], "insid": 370, "instal": [427, 429], "integr": 370, "interfac": 382, "interpol": [401, 408, 419, 420, 422], "interpolate_value_boundari": 7, "intra_cell_boundary_condit": 8, "ipf": [45, 46, 47, 48, 49, 418, 419], "issu": [423, 425], "known": [423, 425], "lake": 404, "landuseopt": 237, "laplace_interpol": 284, "larg": 417, "latest": 429, "layer": [419, 420, 421, 422], "layeredwel": [124, 125, 126, 127, 128, 129, 130], "layerpropertyflow": 343, "layerregridd": 257, "layout": 435, "lazi": 435, "len": [378, 396], "line_3d": 322, "linestring_to_square_zpolygon": 285, "linestring_to_trapezoid_zpolygon": 286, "load": [401, 419, 420], "local": 370, "locat": 433, "log": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 361], "loggertyp": 58, "logging_decor": [62, 63, 64], "loglevel": [65, 66], "logurulogg": [67, 68], "make": [418, 419, 428], "map": [415, 438], "mask": [84, 91, 95, 101, 122, 128, 149, 155, 161, 182, 187, 202], "mask_all_packag": [106, 110], "massiv": 428, "massload": 344, "masssourceload": 131, "mdal_compliant_ugrid2d": 310, "memori": [419, 420, 435], "mesh": [394, 396, 419, 422], "metamod": [73, 362], "metaswap": [26, 364, 389, 390, 391, 423], "metaswapmodel": [238, 239, 240, 241], "meteogrid": 242, "meteogridcopi": [243, 244], "method": [363, 437, 439], "mf6": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "miniconda": 427, "miniforg": 427, "mobilestoragetransf": 132, "mobilestoragetransferregridmethod": 218, "model": [1, 2, 363, 365, 369, 385, 390, 393, 394, 396, 397, 398, 400, 401, 402, 404, 417, 426, 428, 436, 438, 439], "modflow": [425, 428, 435], "modflow6": [363, 390, 403, 423, 426, 438, 439], "modflow6simul": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "modif": [419, 420], "more": 431, "msw": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "multipl": [418, 419], "netcdf": [418, 419, 431], "new": [376, 411, 429, 439], "nodata": [419, 420, 422], "node": 401, "nodepropertyflow": [146, 147, 148, 149, 150], "nodepropertyflowregridmethod": 219, "non": 437, "note": [423, 437], "npf": 401, "nulllogg": [69, 70], "numpi": [419, 420], "object": 363, "obtain": [370, 437], "oc": 401, "one": [419, 421, 422], "onli": 411, "open": [41, 54, 393, 394, 396, 398, 404], "open_cbc": 207, "open_concentr": 138, "open_dataset": 42, "open_flow_budget": 139, "open_hd": 208, "open_head": 140, "open_projectfile_data": 50, "open_subdomain": 43, "open_transport_budget": 141, "option": 438, "other": 431, "out": [418, 419], "outer": 385, "output": [1, 360, 363, 396, 401, 431, 432], "outputcontrol": [151, 345], "over": [419, 420], "overview": 438, "packag": [2, 363, 401, 404, 427, 437, 438], "pain": 427, "panda": 433, "parallelkrylovflowsolv": 346, "parallelkrylovtransportsolv": 347, "paramet": 396, "part": [419, 420], "partit": [395, 402], "period": 385, "pip": 429, "pipelin": 370, "pitfal": 435, "pixi": [372, 429], "plot": [413, 415, 419, 421, 422], "plot_map": 323, "pocket": 381, "point": [366, 401, 408, 411, 419, 420, 422, 433], "points_in_bound": 297, "points_indic": 298, "points_set_valu": 299, "points_valu": 300, "polygon": [287, 409, 419, 420], "pond": [245, 246], "postprocess": 423, "precipitationmap": [247, 248], "preconditionedconjugategradientsolv": [27, 348], "prepar": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 365, 407], "prepare_wel_for_mf6": 107, "print_if_error": 311, "prj": [50, 51, 52], "properti": [401, 419, 420], "push": 372, "python": [417, 425, 427, 428, 429], "pythonlogg": [71, 72], "qgi": [418, 419], "question": 417, "quiver": [324, 413], "quiver_lin": 9, "quiver_linestr": 10, "raster": [288, 409, 410, 411, 419, 420, 431, 432], "rasterio": [53, 54, 55], "rasterize_cellt": 289, "rch": 401, "read": [37, 45, 363, 391], "read_ascii": 38, "read_associ": 46, "read_cbc_head": 209, "read_imod_legend": 325, "read_projectfil": 51, "read_timfil": 52, "readabl": [418, 419], "recharg": [28, 152, 153, 154, 155, 156, 396, 401], "rechargehighestact": 349, "rechargelay": 350, "rechargeregridmethod": 220, "rechargetoplay": 351, "refer": [359, 431], "region": [401, 402], "regrid": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 363, 397, 437], "regrid_lik": [85, 92, 96, 102, 123, 129, 142, 150, 156, 162, 183, 188, 192, 197, 203, 240], "regridd": 258, "regular": 429, "releas": [376, 429], "remov": 0, "report": 375, "reproject": [290, 411], "resampl": 411, "resolut": [419, 420], "result": [377, 378, 381, 393, 394, 396, 398, 401, 404], "review": 371, "rise": 385, "riv": 401, "river": [29, 157, 158, 159, 160, 161, 162, 163, 352, 401, 426, 438], "riverregridmethod": 221, "run": [143, 370, 377, 378, 379, 380, 381, 382, 385, 393, 394, 396, 398, 401, 404], "saltwat": 381, "save": [44, 47, 55], "scalingfactor": [249, 250], "seawatmodel": [353, 354], "section": 366, "select": [293, 294, 295, 296, 297, 298, 299, 300, 301, 366, 419, 420, 422], "seri": 433, "set": [363, 369, 401, 427, 436], "shapefil": 410, "simul": [396, 401, 439], "simulationallocationopt": 259, "simulationdistributingopt": 260, "singl": [418, 419, 420, 421, 422], "singlelayerhorizontalflowbarrierhydrauliccharacterist": [164, 165, 166], "singlelayerhorizontalflowbarriermultipli": [167, 168, 169], "singlelayerhorizontalflowbarrierresist": [170, 171, 172, 173], "size": 435, "slice": 394, "smooth": [419, 420], "solut": [174, 399], "solutionpresetcomplex": 175, "solutionpresetmoder": 176, "solutionpresetsimpl": 177, "solver": [2, 401], "sourcesinkmix": [178, 179], "spatial_refer": 312, "specif": [411, 426], "specifi": 436, "specificstorag": [30, 180, 181, 182, 183], "specificstorageregridmethod": 222, "split": 144, "split_conduct": 163, "sprinkl": [251, 252], "stability_constraint_advect": 11, "stability_constraint_wel": 12, "standard_log_decor": 64, "start": 401, "startinghead": 31, "state": 401, "staticgridanimation3d": 318, "statist": [419, 420], "steadi": 401, "step": 370, "sto": 401, "stor": 426, "storag": [401, 426], "storagecoeffici": [32, 184, 185, 186, 187, 188], "storagecoefficientregridmethod": 223, "streamfunct": 326, "streamfunction_lin": 13, "streamfunction_linestr": 14, "streamlin": 413, "structur": [417, 418, 419], "structureddiscret": [189, 190, 191, 192], "style": 371, "sum": [419, 420], "summari": [419, 420], "support": 417, "system": 431, "test": 371, "time": [384, 387, 392, 401, 405, 412, 416, 419, 420, 421, 422, 430, 433, 436, 441], "timediscret": [193, 355], "timeoutputcontrol": 253, "timeseri": [419, 421, 422, 433], "timevaryingconstantconcentr": 356, "tl": 429, "to_datetim": 313, "to_mf6_pkg": [112, 114, 117, 130, 166, 169, 173, 204], "to_ugrid2d": 314, "top": 33, "topsystem": 438, "transform": 315, "transient": 401, "transport": [363, 369, 396, 399, 406, 437], "two": 431, "twri": 398, "ugrid": [418, 419], "ugriddataarrai": 394, "unsaturatedzoneflow": 194, "unstructur": [419, 422, 434], "unsupport": 437, "up": 427, "updat": [372, 439], "upper_active_lay": 301, "us": [426, 437], "user": 440, "util": [302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 367], "valu": [419, 420], "variabl": [418, 419, 420], "variabledensityflow": 357, "variableoutputcontrol": 254, "vector": [411, 419, 420, 422, 432], "veloc": 413, "version": [371, 372, 376, 425, 427, 429], "vertic": 382, "verticalanisotropi": 34, "verticalhydraulicconduct": 35, "verticesdiscret": [195, 196, 197], "visual": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 368, 393, 394, 396, 398, 401, 404, 414, 423], "visualis": [377, 378, 381], "voxel": 261, "wai": [397, 429], "waterbalance_barchart": 327, "well": [36, 198, 199, 200, 201, 202, 203, 204, 358, 385], "welldisstructur": 205, "welldisvertic": 206, "what": 426, "where": 316, "which": 429, "without": [427, 439], "wq": [328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 369, 383], "write": [39, 48, 145, 241, 394, 398, 439], "write_assoc": 49, "x": 431, "xarrai": 431, "y": 431, "yield": 426, "zonal": [419, 420], "zonal_aggregate_polygon": 291, "zonal_aggregate_rast": 292}})