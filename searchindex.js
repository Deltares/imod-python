Search.setIndex({"alltitles": {"1. Resample to a new cellsize": [[371, "resample-to-a-new-cellsize"]], "1D Solute Transport Benchmarks": [[359, null]], "2. Only reproject": [[371, "only-reproject"]], "3. Reproject and resample to a specific domain": [[371, "reproject-and-resample-to-a-specific-domain"]], "A bit of background": [[386, "a-bit-of-background"]], "A note on regridding conductivity": [[396, "a-note-on-regridding-conductivity"]], "A note on regridding transport": [[396, "a-note-on-regridding-transport"]], "API Reference": [[320, null]], "Add flow model to simulation": [[356, "add-flow-model-to-simulation"]], "Add transport model to simulation": [[356, "add-transport-model-to-simulation"]], "Added": [[0, "added"], [0, "id4"], [0, "id8"], [0, "id12"], [0, "id16"], [0, "id21"], [0, "id29"], [0, "id34"], [0, "id41"], [0, "id45"], [0, "id47"], [0, "id50"], [0, "id53"], [0, "id57"], [0, "id62"], [0, "id66"], [0, "id71"], [0, "id76"], [0, "id80"], [0, "id83"], [0, "id87"], [0, "id90"], [0, "id93"], [0, "id97"], [0, "id108"]], "Adding information to the CHD package": [[361, "adding-information-to-the-chd-package"]], "Adding information to the DIS package": [[361, "adding-information-to-the-dis-package"]], "Adding information to the DRN package": [[361, "adding-information-to-the-drn-package"]], "Adding information to the IC package": [[361, "adding-information-to-the-ic-package"]], "Adding information to the NPF package": [[361, "adding-information-to-the-npf-package"]], "Adding information to the OC package": [[361, "adding-information-to-the-oc-package"]], "Adding information to the RCH package": [[361, "adding-information-to-the-rch-package"]], "Adding information to the RIV package": [[361, "adding-information-to-the-riv-package"]], "Adding information to the STO package": [[361, "adding-information-to-the-sto-package"]], "Allocate river cells": [[397, "allocate-river-cells"]], "Anaconda, Miniconda, Miniforge": [[386, "anaconda-miniconda-miniforge"]], "Arithmetic": [[379, "arithmetic"], [380, "arithmetic"]], "Assign coordinates to output": [[356, "assign-coordinates-to-output"]], "Assign dates to head": [[361, "assign-dates-to-head"]], "Assign time discretization": [[361, "assign-time-discretization"]], "Attach the model information to a simulation": [[361, "attach-the-model-information-to-a-simulation"]], "Automated testing": [[332, "automated-testing"]], "Basics": [[395, "basics"]], "Boundary Conditions": [[337, "boundary-conditions"], [338, "boundary-conditions"], [340, "boundary-conditions"], [341, "boundary-conditions"], [342, "boundary-conditions"], [395, "boundary-conditions"]], "Boundary conditions": [[345, "boundary-conditions"]], "Build": [[337, "build"], [338, "build"], [339, "build"], [340, "build"], [341, "build"], [342, "build"], [345, "build"]], "Building documentation and examples": [[333, null]], "Buoyancy": [[356, "buoyancy"]], "Calculating flow velocity": [[373, "calculating-flow-velocity"]], "Change cellsize (and extent)": [[379, "change-cellsize-and-extent"], [380, "change-cellsize-and-extent"]], "Change time resolution": [[379, "change-time-resolution"], [380, "change-time-resolution"]], "Changed": [[0, "changed"], [0, "id5"], [0, "id9"], [0, "id14"], [0, "id17"], [0, "id24"], [0, "id28"], [0, "id30"], [0, "id33"], [0, "id37"], [0, "id40"], [0, "id43"], [0, "id55"], [0, "id61"], [0, "id65"], [0, "id72"], [0, "id75"], [0, "id79"], [0, "id84"], [0, "id88"], [0, "id94"], [0, "id102"], [0, "id107"]], "Changelog": [[0, null]], "Chunk size and memory layout": [[394, "chunk-size-and-memory-layout"]], "Circle": [[354, null]], "Circle partitioned": [[355, null]], "Cleaning data without a MODFLOW6 simulation": [[398, "cleaning-data-without-a-modflow6-simulation"]], "Code review": [[332, "code-review"]], "Code style": [[332, "code-style"]], "Comparison with histograms": [[396, "comparison-with-histograms"]], "Computation times": [[344, null], [347, null], [352, null], [365, null], [372, null], [376, null], [389, null], [400, null]], "Conditional evaluation": [[379, "conditional-evaluation"], [380, "conditional-evaluation"]], "Constant head edge": [[361, "constant-head-edge"]], "Constant head package - CHD": [[361, "constant-head-package-chd"]], "Contributing Code": [[332, null]], "Conversion to raster": [[391, "conversion-to-raster"]], "Convert structured data to UGRID netCDF": [[378, "convert-structured-data-to-ugrid-netcdf"], [379, "convert-structured-data-to-ugrid-netcdf"]], "Coordinate reference systems (CRS)": [[390, "coordinate-reference-systems-crs"]], "Coupled MetaSWAP - Modflow6 model": [[350, null]], "Create DataArrays": [[358, "create-dataarrays"], [364, "create-dataarrays"]], "Create UgridDataArray": [[354, "create-ugriddataarray"]], "Create a mesh": [[354, "create-a-mesh"], [356, "create-a-mesh"]], "Create an empty raster": [[379, "create-an-empty-raster"], [380, "create-an-empty-raster"]], "Create grid coordinates": [[358, "create-grid-coordinates"], [364, "create-grid-coordinates"]], "Creating an example file": [[351, "creating-an-example-file"]], "Data In/Out": [[378, null], [379, "data-in-out"]], "Data cleanup": [[398, null]], "Data modification": [[379, "data-modification"], [380, null]], "Data structures": [[377, "data-structures"]], "Debugging Continuous Integration": [[331, null]], "Delayed computation and (i)MODFLOW files": [[394, "delayed-computation-and-i-modflow-files"]], "Dependencies": [[377, "dependencies"], [388, "dependencies"]], "Dependency conflicts": [[386, "dependency-conflicts"]], "Deprecated": [[0, "deprecated"], [0, "id101"], [0, "id106"]], "Developing": [[335, null]], "Developing examples": [[334, null]], "Different ways to regrid models": [[357, null]], "Discretization": [[324, "discretization"], [337, "discretization"], [338, "discretization"], [339, "discretization"], [340, "discretization"], [342, "discretization"], [345, "discretization"]], "Distribute conductance": [[397, "distribute-conductance"]], "Drainage package - DRN": [[361, "drainage-package-drn"]], "Elder": [[337, null]], "Evaluate model output": [[1, null]], "Example data": [[397, "example-data"]], "Example models": [[360, null]], "Examples": [[348, null]], "Experienced": [[388, "experienced"]], "Extract head at points": [[361, "extract-head-at-points"]], "FAQ": [[383, null]], "Fill/Interpolate nodata": [[379, "fill-interpolate-nodata"], [379, "id3"], [380, "fill-interpolate-nodata"], [382, "fill-interpolate-nodata"]], "Fixed": [[0, "fixed"], [0, "id3"], [0, "id6"], [0, "id10"], [0, "id13"], [0, "id18"], [0, "id20"], [0, "id23"], [0, "id27"], [0, "id32"], [0, "id38"], [0, "id44"], [0, "id48"], [0, "id51"], [0, "id54"], [0, "id58"], [0, "id60"], [0, "id64"], [0, "id68"], [0, "id70"], [0, "id77"], [0, "id81"], [0, "id85"], [0, "id91"], [0, "id98"], [0, "id103"], [0, "id109"]], "Flow": [[330, "flow"]], "Flow Packages": [[324, "flow-packages"]], "Flow velocities and streamlines": [[373, null]], "Force loading into memory / dask array to numpy array": [[379, "force-loading-into-memory-dask-array-to-numpy-array"], [380, "force-loading-into-memory-dask-array-to-numpy-array"]], "Freshwater Lens": [[338, null]], "Freshwater lens (circle)": [[356, null]], "General": [[385, "general"]], "General Questions": [[377, null]], "Generate a mesh": [[379, "generate-a-mesh"], [382, "generate-a-mesh"]], "Get a single value (e.g. a summary statistic)": [[379, "get-a-single-value-e-g-a-summary-statistic"], [380, "get-a-single-value-e-g-a-summary-statistic"]], "Grid": [[2, "grid"]], "Groundwater Modeling with iMOD": [[385, null]], "Head point interpolation": [[368, null]], "Henry": [[339, null], [353, null]], "Horizontal Flow Barrier": [[345, "horizontal-flow-barrier"]], "How do I \u2026": [[379, null]], "How is imod-python different from FloPy?": [[377, "how-is-imod-python-different-from-flopy"]], "How to release a new version": [[336, null]], "Hydraulic conductivity": [[361, "hydraulic-conductivity"]], "Hydrocoin": [[340, null]], "Hydrogeology": [[340, "hydrogeology"], [345, "hydrogeology"]], "If-then-else": [[379, "if-then-else"], [380, "if-then-else"]], "Import IDF file": [[378, "import-idf-file"], [379, "import-idf-file"]], "Import IPF file": [[378, "import-ipf-file"], [379, "import-ipf-file"]], "Import a single netCDF variable as DataArray": [[378, "import-a-single-netcdf-variable-as-dataarray"], [379, "import-a-single-netcdf-variable-as-dataarray"]], "Import drainage information": [[361, "import-drainage-information"]], "Import heads results": [[361, "import-heads-results"]], "Import multiple IDF files": [[378, "import-multiple-idf-files"], [379, "import-multiple-idf-files"]], "Import netCDF file as Dataset": [[378, "import-netcdf-file-as-dataset"], [379, "import-netcdf-file-as-dataset"]], "Import river information": [[361, "import-river-information"]], "Increase the extent of a raster": [[379, "increase-the-extent-of-a-raster"], [380, "increase-the-extent-of-a-raster"]], "Initial Conditions": [[337, "initial-conditions"], [338, "initial-conditions"], [341, "initial-conditions"], [342, "initial-conditions"]], "Initial conditions": [[340, "initial-conditions"], [345, "initial-conditions"]], "Initial conditions package - IC": [[361, "initial-conditions-package-ic"]], "Input and output": [[390, "input-and-output"], [391, "input-and-output"]], "Input/output": [[321, null]], "Installing": [[388, null]], "Installing Python and packages": [[386, null]], "Installing Python packages \u2013 without the agonizing pain": [[386, "installing-python-packages-without-the-agonizing-pain"]], "Installing a development version of iMOD Python": [[386, "installing-a-development-version-of-imod-python"]], "Installing the latest development version": [[388, "installing-the-latest-development-version"]], "Installing with Deltaforge": [[388, "installing-with-deltaforge"]], "Installing with conda": [[388, "installing-with-conda"]], "Installing with pip": [[388, "installing-with-pip"]], "Installing with pixi": [[388, "installing-with-pixi"]], "Known Issues": [[384, null]], "Lake package example": [[364, null]], "Large data": [[377, "large-data"]], "Lazy evaluation": [[394, null]], "Load data": [[361, "load-data"]], "Logging": [[322, null]], "MODFLOW6": [[324, null], [363, null], [385, "modflow6"]], "MODFLOW6 package": [[397, "modflow6-package"]], "Make data readable by QGIS": [[378, "make-data-readable-by-qgis"], [379, "make-data-readable-by-qgis"]], "MetaMod": [[323, null]], "MetaSWAP": [[325, null], [349, null]], "Model": [[2, "model"], [330, "model"]], "Model Creation": [[345, null]], "Model objects & methods": [[324, "model-objects-methods"]], "Model settings": [[324, "model-settings"]], "Model simulation": [[361, "model-simulation"]], "Model time discretization": [[395, null]], "Modflow 6 versions": [[384, "modflow-6-versions"]], "More dimensions": [[390, "more-dimensions"]], "New": [[388, "new"]], "Node property flow package - NPF": [[361, "node-property-flow-package-npf"]], "Obtaining the final (i)domain": [[396, "obtaining-the-final-i-domain"]], "Open the results": [[353, "open-the-results"], [354, "open-the-results"], [356, "open-the-results"], [358, "open-the-results"], [364, "open-the-results"]], "Other raster formats": [[390, "other-raster-formats"]], "Output Control package - OC": [[361, "output-control-package-oc"]], "Overview allocation options": [[397, "overview-allocation-options"]], "Packages": [[2, "packages"]], "Parameters": [[356, "parameters"]], "Partitioning a regional model": [[362, null]], "Periodic central ditch": [[345, "periodic-central-ditch"]], "Pitfalls": [[394, "pitfalls"]], "Plot a timeseries for a single cell": [[379, "plot-a-timeseries-for-a-single-cell"], [379, "id1"], [381, null], [382, "plot-a-timeseries-for-a-single-cell"]], "Plot head of one layer at one time": [[379, "plot-head-of-one-layer-at-one-time"], [379, "id2"], [381, "plot-head-of-one-layer-at-one-time"], [382, "plot-head-of-one-layer-at-one-time"]], "Plot maps": [[375, null]], "Polygonize raster": [[369, null]], "Prepare": [[367, null]], "Prepare model input": [[326, null]], "Quiver plot": [[373, "quiver-plot"]], "Raster data and xarray": [[390, null]], "Rasterize polygon data": [[379, "rasterize-polygon-data"], [380, "rasterize-polygon-data"]], "Rasterize shapefiles": [[370, null]], "Read Output": [[324, "read-output"]], "Reading existing MetaSWAP input": [[351, null]], "Reading the .inp file": [[351, "reading-the-inp-file"]], "Recharge": [[356, "recharge"], [361, "recharge"]], "Recharge - Steady state": [[361, "recharge-steady-state"]], "Recharge - Transient": [[361, "recharge-transient"]], "Regional model": [[361, null]], "Regrid": [[324, "regrid"]], "Regrid Method Settings": [[324, "regrid-method-settings"]], "Regridding": [[396, null]], "Regridding boundary conditions": [[396, "regridding-boundary-conditions"]], "Regridding using default methods": [[396, "regridding-using-default-methods"]], "Regridding using non-default methods": [[396, "regridding-using-non-default-methods"]], "Removed": [[0, "removed"], [0, "id35"], [0, "id73"], [0, "id95"], [0, "id100"], [0, "id105"]], "Reporting bugs": [[335, "reporting-bugs"]], "Reproject data": [[371, null]], "Reproject points": [[371, "reproject-points"]], "Reproject raster dataset": [[371, "reproject-raster-dataset"]], "Reproject vector dataset": [[371, "reproject-vector-dataset"]], "Results visualization": [[361, "results-visualization"]], "Rising outer ditches": [[345, "rising-outer-ditches"]], "River package - RIV": [[361, "river-package-riv"]], "Run": [[337, "run"], [338, "run"], [339, "run"], [340, "run"], [341, "run"], [342, "run"], [345, "run"]], "Run the model": [[353, "run-the-model"], [354, "run-the-model"], [356, "run-the-model"], [358, "run-the-model"], [361, "run-the-model"], [364, "run-the-model"]], "Saltwater Pocket": [[341, null]], "Select a single variable from a dataset": [[379, "select-a-single-variable-from-a-dataset"], [380, "select-a-single-variable-from-a-dataset"]], "Select along a single layer": [[379, "select-along-a-single-layer"], [380, "select-along-a-single-layer"]], "Select part of the data": [[379, "select-part-of-the-data"], [380, "select-part-of-the-data"]], "Select points (from a vector dataset)": [[379, "select-points-from-a-vector-dataset"], [379, "id4"], [380, "select-points-from-a-vector-dataset"], [382, "select-points-from-a-vector-dataset"]], "Select points and cross sections": [[327, null]], "Setting up an environment": [[386, "setting-up-an-environment"]], "Settings": [[330, "settings"]], "Slice the model domain": [[354, "slice-the-model-domain"]], "Smooth data": [[379, "smooth-data"], [380, "smooth-data"]], "Solver": [[2, "solver"]], "Solver settings": [[361, "solver-settings"]], "Specifying extra settings": [[395, "specifying-extra-settings"]], "Starting heads interpolation": [[361, "starting-heads-interpolation"]], "Storage package - STO": [[361, "storage-package-sto"]], "Streamline function": [[373, "streamline-function"]], "Sum properties over layers": [[379, "sum-properties-over-layers"], [380, "sum-properties-over-layers"]], "Supported models": [[377, "supported-models"]], "TWRI": [[358, null]], "The cleanup method": [[398, "the-cleanup-method"]], "Time series data and Pandas": [[392, null]], "Timeseries at point locations": [[392, "timeseries-at-point-locations"]], "Topsystem: from 2D map to 3D model": [[397, null]], "Transport": [[330, "transport"]], "Transport 2d example": [[366, null]], "Transport Packages": [[324, "transport-packages"]], "Two dimensions: x, y": [[390, "two-dimensions-x-y"]], "Unstructured": [[379, "unstructured"], [382, null]], "Unstructured Grids": [[393, null]], "Unsupported packages": [[396, "unsupported-packages"]], "Update existing model with new data": [[398, "update-existing-model-with-new-data"]], "Use a river infiltration factor in MODFLOW6": [[385, "use-a-river-infiltration-factor-in-modflow6"]], "User Guide": [[399, null]], "Utilities": [[328, null]], "Vector data and Geopandas": [[391, null]], "Version control": [[332, "version-control"]], "Vertical Interface": [[342, null]], "Visualise results": [[337, "visualise-results"], [338, "visualise-results"], [341, "visualise-results"]], "Visualization": [[374, null]], "Visualize": [[329, null]], "Visualize the results": [[353, "visualize-the-results"], [354, "visualize-the-results"], [356, "visualize-the-results"], [358, "visualize-the-results"], [364, "visualize-the-results"]], "Ways to install iMOD Python": [[388, "ways-to-install-imod-python"]], "Wells": [[345, "wells"]], "What are specific yield, specific storage, storage coefficient (storativity)?": [[385, "what-are-specific-yield-specific-storage-storage-coefficient-storativity"]], "Which Python?": [[388, "which-python"]], "Write the model": [[354, "write-the-model"], [358, "write-the-model"]], "Writing the cleaned model": [[398, "writing-the-cleaned-model"]], "Zonal statistics": [[379, "zonal-statistics"], [380, "zonal-statistics"]], "[0.10.0] - 2020-05-23": [[0, "id78"]], "[0.10.1] - 2020-10-19": [[0, "id74"]], "[0.11.0] - 2021-12-21": [[0, "id69"]], "[0.11.1] - 2021-12-23": [[0, "id67"]], "[0.11.4] - 2022-09-05": [[0, "id63"]], "[0.11.5] - 2022-12-15": [[0, "id59"]], "[0.11.6] - 2023-02-01": [[0, "id56"]], "[0.12.0] - 2023-03-17": [[0, "id52"]], "[0.13.0] - 2023-05-02": [[0, "id49"]], "[0.13.1] - 2023-05-05": [[0, "id46"]], "[0.13.2] - 2023-07-26": [[0, "id42"]], "[0.14.0] - 2023-09-06": [[0, "id39"]], "[0.14.1] - 2023-09-07": [[0, "id36"]], "[0.15.0] - 2023-11-25": [[0, "id31"]], "[0.15.1] - 2023-12-22": [[0, "id26"]], "[0.15.2] - 2024-02-16": [[0, "id22"]], "[0.15.3] - 2024-02-22": [[0, "id19"]], "[0.16.0] - 2024-03-29": [[0, "id15"]], "[0.17.0] - 2024-05-13": [[0, "id11"]], "[0.17.1] - 2024-05-16": [[0, "id7"]], "[0.17.2] - 2024-09-17": [[0, "id2"]], "[0.18.0]": [[0, "id1"]], "[0.5.0] - 2019-02-26": [[0, "id104"]], "[0.6.0] - 2019-03-15": [[0, "id99"]], "[0.6.1] - 2019-04-17": [[0, "id96"]], "[0.7.0] - 2019-07-23": [[0, "id92"]], "[0.7.1] - 2019-08-07": [[0, "id89"]], "[0.8.0] - 2019-10-14": [[0, "id86"]], "[0.9.0] - 2020-01-19": [[0, "id82"]], "iMOD Python: make massive MODFLOW models": [[387, null]], "iMOD-WQ": [[330, null], [343, null]], "iMODFLOW": [[2, null], [346, null]], "icelltype": [[361, "icelltype"]], "imod.couplers.metamod.MetaMod": [[73, null]], "imod.evaluate.calculate_gxg": [[3, null]], "imod.evaluate.convert_pointwaterhead_freshwaterhead": [[4, null]], "imod.evaluate.facebudget": [[5, null]], "imod.evaluate.flow_velocity": [[6, null]], "imod.evaluate.interpolate_value_boundaries": [[7, null]], "imod.evaluate.intra_cell_boundary_conditions": [[8, null]], "imod.evaluate.quiver_line": [[9, null]], "imod.evaluate.quiver_linestring": [[10, null]], "imod.evaluate.stability_constraint_advection": [[11, null]], "imod.evaluate.stability_constraint_wel": [[12, null]], "imod.evaluate.streamfunction_line": [[13, null]], "imod.evaluate.streamfunction_linestring": [[14, null]], "imod.flow.Bottom": [[15, null]], "imod.flow.Boundary": [[16, null]], "imod.flow.ConstantHead": [[17, null]], "imod.flow.Drain": [[18, null]], "imod.flow.EvapoTranspiration": [[19, null]], "imod.flow.GeneralHeadBoundary": [[20, null]], "imod.flow.HorizontalAnisotropy": [[21, null]], "imod.flow.HorizontalFlowBarrier": [[22, null]], "imod.flow.HorizontalHydraulicConductivity": [[23, null]], "imod.flow.ImodflowModel": [[24, null]], "imod.flow.ImodflowModel.create_time_discretization": [[25, null]], "imod.flow.MetaSwap": [[26, null]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, null]], "imod.flow.Recharge": [[28, null]], "imod.flow.River": [[29, null]], "imod.flow.SpecificStorage": [[30, null]], "imod.flow.StartingHead": [[31, null]], "imod.flow.StorageCoefficient": [[32, null]], "imod.flow.Top": [[33, null]], "imod.flow.VerticalAnisotropy": [[34, null]], "imod.flow.VerticalHydraulicConductivity": [[35, null]], "imod.flow.Well": [[36, null]], "imod.formats.gen.read": [[37, null]], "imod.formats.gen.read_ascii": [[38, null]], "imod.formats.gen.write": [[39, null]], "imod.formats.idf.header": [[40, null]], "imod.formats.idf.open": [[41, null]], "imod.formats.idf.open_dataset": [[42, null]], "imod.formats.idf.open_subdomains": [[43, null]], "imod.formats.idf.save": [[44, null]], "imod.formats.ipf.read": [[45, null]], "imod.formats.ipf.read_associated": [[46, null]], "imod.formats.ipf.save": [[47, null]], "imod.formats.ipf.write": [[48, null]], "imod.formats.ipf.write_assoc": [[49, null]], "imod.formats.prj.open_projectfile_data": [[50, null]], "imod.formats.prj.read_projectfile": [[51, null]], "imod.formats.prj.read_timfile": [[52, null]], "imod.formats.rasterio.header": [[53, null]], "imod.formats.rasterio.open": [[54, null]], "imod.formats.rasterio.save": [[55, null]], "imod.logging": [[56, null]], "imod.logging.config": [[57, null]], "imod.logging.config.LoggerType": [[58, null]], "imod.logging.config.configure": [[59, null]], "imod.logging.ilogger": [[60, null]], "imod.logging.ilogger.ILogger": [[61, null]], "imod.logging.logging_decorators": [[62, null]], "imod.logging.logging_decorators.init_log_decorator": [[63, null]], "imod.logging.logging_decorators.standard_log_decorator": [[64, null]], "imod.logging.loglevel": [[65, null]], "imod.logging.loglevel.LogLevel": [[66, null]], "imod.logging.logurulogger": [[67, null]], "imod.logging.logurulogger.LoguruLogger": [[68, null]], "imod.logging.nulllogger": [[69, null]], "imod.logging.nulllogger.NullLogger": [[70, null]], "imod.logging.pythonlogger": [[71, null]], "imod.logging.pythonlogger.PythonLogger": [[72, null]], "imod.mf6.AdvectionCentral": [[74, null]], "imod.mf6.AdvectionTVD": [[75, null]], "imod.mf6.AdvectionUpstream": [[76, null]], "imod.mf6.ApiPackage": [[77, null]], "imod.mf6.Buoyancy": [[78, null]], "imod.mf6.ConstantConcentration": [[79, null]], "imod.mf6.ConstantHead": [[80, null]], "imod.mf6.ConstantHead.from_imod5_data": [[81, null]], "imod.mf6.ConstantHead.from_imod5_shd_data": [[82, null]], "imod.mf6.ConstantHead.mask": [[83, null]], "imod.mf6.ConstantHead.regrid_like": [[84, null]], "imod.mf6.Dispersion": [[85, null]], "imod.mf6.Drainage": [[86, null]], "imod.mf6.Drainage.cleanup": [[87, null]], "imod.mf6.Drainage.from_imod5_data": [[88, null]], "imod.mf6.Drainage.mask": [[89, null]], "imod.mf6.Drainage.regrid_like": [[90, null]], "imod.mf6.Evapotranspiration": [[91, null]], "imod.mf6.Evapotranspiration.mask": [[92, null]], "imod.mf6.Evapotranspiration.regrid_like": [[93, null]], "imod.mf6.GeneralHeadBoundary": [[94, null]], "imod.mf6.GeneralHeadBoundary.cleanup": [[95, null]], "imod.mf6.GeneralHeadBoundary.from_imod5_data": [[96, null]], "imod.mf6.GeneralHeadBoundary.mask": [[97, null]], "imod.mf6.GeneralHeadBoundary.regrid_like": [[98, null]], "imod.mf6.GroundwaterFlowModel": [[99, null]], "imod.mf6.GroundwaterFlowModel.dump": [[100, null]], "imod.mf6.GroundwaterFlowModel.mask_all_packages": [[101, null]], "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6": [[102, null]], "imod.mf6.GroundwaterTransportModel": [[103, null]], "imod.mf6.GroundwaterTransportModel.dump": [[104, null]], "imod.mf6.GroundwaterTransportModel.mask_all_packages": [[105, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[106, null]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[107, null]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[108, null]], "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg": [[109, null]], "imod.mf6.HorizontalFlowBarrierResistance": [[110, null]], "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg": [[111, null]], "imod.mf6.ImmobileStorageTransfer": [[112, null]], "imod.mf6.InitialConditions": [[113, null]], "imod.mf6.InitialConditions.from_imod5_data": [[114, null]], "imod.mf6.InitialConditions.mask": [[115, null]], "imod.mf6.InitialConditions.regrid_like": [[116, null]], "imod.mf6.LayeredWell": [[117, null]], "imod.mf6.LayeredWell.from_imod5_data": [[118, null]], "imod.mf6.LayeredWell.mask": [[119, null]], "imod.mf6.LayeredWell.regrid_like": [[120, null]], "imod.mf6.LayeredWell.to_mf6_pkg": [[121, null]], "imod.mf6.MassSourceLoading": [[122, null]], "imod.mf6.MobileStorageTransfer": [[123, null]], "imod.mf6.Modflow6Simulation": [[124, null]], "imod.mf6.Modflow6Simulation.clip_box": [[125, null]], "imod.mf6.Modflow6Simulation.create_time_discretization": [[126, null]], "imod.mf6.Modflow6Simulation.dump": [[127, null]], "imod.mf6.Modflow6Simulation.open_concentration": [[128, null]], "imod.mf6.Modflow6Simulation.open_flow_budget": [[129, null]], "imod.mf6.Modflow6Simulation.open_head": [[130, null]], "imod.mf6.Modflow6Simulation.open_transport_budget": [[131, null]], "imod.mf6.Modflow6Simulation.regrid_like": [[132, null]], "imod.mf6.Modflow6Simulation.run": [[133, null]], "imod.mf6.Modflow6Simulation.split": [[134, null]], "imod.mf6.Modflow6Simulation.write": [[135, null]], "imod.mf6.NodePropertyFlow": [[136, null]], "imod.mf6.NodePropertyFlow.from_imod5_data": [[137, null]], "imod.mf6.NodePropertyFlow.mask": [[138, null]], "imod.mf6.NodePropertyFlow.regrid_like": [[139, null]], "imod.mf6.OutputControl": [[140, null]], "imod.mf6.Recharge": [[141, null]], "imod.mf6.Recharge.from_imod5_data": [[142, null]], "imod.mf6.Recharge.mask": [[143, null]], "imod.mf6.Recharge.regrid_like": [[144, null]], "imod.mf6.River": [[145, null]], "imod.mf6.River.cleanup": [[146, null]], "imod.mf6.River.from_imod5_data": [[147, null]], "imod.mf6.River.mask": [[148, null]], "imod.mf6.River.regrid_like": [[149, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[150, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg": [[151, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[152, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg": [[153, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[154, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data": [[155, null]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg": [[156, null]], "imod.mf6.Solution": [[157, null]], "imod.mf6.SolutionPresetComplex": [[158, null]], "imod.mf6.SolutionPresetModerate": [[159, null]], "imod.mf6.SolutionPresetSimple": [[160, null]], "imod.mf6.SourceSinkMixing": [[161, null]], "imod.mf6.SourceSinkMixing.from_flow_model": [[162, null]], "imod.mf6.SpecificStorage": [[163, null]], "imod.mf6.SpecificStorage.mask": [[164, null]], "imod.mf6.SpecificStorage.regrid_like": [[165, null]], "imod.mf6.StorageCoefficient": [[166, null]], "imod.mf6.StorageCoefficient.from_imod5_data": [[167, null]], "imod.mf6.StorageCoefficient.mask": [[168, null]], "imod.mf6.StorageCoefficient.regrid_like": [[169, null]], "imod.mf6.StructuredDiscretization": [[170, null]], "imod.mf6.TimeDiscretization": [[171, null]], "imod.mf6.UnsaturatedZoneFlow": [[172, null]], "imod.mf6.VerticesDiscretization": [[173, null]], "imod.mf6.Well": [[174, null]], "imod.mf6.Well.cleanup": [[175, null]], "imod.mf6.Well.from_imod5_data": [[176, null]], "imod.mf6.Well.mask": [[177, null]], "imod.mf6.Well.regrid_like": [[178, null]], "imod.mf6.Well.to_mf6_pkg": [[179, null]], "imod.mf6.WellDisStructured": [[180, null]], "imod.mf6.WellDisVertices": [[181, null]], "imod.mf6.open_cbc": [[182, null]], "imod.mf6.open_hds": [[183, null]], "imod.mf6.read_cbc_headers": [[184, null]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[185, null]], "imod.mf6.regrid.DiscretizationRegridMethod": [[186, null]], "imod.mf6.regrid.DispersionRegridMethod": [[187, null]], "imod.mf6.regrid.DrainageRegridMethod": [[188, null]], "imod.mf6.regrid.EmptyRegridMethod": [[189, null]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[190, null]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[191, null]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[192, null]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[193, null]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[194, null]], "imod.mf6.regrid.RechargeRegridMethod": [[195, null]], "imod.mf6.regrid.RiverRegridMethod": [[196, null]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[197, null]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[198, null]], "imod.msw.AnnualCropFactors": [[199, null]], "imod.msw.CouplerMapping": [[200, null]], "imod.msw.EvapotranspirationMapping": [[201, null]], "imod.msw.GridData": [[202, null]], "imod.msw.IdfMapping": [[203, null]], "imod.msw.Infiltration": [[204, null]], "imod.msw.InitialConditionsEquilibrium": [[205, null]], "imod.msw.InitialConditionsPercolation": [[206, null]], "imod.msw.InitialConditionsRootzonePressureHead": [[207, null]], "imod.msw.InitialConditionsSavedState": [[208, null]], "imod.msw.LanduseOptions": [[209, null]], "imod.msw.MetaSwapModel": [[210, null]], "imod.msw.MeteoGrid": [[211, null]], "imod.msw.Ponding": [[212, null]], "imod.msw.PrecipitationMapping": [[213, null]], "imod.msw.ScalingFactors": [[214, null]], "imod.msw.Sprinkling": [[215, null]], "imod.msw.TimeOutputControl": [[216, null]], "imod.msw.VariableOutputControl": [[217, null]], "imod.prepare.ALLOCATION_OPTION": [[218, null]], "imod.prepare.DISTRIBUTING_OPTION": [[219, null]], "imod.prepare.LayerRegridder": [[220, null]], "imod.prepare.Regridder": [[221, null]], "imod.prepare.Voxelizer": [[222, null]], "imod.prepare.allocate_drn_cells": [[223, null]], "imod.prepare.allocate_ghb_cells": [[224, null]], "imod.prepare.allocate_rch_cells": [[225, null]], "imod.prepare.allocate_riv_cells": [[226, null]], "imod.prepare.assign_wells": [[227, null]], "imod.prepare.c_leakage": [[228, null]], "imod.prepare.c_radial": [[229, null]], "imod.prepare.celltable": [[230, null]], "imod.prepare.cleanup_drn": [[231, null]], "imod.prepare.cleanup_ghb": [[232, null]], "imod.prepare.cleanup_riv": [[233, null]], "imod.prepare.cleanup_wel": [[234, null]], "imod.prepare.create_layered_top": [[235, null]], "imod.prepare.distribute_drn_conductance": [[236, null]], "imod.prepare.distribute_ghb_conductance": [[237, null]], "imod.prepare.distribute_riv_conductance": [[238, null]], "imod.prepare.fill": [[239, null]], "imod.prepare.gdal_rasterize": [[240, null]], "imod.prepare.get_lower_active_grid_cells": [[241, null]], "imod.prepare.get_lower_active_layer_number": [[242, null]], "imod.prepare.get_upper_active_grid_cells": [[243, null]], "imod.prepare.get_upper_active_layer_number": [[244, null]], "imod.prepare.laplace_interpolate": [[245, null]], "imod.prepare.linestring_to_square_zpolygons": [[246, null]], "imod.prepare.linestring_to_trapezoid_zpolygons": [[247, null]], "imod.prepare.polygonize": [[248, null]], "imod.prepare.rasterize": [[249, null]], "imod.prepare.rasterize_celltable": [[250, null]], "imod.prepare.reproject": [[251, null]], "imod.prepare.zonal_aggregate_polygons": [[252, null]], "imod.prepare.zonal_aggregate_raster": [[253, null]], "imod.select.active_grid_boundary_xy": [[254, null]], "imod.select.cross_section_line": [[255, null]], "imod.select.cross_section_linestring": [[256, null]], "imod.select.grid_boundary_xy": [[257, null]], "imod.select.points_in_bounds": [[258, null]], "imod.select.points_indices": [[259, null]], "imod.select.points_set_values": [[260, null]], "imod.select.points_values": [[261, null]], "imod.select.upper_active_layer": [[262, null]], "imod.util.cd": [[263, null]], "imod.util.coord_reference": [[264, null]], "imod.util.empty_2d": [[265, null]], "imod.util.empty_2d_transient": [[266, null]], "imod.util.empty_3d": [[267, null]], "imod.util.empty_3d_transient": [[268, null]], "imod.util.from_mdal_compliant_ugrid2d": [[269, null]], "imod.util.ignore_warnings": [[270, null]], "imod.util.mdal_compliant_ugrid2d": [[271, null]], "imod.util.print_if_error": [[272, null]], "imod.util.spatial_reference": [[273, null]], "imod.util.to_datetime": [[274, null]], "imod.util.to_ugrid2d": [[275, null]], "imod.util.transform": [[276, null]], "imod.util.where": [[277, null]], "imod.visualize.GridAnimation3D": [[278, null]], "imod.visualize.StaticGridAnimation3D": [[279, null]], "imod.visualize.cross_section": [[280, null]], "imod.visualize.grid_3d": [[281, null]], "imod.visualize.imshow_topview": [[282, null]], "imod.visualize.line_3d": [[283, null]], "imod.visualize.plot_map": [[284, null]], "imod.visualize.quiver": [[285, null]], "imod.visualize.read_imod_legend": [[286, null]], "imod.visualize.streamfunction": [[287, null]], "imod.visualize.waterbalance_barchart": [[288, null]], "imod.wq.AdvectionFiniteDifference": [[289, null]], "imod.wq.AdvectionHybridMOC": [[290, null]], "imod.wq.AdvectionMOC": [[291, null]], "imod.wq.AdvectionModifiedMOC": [[292, null]], "imod.wq.AdvectionTVD": [[293, null]], "imod.wq.BasicFlow": [[294, null]], "imod.wq.BasicTransport": [[295, null]], "imod.wq.ConstantHead": [[296, null]], "imod.wq.Dispersion": [[297, null]], "imod.wq.Drainage": [[298, null]], "imod.wq.EvapotranspirationHighestActive": [[299, null]], "imod.wq.EvapotranspirationLayers": [[300, null]], "imod.wq.EvapotranspirationTopLayer": [[301, null]], "imod.wq.GeneralHeadBoundary": [[302, null]], "imod.wq.GeneralizedConjugateGradientSolver": [[303, null]], "imod.wq.LayerPropertyFlow": [[304, null]], "imod.wq.MassLoading": [[305, null]], "imod.wq.OutputControl": [[306, null]], "imod.wq.ParallelKrylovFlowSolver": [[307, null]], "imod.wq.ParallelKrylovTransportSolver": [[308, null]], "imod.wq.PreconditionedConjugateGradientSolver": [[309, null]], "imod.wq.RechargeHighestActive": [[310, null]], "imod.wq.RechargeLayers": [[311, null]], "imod.wq.RechargeTopLayer": [[312, null]], "imod.wq.River": [[313, null]], "imod.wq.SeawatModel": [[314, null]], "imod.wq.SeawatModel.create_time_discretization": [[315, null]], "imod.wq.TimeDiscretization": [[316, null]], "imod.wq.TimeVaryingConstantConcentration": [[317, null]], "imod.wq.VariableDensityFlow": [[318, null]], "imod.wq.Well": [[319, null]], "netCDF": [[390, "netcdf"]]}, "docnames": ["api/changelog", "api/evaluate", "api/flow", "api/generated/evaluate/imod.evaluate.calculate_gxg", "api/generated/evaluate/imod.evaluate.convert_pointwaterhead_freshwaterhead", "api/generated/evaluate/imod.evaluate.facebudget", "api/generated/evaluate/imod.evaluate.flow_velocity", "api/generated/evaluate/imod.evaluate.interpolate_value_boundaries", "api/generated/evaluate/imod.evaluate.intra_cell_boundary_conditions", "api/generated/evaluate/imod.evaluate.quiver_line", "api/generated/evaluate/imod.evaluate.quiver_linestring", "api/generated/evaluate/imod.evaluate.stability_constraint_advection", "api/generated/evaluate/imod.evaluate.stability_constraint_wel", "api/generated/evaluate/imod.evaluate.streamfunction_line", "api/generated/evaluate/imod.evaluate.streamfunction_linestring", "api/generated/flow/imod.flow.Bottom", "api/generated/flow/imod.flow.Boundary", "api/generated/flow/imod.flow.ConstantHead", "api/generated/flow/imod.flow.Drain", "api/generated/flow/imod.flow.EvapoTranspiration", "api/generated/flow/imod.flow.GeneralHeadBoundary", "api/generated/flow/imod.flow.HorizontalAnisotropy", "api/generated/flow/imod.flow.HorizontalFlowBarrier", "api/generated/flow/imod.flow.HorizontalHydraulicConductivity", "api/generated/flow/imod.flow.ImodflowModel", "api/generated/flow/imod.flow.ImodflowModel.create_time_discretization", "api/generated/flow/imod.flow.MetaSwap", "api/generated/flow/imod.flow.PreconditionedConjugateGradientSolver", "api/generated/flow/imod.flow.Recharge", "api/generated/flow/imod.flow.River", "api/generated/flow/imod.flow.SpecificStorage", "api/generated/flow/imod.flow.StartingHead", "api/generated/flow/imod.flow.StorageCoefficient", "api/generated/flow/imod.flow.Top", "api/generated/flow/imod.flow.VerticalAnisotropy", "api/generated/flow/imod.flow.VerticalHydraulicConductivity", "api/generated/flow/imod.flow.Well", "api/generated/io/imod.formats.gen.read", "api/generated/io/imod.formats.gen.read_ascii", "api/generated/io/imod.formats.gen.write", "api/generated/io/imod.formats.idf.header", "api/generated/io/imod.formats.idf.open", "api/generated/io/imod.formats.idf.open_dataset", "api/generated/io/imod.formats.idf.open_subdomains", "api/generated/io/imod.formats.idf.save", "api/generated/io/imod.formats.ipf.read", "api/generated/io/imod.formats.ipf.read_associated", "api/generated/io/imod.formats.ipf.save", "api/generated/io/imod.formats.ipf.write", "api/generated/io/imod.formats.ipf.write_assoc", "api/generated/io/imod.formats.prj.open_projectfile_data", "api/generated/io/imod.formats.prj.read_projectfile", "api/generated/io/imod.formats.prj.read_timfile", "api/generated/io/imod.formats.rasterio.header", "api/generated/io/imod.formats.rasterio.open", "api/generated/io/imod.formats.rasterio.save", "api/generated/logging/imod.logging", "api/generated/logging/imod.logging.config", "api/generated/logging/imod.logging.config.LoggerType", "api/generated/logging/imod.logging.config.configure", "api/generated/logging/imod.logging.ilogger", "api/generated/logging/imod.logging.ilogger.ILogger", "api/generated/logging/imod.logging.logging_decorators", "api/generated/logging/imod.logging.logging_decorators.init_log_decorator", "api/generated/logging/imod.logging.logging_decorators.standard_log_decorator", "api/generated/logging/imod.logging.loglevel", "api/generated/logging/imod.logging.loglevel.LogLevel", "api/generated/logging/imod.logging.logurulogger", "api/generated/logging/imod.logging.logurulogger.LoguruLogger", "api/generated/logging/imod.logging.nulllogger", "api/generated/logging/imod.logging.nulllogger.NullLogger", "api/generated/logging/imod.logging.pythonlogger", "api/generated/logging/imod.logging.pythonlogger.PythonLogger", "api/generated/metamod/imod.couplers.metamod.MetaMod", "api/generated/mf6/imod.mf6.AdvectionCentral", "api/generated/mf6/imod.mf6.AdvectionTVD", "api/generated/mf6/imod.mf6.AdvectionUpstream", "api/generated/mf6/imod.mf6.ApiPackage", "api/generated/mf6/imod.mf6.Buoyancy", "api/generated/mf6/imod.mf6.ConstantConcentration", "api/generated/mf6/imod.mf6.ConstantHead", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_data", "api/generated/mf6/imod.mf6.ConstantHead.from_imod5_shd_data", "api/generated/mf6/imod.mf6.ConstantHead.mask", "api/generated/mf6/imod.mf6.ConstantHead.regrid_like", "api/generated/mf6/imod.mf6.Dispersion", "api/generated/mf6/imod.mf6.Drainage", "api/generated/mf6/imod.mf6.Drainage.cleanup", "api/generated/mf6/imod.mf6.Drainage.from_imod5_data", "api/generated/mf6/imod.mf6.Drainage.mask", "api/generated/mf6/imod.mf6.Drainage.regrid_like", "api/generated/mf6/imod.mf6.Evapotranspiration", "api/generated/mf6/imod.mf6.Evapotranspiration.mask", "api/generated/mf6/imod.mf6.Evapotranspiration.regrid_like", "api/generated/mf6/imod.mf6.GeneralHeadBoundary", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.cleanup", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.from_imod5_data", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.mask", "api/generated/mf6/imod.mf6.GeneralHeadBoundary.regrid_like", "api/generated/mf6/imod.mf6.GroundwaterFlowModel", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.dump", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.mask_all_packages", "api/generated/mf6/imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "api/generated/mf6/imod.mf6.GroundwaterTransportModel", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.dump", "api/generated/mf6/imod.mf6.GroundwaterTransportModel.mask_all_packages", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.ImmobileStorageTransfer", "api/generated/mf6/imod.mf6.InitialConditions", "api/generated/mf6/imod.mf6.InitialConditions.from_imod5_data", "api/generated/mf6/imod.mf6.InitialConditions.mask", "api/generated/mf6/imod.mf6.InitialConditions.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell", "api/generated/mf6/imod.mf6.LayeredWell.from_imod5_data", "api/generated/mf6/imod.mf6.LayeredWell.mask", "api/generated/mf6/imod.mf6.LayeredWell.regrid_like", "api/generated/mf6/imod.mf6.LayeredWell.to_mf6_pkg", "api/generated/mf6/imod.mf6.MassSourceLoading", "api/generated/mf6/imod.mf6.MobileStorageTransfer", "api/generated/mf6/imod.mf6.Modflow6Simulation", "api/generated/mf6/imod.mf6.Modflow6Simulation.clip_box", "api/generated/mf6/imod.mf6.Modflow6Simulation.create_time_discretization", "api/generated/mf6/imod.mf6.Modflow6Simulation.dump", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_concentration", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_flow_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_head", "api/generated/mf6/imod.mf6.Modflow6Simulation.open_transport_budget", "api/generated/mf6/imod.mf6.Modflow6Simulation.regrid_like", "api/generated/mf6/imod.mf6.Modflow6Simulation.run", "api/generated/mf6/imod.mf6.Modflow6Simulation.split", "api/generated/mf6/imod.mf6.Modflow6Simulation.write", "api/generated/mf6/imod.mf6.NodePropertyFlow", "api/generated/mf6/imod.mf6.NodePropertyFlow.from_imod5_data", "api/generated/mf6/imod.mf6.NodePropertyFlow.mask", "api/generated/mf6/imod.mf6.NodePropertyFlow.regrid_like", "api/generated/mf6/imod.mf6.OutputControl", "api/generated/mf6/imod.mf6.Recharge", "api/generated/mf6/imod.mf6.Recharge.from_imod5_data", "api/generated/mf6/imod.mf6.Recharge.mask", "api/generated/mf6/imod.mf6.Recharge.regrid_like", "api/generated/mf6/imod.mf6.River", "api/generated/mf6/imod.mf6.River.cleanup", "api/generated/mf6/imod.mf6.River.from_imod5_data", "api/generated/mf6/imod.mf6.River.mask", "api/generated/mf6/imod.mf6.River.regrid_like", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "api/generated/mf6/imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "api/generated/mf6/imod.mf6.Solution", "api/generated/mf6/imod.mf6.SolutionPresetComplex", "api/generated/mf6/imod.mf6.SolutionPresetModerate", "api/generated/mf6/imod.mf6.SolutionPresetSimple", "api/generated/mf6/imod.mf6.SourceSinkMixing", "api/generated/mf6/imod.mf6.SourceSinkMixing.from_flow_model", "api/generated/mf6/imod.mf6.SpecificStorage", "api/generated/mf6/imod.mf6.SpecificStorage.mask", "api/generated/mf6/imod.mf6.SpecificStorage.regrid_like", "api/generated/mf6/imod.mf6.StorageCoefficient", "api/generated/mf6/imod.mf6.StorageCoefficient.from_imod5_data", "api/generated/mf6/imod.mf6.StorageCoefficient.mask", "api/generated/mf6/imod.mf6.StorageCoefficient.regrid_like", "api/generated/mf6/imod.mf6.StructuredDiscretization", "api/generated/mf6/imod.mf6.TimeDiscretization", "api/generated/mf6/imod.mf6.UnsaturatedZoneFlow", "api/generated/mf6/imod.mf6.VerticesDiscretization", "api/generated/mf6/imod.mf6.Well", "api/generated/mf6/imod.mf6.Well.cleanup", "api/generated/mf6/imod.mf6.Well.from_imod5_data", "api/generated/mf6/imod.mf6.Well.mask", "api/generated/mf6/imod.mf6.Well.regrid_like", "api/generated/mf6/imod.mf6.Well.to_mf6_pkg", "api/generated/mf6/imod.mf6.WellDisStructured", "api/generated/mf6/imod.mf6.WellDisVertices", "api/generated/mf6/imod.mf6.open_cbc", "api/generated/mf6/imod.mf6.open_hds", "api/generated/mf6/imod.mf6.read_cbc_headers", "api/generated/mf6/regrid/imod.mf6.regrid.ConstantHeadRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DiscretizationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DispersionRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.DrainageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EmptyRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.EvapotranspirationRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.InitialConditionsRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.MobileStorageTransferRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.NodePropertyFlowRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RechargeRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.RiverRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.SpecificStorageRegridMethod", "api/generated/mf6/regrid/imod.mf6.regrid.StorageCoefficientRegridMethod", "api/generated/msw/imod.msw.AnnualCropFactors", "api/generated/msw/imod.msw.CouplerMapping", "api/generated/msw/imod.msw.EvapotranspirationMapping", "api/generated/msw/imod.msw.GridData", "api/generated/msw/imod.msw.IdfMapping", "api/generated/msw/imod.msw.Infiltration", "api/generated/msw/imod.msw.InitialConditionsEquilibrium", "api/generated/msw/imod.msw.InitialConditionsPercolation", "api/generated/msw/imod.msw.InitialConditionsRootzonePressureHead", "api/generated/msw/imod.msw.InitialConditionsSavedState", "api/generated/msw/imod.msw.LanduseOptions", "api/generated/msw/imod.msw.MetaSwapModel", "api/generated/msw/imod.msw.MeteoGrid", "api/generated/msw/imod.msw.Ponding", "api/generated/msw/imod.msw.PrecipitationMapping", "api/generated/msw/imod.msw.ScalingFactors", "api/generated/msw/imod.msw.Sprinkling", "api/generated/msw/imod.msw.TimeOutputControl", "api/generated/msw/imod.msw.VariableOutputControl", "api/generated/prepare/imod.prepare.ALLOCATION_OPTION", "api/generated/prepare/imod.prepare.DISTRIBUTING_OPTION", "api/generated/prepare/imod.prepare.LayerRegridder", "api/generated/prepare/imod.prepare.Regridder", "api/generated/prepare/imod.prepare.Voxelizer", "api/generated/prepare/imod.prepare.allocate_drn_cells", "api/generated/prepare/imod.prepare.allocate_ghb_cells", "api/generated/prepare/imod.prepare.allocate_rch_cells", "api/generated/prepare/imod.prepare.allocate_riv_cells", "api/generated/prepare/imod.prepare.assign_wells", "api/generated/prepare/imod.prepare.c_leakage", "api/generated/prepare/imod.prepare.c_radial", "api/generated/prepare/imod.prepare.celltable", "api/generated/prepare/imod.prepare.cleanup_drn", "api/generated/prepare/imod.prepare.cleanup_ghb", "api/generated/prepare/imod.prepare.cleanup_riv", "api/generated/prepare/imod.prepare.cleanup_wel", "api/generated/prepare/imod.prepare.create_layered_top", "api/generated/prepare/imod.prepare.distribute_drn_conductance", "api/generated/prepare/imod.prepare.distribute_ghb_conductance", "api/generated/prepare/imod.prepare.distribute_riv_conductance", "api/generated/prepare/imod.prepare.fill", "api/generated/prepare/imod.prepare.gdal_rasterize", "api/generated/prepare/imod.prepare.get_lower_active_grid_cells", "api/generated/prepare/imod.prepare.get_lower_active_layer_number", "api/generated/prepare/imod.prepare.get_upper_active_grid_cells", "api/generated/prepare/imod.prepare.get_upper_active_layer_number", "api/generated/prepare/imod.prepare.laplace_interpolate", "api/generated/prepare/imod.prepare.linestring_to_square_zpolygons", "api/generated/prepare/imod.prepare.linestring_to_trapezoid_zpolygons", "api/generated/prepare/imod.prepare.polygonize", "api/generated/prepare/imod.prepare.rasterize", "api/generated/prepare/imod.prepare.rasterize_celltable", "api/generated/prepare/imod.prepare.reproject", "api/generated/prepare/imod.prepare.zonal_aggregate_polygons", "api/generated/prepare/imod.prepare.zonal_aggregate_raster", "api/generated/select/imod.select.active_grid_boundary_xy", "api/generated/select/imod.select.cross_section_line", "api/generated/select/imod.select.cross_section_linestring", "api/generated/select/imod.select.grid_boundary_xy", "api/generated/select/imod.select.points_in_bounds", "api/generated/select/imod.select.points_indices", "api/generated/select/imod.select.points_set_values", "api/generated/select/imod.select.points_values", "api/generated/select/imod.select.upper_active_layer", "api/generated/util/imod.util.cd", "api/generated/util/imod.util.coord_reference", "api/generated/util/imod.util.empty_2d", "api/generated/util/imod.util.empty_2d_transient", "api/generated/util/imod.util.empty_3d", "api/generated/util/imod.util.empty_3d_transient", "api/generated/util/imod.util.from_mdal_compliant_ugrid2d", "api/generated/util/imod.util.ignore_warnings", "api/generated/util/imod.util.mdal_compliant_ugrid2d", "api/generated/util/imod.util.print_if_error", "api/generated/util/imod.util.spatial_reference", "api/generated/util/imod.util.to_datetime", "api/generated/util/imod.util.to_ugrid2d", "api/generated/util/imod.util.transform", "api/generated/util/imod.util.where", "api/generated/visualize/imod.visualize.GridAnimation3D", "api/generated/visualize/imod.visualize.StaticGridAnimation3D", "api/generated/visualize/imod.visualize.cross_section", "api/generated/visualize/imod.visualize.grid_3d", "api/generated/visualize/imod.visualize.imshow_topview", "api/generated/visualize/imod.visualize.line_3d", "api/generated/visualize/imod.visualize.plot_map", "api/generated/visualize/imod.visualize.quiver", "api/generated/visualize/imod.visualize.read_imod_legend", "api/generated/visualize/imod.visualize.streamfunction", "api/generated/visualize/imod.visualize.waterbalance_barchart", "api/generated/wq/imod.wq.AdvectionFiniteDifference", "api/generated/wq/imod.wq.AdvectionHybridMOC", "api/generated/wq/imod.wq.AdvectionMOC", "api/generated/wq/imod.wq.AdvectionModifiedMOC", "api/generated/wq/imod.wq.AdvectionTVD", "api/generated/wq/imod.wq.BasicFlow", "api/generated/wq/imod.wq.BasicTransport", "api/generated/wq/imod.wq.ConstantHead", "api/generated/wq/imod.wq.Dispersion", "api/generated/wq/imod.wq.Drainage", "api/generated/wq/imod.wq.EvapotranspirationHighestActive", "api/generated/wq/imod.wq.EvapotranspirationLayers", "api/generated/wq/imod.wq.EvapotranspirationTopLayer", "api/generated/wq/imod.wq.GeneralHeadBoundary", "api/generated/wq/imod.wq.GeneralizedConjugateGradientSolver", "api/generated/wq/imod.wq.LayerPropertyFlow", "api/generated/wq/imod.wq.MassLoading", "api/generated/wq/imod.wq.OutputControl", "api/generated/wq/imod.wq.ParallelKrylovFlowSolver", "api/generated/wq/imod.wq.ParallelKrylovTransportSolver", "api/generated/wq/imod.wq.PreconditionedConjugateGradientSolver", "api/generated/wq/imod.wq.RechargeHighestActive", "api/generated/wq/imod.wq.RechargeLayers", "api/generated/wq/imod.wq.RechargeTopLayer", "api/generated/wq/imod.wq.River", "api/generated/wq/imod.wq.SeawatModel", "api/generated/wq/imod.wq.SeawatModel.create_time_discretization", "api/generated/wq/imod.wq.TimeDiscretization", "api/generated/wq/imod.wq.TimeVaryingConstantConcentration", "api/generated/wq/imod.wq.VariableDensityFlow", "api/generated/wq/imod.wq.Well", "api/index", "api/io", "api/logging", "api/metamod", "api/mf6", "api/msw", "api/prepare", "api/select", "api/util", "api/visualize", "api/wq", "developing/ci", "developing/contributing", "developing/documentation", "developing/examples", "developing/index", "developing/releasing", "examples/imod-wq/Elder", "examples/imod-wq/FreshwaterLens", "examples/imod-wq/Henry-wq", "examples/imod-wq/Hydrocoin", "examples/imod-wq/SaltwaterPocket", "examples/imod-wq/VerticalInterface", "examples/imod-wq/index", "examples/imod-wq/sg_execution_times", "examples/imodflow/ImodflowProjectfile", "examples/imodflow/index", "examples/imodflow/sg_execution_times", "examples/index", "examples/metaswap/index", "examples/metaswap/metaswap_example", "examples/metaswap/read_metaswap_file", "examples/metaswap/sg_execution_times", "examples/mf6/Henry", "examples/mf6/circle", "examples/mf6/circle_partitioned", "examples/mf6/circle_transport", "examples/mf6/different_ways_to_regrid_models", "examples/mf6/ex01_twri", "examples/mf6/example_1d_transport", "examples/mf6/example_models", "examples/mf6/hondsrug", "examples/mf6/hondsrug_partitioning", "examples/mf6/index", "examples/mf6/lake", "examples/mf6/sg_execution_times", "examples/mf6/transport_2d", "examples/prepare/index", "examples/prepare/point_interpolation", "examples/prepare/polygonize_raster", "examples/prepare/rasterize_shp", "examples/prepare/reproject", "examples/prepare/sg_execution_times", "examples/visualize/flowvel_streamlines", "examples/visualize/index", "examples/visualize/plot_map", "examples/visualize/sg_execution_times", "faq/general", "faq/how-do-i/in-out", "faq/how-do-i/index", "faq/how-do-i/modification", "faq/how-do-i/plot", "faq/how-do-i/unstructured", "faq/index", "faq/known-issues", "faq/modeling", "faq/python", "index", "installation", "sg_execution_times", "user-guide/01-raster-data", "user-guide/02-vector-data", "user-guide/03-timeseries-data", "user-guide/05-unstructured-grids", "user-guide/06-lazy-evaluation", "user-guide/07-time-discretization", "user-guide/08-regridding", "user-guide/09-topsystem", "user-guide/10-cleanup", "user-guide/index", "user-guide/sg_execution_times"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api\\changelog.rst", "api\\evaluate.rst", "api\\flow.rst", "api\\generated\\evaluate\\imod.evaluate.calculate_gxg.rst", "api\\generated\\evaluate\\imod.evaluate.convert_pointwaterhead_freshwaterhead.rst", "api\\generated\\evaluate\\imod.evaluate.facebudget.rst", "api\\generated\\evaluate\\imod.evaluate.flow_velocity.rst", "api\\generated\\evaluate\\imod.evaluate.interpolate_value_boundaries.rst", "api\\generated\\evaluate\\imod.evaluate.intra_cell_boundary_conditions.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_line.rst", "api\\generated\\evaluate\\imod.evaluate.quiver_linestring.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_advection.rst", "api\\generated\\evaluate\\imod.evaluate.stability_constraint_wel.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_line.rst", "api\\generated\\evaluate\\imod.evaluate.streamfunction_linestring.rst", "api\\generated\\flow\\imod.flow.Bottom.rst", "api\\generated\\flow\\imod.flow.Boundary.rst", "api\\generated\\flow\\imod.flow.ConstantHead.rst", "api\\generated\\flow\\imod.flow.Drain.rst", "api\\generated\\flow\\imod.flow.EvapoTranspiration.rst", "api\\generated\\flow\\imod.flow.GeneralHeadBoundary.rst", "api\\generated\\flow\\imod.flow.HorizontalAnisotropy.rst", "api\\generated\\flow\\imod.flow.HorizontalFlowBarrier.rst", "api\\generated\\flow\\imod.flow.HorizontalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.rst", "api\\generated\\flow\\imod.flow.ImodflowModel.create_time_discretization.rst", "api\\generated\\flow\\imod.flow.MetaSwap.rst", "api\\generated\\flow\\imod.flow.PreconditionedConjugateGradientSolver.rst", "api\\generated\\flow\\imod.flow.Recharge.rst", "api\\generated\\flow\\imod.flow.River.rst", "api\\generated\\flow\\imod.flow.SpecificStorage.rst", "api\\generated\\flow\\imod.flow.StartingHead.rst", "api\\generated\\flow\\imod.flow.StorageCoefficient.rst", "api\\generated\\flow\\imod.flow.Top.rst", "api\\generated\\flow\\imod.flow.VerticalAnisotropy.rst", "api\\generated\\flow\\imod.flow.VerticalHydraulicConductivity.rst", "api\\generated\\flow\\imod.flow.Well.rst", "api\\generated\\io\\imod.formats.gen.read.rst", "api\\generated\\io\\imod.formats.gen.read_ascii.rst", "api\\generated\\io\\imod.formats.gen.write.rst", "api\\generated\\io\\imod.formats.idf.header.rst", "api\\generated\\io\\imod.formats.idf.open.rst", "api\\generated\\io\\imod.formats.idf.open_dataset.rst", "api\\generated\\io\\imod.formats.idf.open_subdomains.rst", "api\\generated\\io\\imod.formats.idf.save.rst", "api\\generated\\io\\imod.formats.ipf.read.rst", "api\\generated\\io\\imod.formats.ipf.read_associated.rst", "api\\generated\\io\\imod.formats.ipf.save.rst", "api\\generated\\io\\imod.formats.ipf.write.rst", "api\\generated\\io\\imod.formats.ipf.write_assoc.rst", "api\\generated\\io\\imod.formats.prj.open_projectfile_data.rst", "api\\generated\\io\\imod.formats.prj.read_projectfile.rst", "api\\generated\\io\\imod.formats.prj.read_timfile.rst", "api\\generated\\io\\imod.formats.rasterio.header.rst", "api\\generated\\io\\imod.formats.rasterio.open.rst", "api\\generated\\io\\imod.formats.rasterio.save.rst", "api\\generated\\logging\\imod.logging.rst", "api\\generated\\logging\\imod.logging.config.rst", "api\\generated\\logging\\imod.logging.config.LoggerType.rst", "api\\generated\\logging\\imod.logging.config.configure.rst", "api\\generated\\logging\\imod.logging.ilogger.rst", "api\\generated\\logging\\imod.logging.ilogger.ILogger.rst", "api\\generated\\logging\\imod.logging.logging_decorators.rst", "api\\generated\\logging\\imod.logging.logging_decorators.init_log_decorator.rst", "api\\generated\\logging\\imod.logging.logging_decorators.standard_log_decorator.rst", "api\\generated\\logging\\imod.logging.loglevel.rst", "api\\generated\\logging\\imod.logging.loglevel.LogLevel.rst", "api\\generated\\logging\\imod.logging.logurulogger.rst", "api\\generated\\logging\\imod.logging.logurulogger.LoguruLogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.rst", "api\\generated\\logging\\imod.logging.nulllogger.NullLogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.rst", "api\\generated\\logging\\imod.logging.pythonlogger.PythonLogger.rst", "api\\generated\\metamod\\imod.couplers.metamod.MetaMod.rst", "api\\generated\\mf6\\imod.mf6.AdvectionCentral.rst", "api\\generated\\mf6\\imod.mf6.AdvectionTVD.rst", "api\\generated\\mf6\\imod.mf6.AdvectionUpstream.rst", "api\\generated\\mf6\\imod.mf6.ApiPackage.rst", "api\\generated\\mf6\\imod.mf6.Buoyancy.rst", "api\\generated\\mf6\\imod.mf6.ConstantConcentration.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.from_imod5_shd_data.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.mask.rst", "api\\generated\\mf6\\imod.mf6.ConstantHead.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Dispersion.rst", "api\\generated\\mf6\\imod.mf6.Drainage.rst", "api\\generated\\mf6\\imod.mf6.Drainage.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Drainage.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Drainage.mask.rst", "api\\generated\\mf6\\imod.mf6.Drainage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.mask.rst", "api\\generated\\mf6\\imod.mf6.Evapotranspiration.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.cleanup.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.mask.rst", "api\\generated\\mf6\\imod.mf6.GeneralHeadBoundary.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.dump.rst", "api\\generated\\mf6\\imod.mf6.GroundwaterTransportModel.mask_all_packages.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.ImmobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.mask.rst", "api\\generated\\mf6\\imod.mf6.InitialConditions.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.mask.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.LayeredWell.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.MassSourceLoading.rst", "api\\generated\\mf6\\imod.mf6.MobileStorageTransfer.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.clip_box.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.create_time_discretization.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.dump.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_concentration.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_flow_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_head.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.open_transport_budget.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.run.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.split.rst", "api\\generated\\mf6\\imod.mf6.Modflow6Simulation.write.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.mask.rst", "api\\generated\\mf6\\imod.mf6.NodePropertyFlow.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.OutputControl.rst", "api\\generated\\mf6\\imod.mf6.Recharge.rst", "api\\generated\\mf6\\imod.mf6.Recharge.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Recharge.mask.rst", "api\\generated\\mf6\\imod.mf6.Recharge.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.River.rst", "api\\generated\\mf6\\imod.mf6.River.cleanup.rst", "api\\generated\\mf6\\imod.mf6.River.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.River.mask.rst", "api\\generated\\mf6\\imod.mf6.River.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.Solution.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetComplex.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetModerate.rst", "api\\generated\\mf6\\imod.mf6.SolutionPresetSimple.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.rst", "api\\generated\\mf6\\imod.mf6.SourceSinkMixing.from_flow_model.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.mask.rst", "api\\generated\\mf6\\imod.mf6.SpecificStorage.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.mask.rst", "api\\generated\\mf6\\imod.mf6.StorageCoefficient.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.StructuredDiscretization.rst", "api\\generated\\mf6\\imod.mf6.TimeDiscretization.rst", "api\\generated\\mf6\\imod.mf6.UnsaturatedZoneFlow.rst", "api\\generated\\mf6\\imod.mf6.VerticesDiscretization.rst", "api\\generated\\mf6\\imod.mf6.Well.rst", "api\\generated\\mf6\\imod.mf6.Well.cleanup.rst", "api\\generated\\mf6\\imod.mf6.Well.from_imod5_data.rst", "api\\generated\\mf6\\imod.mf6.Well.mask.rst", "api\\generated\\mf6\\imod.mf6.Well.regrid_like.rst", "api\\generated\\mf6\\imod.mf6.Well.to_mf6_pkg.rst", "api\\generated\\mf6\\imod.mf6.WellDisStructured.rst", "api\\generated\\mf6\\imod.mf6.WellDisVertices.rst", "api\\generated\\mf6\\imod.mf6.open_cbc.rst", "api\\generated\\mf6\\imod.mf6.open_hds.rst", "api\\generated\\mf6\\imod.mf6.read_cbc_headers.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.ConstantHeadRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DiscretizationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DispersionRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.DrainageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EmptyRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.EvapotranspirationRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.InitialConditionsRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.MobileStorageTransferRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.NodePropertyFlowRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RechargeRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.RiverRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.SpecificStorageRegridMethod.rst", "api\\generated\\mf6\\regrid\\imod.mf6.regrid.StorageCoefficientRegridMethod.rst", "api\\generated\\msw\\imod.msw.AnnualCropFactors.rst", "api\\generated\\msw\\imod.msw.CouplerMapping.rst", "api\\generated\\msw\\imod.msw.EvapotranspirationMapping.rst", "api\\generated\\msw\\imod.msw.GridData.rst", "api\\generated\\msw\\imod.msw.IdfMapping.rst", "api\\generated\\msw\\imod.msw.Infiltration.rst", "api\\generated\\msw\\imod.msw.InitialConditionsEquilibrium.rst", "api\\generated\\msw\\imod.msw.InitialConditionsPercolation.rst", "api\\generated\\msw\\imod.msw.InitialConditionsRootzonePressureHead.rst", "api\\generated\\msw\\imod.msw.InitialConditionsSavedState.rst", "api\\generated\\msw\\imod.msw.LanduseOptions.rst", "api\\generated\\msw\\imod.msw.MetaSwapModel.rst", "api\\generated\\msw\\imod.msw.MeteoGrid.rst", "api\\generated\\msw\\imod.msw.Ponding.rst", "api\\generated\\msw\\imod.msw.PrecipitationMapping.rst", "api\\generated\\msw\\imod.msw.ScalingFactors.rst", "api\\generated\\msw\\imod.msw.Sprinkling.rst", "api\\generated\\msw\\imod.msw.TimeOutputControl.rst", "api\\generated\\msw\\imod.msw.VariableOutputControl.rst", "api\\generated\\prepare\\imod.prepare.ALLOCATION_OPTION.rst", "api\\generated\\prepare\\imod.prepare.DISTRIBUTING_OPTION.rst", "api\\generated\\prepare\\imod.prepare.LayerRegridder.rst", "api\\generated\\prepare\\imod.prepare.Regridder.rst", "api\\generated\\prepare\\imod.prepare.Voxelizer.rst", "api\\generated\\prepare\\imod.prepare.allocate_drn_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_ghb_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_rch_cells.rst", "api\\generated\\prepare\\imod.prepare.allocate_riv_cells.rst", "api\\generated\\prepare\\imod.prepare.assign_wells.rst", "api\\generated\\prepare\\imod.prepare.c_leakage.rst", "api\\generated\\prepare\\imod.prepare.c_radial.rst", "api\\generated\\prepare\\imod.prepare.celltable.rst", "api\\generated\\prepare\\imod.prepare.cleanup_drn.rst", "api\\generated\\prepare\\imod.prepare.cleanup_ghb.rst", "api\\generated\\prepare\\imod.prepare.cleanup_riv.rst", "api\\generated\\prepare\\imod.prepare.cleanup_wel.rst", "api\\generated\\prepare\\imod.prepare.create_layered_top.rst", "api\\generated\\prepare\\imod.prepare.distribute_drn_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_ghb_conductance.rst", "api\\generated\\prepare\\imod.prepare.distribute_riv_conductance.rst", "api\\generated\\prepare\\imod.prepare.fill.rst", "api\\generated\\prepare\\imod.prepare.gdal_rasterize.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_lower_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_grid_cells.rst", "api\\generated\\prepare\\imod.prepare.get_upper_active_layer_number.rst", "api\\generated\\prepare\\imod.prepare.laplace_interpolate.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_square_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.linestring_to_trapezoid_zpolygons.rst", "api\\generated\\prepare\\imod.prepare.polygonize.rst", "api\\generated\\prepare\\imod.prepare.rasterize.rst", "api\\generated\\prepare\\imod.prepare.rasterize_celltable.rst", "api\\generated\\prepare\\imod.prepare.reproject.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_polygons.rst", "api\\generated\\prepare\\imod.prepare.zonal_aggregate_raster.rst", "api\\generated\\select\\imod.select.active_grid_boundary_xy.rst", "api\\generated\\select\\imod.select.cross_section_line.rst", "api\\generated\\select\\imod.select.cross_section_linestring.rst", "api\\generated\\select\\imod.select.grid_boundary_xy.rst", "api\\generated\\select\\imod.select.points_in_bounds.rst", "api\\generated\\select\\imod.select.points_indices.rst", "api\\generated\\select\\imod.select.points_set_values.rst", "api\\generated\\select\\imod.select.points_values.rst", "api\\generated\\select\\imod.select.upper_active_layer.rst", "api\\generated\\util\\imod.util.cd.rst", "api\\generated\\util\\imod.util.coord_reference.rst", "api\\generated\\util\\imod.util.empty_2d.rst", "api\\generated\\util\\imod.util.empty_2d_transient.rst", "api\\generated\\util\\imod.util.empty_3d.rst", "api\\generated\\util\\imod.util.empty_3d_transient.rst", "api\\generated\\util\\imod.util.from_mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.ignore_warnings.rst", "api\\generated\\util\\imod.util.mdal_compliant_ugrid2d.rst", "api\\generated\\util\\imod.util.print_if_error.rst", "api\\generated\\util\\imod.util.spatial_reference.rst", "api\\generated\\util\\imod.util.to_datetime.rst", "api\\generated\\util\\imod.util.to_ugrid2d.rst", "api\\generated\\util\\imod.util.transform.rst", "api\\generated\\util\\imod.util.where.rst", "api\\generated\\visualize\\imod.visualize.GridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.StaticGridAnimation3D.rst", "api\\generated\\visualize\\imod.visualize.cross_section.rst", "api\\generated\\visualize\\imod.visualize.grid_3d.rst", "api\\generated\\visualize\\imod.visualize.imshow_topview.rst", "api\\generated\\visualize\\imod.visualize.line_3d.rst", "api\\generated\\visualize\\imod.visualize.plot_map.rst", "api\\generated\\visualize\\imod.visualize.quiver.rst", "api\\generated\\visualize\\imod.visualize.read_imod_legend.rst", "api\\generated\\visualize\\imod.visualize.streamfunction.rst", "api\\generated\\visualize\\imod.visualize.waterbalance_barchart.rst", "api\\generated\\wq\\imod.wq.AdvectionFiniteDifference.rst", "api\\generated\\wq\\imod.wq.AdvectionHybridMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionModifiedMOC.rst", "api\\generated\\wq\\imod.wq.AdvectionTVD.rst", "api\\generated\\wq\\imod.wq.BasicFlow.rst", "api\\generated\\wq\\imod.wq.BasicTransport.rst", "api\\generated\\wq\\imod.wq.ConstantHead.rst", "api\\generated\\wq\\imod.wq.Dispersion.rst", "api\\generated\\wq\\imod.wq.Drainage.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationHighestActive.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationLayers.rst", "api\\generated\\wq\\imod.wq.EvapotranspirationTopLayer.rst", "api\\generated\\wq\\imod.wq.GeneralHeadBoundary.rst", "api\\generated\\wq\\imod.wq.GeneralizedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.LayerPropertyFlow.rst", "api\\generated\\wq\\imod.wq.MassLoading.rst", "api\\generated\\wq\\imod.wq.OutputControl.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovFlowSolver.rst", "api\\generated\\wq\\imod.wq.ParallelKrylovTransportSolver.rst", "api\\generated\\wq\\imod.wq.PreconditionedConjugateGradientSolver.rst", "api\\generated\\wq\\imod.wq.RechargeHighestActive.rst", "api\\generated\\wq\\imod.wq.RechargeLayers.rst", "api\\generated\\wq\\imod.wq.RechargeTopLayer.rst", "api\\generated\\wq\\imod.wq.River.rst", "api\\generated\\wq\\imod.wq.SeawatModel.rst", "api\\generated\\wq\\imod.wq.SeawatModel.create_time_discretization.rst", "api\\generated\\wq\\imod.wq.TimeDiscretization.rst", "api\\generated\\wq\\imod.wq.TimeVaryingConstantConcentration.rst", "api\\generated\\wq\\imod.wq.VariableDensityFlow.rst", "api\\generated\\wq\\imod.wq.Well.rst", "api\\index.rst", "api\\io.rst", "api\\logging.rst", "api\\metamod.rst", "api\\mf6.rst", "api\\msw.rst", "api\\prepare.rst", "api\\select.rst", "api\\util.rst", "api\\visualize.rst", "api\\wq.rst", "developing\\ci.rst", "developing\\contributing.rst", "developing\\documentation.rst", "developing\\examples.rst", "developing\\index.rst", "developing\\releasing.rst", "examples\\imod-wq\\Elder.rst", "examples\\imod-wq\\FreshwaterLens.rst", "examples\\imod-wq\\Henry-wq.rst", "examples\\imod-wq\\Hydrocoin.rst", "examples\\imod-wq\\SaltwaterPocket.rst", "examples\\imod-wq\\VerticalInterface.rst", "examples\\imod-wq\\index.rst", "examples\\imod-wq\\sg_execution_times.rst", "examples\\imodflow\\ImodflowProjectfile.rst", "examples\\imodflow\\index.rst", "examples\\imodflow\\sg_execution_times.rst", "examples\\index.rst", "examples\\metaswap\\index.rst", "examples\\metaswap\\metaswap_example.rst", "examples\\metaswap\\read_metaswap_file.rst", "examples\\metaswap\\sg_execution_times.rst", "examples\\mf6\\Henry.rst", "examples\\mf6\\circle.rst", "examples\\mf6\\circle_partitioned.rst", "examples\\mf6\\circle_transport.rst", "examples\\mf6\\different_ways_to_regrid_models.rst", "examples\\mf6\\ex01_twri.rst", "examples\\mf6\\example_1d_transport.rst", "examples\\mf6\\example_models.rst", "examples\\mf6\\hondsrug.rst", "examples\\mf6\\hondsrug_partitioning.rst", "examples\\mf6\\index.rst", "examples\\mf6\\lake.rst", "examples\\mf6\\sg_execution_times.rst", "examples\\mf6\\transport_2d.rst", "examples\\prepare\\index.rst", "examples\\prepare\\point_interpolation.rst", "examples\\prepare\\polygonize_raster.rst", "examples\\prepare\\rasterize_shp.rst", "examples\\prepare\\reproject.rst", "examples\\prepare\\sg_execution_times.rst", "examples\\visualize\\flowvel_streamlines.rst", "examples\\visualize\\index.rst", "examples\\visualize\\plot_map.rst", "examples\\visualize\\sg_execution_times.rst", "faq\\general.rst", "faq\\how-do-i\\in-out.rst", "faq\\how-do-i\\index.rst", "faq\\how-do-i\\modification.rst", "faq\\how-do-i\\plot.rst", "faq\\how-do-i\\unstructured.rst", "faq\\index.rst", "faq\\known-issues.rst", "faq\\modeling.rst", "faq\\python.rst", "index.rst", "installation.rst", "sg_execution_times.rst", "user-guide\\01-raster-data.rst", "user-guide\\02-vector-data.rst", "user-guide\\03-timeseries-data.rst", "user-guide\\05-unstructured-grids.rst", "user-guide\\06-lazy-evaluation.rst", "user-guide\\07-time-discretization.rst", "user-guide\\08-regridding.rst", "user-guide\\09-topsystem.rst", "user-guide\\10-cleanup.rst", "user-guide\\index.rst", "user-guide\\sg_execution_times.rst"], "indexentries": {"__init__() (imod.couplers.metamod.metamod method)": [[73, "imod.couplers.metamod.MetaMod.__init__", false]], "__init__() (imod.flow.bottom method)": [[15, "imod.flow.Bottom.__init__", false]], "__init__() (imod.flow.boundary method)": [[16, "imod.flow.Boundary.__init__", false]], "__init__() (imod.flow.constanthead method)": [[17, "imod.flow.ConstantHead.__init__", false]], "__init__() (imod.flow.drain method)": [[18, "imod.flow.Drain.__init__", false]], "__init__() (imod.flow.evapotranspiration method)": [[19, "imod.flow.EvapoTranspiration.__init__", false]], "__init__() (imod.flow.generalheadboundary method)": [[20, "imod.flow.GeneralHeadBoundary.__init__", false]], "__init__() (imod.flow.horizontalanisotropy method)": [[21, "imod.flow.HorizontalAnisotropy.__init__", false]], "__init__() (imod.flow.horizontalflowbarrier method)": [[22, "imod.flow.HorizontalFlowBarrier.__init__", false]], "__init__() (imod.flow.horizontalhydraulicconductivity method)": [[23, "imod.flow.HorizontalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.imodflowmodel method)": [[24, "imod.flow.ImodflowModel.__init__", false]], "__init__() (imod.flow.metaswap method)": [[26, "imod.flow.MetaSwap.__init__", false]], "__init__() (imod.flow.preconditionedconjugategradientsolver method)": [[27, "imod.flow.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.flow.recharge method)": [[28, "imod.flow.Recharge.__init__", false]], "__init__() (imod.flow.river method)": [[29, "imod.flow.River.__init__", false]], "__init__() (imod.flow.specificstorage method)": [[30, "imod.flow.SpecificStorage.__init__", false]], "__init__() (imod.flow.startinghead method)": [[31, "imod.flow.StartingHead.__init__", false]], "__init__() (imod.flow.storagecoefficient method)": [[32, "imod.flow.StorageCoefficient.__init__", false]], "__init__() (imod.flow.top method)": [[33, "imod.flow.Top.__init__", false]], "__init__() (imod.flow.verticalanisotropy method)": [[34, "imod.flow.VerticalAnisotropy.__init__", false]], "__init__() (imod.flow.verticalhydraulicconductivity method)": [[35, "imod.flow.VerticalHydraulicConductivity.__init__", false]], "__init__() (imod.flow.well method)": [[36, "imod.flow.Well.__init__", false]], "__init__() (imod.logging.config.loggertype method)": [[58, "imod.logging.config.LoggerType.__init__", false]], "__init__() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.__init__", false]], "__init__() (imod.logging.loglevel.loglevel method)": [[66, "imod.logging.loglevel.LogLevel.__init__", false]], "__init__() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.__init__", false]], "__init__() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.__init__", false]], "__init__() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.__init__", false]], "__init__() (imod.mf6.advectioncentral method)": [[74, "imod.mf6.AdvectionCentral.__init__", false]], "__init__() (imod.mf6.advectiontvd method)": [[75, "imod.mf6.AdvectionTVD.__init__", false]], "__init__() (imod.mf6.advectionupstream method)": [[76, "imod.mf6.AdvectionUpstream.__init__", false]], "__init__() (imod.mf6.apipackage method)": [[77, "imod.mf6.ApiPackage.__init__", false]], "__init__() (imod.mf6.buoyancy method)": [[78, "imod.mf6.Buoyancy.__init__", false]], "__init__() (imod.mf6.constantconcentration method)": [[79, "imod.mf6.ConstantConcentration.__init__", false]], "__init__() (imod.mf6.constanthead method)": [[80, "imod.mf6.ConstantHead.__init__", false]], "__init__() (imod.mf6.dispersion method)": [[85, "imod.mf6.Dispersion.__init__", false]], "__init__() (imod.mf6.drainage method)": [[86, "imod.mf6.Drainage.__init__", false]], "__init__() (imod.mf6.evapotranspiration method)": [[91, "imod.mf6.Evapotranspiration.__init__", false]], "__init__() (imod.mf6.generalheadboundary method)": [[94, "imod.mf6.GeneralHeadBoundary.__init__", false]], "__init__() (imod.mf6.groundwaterflowmodel method)": [[99, "imod.mf6.GroundwaterFlowModel.__init__", false]], "__init__() (imod.mf6.groundwatertransportmodel method)": [[103, "imod.mf6.GroundwaterTransportModel.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[106, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.horizontalflowbarriermultiplier method)": [[108, "imod.mf6.HorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.horizontalflowbarrierresistance method)": [[110, "imod.mf6.HorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.immobilestoragetransfer method)": [[112, "imod.mf6.ImmobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.initialconditions method)": [[113, "imod.mf6.InitialConditions.__init__", false]], "__init__() (imod.mf6.layeredwell method)": [[117, "imod.mf6.LayeredWell.__init__", false]], "__init__() (imod.mf6.masssourceloading method)": [[122, "imod.mf6.MassSourceLoading.__init__", false]], "__init__() (imod.mf6.mobilestoragetransfer method)": [[123, "imod.mf6.MobileStorageTransfer.__init__", false]], "__init__() (imod.mf6.modflow6simulation method)": [[124, "imod.mf6.Modflow6Simulation.__init__", false]], "__init__() (imod.mf6.nodepropertyflow method)": [[136, "imod.mf6.NodePropertyFlow.__init__", false]], "__init__() (imod.mf6.outputcontrol method)": [[140, "imod.mf6.OutputControl.__init__", false]], "__init__() (imod.mf6.recharge method)": [[141, "imod.mf6.Recharge.__init__", false]], "__init__() (imod.mf6.regrid.constantheadregridmethod method)": [[185, "imod.mf6.regrid.ConstantHeadRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.discretizationregridmethod method)": [[186, "imod.mf6.regrid.DiscretizationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.dispersionregridmethod method)": [[187, "imod.mf6.regrid.DispersionRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.drainageregridmethod method)": [[188, "imod.mf6.regrid.DrainageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.emptyregridmethod method)": [[189, "imod.mf6.regrid.EmptyRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.evapotranspirationregridmethod method)": [[190, "imod.mf6.regrid.EvapotranspirationRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.generalheadboundaryregridmethod method)": [[191, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.initialconditionsregridmethod method)": [[192, "imod.mf6.regrid.InitialConditionsRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.mobilestoragetransferregridmethod method)": [[193, "imod.mf6.regrid.MobileStorageTransferRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.nodepropertyflowregridmethod method)": [[194, "imod.mf6.regrid.NodePropertyFlowRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.rechargeregridmethod method)": [[195, "imod.mf6.regrid.RechargeRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.riverregridmethod method)": [[196, "imod.mf6.regrid.RiverRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.specificstorageregridmethod method)": [[197, "imod.mf6.regrid.SpecificStorageRegridMethod.__init__", false]], "__init__() (imod.mf6.regrid.storagecoefficientregridmethod method)": [[198, "imod.mf6.regrid.StorageCoefficientRegridMethod.__init__", false]], "__init__() (imod.mf6.river method)": [[145, "imod.mf6.River.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[150, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[152, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.__init__", false]], "__init__() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[154, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.__init__", false]], "__init__() (imod.mf6.solution method)": [[157, "imod.mf6.Solution.__init__", false]], "__init__() (imod.mf6.sourcesinkmixing method)": [[161, "imod.mf6.SourceSinkMixing.__init__", false]], "__init__() (imod.mf6.specificstorage method)": [[163, "imod.mf6.SpecificStorage.__init__", false]], "__init__() (imod.mf6.storagecoefficient method)": [[166, "imod.mf6.StorageCoefficient.__init__", false]], "__init__() (imod.mf6.structureddiscretization method)": [[170, "imod.mf6.StructuredDiscretization.__init__", false]], "__init__() (imod.mf6.timediscretization method)": [[171, "imod.mf6.TimeDiscretization.__init__", false]], "__init__() (imod.mf6.unsaturatedzoneflow method)": [[172, "imod.mf6.UnsaturatedZoneFlow.__init__", false]], "__init__() (imod.mf6.verticesdiscretization method)": [[173, "imod.mf6.VerticesDiscretization.__init__", false]], "__init__() (imod.mf6.well method)": [[174, "imod.mf6.Well.__init__", false]], "__init__() (imod.mf6.welldisstructured method)": [[180, "imod.mf6.WellDisStructured.__init__", false]], "__init__() (imod.mf6.welldisvertices method)": [[181, "imod.mf6.WellDisVertices.__init__", false]], "__init__() (imod.msw.annualcropfactors method)": [[199, "imod.msw.AnnualCropFactors.__init__", false]], "__init__() (imod.msw.couplermapping method)": [[200, "imod.msw.CouplerMapping.__init__", false]], "__init__() (imod.msw.evapotranspirationmapping method)": [[201, "imod.msw.EvapotranspirationMapping.__init__", false]], "__init__() (imod.msw.griddata method)": [[202, "imod.msw.GridData.__init__", false]], "__init__() (imod.msw.idfmapping method)": [[203, "imod.msw.IdfMapping.__init__", false]], "__init__() (imod.msw.infiltration method)": [[204, "imod.msw.Infiltration.__init__", false]], "__init__() (imod.msw.initialconditionsequilibrium method)": [[205, "imod.msw.InitialConditionsEquilibrium.__init__", false]], "__init__() (imod.msw.initialconditionspercolation method)": [[206, "imod.msw.InitialConditionsPercolation.__init__", false]], "__init__() (imod.msw.initialconditionsrootzonepressurehead method)": [[207, "imod.msw.InitialConditionsRootzonePressureHead.__init__", false]], "__init__() (imod.msw.initialconditionssavedstate method)": [[208, "imod.msw.InitialConditionsSavedState.__init__", false]], "__init__() (imod.msw.landuseoptions method)": [[209, "imod.msw.LanduseOptions.__init__", false]], "__init__() (imod.msw.metaswapmodel method)": [[210, "imod.msw.MetaSwapModel.__init__", false]], "__init__() (imod.msw.meteogrid method)": [[211, "imod.msw.MeteoGrid.__init__", false]], "__init__() (imod.msw.ponding method)": [[212, "imod.msw.Ponding.__init__", false]], "__init__() (imod.msw.precipitationmapping method)": [[213, "imod.msw.PrecipitationMapping.__init__", false]], "__init__() (imod.msw.scalingfactors method)": [[214, "imod.msw.ScalingFactors.__init__", false]], "__init__() (imod.msw.sprinkling method)": [[215, "imod.msw.Sprinkling.__init__", false]], "__init__() (imod.msw.timeoutputcontrol method)": [[216, "imod.msw.TimeOutputControl.__init__", false]], "__init__() (imod.msw.variableoutputcontrol method)": [[217, "imod.msw.VariableOutputControl.__init__", false]], "__init__() (imod.prepare.allocation_option method)": [[218, "imod.prepare.ALLOCATION_OPTION.__init__", false]], "__init__() (imod.prepare.distributing_option method)": [[219, "imod.prepare.DISTRIBUTING_OPTION.__init__", false]], "__init__() (imod.prepare.layerregridder method)": [[220, "imod.prepare.LayerRegridder.__init__", false]], "__init__() (imod.prepare.regridder method)": [[221, "imod.prepare.Regridder.__init__", false]], "__init__() (imod.prepare.voxelizer method)": [[222, "imod.prepare.Voxelizer.__init__", false]], "__init__() (imod.visualize.gridanimation3d method)": [[278, "imod.visualize.GridAnimation3D.__init__", false]], "__init__() (imod.visualize.staticgridanimation3d method)": [[279, "imod.visualize.StaticGridAnimation3D.__init__", false]], "__init__() (imod.wq.advectionfinitedifference method)": [[289, "imod.wq.AdvectionFiniteDifference.__init__", false]], "__init__() (imod.wq.advectionhybridmoc method)": [[290, "imod.wq.AdvectionHybridMOC.__init__", false]], "__init__() (imod.wq.advectionmoc method)": [[291, "imod.wq.AdvectionMOC.__init__", false]], "__init__() (imod.wq.advectionmodifiedmoc method)": [[292, "imod.wq.AdvectionModifiedMOC.__init__", false]], "__init__() (imod.wq.advectiontvd method)": [[293, "imod.wq.AdvectionTVD.__init__", false]], "__init__() (imod.wq.basicflow method)": [[294, "imod.wq.BasicFlow.__init__", false]], "__init__() (imod.wq.basictransport method)": [[295, "imod.wq.BasicTransport.__init__", false]], "__init__() (imod.wq.constanthead method)": [[296, "imod.wq.ConstantHead.__init__", false]], "__init__() (imod.wq.dispersion method)": [[297, "imod.wq.Dispersion.__init__", false]], "__init__() (imod.wq.drainage method)": [[298, "imod.wq.Drainage.__init__", false]], "__init__() (imod.wq.evapotranspirationhighestactive method)": [[299, "imod.wq.EvapotranspirationHighestActive.__init__", false]], "__init__() (imod.wq.evapotranspirationlayers method)": [[300, "imod.wq.EvapotranspirationLayers.__init__", false]], "__init__() (imod.wq.evapotranspirationtoplayer method)": [[301, "imod.wq.EvapotranspirationTopLayer.__init__", false]], "__init__() (imod.wq.generalheadboundary method)": [[302, "imod.wq.GeneralHeadBoundary.__init__", false]], "__init__() (imod.wq.generalizedconjugategradientsolver method)": [[303, "imod.wq.GeneralizedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.layerpropertyflow method)": [[304, "imod.wq.LayerPropertyFlow.__init__", false]], "__init__() (imod.wq.massloading method)": [[305, "imod.wq.MassLoading.__init__", false]], "__init__() (imod.wq.outputcontrol method)": [[306, "imod.wq.OutputControl.__init__", false]], "__init__() (imod.wq.parallelkrylovflowsolver method)": [[307, "imod.wq.ParallelKrylovFlowSolver.__init__", false]], "__init__() (imod.wq.parallelkrylovtransportsolver method)": [[308, "imod.wq.ParallelKrylovTransportSolver.__init__", false]], "__init__() (imod.wq.preconditionedconjugategradientsolver method)": [[309, "imod.wq.PreconditionedConjugateGradientSolver.__init__", false]], "__init__() (imod.wq.rechargehighestactive method)": [[310, "imod.wq.RechargeHighestActive.__init__", false]], "__init__() (imod.wq.rechargelayers method)": [[311, "imod.wq.RechargeLayers.__init__", false]], "__init__() (imod.wq.rechargetoplayer method)": [[312, "imod.wq.RechargeTopLayer.__init__", false]], "__init__() (imod.wq.river method)": [[313, "imod.wq.River.__init__", false]], "__init__() (imod.wq.seawatmodel method)": [[314, "imod.wq.SeawatModel.__init__", false]], "__init__() (imod.wq.timediscretization method)": [[316, "imod.wq.TimeDiscretization.__init__", false]], "__init__() (imod.wq.timevaryingconstantconcentration method)": [[317, "imod.wq.TimeVaryingConstantConcentration.__init__", false]], "__init__() (imod.wq.variabledensityflow method)": [[318, "imod.wq.VariableDensityFlow.__init__", false]], "__init__() (imod.wq.well method)": [[319, "imod.wq.Well.__init__", false]], "active_grid_boundary_xy() (in module imod.select)": [[254, "imod.select.active_grid_boundary_xy", false]], "advectioncentral (class in imod.mf6)": [[74, "imod.mf6.AdvectionCentral", false]], "advectionfinitedifference (class in imod.wq)": [[289, "imod.wq.AdvectionFiniteDifference", false]], "advectionhybridmoc (class in imod.wq)": [[290, "imod.wq.AdvectionHybridMOC", false]], "advectionmoc (class in imod.wq)": [[291, "imod.wq.AdvectionMOC", false]], "advectionmodifiedmoc (class in imod.wq)": [[292, "imod.wq.AdvectionModifiedMOC", false]], "advectiontvd (class in imod.mf6)": [[75, "imod.mf6.AdvectionTVD", false]], "advectiontvd (class in imod.wq)": [[293, "imod.wq.AdvectionTVD", false]], "advectionupstream (class in imod.mf6)": [[76, "imod.mf6.AdvectionUpstream", false]], "allocate_drn_cells() (in module imod.prepare)": [[223, "imod.prepare.allocate_drn_cells", false]], "allocate_ghb_cells() (in module imod.prepare)": [[224, "imod.prepare.allocate_ghb_cells", false]], "allocate_rch_cells() (in module imod.prepare)": [[225, "imod.prepare.allocate_rch_cells", false]], "allocate_riv_cells() (in module imod.prepare)": [[226, "imod.prepare.allocate_riv_cells", false]], "allocation_option (class in imod.prepare)": [[218, "imod.prepare.ALLOCATION_OPTION", false]], "annualcropfactors (class in imod.msw)": [[199, "imod.msw.AnnualCropFactors", false]], "apipackage (class in imod.mf6)": [[77, "imod.mf6.ApiPackage", false]], "assign_wells() (in module imod.prepare)": [[227, "imod.prepare.assign_wells", false]], "basicflow (class in imod.wq)": [[294, "imod.wq.BasicFlow", false]], "basictransport (class in imod.wq)": [[295, "imod.wq.BasicTransport", false]], "bottom (class in imod.flow)": [[15, "imod.flow.Bottom", false]], "boundary (class in imod.flow)": [[16, "imod.flow.Boundary", false]], "buoyancy (class in imod.mf6)": [[78, "imod.mf6.Buoyancy", false]], "c_leakage() (in module imod.prepare)": [[228, "imod.prepare.c_leakage", false]], "c_radial() (in module imod.prepare)": [[229, "imod.prepare.c_radial", false]], "calculate_gxg() (in module imod.evaluate)": [[3, "imod.evaluate.calculate_gxg", false]], "cd() (in module imod.util)": [[263, "imod.util.cd", false]], "cell_max_nparticles (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.cell_max_nparticles", false]], "cell_min_nparticles (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.cell_min_nparticles", false]], "celltable() (in module imod.prepare)": [[230, "imod.prepare.celltable", false]], "check (imod.wq.seawatmodel attribute)": [[314, "imod.wq.SeawatModel.check", false]], "cleanup() (imod.mf6.drainage method)": [[87, "imod.mf6.Drainage.cleanup", false]], "cleanup() (imod.mf6.generalheadboundary method)": [[95, "imod.mf6.GeneralHeadBoundary.cleanup", false]], "cleanup() (imod.mf6.river method)": [[146, "imod.mf6.River.cleanup", false]], "cleanup() (imod.mf6.well method)": [[175, "imod.mf6.Well.cleanup", false]], "cleanup_drn() (in module imod.prepare)": [[231, "imod.prepare.cleanup_drn", false]], "cleanup_ghb() (in module imod.prepare)": [[232, "imod.prepare.cleanup_ghb", false]], "cleanup_riv() (in module imod.prepare)": [[233, "imod.prepare.cleanup_riv", false]], "cleanup_wel() (in module imod.prepare)": [[234, "imod.prepare.cleanup_wel", false]], "clip_box() (imod.mf6.modflow6simulation method)": [[125, "imod.mf6.Modflow6Simulation.clip_box", false]], "configure() (in module imod.logging.config)": [[59, "imod.logging.config.configure", false]], "constantconcentration (class in imod.mf6)": [[79, "imod.mf6.ConstantConcentration", false]], "constanthead (class in imod.flow)": [[17, "imod.flow.ConstantHead", false]], "constanthead (class in imod.mf6)": [[80, "imod.mf6.ConstantHead", false]], "constanthead (class in imod.wq)": [[296, "imod.wq.ConstantHead", false]], "constantheadregridmethod (class in imod.mf6.regrid)": [[185, "imod.mf6.regrid.ConstantHeadRegridMethod", false]], "convert_pointwaterhead_freshwaterhead() (in module imod.evaluate)": [[4, "imod.evaluate.convert_pointwaterhead_freshwaterhead", false]], "coord_reference() (in module imod.util)": [[264, "imod.util.coord_reference", false]], "couplermapping (class in imod.msw)": [[200, "imod.msw.CouplerMapping", false]], "courant (imod.wq.advectionfinitedifference attribute)": [[289, "imod.wq.AdvectionFiniteDifference.courant", false]], "courant (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.courant", false]], "courant (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.courant", false]], "courant (imod.wq.advectionmodifiedmoc attribute)": [[292, "imod.wq.AdvectionModifiedMOC.courant", false]], "courant (imod.wq.advectiontvd attribute)": [[293, "imod.wq.AdvectionTVD.courant", false]], "create_layered_top() (in module imod.prepare)": [[235, "imod.prepare.create_layered_top", false]], "create_time_discretization() (imod.flow.imodflowmodel method)": [[25, "imod.flow.ImodflowModel.create_time_discretization", false]], "create_time_discretization() (imod.mf6.modflow6simulation method)": [[126, "imod.mf6.Modflow6Simulation.create_time_discretization", false]], "create_time_discretization() (imod.wq.seawatmodel method)": [[315, "imod.wq.SeawatModel.create_time_discretization", false]], "critical (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.CRITICAL", false]], "critical() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.critical", false]], "critical() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.critical", false]], "critical() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.critical", false]], "critical() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.critical", false]], "cross_section() (in module imod.visualize)": [[280, "imod.visualize.cross_section", false]], "cross_section_line() (in module imod.select)": [[255, "imod.select.cross_section_line", false]], "cross_section_linestring() (in module imod.select)": [[256, "imod.select.cross_section_linestring", false]], "dceps (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.dceps", false]], "dchmoc (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.dchmoc", false]], "dconcentration_epsilon (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.dconcentration_epsilon", false]], "dconcentration_epsilon (imod.wq.advectionmodifiedmoc attribute)": [[292, "imod.wq.AdvectionModifiedMOC.dconcentration_epsilon", false]], "debug (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.DEBUG", false]], "debug() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.debug", false]], "debug() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.debug", false]], "debug() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.debug", false]], "debug() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.debug", false]], "discretizationregridmethod (class in imod.mf6.regrid)": [[186, "imod.mf6.regrid.DiscretizationRegridMethod", false]], "dispersion (class in imod.mf6)": [[85, "imod.mf6.Dispersion", false]], "dispersion (class in imod.wq)": [[297, "imod.wq.Dispersion", false]], "dispersionregridmethod (class in imod.mf6.regrid)": [[187, "imod.mf6.regrid.DispersionRegridMethod", false]], "distribute_drn_conductance() (in module imod.prepare)": [[236, "imod.prepare.distribute_drn_conductance", false]], "distribute_ghb_conductance() (in module imod.prepare)": [[237, "imod.prepare.distribute_ghb_conductance", false]], "distribute_riv_conductance() (in module imod.prepare)": [[238, "imod.prepare.distribute_riv_conductance", false]], "distributing_option (class in imod.prepare)": [[219, "imod.prepare.DISTRIBUTING_OPTION", false]], "drain (class in imod.flow)": [[18, "imod.flow.Drain", false]], "drainage (class in imod.mf6)": [[86, "imod.mf6.Drainage", false]], "drainage (class in imod.wq)": [[298, "imod.wq.Drainage", false]], "drainageregridmethod (class in imod.mf6.regrid)": [[188, "imod.mf6.regrid.DrainageRegridMethod", false]], "dump() (imod.mf6.groundwaterflowmodel method)": [[100, "imod.mf6.GroundwaterFlowModel.dump", false]], "dump() (imod.mf6.groundwatertransportmodel method)": [[104, "imod.mf6.GroundwaterTransportModel.dump", false]], "dump() (imod.mf6.modflow6simulation method)": [[127, "imod.mf6.Modflow6Simulation.dump", false]], "empty_2d() (in module imod.util)": [[265, "imod.util.empty_2d", false]], "empty_2d_transient() (in module imod.util)": [[266, "imod.util.empty_2d_transient", false]], "empty_3d() (in module imod.util)": [[267, "imod.util.empty_3d", false]], "empty_3d_transient() (in module imod.util)": [[268, "imod.util.empty_3d_transient", false]], "emptyregridmethod (class in imod.mf6.regrid)": [[189, "imod.mf6.regrid.EmptyRegridMethod", false]], "error (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.ERROR", false]], "error() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.error", false]], "error() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.error", false]], "error() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.error", false]], "error() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.error", false]], "evapotranspiration (class in imod.flow)": [[19, "imod.flow.EvapoTranspiration", false]], "evapotranspiration (class in imod.mf6)": [[91, "imod.mf6.Evapotranspiration", false]], "evapotranspirationhighestactive (class in imod.wq)": [[299, "imod.wq.EvapotranspirationHighestActive", false]], "evapotranspirationlayers (class in imod.wq)": [[300, "imod.wq.EvapotranspirationLayers", false]], "evapotranspirationmapping (class in imod.msw)": [[201, "imod.msw.EvapotranspirationMapping", false]], "evapotranspirationregridmethod (class in imod.mf6.regrid)": [[190, "imod.mf6.regrid.EvapotranspirationRegridMethod", false]], "evapotranspirationtoplayer (class in imod.wq)": [[301, "imod.wq.EvapotranspirationTopLayer", false]], "extra_overlap (imod.prepare.regridder attribute)": [[221, "imod.prepare.Regridder.extra_overlap", false]], "facebudget() (in module imod.evaluate)": [[5, "imod.evaluate.facebudget", false]], "fill() (in module imod.prepare)": [[239, "imod.prepare.fill", false]], "flow_velocity() (in module imod.evaluate)": [[6, "imod.evaluate.flow_velocity", false]], "from_flow_model() (imod.mf6.sourcesinkmixing static method)": [[162, "imod.mf6.SourceSinkMixing.from_flow_model", false]], "from_imod5_data() (imod.mf6.constanthead class method)": [[81, "imod.mf6.ConstantHead.from_imod5_data", false]], "from_imod5_data() (imod.mf6.drainage class method)": [[88, "imod.mf6.Drainage.from_imod5_data", false]], "from_imod5_data() (imod.mf6.generalheadboundary class method)": [[96, "imod.mf6.GeneralHeadBoundary.from_imod5_data", false]], "from_imod5_data() (imod.mf6.initialconditions class method)": [[114, "imod.mf6.InitialConditions.from_imod5_data", false]], "from_imod5_data() (imod.mf6.layeredwell class method)": [[118, "imod.mf6.LayeredWell.from_imod5_data", false]], "from_imod5_data() (imod.mf6.nodepropertyflow class method)": [[137, "imod.mf6.NodePropertyFlow.from_imod5_data", false]], "from_imod5_data() (imod.mf6.recharge class method)": [[142, "imod.mf6.Recharge.from_imod5_data", false]], "from_imod5_data() (imod.mf6.river class method)": [[147, "imod.mf6.River.from_imod5_data", false]], "from_imod5_data() (imod.mf6.singlelayerhorizontalflowbarrierresistance class method)": [[155, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", false]], "from_imod5_data() (imod.mf6.storagecoefficient class method)": [[167, "imod.mf6.StorageCoefficient.from_imod5_data", false]], "from_imod5_data() (imod.mf6.well class method)": [[176, "imod.mf6.Well.from_imod5_data", false]], "from_imod5_shd_data() (imod.mf6.constanthead class method)": [[82, "imod.mf6.ConstantHead.from_imod5_shd_data", false]], "from_mdal_compliant_ugrid2d() (in module imod.util)": [[269, "imod.util.from_mdal_compliant_ugrid2d", false]], "gdal_rasterize() (in module imod.prepare)": [[240, "imod.prepare.gdal_rasterize", false]], "generalheadboundary (class in imod.flow)": [[20, "imod.flow.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.mf6)": [[94, "imod.mf6.GeneralHeadBoundary", false]], "generalheadboundary (class in imod.wq)": [[302, "imod.wq.GeneralHeadBoundary", false]], "generalheadboundaryregridmethod (class in imod.mf6.regrid)": [[191, "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", false]], "generalizedconjugategradientsolver (class in imod.wq)": [[303, "imod.wq.GeneralizedConjugateGradientSolver", false]], "get_lower_active_grid_cells() (in module imod.prepare)": [[241, "imod.prepare.get_lower_active_grid_cells", false]], "get_lower_active_layer_number() (in module imod.prepare)": [[242, "imod.prepare.get_lower_active_layer_number", false]], "get_upper_active_grid_cells() (in module imod.prepare)": [[243, "imod.prepare.get_upper_active_grid_cells", false]], "get_upper_active_layer_number() (in module imod.prepare)": [[244, "imod.prepare.get_upper_active_layer_number", false]], "grid_3d() (in module imod.visualize)": [[281, "imod.visualize.grid_3d", false]], "grid_boundary_xy() (in module imod.select)": [[257, "imod.select.grid_boundary_xy", false]], "gridanimation3d (class in imod.visualize)": [[278, "imod.visualize.GridAnimation3D", false]], "griddata (class in imod.msw)": [[202, "imod.msw.GridData", false]], "groundwaterflowmodel (class in imod.mf6)": [[99, "imod.mf6.GroundwaterFlowModel", false]], "groundwatertransportmodel (class in imod.mf6)": [[103, "imod.mf6.GroundwaterTransportModel", false]], "header() (in module imod.formats.idf)": [[40, "imod.formats.idf.header", false]], "header() (in module imod.formats.rasterio)": [[53, "imod.formats.rasterio.header", false]], "horizontalanisotropy (class in imod.flow)": [[21, "imod.flow.HorizontalAnisotropy", false]], "horizontalflowbarrier (class in imod.flow)": [[22, "imod.flow.HorizontalFlowBarrier", false]], "horizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[106, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", false]], "horizontalflowbarriermultiplier (class in imod.mf6)": [[108, "imod.mf6.HorizontalFlowBarrierMultiplier", false]], "horizontalflowbarrierresistance (class in imod.mf6)": [[110, "imod.mf6.HorizontalFlowBarrierResistance", false]], "horizontalhydraulicconductivity (class in imod.flow)": [[23, "imod.flow.HorizontalHydraulicConductivity", false]], "idfmapping (class in imod.msw)": [[203, "imod.msw.IdfMapping", false]], "ignore_warnings() (in module imod.util)": [[270, "imod.util.ignore_warnings", false]], "ilogger (class in imod.logging.ilogger)": [[61, "imod.logging.ilogger.ILogger", false]], "immobilestoragetransfer (class in imod.mf6)": [[112, "imod.mf6.ImmobileStorageTransfer", false]], "imod.logging": [[56, "module-imod.logging", false]], "imod.logging.config": [[57, "module-imod.logging.config", false]], "imod.logging.ilogger": [[60, "module-imod.logging.ilogger", false]], "imod.logging.logging_decorators": [[62, "module-imod.logging.logging_decorators", false]], "imod.logging.loglevel": [[65, "module-imod.logging.loglevel", false]], "imod.logging.logurulogger": [[67, "module-imod.logging.logurulogger", false]], "imod.logging.nulllogger": [[69, "module-imod.logging.nulllogger", false]], "imod.logging.pythonlogger": [[71, "module-imod.logging.pythonlogger", false]], "imodflowmodel (class in imod.flow)": [[24, "imod.flow.ImodflowModel", false]], "imshow_topview() (in module imod.visualize)": [[282, "imod.visualize.imshow_topview", false]], "infiltration (class in imod.msw)": [[204, "imod.msw.Infiltration", false]], "info (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.INFO", false]], "info() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.info", false]], "info() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.info", false]], "info() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.info", false]], "info() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.info", false]], "init_log_decorator() (in module imod.logging.logging_decorators)": [[63, "imod.logging.logging_decorators.init_log_decorator", false]], "initialconditions (class in imod.mf6)": [[113, "imod.mf6.InitialConditions", false]], "initialconditionsequilibrium (class in imod.msw)": [[205, "imod.msw.InitialConditionsEquilibrium", false]], "initialconditionspercolation (class in imod.msw)": [[206, "imod.msw.InitialConditionsPercolation", false]], "initialconditionsregridmethod (class in imod.mf6.regrid)": [[192, "imod.mf6.regrid.InitialConditionsRegridMethod", false]], "initialconditionsrootzonepressurehead (class in imod.msw)": [[207, "imod.msw.InitialConditionsRootzonePressureHead", false]], "initialconditionssavedstate (class in imod.msw)": [[208, "imod.msw.InitialConditionsSavedState", false]], "interpolate_value_boundaries() (in module imod.evaluate)": [[7, "imod.evaluate.interpolate_value_boundaries", false]], "intra_cell_boundary_conditions() (in module imod.evaluate)": [[8, "imod.evaluate.intra_cell_boundary_conditions", false]], "landuseoptions (class in imod.msw)": [[209, "imod.msw.LanduseOptions", false]], "laplace_interpolate() (in module imod.prepare)": [[245, "imod.prepare.laplace_interpolate", false]], "layeredwell (class in imod.mf6)": [[117, "imod.mf6.LayeredWell", false]], "layerpropertyflow (class in imod.wq)": [[304, "imod.wq.LayerPropertyFlow", false]], "layerregridder (class in imod.prepare)": [[220, "imod.prepare.LayerRegridder", false]], "line_3d() (in module imod.visualize)": [[283, "imod.visualize.line_3d", false]], "linestring_to_square_zpolygons() (in module imod.prepare)": [[246, "imod.prepare.linestring_to_square_zpolygons", false]], "linestring_to_trapezoid_zpolygons() (in module imod.prepare)": [[247, "imod.prepare.linestring_to_trapezoid_zpolygons", false]], "log() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.log", false]], "log() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.log", false]], "log() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.log", false]], "log() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.log", false]], "loggertype (class in imod.logging.config)": [[58, "imod.logging.config.LoggerType", false]], "loglevel (class in imod.logging.loglevel)": [[66, "imod.logging.loglevel.LogLevel", false]], "loguru (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.LOGURU", false]], "logurulogger (class in imod.logging.logurulogger)": [[68, "imod.logging.logurulogger.LoguruLogger", false]], "mask() (imod.mf6.constanthead method)": [[83, "imod.mf6.ConstantHead.mask", false]], "mask() (imod.mf6.drainage method)": [[89, "imod.mf6.Drainage.mask", false]], "mask() (imod.mf6.evapotranspiration method)": [[92, "imod.mf6.Evapotranspiration.mask", false]], "mask() (imod.mf6.generalheadboundary method)": [[97, "imod.mf6.GeneralHeadBoundary.mask", false]], "mask() (imod.mf6.initialconditions method)": [[115, "imod.mf6.InitialConditions.mask", false]], "mask() (imod.mf6.layeredwell method)": [[119, "imod.mf6.LayeredWell.mask", false]], "mask() (imod.mf6.nodepropertyflow method)": [[138, "imod.mf6.NodePropertyFlow.mask", false]], "mask() (imod.mf6.recharge method)": [[143, "imod.mf6.Recharge.mask", false]], "mask() (imod.mf6.river method)": [[148, "imod.mf6.River.mask", false]], "mask() (imod.mf6.specificstorage method)": [[164, "imod.mf6.SpecificStorage.mask", false]], "mask() (imod.mf6.storagecoefficient method)": [[168, "imod.mf6.StorageCoefficient.mask", false]], "mask() (imod.mf6.well method)": [[177, "imod.mf6.Well.mask", false]], "mask_all_packages() (imod.mf6.groundwaterflowmodel method)": [[101, "imod.mf6.GroundwaterFlowModel.mask_all_packages", false]], "mask_all_packages() (imod.mf6.groundwatertransportmodel method)": [[105, "imod.mf6.GroundwaterTransportModel.mask_all_packages", false]], "massloading (class in imod.wq)": [[305, "imod.wq.MassLoading", false]], "masssourceloading (class in imod.mf6)": [[122, "imod.mf6.MassSourceLoading", false]], "max_nparticles (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.max_nparticles", false]], "max_particles (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.max_particles", false]], "mdal_compliant_ugrid2d() (in module imod.util)": [[271, "imod.util.mdal_compliant_ugrid2d", false]], "metamod (class in imod.couplers.metamod)": [[73, "imod.couplers.metamod.MetaMod", false]], "metaswap (class in imod.flow)": [[26, "imod.flow.MetaSwap", false]], "metaswapmodel (class in imod.msw)": [[210, "imod.msw.MetaSwapModel", false]], "meteogrid (class in imod.msw)": [[211, "imod.msw.MeteoGrid", false]], "method (imod.prepare.layerregridder attribute)": [[220, "imod.prepare.LayerRegridder.method", false]], "method (imod.prepare.regridder attribute)": [[221, "imod.prepare.Regridder.method", false]], "method (imod.prepare.voxelizer attribute)": [[222, "imod.prepare.Voxelizer.method", false]], "mobilestoragetransfer (class in imod.mf6)": [[123, "imod.mf6.MobileStorageTransfer", false]], "mobilestoragetransferregridmethod (class in imod.mf6.regrid)": [[193, "imod.mf6.regrid.MobileStorageTransferRegridMethod", false]], "modelname (imod.flow.imodflowmodel attribute)": [[24, "imod.flow.ImodflowModel.modelname", false]], "modelname (imod.wq.seawatmodel attribute)": [[314, "imod.wq.SeawatModel.modelname", false]], "modflow6simulation (class in imod.mf6)": [[124, "imod.mf6.Modflow6Simulation", false]], "module": [[56, "module-imod.logging", false], [57, "module-imod.logging.config", false], [60, "module-imod.logging.ilogger", false], [62, "module-imod.logging.logging_decorators", false], [65, "module-imod.logging.loglevel", false], [67, "module-imod.logging.logurulogger", false], [69, "module-imod.logging.nulllogger", false], [71, "module-imod.logging.pythonlogger", false]], "ndim_regrid (imod.prepare.regridder attribute)": [[221, "imod.prepare.Regridder.ndim_regrid", false]], "nodepropertyflow (class in imod.mf6)": [[136, "imod.mf6.NodePropertyFlow", false]], "nodepropertyflowregridmethod (class in imod.mf6.regrid)": [[194, "imod.mf6.regrid.NodePropertyFlowRegridMethod", false]], "nparticles_advection (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.nparticles_advection", false]], "nparticles_no_advection (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.nparticles_no_advection", false]], "nph (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.nph", false]], "npl (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.npl", false]], "nplane (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.nplane", false]], "nplane (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.nplane", false]], "npmax (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.npmax", false]], "npmin (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.npmin", false]], "null (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.NULL", false]], "nulllogger (class in imod.logging.nulllogger)": [[70, "imod.logging.nulllogger.NullLogger", false]], "open() (in module imod.formats.idf)": [[41, "imod.formats.idf.open", false]], "open() (in module imod.formats.rasterio)": [[54, "imod.formats.rasterio.open", false]], "open_cbc() (in module imod.mf6)": [[182, "imod.mf6.open_cbc", false]], "open_concentration() (imod.mf6.modflow6simulation method)": [[128, "imod.mf6.Modflow6Simulation.open_concentration", false]], "open_dataset() (in module imod.formats.idf)": [[42, "imod.formats.idf.open_dataset", false]], "open_flow_budget() (imod.mf6.modflow6simulation method)": [[129, "imod.mf6.Modflow6Simulation.open_flow_budget", false]], "open_hds() (in module imod.mf6)": [[183, "imod.mf6.open_hds", false]], "open_head() (imod.mf6.modflow6simulation method)": [[130, "imod.mf6.Modflow6Simulation.open_head", false]], "open_projectfile_data() (in module imod.formats.prj)": [[50, "imod.formats.prj.open_projectfile_data", false]], "open_subdomains() (in module imod.formats.idf)": [[43, "imod.formats.idf.open_subdomains", false]], "open_transport_budget() (imod.mf6.modflow6simulation method)": [[131, "imod.mf6.Modflow6Simulation.open_transport_budget", false]], "outputcontrol (class in imod.mf6)": [[140, "imod.mf6.OutputControl", false]], "outputcontrol (class in imod.wq)": [[306, "imod.wq.OutputControl", false]], "parallelkrylovflowsolver (class in imod.wq)": [[307, "imod.wq.ParallelKrylovFlowSolver", false]], "parallelkrylovtransportsolver (class in imod.wq)": [[308, "imod.wq.ParallelKrylovTransportSolver", false]], "plot_map() (in module imod.visualize)": [[284, "imod.visualize.plot_map", false]], "points_in_bounds() (in module imod.select)": [[258, "imod.select.points_in_bounds", false]], "points_indices() (in module imod.select)": [[259, "imod.select.points_indices", false]], "points_set_values() (in module imod.select)": [[260, "imod.select.points_set_values", false]], "points_values() (in module imod.select)": [[261, "imod.select.points_values", false]], "polygonize() (in module imod.prepare)": [[248, "imod.prepare.polygonize", false]], "ponding (class in imod.msw)": [[212, "imod.msw.Ponding", false]], "precipitationmapping (class in imod.msw)": [[213, "imod.msw.PrecipitationMapping", false]], "preconditionedconjugategradientsolver (class in imod.flow)": [[27, "imod.flow.PreconditionedConjugateGradientSolver", false]], "preconditionedconjugategradientsolver (class in imod.wq)": [[309, "imod.wq.PreconditionedConjugateGradientSolver", false]], "prepare_wel_for_mf6() (imod.mf6.groundwaterflowmodel method)": [[102, "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", false]], "print_if_error() (in module imod.util)": [[272, "imod.util.print_if_error", false]], "python (imod.logging.config.loggertype attribute)": [[58, "imod.logging.config.LoggerType.PYTHON", false]], "pythonlogger (class in imod.logging.pythonlogger)": [[72, "imod.logging.pythonlogger.PythonLogger", false]], "quiver() (in module imod.visualize)": [[285, "imod.visualize.quiver", false]], "quiver_line() (in module imod.evaluate)": [[9, "imod.evaluate.quiver_line", false]], "quiver_linestring() (in module imod.evaluate)": [[10, "imod.evaluate.quiver_linestring", false]], "rasterize() (in module imod.prepare)": [[249, "imod.prepare.rasterize", false]], "rasterize_celltable() (in module imod.prepare)": [[250, "imod.prepare.rasterize_celltable", false]], "read() (in module imod.formats.gen)": [[37, "imod.formats.gen.read", false]], "read() (in module imod.formats.ipf)": [[45, "imod.formats.ipf.read", false]], "read_ascii() (in module imod.formats.gen)": [[38, "imod.formats.gen.read_ascii", false]], "read_associated() (in module imod.formats.ipf)": [[46, "imod.formats.ipf.read_associated", false]], "read_cbc_headers() (in module imod.mf6)": [[184, "imod.mf6.read_cbc_headers", false]], "read_imod_legend() (in module imod.visualize)": [[286, "imod.visualize.read_imod_legend", false]], "read_projectfile() (in module imod.formats.prj)": [[51, "imod.formats.prj.read_projectfile", false]], "read_timfile() (in module imod.formats.prj)": [[52, "imod.formats.prj.read_timfile", false]], "recharge (class in imod.flow)": [[28, "imod.flow.Recharge", false]], "recharge (class in imod.mf6)": [[141, "imod.mf6.Recharge", false]], "rechargehighestactive (class in imod.wq)": [[310, "imod.wq.RechargeHighestActive", false]], "rechargelayers (class in imod.wq)": [[311, "imod.wq.RechargeLayers", false]], "rechargeregridmethod (class in imod.mf6.regrid)": [[195, "imod.mf6.regrid.RechargeRegridMethod", false]], "rechargetoplayer (class in imod.wq)": [[312, "imod.wq.RechargeTopLayer", false]], "regrid_like() (imod.mf6.constanthead method)": [[84, "imod.mf6.ConstantHead.regrid_like", false]], "regrid_like() (imod.mf6.drainage method)": [[90, "imod.mf6.Drainage.regrid_like", false]], "regrid_like() (imod.mf6.evapotranspiration method)": [[93, "imod.mf6.Evapotranspiration.regrid_like", false]], "regrid_like() (imod.mf6.generalheadboundary method)": [[98, "imod.mf6.GeneralHeadBoundary.regrid_like", false]], "regrid_like() (imod.mf6.initialconditions method)": [[116, "imod.mf6.InitialConditions.regrid_like", false]], "regrid_like() (imod.mf6.layeredwell method)": [[120, "imod.mf6.LayeredWell.regrid_like", false]], "regrid_like() (imod.mf6.modflow6simulation method)": [[132, "imod.mf6.Modflow6Simulation.regrid_like", false]], "regrid_like() (imod.mf6.nodepropertyflow method)": [[139, "imod.mf6.NodePropertyFlow.regrid_like", false]], "regrid_like() (imod.mf6.recharge method)": [[144, "imod.mf6.Recharge.regrid_like", false]], "regrid_like() (imod.mf6.river method)": [[149, "imod.mf6.River.regrid_like", false]], "regrid_like() (imod.mf6.specificstorage method)": [[165, "imod.mf6.SpecificStorage.regrid_like", false]], "regrid_like() (imod.mf6.storagecoefficient method)": [[169, "imod.mf6.StorageCoefficient.regrid_like", false]], "regrid_like() (imod.mf6.well method)": [[178, "imod.mf6.Well.regrid_like", false]], "regridder (class in imod.prepare)": [[221, "imod.prepare.Regridder", false]], "reproject() (in module imod.prepare)": [[251, "imod.prepare.reproject", false]], "river (class in imod.flow)": [[29, "imod.flow.River", false]], "river (class in imod.mf6)": [[145, "imod.mf6.River", false]], "river (class in imod.wq)": [[313, "imod.wq.River", false]], "riverregridmethod (class in imod.mf6.regrid)": [[196, "imod.mf6.regrid.RiverRegridMethod", false]], "run() (imod.mf6.modflow6simulation method)": [[133, "imod.mf6.Modflow6Simulation.run", false]], "save() (in module imod.formats.idf)": [[44, "imod.formats.idf.save", false]], "save() (in module imod.formats.ipf)": [[47, "imod.formats.ipf.save", false]], "save() (in module imod.formats.rasterio)": [[55, "imod.formats.rasterio.save", false]], "scalingfactors (class in imod.msw)": [[214, "imod.msw.ScalingFactors", false]], "seawatmodel (class in imod.wq)": [[314, "imod.wq.SeawatModel", false]], "singlelayerhorizontalflowbarrierhydrauliccharacteristic (class in imod.mf6)": [[150, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", false]], "singlelayerhorizontalflowbarriermultiplier (class in imod.mf6)": [[152, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", false]], "singlelayerhorizontalflowbarrierresistance (class in imod.mf6)": [[154, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", false]], "sink_nparticles (imod.wq.advectionmodifiedmoc attribute)": [[292, "imod.wq.AdvectionModifiedMOC.sink_nparticles", false]], "sink_particle_placement (imod.wq.advectionmodifiedmoc attribute)": [[292, "imod.wq.AdvectionModifiedMOC.sink_particle_placement", false]], "solution (class in imod.mf6)": [[157, "imod.mf6.Solution", false]], "solutionpresetcomplex() (in module imod.mf6)": [[158, "imod.mf6.SolutionPresetComplex", false]], "solutionpresetmoderate() (in module imod.mf6)": [[159, "imod.mf6.SolutionPresetModerate", false]], "solutionpresetsimple() (in module imod.mf6)": [[160, "imod.mf6.SolutionPresetSimple", false]], "sourcesinkmixing (class in imod.mf6)": [[161, "imod.mf6.SourceSinkMixing", false]], "spatial_reference() (in module imod.util)": [[273, "imod.util.spatial_reference", false]], "specificstorage (class in imod.flow)": [[30, "imod.flow.SpecificStorage", false]], "specificstorage (class in imod.mf6)": [[163, "imod.mf6.SpecificStorage", false]], "specificstorageregridmethod (class in imod.mf6.regrid)": [[197, "imod.mf6.regrid.SpecificStorageRegridMethod", false]], "split() (imod.mf6.modflow6simulation method)": [[134, "imod.mf6.Modflow6Simulation.split", false]], "sprinkling (class in imod.msw)": [[215, "imod.msw.Sprinkling", false]], "stability_constraint_advection() (in module imod.evaluate)": [[11, "imod.evaluate.stability_constraint_advection", false]], "stability_constraint_wel() (in module imod.evaluate)": [[12, "imod.evaluate.stability_constraint_wel", false]], "standard_log_decorator() (in module imod.logging.logging_decorators)": [[64, "imod.logging.logging_decorators.standard_log_decorator", false]], "startinghead (class in imod.flow)": [[31, "imod.flow.StartingHead", false]], "staticgridanimation3d (class in imod.visualize)": [[279, "imod.visualize.StaticGridAnimation3D", false]], "storagecoefficient (class in imod.flow)": [[32, "imod.flow.StorageCoefficient", false]], "storagecoefficient (class in imod.mf6)": [[166, "imod.mf6.StorageCoefficient", false]], "storagecoefficientregridmethod (class in imod.mf6.regrid)": [[198, "imod.mf6.regrid.StorageCoefficientRegridMethod", false]], "streamfunction() (in module imod.visualize)": [[287, "imod.visualize.streamfunction", false]], "streamfunction_line() (in module imod.evaluate)": [[13, "imod.evaluate.streamfunction_line", false]], "streamfunction_linestring() (in module imod.evaluate)": [[14, "imod.evaluate.streamfunction_linestring", false]], "structureddiscretization (class in imod.mf6)": [[170, "imod.mf6.StructuredDiscretization", false]], "timediscretization (class in imod.mf6)": [[171, "imod.mf6.TimeDiscretization", false]], "timediscretization (class in imod.wq)": [[316, "imod.wq.TimeDiscretization", false]], "timeoutputcontrol (class in imod.msw)": [[216, "imod.msw.TimeOutputControl", false]], "timevaryingconstantconcentration (class in imod.wq)": [[317, "imod.wq.TimeVaryingConstantConcentration", false]], "to_datetime() (in module imod.util)": [[274, "imod.util.to_datetime", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierhydrauliccharacteristic method)": [[107, "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarriermultiplier method)": [[109, "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.horizontalflowbarrierresistance method)": [[111, "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.layeredwell method)": [[121, "imod.mf6.LayeredWell.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierhydrauliccharacteristic method)": [[151, "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarriermultiplier method)": [[153, "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.singlelayerhorizontalflowbarrierresistance method)": [[156, "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", false]], "to_mf6_pkg() (imod.mf6.well method)": [[179, "imod.mf6.Well.to_mf6_pkg", false]], "to_ugrid2d() (in module imod.util)": [[275, "imod.util.to_ugrid2d", false]], "top (class in imod.flow)": [[33, "imod.flow.Top", false]], "tracking (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.tracking", false]], "tracking (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.tracking", false]], "tracking (imod.wq.advectionmodifiedmoc attribute)": [[292, "imod.wq.AdvectionModifiedMOC.tracking", false]], "transform() (in module imod.util)": [[276, "imod.util.transform", false]], "unsaturatedzoneflow (class in imod.mf6)": [[172, "imod.mf6.UnsaturatedZoneFlow", false]], "upper_active_layer() (in module imod.select)": [[262, "imod.select.upper_active_layer", false]], "use_relative_weights (imod.prepare.regridder attribute)": [[221, "imod.prepare.Regridder.use_relative_weights", false]], "variabledensityflow (class in imod.wq)": [[318, "imod.wq.VariableDensityFlow", false]], "variableoutputcontrol (class in imod.msw)": [[217, "imod.msw.VariableOutputControl", false]], "verticalanisotropy (class in imod.flow)": [[34, "imod.flow.VerticalAnisotropy", false]], "verticalhydraulicconductivity (class in imod.flow)": [[35, "imod.flow.VerticalHydraulicConductivity", false]], "verticesdiscretization (class in imod.mf6)": [[173, "imod.mf6.VerticesDiscretization", false]], "voxelizer (class in imod.prepare)": [[222, "imod.prepare.Voxelizer", false]], "warning (imod.logging.loglevel.loglevel attribute)": [[66, "imod.logging.loglevel.LogLevel.WARNING", false]], "warning() (imod.logging.ilogger.ilogger method)": [[61, "imod.logging.ilogger.ILogger.warning", false]], "warning() (imod.logging.logurulogger.logurulogger method)": [[68, "imod.logging.logurulogger.LoguruLogger.warning", false]], "warning() (imod.logging.nulllogger.nulllogger method)": [[70, "imod.logging.nulllogger.NullLogger.warning", false]], "warning() (imod.logging.pythonlogger.pythonlogger method)": [[72, "imod.logging.pythonlogger.PythonLogger.warning", false]], "waterbalance_barchart() (in module imod.visualize)": [[288, "imod.visualize.waterbalance_barchart", false]], "weighting (imod.wq.advectionfinitedifference attribute)": [[289, "imod.wq.AdvectionFiniteDifference.weighting", false]], "weighting_factor (imod.wq.advectionhybridmoc attribute)": [[290, "imod.wq.AdvectionHybridMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmoc attribute)": [[291, "imod.wq.AdvectionMOC.weighting_factor", false]], "weighting_factor (imod.wq.advectionmodifiedmoc attribute)": [[292, "imod.wq.AdvectionModifiedMOC.weighting_factor", false]], "well (class in imod.flow)": [[36, "imod.flow.Well", false]], "well (class in imod.mf6)": [[174, "imod.mf6.Well", false]], "well (class in imod.wq)": [[319, "imod.wq.Well", false]], "welldisstructured (class in imod.mf6)": [[180, "imod.mf6.WellDisStructured", false]], "welldisvertices (class in imod.mf6)": [[181, "imod.mf6.WellDisVertices", false]], "where() (in module imod.util)": [[277, "imod.util.where", false]], "write() (imod.mf6.modflow6simulation method)": [[135, "imod.mf6.Modflow6Simulation.write", false]], "write() (in module imod.formats.gen)": [[39, "imod.formats.gen.write", false]], "write() (in module imod.formats.ipf)": [[48, "imod.formats.ipf.write", false]], "write_assoc() (in module imod.formats.ipf)": [[49, "imod.formats.ipf.write_assoc", false]], "zonal_aggregate_polygons() (in module imod.prepare)": [[252, "imod.prepare.zonal_aggregate_polygons", false]], "zonal_aggregate_raster() (in module imod.prepare)": [[253, "imod.prepare.zonal_aggregate_raster", false]]}, "objects": {"imod": [[56, 4, 0, "-", "logging"]], "imod.couplers.metamod": [[73, 0, 1, "", "MetaMod"]], "imod.couplers.metamod.MetaMod": [[73, 1, 1, "", "__init__"]], "imod.evaluate": [[3, 2, 1, "", "calculate_gxg"], [4, 2, 1, "", "convert_pointwaterhead_freshwaterhead"], [5, 2, 1, "", "facebudget"], [6, 2, 1, "", "flow_velocity"], [7, 2, 1, "", "interpolate_value_boundaries"], [8, 2, 1, "", "intra_cell_boundary_conditions"], [9, 2, 1, "", "quiver_line"], [10, 2, 1, "", "quiver_linestring"], [11, 2, 1, "", "stability_constraint_advection"], [12, 2, 1, "", "stability_constraint_wel"], [13, 2, 1, "", "streamfunction_line"], [14, 2, 1, "", "streamfunction_linestring"]], "imod.flow": [[15, 0, 1, "", "Bottom"], [16, 0, 1, "", "Boundary"], [17, 0, 1, "", "ConstantHead"], [18, 0, 1, "", "Drain"], [19, 0, 1, "", "EvapoTranspiration"], [20, 0, 1, "", "GeneralHeadBoundary"], [21, 0, 1, "", "HorizontalAnisotropy"], [22, 0, 1, "", "HorizontalFlowBarrier"], [23, 0, 1, "", "HorizontalHydraulicConductivity"], [24, 0, 1, "", "ImodflowModel"], [26, 0, 1, "", "MetaSwap"], [27, 0, 1, "", "PreconditionedConjugateGradientSolver"], [28, 0, 1, "", "Recharge"], [29, 0, 1, "", "River"], [30, 0, 1, "", "SpecificStorage"], [31, 0, 1, "", "StartingHead"], [32, 0, 1, "", "StorageCoefficient"], [33, 0, 1, "", "Top"], [34, 0, 1, "", "VerticalAnisotropy"], [35, 0, 1, "", "VerticalHydraulicConductivity"], [36, 0, 1, "", "Well"]], "imod.flow.Bottom": [[15, 1, 1, "", "__init__"]], "imod.flow.Boundary": [[16, 1, 1, "", "__init__"]], "imod.flow.ConstantHead": [[17, 1, 1, "", "__init__"]], "imod.flow.Drain": [[18, 1, 1, "", "__init__"]], "imod.flow.EvapoTranspiration": [[19, 1, 1, "", "__init__"]], "imod.flow.GeneralHeadBoundary": [[20, 1, 1, "", "__init__"]], "imod.flow.HorizontalAnisotropy": [[21, 1, 1, "", "__init__"]], "imod.flow.HorizontalFlowBarrier": [[22, 1, 1, "", "__init__"]], "imod.flow.HorizontalHydraulicConductivity": [[23, 1, 1, "", "__init__"]], "imod.flow.ImodflowModel": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "create_time_discretization"], [24, 3, 1, "", "modelname"]], "imod.flow.MetaSwap": [[26, 1, 1, "", "__init__"]], "imod.flow.PreconditionedConjugateGradientSolver": [[27, 1, 1, "", "__init__"]], "imod.flow.Recharge": [[28, 1, 1, "", "__init__"]], "imod.flow.River": [[29, 1, 1, "", "__init__"]], "imod.flow.SpecificStorage": [[30, 1, 1, "", "__init__"]], "imod.flow.StartingHead": [[31, 1, 1, "", "__init__"]], "imod.flow.StorageCoefficient": [[32, 1, 1, "", "__init__"]], "imod.flow.Top": [[33, 1, 1, "", "__init__"]], "imod.flow.VerticalAnisotropy": [[34, 1, 1, "", "__init__"]], "imod.flow.VerticalHydraulicConductivity": [[35, 1, 1, "", "__init__"]], "imod.flow.Well": [[36, 1, 1, "", "__init__"]], "imod.formats.gen": [[37, 2, 1, "", "read"], [38, 2, 1, "", "read_ascii"], [39, 2, 1, "", "write"]], "imod.formats.idf": [[40, 2, 1, "", "header"], [41, 2, 1, "", "open"], [42, 2, 1, "", "open_dataset"], [43, 2, 1, "", "open_subdomains"], [44, 2, 1, "", "save"]], "imod.formats.ipf": [[45, 2, 1, "", "read"], [46, 2, 1, "", "read_associated"], [47, 2, 1, "", "save"], [48, 2, 1, "", "write"], [49, 2, 1, "", "write_assoc"]], "imod.formats.prj": [[50, 2, 1, "", "open_projectfile_data"], [51, 2, 1, "", "read_projectfile"], [52, 2, 1, "", "read_timfile"]], "imod.formats.rasterio": [[53, 2, 1, "", "header"], [54, 2, 1, "", "open"], [55, 2, 1, "", "save"]], "imod.logging": [[57, 4, 0, "-", "config"], [60, 4, 0, "-", "ilogger"], [62, 4, 0, "-", "logging_decorators"], [65, 4, 0, "-", "loglevel"], [67, 4, 0, "-", "logurulogger"], [69, 4, 0, "-", "nulllogger"], [71, 4, 0, "-", "pythonlogger"]], "imod.logging.config": [[58, 0, 1, "", "LoggerType"], [59, 2, 1, "", "configure"]], "imod.logging.config.LoggerType": [[58, 3, 1, "", "LOGURU"], [58, 3, 1, "", "NULL"], [58, 3, 1, "", "PYTHON"], [58, 1, 1, "", "__init__"]], "imod.logging.ilogger": [[61, 0, 1, "", "ILogger"]], "imod.logging.ilogger.ILogger": [[61, 1, 1, "", "__init__"], [61, 1, 1, "", "critical"], [61, 1, 1, "", "debug"], [61, 1, 1, "", "error"], [61, 1, 1, "", "info"], [61, 1, 1, "", "log"], [61, 1, 1, "", "warning"]], "imod.logging.logging_decorators": [[63, 2, 1, "", "init_log_decorator"], [64, 2, 1, "", "standard_log_decorator"]], "imod.logging.loglevel": [[66, 0, 1, "", "LogLevel"]], "imod.logging.loglevel.LogLevel": [[66, 3, 1, "", "CRITICAL"], [66, 3, 1, "", "DEBUG"], [66, 3, 1, "", "ERROR"], [66, 3, 1, "", "INFO"], [66, 3, 1, "", "WARNING"], [66, 1, 1, "", "__init__"]], "imod.logging.logurulogger": [[68, 0, 1, "", "LoguruLogger"]], "imod.logging.logurulogger.LoguruLogger": [[68, 1, 1, "", "__init__"], [68, 1, 1, "", "critical"], [68, 1, 1, "", "debug"], [68, 1, 1, "", "error"], [68, 1, 1, "", "info"], [68, 1, 1, "", "log"], [68, 1, 1, "", "warning"]], "imod.logging.nulllogger": [[70, 0, 1, "", "NullLogger"]], "imod.logging.nulllogger.NullLogger": [[70, 1, 1, "", "__init__"], [70, 1, 1, "", "critical"], [70, 1, 1, "", "debug"], [70, 1, 1, "", "error"], [70, 1, 1, "", "info"], [70, 1, 1, "", "log"], [70, 1, 1, "", "warning"]], "imod.logging.pythonlogger": [[72, 0, 1, "", "PythonLogger"]], "imod.logging.pythonlogger.PythonLogger": [[72, 1, 1, "", "__init__"], [72, 1, 1, "", "critical"], [72, 1, 1, "", "debug"], [72, 1, 1, "", "error"], [72, 1, 1, "", "info"], [72, 1, 1, "", "log"], [72, 1, 1, "", "warning"]], "imod.mf6": [[74, 0, 1, "", "AdvectionCentral"], [75, 0, 1, "", "AdvectionTVD"], [76, 0, 1, "", "AdvectionUpstream"], [77, 0, 1, "", "ApiPackage"], [78, 0, 1, "", "Buoyancy"], [79, 0, 1, "", "ConstantConcentration"], [80, 0, 1, "", "ConstantHead"], [85, 0, 1, "", "Dispersion"], [86, 0, 1, "", "Drainage"], [91, 0, 1, "", "Evapotranspiration"], [94, 0, 1, "", "GeneralHeadBoundary"], [99, 0, 1, "", "GroundwaterFlowModel"], [103, 0, 1, "", "GroundwaterTransportModel"], [106, 0, 1, "", "HorizontalFlowBarrierHydraulicCharacteristic"], [108, 0, 1, "", "HorizontalFlowBarrierMultiplier"], [110, 0, 1, "", "HorizontalFlowBarrierResistance"], [112, 0, 1, "", "ImmobileStorageTransfer"], [113, 0, 1, "", "InitialConditions"], [117, 0, 1, "", "LayeredWell"], [122, 0, 1, "", "MassSourceLoading"], [123, 0, 1, "", "MobileStorageTransfer"], [124, 0, 1, "", "Modflow6Simulation"], [136, 0, 1, "", "NodePropertyFlow"], [140, 0, 1, "", "OutputControl"], [141, 0, 1, "", "Recharge"], [145, 0, 1, "", "River"], [150, 0, 1, "", "SingleLayerHorizontalFlowBarrierHydraulicCharacteristic"], [152, 0, 1, "", "SingleLayerHorizontalFlowBarrierMultiplier"], [154, 0, 1, "", "SingleLayerHorizontalFlowBarrierResistance"], [157, 0, 1, "", "Solution"], [158, 2, 1, "", "SolutionPresetComplex"], [159, 2, 1, "", "SolutionPresetModerate"], [160, 2, 1, "", "SolutionPresetSimple"], [161, 0, 1, "", "SourceSinkMixing"], [163, 0, 1, "", "SpecificStorage"], [166, 0, 1, "", "StorageCoefficient"], [170, 0, 1, "", "StructuredDiscretization"], [171, 0, 1, "", "TimeDiscretization"], [172, 0, 1, "", "UnsaturatedZoneFlow"], [173, 0, 1, "", "VerticesDiscretization"], [174, 0, 1, "", "Well"], [180, 0, 1, "", "WellDisStructured"], [181, 0, 1, "", "WellDisVertices"], [182, 2, 1, "", "open_cbc"], [183, 2, 1, "", "open_hds"], [184, 2, 1, "", "read_cbc_headers"]], "imod.mf6.AdvectionCentral": [[74, 1, 1, "", "__init__"]], "imod.mf6.AdvectionTVD": [[75, 1, 1, "", "__init__"]], "imod.mf6.AdvectionUpstream": [[76, 1, 1, "", "__init__"]], "imod.mf6.ApiPackage": [[77, 1, 1, "", "__init__"]], "imod.mf6.Buoyancy": [[78, 1, 1, "", "__init__"]], "imod.mf6.ConstantConcentration": [[79, 1, 1, "", "__init__"]], "imod.mf6.ConstantHead": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "from_imod5_data"], [82, 1, 1, "", "from_imod5_shd_data"], [83, 1, 1, "", "mask"], [84, 1, 1, "", "regrid_like"]], "imod.mf6.Dispersion": [[85, 1, 1, "", "__init__"]], "imod.mf6.Drainage": [[86, 1, 1, "", "__init__"], [87, 1, 1, "", "cleanup"], [88, 1, 1, "", "from_imod5_data"], [89, 1, 1, "", "mask"], [90, 1, 1, "", "regrid_like"]], "imod.mf6.Evapotranspiration": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "mask"], [93, 1, 1, "", "regrid_like"]], "imod.mf6.GeneralHeadBoundary": [[94, 1, 1, "", "__init__"], [95, 1, 1, "", "cleanup"], [96, 1, 1, "", "from_imod5_data"], [97, 1, 1, "", "mask"], [98, 1, 1, "", "regrid_like"]], "imod.mf6.GroundwaterFlowModel": [[99, 1, 1, "", "__init__"], [100, 1, 1, "", "dump"], [101, 1, 1, "", "mask_all_packages"], [102, 1, 1, "", "prepare_wel_for_mf6"]], "imod.mf6.GroundwaterTransportModel": [[103, 1, 1, "", "__init__"], [104, 1, 1, "", "dump"], [105, 1, 1, "", "mask_all_packages"]], "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic": [[106, 1, 1, "", "__init__"], [107, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierMultiplier": [[108, 1, 1, "", "__init__"], [109, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.HorizontalFlowBarrierResistance": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.ImmobileStorageTransfer": [[112, 1, 1, "", "__init__"]], "imod.mf6.InitialConditions": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "from_imod5_data"], [115, 1, 1, "", "mask"], [116, 1, 1, "", "regrid_like"]], "imod.mf6.LayeredWell": [[117, 1, 1, "", "__init__"], [118, 1, 1, "", "from_imod5_data"], [119, 1, 1, "", "mask"], [120, 1, 1, "", "regrid_like"], [121, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.MassSourceLoading": [[122, 1, 1, "", "__init__"]], "imod.mf6.MobileStorageTransfer": [[123, 1, 1, "", "__init__"]], "imod.mf6.Modflow6Simulation": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "clip_box"], [126, 1, 1, "", "create_time_discretization"], [127, 1, 1, "", "dump"], [128, 1, 1, "", "open_concentration"], [129, 1, 1, "", "open_flow_budget"], [130, 1, 1, "", "open_head"], [131, 1, 1, "", "open_transport_budget"], [132, 1, 1, "", "regrid_like"], [133, 1, 1, "", "run"], [134, 1, 1, "", "split"], [135, 1, 1, "", "write"]], "imod.mf6.NodePropertyFlow": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "from_imod5_data"], [138, 1, 1, "", "mask"], [139, 1, 1, "", "regrid_like"]], "imod.mf6.OutputControl": [[140, 1, 1, "", "__init__"]], "imod.mf6.Recharge": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "from_imod5_data"], [143, 1, 1, "", "mask"], [144, 1, 1, "", "regrid_like"]], "imod.mf6.River": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "cleanup"], [147, 1, 1, "", "from_imod5_data"], [148, 1, 1, "", "mask"], [149, 1, 1, "", "regrid_like"]], "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.SingleLayerHorizontalFlowBarrierResistance": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "from_imod5_data"], [156, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.Solution": [[157, 1, 1, "", "__init__"]], "imod.mf6.SourceSinkMixing": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "from_flow_model"]], "imod.mf6.SpecificStorage": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "mask"], [165, 1, 1, "", "regrid_like"]], "imod.mf6.StorageCoefficient": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "from_imod5_data"], [168, 1, 1, "", "mask"], [169, 1, 1, "", "regrid_like"]], "imod.mf6.StructuredDiscretization": [[170, 1, 1, "", "__init__"]], "imod.mf6.TimeDiscretization": [[171, 1, 1, "", "__init__"]], "imod.mf6.UnsaturatedZoneFlow": [[172, 1, 1, "", "__init__"]], "imod.mf6.VerticesDiscretization": [[173, 1, 1, "", "__init__"]], "imod.mf6.Well": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "cleanup"], [176, 1, 1, "", "from_imod5_data"], [177, 1, 1, "", "mask"], [178, 1, 1, "", "regrid_like"], [179, 1, 1, "", "to_mf6_pkg"]], "imod.mf6.WellDisStructured": [[180, 1, 1, "", "__init__"]], "imod.mf6.WellDisVertices": [[181, 1, 1, "", "__init__"]], "imod.mf6.regrid": [[185, 0, 1, "", "ConstantHeadRegridMethod"], [186, 0, 1, "", "DiscretizationRegridMethod"], [187, 0, 1, "", "DispersionRegridMethod"], [188, 0, 1, "", "DrainageRegridMethod"], [189, 0, 1, "", "EmptyRegridMethod"], [190, 0, 1, "", "EvapotranspirationRegridMethod"], [191, 0, 1, "", "GeneralHeadBoundaryRegridMethod"], [192, 0, 1, "", "InitialConditionsRegridMethod"], [193, 0, 1, "", "MobileStorageTransferRegridMethod"], [194, 0, 1, "", "NodePropertyFlowRegridMethod"], [195, 0, 1, "", "RechargeRegridMethod"], [196, 0, 1, "", "RiverRegridMethod"], [197, 0, 1, "", "SpecificStorageRegridMethod"], [198, 0, 1, "", "StorageCoefficientRegridMethod"]], "imod.mf6.regrid.ConstantHeadRegridMethod": [[185, 1, 1, "", "__init__"]], "imod.mf6.regrid.DiscretizationRegridMethod": [[186, 1, 1, "", "__init__"]], "imod.mf6.regrid.DispersionRegridMethod": [[187, 1, 1, "", "__init__"]], "imod.mf6.regrid.DrainageRegridMethod": [[188, 1, 1, "", "__init__"]], "imod.mf6.regrid.EmptyRegridMethod": [[189, 1, 1, "", "__init__"]], "imod.mf6.regrid.EvapotranspirationRegridMethod": [[190, 1, 1, "", "__init__"]], "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod": [[191, 1, 1, "", "__init__"]], "imod.mf6.regrid.InitialConditionsRegridMethod": [[192, 1, 1, "", "__init__"]], "imod.mf6.regrid.MobileStorageTransferRegridMethod": [[193, 1, 1, "", "__init__"]], "imod.mf6.regrid.NodePropertyFlowRegridMethod": [[194, 1, 1, "", "__init__"]], "imod.mf6.regrid.RechargeRegridMethod": [[195, 1, 1, "", "__init__"]], "imod.mf6.regrid.RiverRegridMethod": [[196, 1, 1, "", "__init__"]], "imod.mf6.regrid.SpecificStorageRegridMethod": [[197, 1, 1, "", "__init__"]], "imod.mf6.regrid.StorageCoefficientRegridMethod": [[198, 1, 1, "", "__init__"]], "imod.msw": [[199, 0, 1, "", "AnnualCropFactors"], [200, 0, 1, "", "CouplerMapping"], [201, 0, 1, "", "EvapotranspirationMapping"], [202, 0, 1, "", "GridData"], [203, 0, 1, "", "IdfMapping"], [204, 0, 1, "", "Infiltration"], [205, 0, 1, "", "InitialConditionsEquilibrium"], [206, 0, 1, "", "InitialConditionsPercolation"], [207, 0, 1, "", "InitialConditionsRootzonePressureHead"], [208, 0, 1, "", "InitialConditionsSavedState"], [209, 0, 1, "", "LanduseOptions"], [210, 0, 1, "", "MetaSwapModel"], [211, 0, 1, "", "MeteoGrid"], [212, 0, 1, "", "Ponding"], [213, 0, 1, "", "PrecipitationMapping"], [214, 0, 1, "", "ScalingFactors"], [215, 0, 1, "", "Sprinkling"], [216, 0, 1, "", "TimeOutputControl"], [217, 0, 1, "", "VariableOutputControl"]], "imod.msw.AnnualCropFactors": [[199, 1, 1, "", "__init__"]], "imod.msw.CouplerMapping": [[200, 1, 1, "", "__init__"]], "imod.msw.EvapotranspirationMapping": [[201, 1, 1, "", "__init__"]], "imod.msw.GridData": [[202, 1, 1, "", "__init__"]], "imod.msw.IdfMapping": [[203, 1, 1, "", "__init__"]], "imod.msw.Infiltration": [[204, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsEquilibrium": [[205, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsPercolation": [[206, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsRootzonePressureHead": [[207, 1, 1, "", "__init__"]], "imod.msw.InitialConditionsSavedState": [[208, 1, 1, "", "__init__"]], "imod.msw.LanduseOptions": [[209, 1, 1, "", "__init__"]], "imod.msw.MetaSwapModel": [[210, 1, 1, "", "__init__"]], "imod.msw.MeteoGrid": [[211, 1, 1, "", "__init__"]], "imod.msw.Ponding": [[212, 1, 1, "", "__init__"]], "imod.msw.PrecipitationMapping": [[213, 1, 1, "", "__init__"]], "imod.msw.ScalingFactors": [[214, 1, 1, "", "__init__"]], "imod.msw.Sprinkling": [[215, 1, 1, "", "__init__"]], "imod.msw.TimeOutputControl": [[216, 1, 1, "", "__init__"]], "imod.msw.VariableOutputControl": [[217, 1, 1, "", "__init__"]], "imod.prepare": [[218, 0, 1, "", "ALLOCATION_OPTION"], [219, 0, 1, "", "DISTRIBUTING_OPTION"], [220, 0, 1, "", "LayerRegridder"], [221, 0, 1, "", "Regridder"], [222, 0, 1, "", "Voxelizer"], [223, 2, 1, "", "allocate_drn_cells"], [224, 2, 1, "", "allocate_ghb_cells"], [225, 2, 1, "", "allocate_rch_cells"], [226, 2, 1, "", "allocate_riv_cells"], [227, 2, 1, "", "assign_wells"], [228, 2, 1, "", "c_leakage"], [229, 2, 1, "", "c_radial"], [230, 2, 1, "", "celltable"], [231, 2, 1, "", "cleanup_drn"], [232, 2, 1, "", "cleanup_ghb"], [233, 2, 1, "", "cleanup_riv"], [234, 2, 1, "", "cleanup_wel"], [235, 2, 1, "", "create_layered_top"], [236, 2, 1, "", "distribute_drn_conductance"], [237, 2, 1, "", "distribute_ghb_conductance"], [238, 2, 1, "", "distribute_riv_conductance"], [239, 2, 1, "", "fill"], [240, 2, 1, "", "gdal_rasterize"], [241, 2, 1, "", "get_lower_active_grid_cells"], [242, 2, 1, "", "get_lower_active_layer_number"], [243, 2, 1, "", "get_upper_active_grid_cells"], [244, 2, 1, "", "get_upper_active_layer_number"], [245, 2, 1, "", "laplace_interpolate"], [246, 2, 1, "", "linestring_to_square_zpolygons"], [247, 2, 1, "", "linestring_to_trapezoid_zpolygons"], [248, 2, 1, "", "polygonize"], [249, 2, 1, "", "rasterize"], [250, 2, 1, "", "rasterize_celltable"], [251, 2, 1, "", "reproject"], [252, 2, 1, "", "zonal_aggregate_polygons"], [253, 2, 1, "", "zonal_aggregate_raster"]], "imod.prepare.ALLOCATION_OPTION": [[218, 1, 1, "", "__init__"]], "imod.prepare.DISTRIBUTING_OPTION": [[219, 1, 1, "", "__init__"]], "imod.prepare.LayerRegridder": [[220, 1, 1, "", "__init__"], [220, 3, 1, "", "method"]], "imod.prepare.Regridder": [[221, 1, 1, "", "__init__"], [221, 3, 1, "", "extra_overlap"], [221, 3, 1, "", "method"], [221, 3, 1, "", "ndim_regrid"], [221, 3, 1, "", "use_relative_weights"]], "imod.prepare.Voxelizer": [[222, 1, 1, "", "__init__"], [222, 3, 1, "", "method"]], "imod.select": [[254, 2, 1, "", "active_grid_boundary_xy"], [255, 2, 1, "", "cross_section_line"], [256, 2, 1, "", "cross_section_linestring"], [257, 2, 1, "", "grid_boundary_xy"], [258, 2, 1, "", "points_in_bounds"], [259, 2, 1, "", "points_indices"], [260, 2, 1, "", "points_set_values"], [261, 2, 1, "", "points_values"], [262, 2, 1, "", "upper_active_layer"]], "imod.util": [[263, 2, 1, "", "cd"], [264, 2, 1, "", "coord_reference"], [265, 2, 1, "", "empty_2d"], [266, 2, 1, "", "empty_2d_transient"], [267, 2, 1, "", "empty_3d"], [268, 2, 1, "", "empty_3d_transient"], [269, 2, 1, "", "from_mdal_compliant_ugrid2d"], [270, 2, 1, "", "ignore_warnings"], [271, 2, 1, "", "mdal_compliant_ugrid2d"], [272, 2, 1, "", "print_if_error"], [273, 2, 1, "", "spatial_reference"], [274, 2, 1, "", "to_datetime"], [275, 2, 1, "", "to_ugrid2d"], [276, 2, 1, "", "transform"], [277, 2, 1, "", "where"]], "imod.visualize": [[278, 0, 1, "", "GridAnimation3D"], [279, 0, 1, "", "StaticGridAnimation3D"], [280, 2, 1, "", "cross_section"], [281, 2, 1, "", "grid_3d"], [282, 2, 1, "", "imshow_topview"], [283, 2, 1, "", "line_3d"], [284, 2, 1, "", "plot_map"], [285, 2, 1, "", "quiver"], [286, 2, 1, "", "read_imod_legend"], [287, 2, 1, "", "streamfunction"], [288, 2, 1, "", "waterbalance_barchart"]], "imod.visualize.GridAnimation3D": [[278, 1, 1, "", "__init__"]], "imod.visualize.StaticGridAnimation3D": [[279, 1, 1, "", "__init__"]], "imod.wq": [[289, 0, 1, "", "AdvectionFiniteDifference"], [290, 0, 1, "", "AdvectionHybridMOC"], [291, 0, 1, "", "AdvectionMOC"], [292, 0, 1, "", "AdvectionModifiedMOC"], [293, 0, 1, "", "AdvectionTVD"], [294, 0, 1, "", "BasicFlow"], [295, 0, 1, "", "BasicTransport"], [296, 0, 1, "", "ConstantHead"], [297, 0, 1, "", "Dispersion"], [298, 0, 1, "", "Drainage"], [299, 0, 1, "", "EvapotranspirationHighestActive"], [300, 0, 1, "", "EvapotranspirationLayers"], [301, 0, 1, "", "EvapotranspirationTopLayer"], [302, 0, 1, "", "GeneralHeadBoundary"], [303, 0, 1, "", "GeneralizedConjugateGradientSolver"], [304, 0, 1, "", "LayerPropertyFlow"], [305, 0, 1, "", "MassLoading"], [306, 0, 1, "", "OutputControl"], [307, 0, 1, "", "ParallelKrylovFlowSolver"], [308, 0, 1, "", "ParallelKrylovTransportSolver"], [309, 0, 1, "", "PreconditionedConjugateGradientSolver"], [310, 0, 1, "", "RechargeHighestActive"], [311, 0, 1, "", "RechargeLayers"], [312, 0, 1, "", "RechargeTopLayer"], [313, 0, 1, "", "River"], [314, 0, 1, "", "SeawatModel"], [316, 0, 1, "", "TimeDiscretization"], [317, 0, 1, "", "TimeVaryingConstantConcentration"], [318, 0, 1, "", "VariableDensityFlow"], [319, 0, 1, "", "Well"]], "imod.wq.AdvectionFiniteDifference": [[289, 1, 1, "", "__init__"], [289, 3, 1, "", "courant"], [289, 3, 1, "", "weighting"]], "imod.wq.AdvectionHybridMOC": [[290, 1, 1, "", "__init__"], [290, 3, 1, "", "courant"], [290, 3, 1, "", "dceps"], [290, 3, 1, "", "dchmoc"], [290, 3, 1, "", "max_particles"], [290, 3, 1, "", "nph"], [290, 3, 1, "", "npl"], [290, 3, 1, "", "nplane"], [290, 3, 1, "", "npmax"], [290, 3, 1, "", "npmin"], [290, 3, 1, "", "tracking"], [290, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionMOC": [[291, 1, 1, "", "__init__"], [291, 3, 1, "", "cell_max_nparticles"], [291, 3, 1, "", "cell_min_nparticles"], [291, 3, 1, "", "courant"], [291, 3, 1, "", "dconcentration_epsilon"], [291, 3, 1, "", "max_nparticles"], [291, 3, 1, "", "nparticles_advection"], [291, 3, 1, "", "nparticles_no_advection"], [291, 3, 1, "", "nplane"], [291, 3, 1, "", "tracking"], [291, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionModifiedMOC": [[292, 1, 1, "", "__init__"], [292, 3, 1, "", "courant"], [292, 3, 1, "", "dconcentration_epsilon"], [292, 3, 1, "", "sink_nparticles"], [292, 3, 1, "", "sink_particle_placement"], [292, 3, 1, "", "tracking"], [292, 3, 1, "", "weighting_factor"]], "imod.wq.AdvectionTVD": [[293, 1, 1, "", "__init__"], [293, 3, 1, "", "courant"]], "imod.wq.BasicFlow": [[294, 1, 1, "", "__init__"]], "imod.wq.BasicTransport": [[295, 1, 1, "", "__init__"]], "imod.wq.ConstantHead": [[296, 1, 1, "", "__init__"]], "imod.wq.Dispersion": [[297, 1, 1, "", "__init__"]], "imod.wq.Drainage": [[298, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationHighestActive": [[299, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationLayers": [[300, 1, 1, "", "__init__"]], "imod.wq.EvapotranspirationTopLayer": [[301, 1, 1, "", "__init__"]], "imod.wq.GeneralHeadBoundary": [[302, 1, 1, "", "__init__"]], "imod.wq.GeneralizedConjugateGradientSolver": [[303, 1, 1, "", "__init__"]], "imod.wq.LayerPropertyFlow": [[304, 1, 1, "", "__init__"]], "imod.wq.MassLoading": [[305, 1, 1, "", "__init__"]], "imod.wq.OutputControl": [[306, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovFlowSolver": [[307, 1, 1, "", "__init__"]], "imod.wq.ParallelKrylovTransportSolver": [[308, 1, 1, "", "__init__"]], "imod.wq.PreconditionedConjugateGradientSolver": [[309, 1, 1, "", "__init__"]], "imod.wq.RechargeHighestActive": [[310, 1, 1, "", "__init__"]], "imod.wq.RechargeLayers": [[311, 1, 1, "", "__init__"]], "imod.wq.RechargeTopLayer": [[312, 1, 1, "", "__init__"]], "imod.wq.River": [[313, 1, 1, "", "__init__"]], "imod.wq.SeawatModel": [[314, 1, 1, "", "__init__"], [314, 3, 1, "", "check"], [315, 1, 1, "", "create_time_discretization"], [314, 3, 1, "", "modelname"]], "imod.wq.TimeDiscretization": [[316, 1, 1, "", "__init__"]], "imod.wq.TimeVaryingConstantConcentration": [[317, 1, 1, "", "__init__"]], "imod.wq.VariableDensityFlow": [[318, 1, 1, "", "__init__"]], "imod.wq.Well": [[319, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:module"}, "terms": {"": [0, 9, 10, 12, 13, 14, 23, 32, 35, 36, 41, 44, 54, 55, 56, 102, 113, 130, 136, 162, 166, 167, 182, 183, 212, 221, 222, 224, 229, 239, 255, 256, 259, 274, 277, 285, 289, 290, 291, 292, 293, 319, 320, 334, 335, 340, 342, 345, 351, 353, 354, 357, 361, 366, 371, 373, 377, 379, 380, 385, 386, 390, 394, 395, 396, 397, 398], "0": [4, 5, 6, 8, 11, 12, 16, 21, 26, 27, 32, 44, 45, 48, 51, 55, 61, 68, 70, 72, 78, 83, 89, 91, 92, 94, 97, 101, 105, 106, 108, 110, 113, 115, 117, 118, 122, 125, 136, 138, 141, 143, 145, 147, 148, 150, 152, 154, 157, 163, 164, 166, 167, 168, 170, 171, 172, 174, 176, 180, 181, 204, 209, 212, 218, 219, 221, 227, 230, 231, 232, 233, 234, 245, 246, 247, 251, 253, 256, 258, 259, 260, 261, 262, 278, 279, 280, 281, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 303, 304, 307, 308, 309, 316, 318, 320, 337, 338, 339, 340, 341, 342, 344, 345, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 382, 384, 385, 388, 389, 390, 391, 394, 395, 396, 397, 398, 400], "00": [3, 337, 338, 340, 341, 344, 345, 347, 352, 361, 365, 368, 372, 373, 376, 389, 395, 396, 400], "000": [274, 352, 365, 389, 400], "000000": 368, "000000000": [345, 361, 368, 373, 395, 396], "000000002": 361, "00001157407405": 396, "0000864": 341, "0001": [27, 157, 290, 304, 307, 309, 337, 338, 339, 340, 341, 342, 358, 360], "0003": 361, "00078071": 361, "00078091": 361, "00078183": 361, "00082746": 361, "00083373": [361, 396], "000834": 396, "0008352": 361, "00084055": 361, "0008475": 340, "00084771": 361, "00085378": 361, "00086102": 361, "00088318": 361, "0008994": 361, "00089943": 361, "00090591": 361, "0009065": 361, "0009093": 361, "0009098": 361, "0009125": 361, "00091255": 361, "000913": 361, "000918": 396, "00091826": [361, 396], "00097932": 361, "00098031": 361, "00098196": 361, "001": [157, 304, 338, 341, 345, 354, 356, 358, 359, 360, 361, 364, 366, 368], "00158879": 361, "00159777": 361, "00160275": 361, "00160428": 361, "00160856": 361, "00160863": 361, "00161301": 361, "00161518": 361, "00161658": 361, "0016166": 361, "00161772": 361, "00161827": 361, "00161909": 361, "0016207": 361, "00162071": 361, "00162122": 361, "00162407": 361, "0016263": 361, "00162744": 361, "00163142": 361, "00163613": 361, "00163785": 361, "00163787": 361, "001638": 396, "00163841": 361, "00163919": 361, "00164029": 361, "00164151": 361, "00164618": 361, "00164895": 361, "00166721": 361, "00167463": 361, "0016792": 361, "00167949": 361, "00168478": 361, "00168655": 361, "00168658": 361, "001689": 361, "00169": 361, "00169032": 361, "00169166": 361, "00169605": 361, "00169624": 361, "00169678": 361, "00169771": 361, "00169961": 361, "00170712": 361, "00170842": 361, "001712": 361, "00171206": 361, "00171221": 361, "00172136": 361, "00173": 361, "00173005": 361, "00173329": 361, "0017413": 361, "00174276": 361, "00174685": 361, "00174713": 361, "001752": 361, "00175232": 361, "00175247": 361, "00175276": 361, "00175411": 361, "00175477": 361, "0017549": 361, "00175632": 361, "00175832": 361, "00175834": 361, "00176321": 361, "00176362": 361, "00176593": 361, "0017666": 361, "00176716": 361, "00176909": 361, "00177083": 361, "00177297": 361, "00177411": 361, "00177807": 361, "00177865": 361, "00178251": 361, "00179237": 361, "00179266": 361, "00180298": 361, "001803": 361, "001825": 361, "00182535": 361, "00182747": 361, "00183059": 361, "00183236": 361, "00183427": 361, "00183771": 361, "00184691": 361, "00185661": 361, "00186046": 361, "00186831": 361, "00187044": 361, "00188156": 361, "00188612": 361, "00189647": 361, "00189853": 361, "0019": 361, "00190413": 361, "001906": 361, "001907": 361, "00190719": 361, "00190866": 361, "001912": 361, "00191231": 361, "00191248": 361, "00191336": 361, "00191589": 361, "001916": 361, "001917": 361, "00191725": 361, "00191761": 361, "00191962": 361, "0019212": 361, "00192603": 361, "0019277": 361, "00193016": 361, "0019308": 361, "00193096": 361, "00194384": 361, "00194592": 361, "00194606": 361, "001961": 361, "001982": 396, "00198224": 361, "002": [157, 353, 359], "00203658": 361, "00203995": 361, "002041": 361, "00204444": 361, "00204451": 361, "00204493": 361, "0020481": 361, "0020491": 361, "00205102": 361, "00217596": 361, "00217812": 361, "00218172": 361, "0021932": 361, "00219364": 361, "00219559": 361, "00220936": 361, "00221006": 361, "00221065": 361, "00221361": 361, "00221743": 361, "00222133": 361, "002221arrai": 361, "00222806": 361, "00223096": 361, "00223372": 361, "002234": 361, "00223808": 361, "00224485": 361, "00224585": 361, "002247": 361, "00224736": 361, "00225167": 361, "00226806": 361, "00226807": 361, "00227892": 361, "0022924": 361, "00229702": 361, "00230603": 361, "00231468": 361, "00231699": 361, "00232221": 361, "0023817": 361, "002382arrai": 361, "00242177": 361, "00247561": 361, "00247603": 361, "00247622": 361, "00248376": 361, "00248442": 361, "00248449": 361, "00249076": 361, "00249155": 361, "00249192": 361, "003658": 397, "0056": 396, "007": 342, "007232": 397, "00762653": 397, "009": 371, "01": [25, 44, 55, 78, 117, 126, 140, 157, 174, 227, 245, 295, 297, 315, 318, 320, 337, 338, 339, 340, 341, 342, 344, 345, 353, 354, 356, 358, 359, 360, 361, 364, 365, 366, 368, 376, 379, 380, 381, 382, 389, 390, 395, 396, 400], "01089": 397, "0108900045784": 397, "01161366e": 396, "0125": [341, 342], "01326780e": 396, "014": 397, "014464": 397, "01597916": 397, "016": [341, 344, 389], "01724138": 397, "01arrai": 345, "01t00": [337, 338, 340, 341, 345, 395], "01xarrai": 345, "02": [126, 140, 320, 337, 342, 344, 345, 354, 358, 360, 364, 365, 368, 376, 379, 380, 389, 391, 395, 396, 397, 400], "02017498e": 396, "02150538": 397, "022981": 397, "025": 78, "02609539": 397, "02678776e": 396, "02arrai": 395, "02d": [44, 55], "02t00": 395, "02xarrai": 395, "03": [117, 157, 174, 320, 339, 344, 345, 354, 358, 360, 361, 364, 365, 389, 392, 397, 398, 400], "031": 372, "03195832": 397, "03195833": 397, "03225806": 397, "03448276": 397, "03830185e": 396, "03838577e": 396, "03arrai": [361, 397], "04": [320, 345, 358, 360, 364, 365, 368, 372, 373, 376, 389, 390, 395], "040467": 391, "042497": 397, "045454545": 340, "046": [389, 396, 398, 400], "046072": 397, "0471248271865": 397, "047125": 397, "04793749": 397, "04804630e": 396, "04805851e": 396, "048676": 397, "04867641771818": 397, "04973": 397, "04arrai": 395, "04t00": 395, "05": [118, 157, 174, 176, 227, 234, 290, 291, 292, 297, 320, 345, 351, 361, 364, 368, 373, 385, 389, 390, 393, 396, 397, 398, 400], "05172414": 397, "05299568e": 396, "053": 371, "053304": 397, "05376344": 397, "05433397e": 396, "05435915e": 396, "054636": 397, "0571b0": 288, "05957603e": 396, "05arrai": [351, 361, 373, 390, 396, 397, 398], "05t01": 341, "06": [303, 308, 320, 345, 364, 368, 389, 394, 395, 400], "06107712e": 396, "06316519e": 396, "06320744e": 396, "063594": 391, "06391665": 397, "06451613": 397, "06758380e": 396, "06817684e": 396, "06821775e": 396, "06896552": 397, "06arrai": 396, "07": [320, 345, 368, 372, 389, 390, 395, 400], "07140017": 397, "072": 396, "072821": 397, "07375240e": 396, "07408428e": 396, "07412310e": 396, "07526882": 397, "07691193e": 396, "078": 396, "07891464e": 396, "07901382e": 396, "07952986e": 396, "07958746e": 396, "07989581": 397, "0799999": 398, "08": [320, 345, 389, 396, 397, 400], "081337": 397, "084911": 397, "084911240260034": 397, "0862069": 397, "088": 396, "088569": 397, "0896": 396, "09": [320, 344, 345, 368, 389, 397, 400], "09063745": 397, "090909091": 340, "0912": 396, "092": 396, "092143": 397, "094": [389, 395, 400], "09587497": 397, "09587498": 397, "095e": [373, 390], "09677419": 397, "096965": 397, "09970045": 397, "0arrai": [345, 351, 354, 361, 373, 390, 395, 396, 397, 398], "0d": 0, "0e": [27, 291, 292, 308, 309, 337, 338, 339, 340, 341, 342, 353, 354, 356, 358, 359, 360, 361, 364, 366, 385], "0e20": [44, 47, 49, 304], "0e30": [294, 295], "0x000001a342a29b90": 390, "0x000001a342ae8950": 390, "0x000001a342ae8d90": 390, "0x000001a342ae90d0": 390, "0x000001a342aea4d0": 390, "0x000001a342aea510": 390, "0x000001a342aea710": 390, "0x000001a342aea850": 390, "0x000001a342b557d0": 390, "0x000001a342b7f050": 390, "0x000001a342c0aa50": 390, "0x000001a342c66790": 390, "0x000001a342cc9dd0": 390, "0x000001a342d41190": 390, "0x000001a342d668d0": 390, "0x000001a342e1d3d0": 390, "0x000001a342fc5a50": 390, "0x000001a345108b10": 361, "0x000001a3451ba9d0": 342, "0x000001a3451cf310": 340, "0x000001a345312590": 357, "0x000001a34532a890": 340, "0x000001a3453aded0": 341, "0x000001a345482510": 353, "0x000001a3457d5c90": 337, "0x000001a3457f69d0": 370, "0x000001a345851190": 361, "0x000001a345851c90": 340, "0x000001a34585a750": 361, "0x000001a34596d410": 368, "0x000001a345a29190": 361, "0x000001a345a2ad10": 370, "0x000001a345da2490": 361, "0x000001a345e03890": 338, "0x000001a345f00f50": 361, "0x000001a346084e90": 357, "0x000001a346087490": 359, "0x000001a34608ffd0": 369, "0x000001a346091c50": 361, "0x000001a346102b50": 358, "0x000001a34612a910": 357, "0x000001a346157990": 364, "0x000001a34618cd50": 341, "0x000001a346372250": 368, "0x000001a3463d2510": 371, "0x000001a34640e790": 361, "0x000001a346418290": 373, "0x000001a3475cc6d0": 371, "0x000001a349c8d190": 361, "0x000001a349d30f50": 359, "0x000001a349d31450": 364, "0x000001a349d33390": 359, "0x000001a349d76a90": 361, "0x000001a349dd2850": 359, "0x000001a349e0b350": 357, "0x000001a34aba6850": 340, "0x000001a34afca910": 337, "0x000001a34defc310": 338, "0x000001a34df04b90": 355, "0x000001a34e366dd0": 340, "0x000001a34e442990": 337, "0x000001a34e479ed0": 373, "0x000001a34e576ed0": 353, "0x000001a34eab5110": 340, "0x000001a34ebade90": 366, "0x000001a34ecddf50": 342, "0x000001a34ece7890": 368, "0x000001a34eff36d0": 397, "0x000001a35029eb90": 396, "0x000001a35051ddd0": 366, "0x000001a35067a4d0": 351, "0x000001a35082b6d0": 397, "0x000001a3508a2790": 338, "0x000001a350ab21d0": 337, "0x000001a3544ad3d0": 356, "0xarrai": [345, 373, 395, 396], "1": [3, 5, 11, 12, 21, 26, 27, 29, 30, 44, 47, 49, 50, 51, 55, 58, 66, 78, 81, 82, 83, 89, 91, 92, 97, 101, 105, 115, 117, 118, 129, 136, 138, 141, 143, 147, 148, 150, 152, 154, 157, 164, 168, 170, 171, 172, 174, 176, 182, 184, 209, 218, 219, 223, 224, 225, 226, 227, 231, 232, 233, 235, 245, 246, 253, 256, 258, 259, 260, 261, 262, 272, 278, 280, 281, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 303, 304, 307, 308, 309, 312, 316, 317, 318, 320, 337, 338, 339, 340, 341, 342, 345, 347, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 373, 375, 377, 379, 380, 381, 382, 384, 385, 386, 390, 391, 394, 395, 396, 397, 398], "10": [26, 27, 66, 77, 106, 108, 110, 112, 157, 246, 247, 260, 287, 290, 291, 303, 308, 309, 320, 338, 339, 340, 342, 345, 351, 353, 354, 356, 358, 359, 360, 361, 363, 364, 366, 368, 373, 379, 380, 388, 389, 390, 391, 396, 397, 398, 400], "100": [27, 157, 251, 274, 307, 309, 339, 345, 351, 353, 354, 356, 358, 359, 360, 361, 364, 366, 368, 370, 371, 373, 377, 379, 382, 396, 397], "1000": [4, 26, 78, 125, 150, 152, 154, 212, 307, 309, 318, 353, 356, 361, 366, 391], "10000": [5, 230, 252, 253], "100000": 391, "10000038": 398, "100_000": [251, 390], "101": 359, "101000": 391, "1016": [77, 342, 397], "102": 373, "102000": 391, "102150": 369, "1022": 390, "1025": [318, 353, 356], "102550": 369, "1029": 340, "103000": 391, "103150": 369, "103350": 369, "10344828": 397, "1035": 397, "103736": 373, "104": 157, "104000": 391, "10412979e": 396, "10419674e": 396, "1048": 396, "104b": [390, 396], "105": [356, 373], "1050": 397, "105000": 391, "105257": 77, "10539465e": 396, "10544491e": 396, "105e": [373, 390], "106": [157, 397], "106000": 391, "107": 373, "107000": 391, "1073": 397, "10752688": 397, "108000": 391, "108750": 369, "108774": 391, "1088": 397, "109000": 391, "109150": 369, "10_000": 5, "10kb": 354, "10mb": 361, "11": [260, 320, 345, 360, 361, 365, 368, 373, 390, 391, 396, 397, 398], "110": 373, "110000": 391, "1104": 397, "110_000": 390, "111": [26, 345], "111000": 391, "111378": 391, "111380": 391, "11185414": 397, "112": 373, "112000": 391, "112096": 391, "112098": 391, "1126": 397, "113000": 391, "114000": 391, "1141": 397, "114750": [373, 390], "114850": [373, 390], "114950": [373, 390], "115": [356, 373, 391], "1150": 359, "115000": 391, "11500013": 397, "115050": [373, 390], "115150": [373, 390], "115250": [373, 390], "115350": [373, 390], "11541767e": 396, "115450": [373, 390], "11550407e": 396, "115550": [373, 390], "115650": [369, 370, 371, 373, 390], "115926": 391, "115938": 391, "116000": 391, "1163": 397, "117": 373, "117000": 391, "117297": 391, "117298": 391, "117599": 396, "1179": 397, "118000": 391, "119000": 391, "1194": 397, "11999989": 397, "11kb": 361, "11layer": 345, "11mb": [373, 396], "12": [21, 258, 260, 320, 338, 345, 351, 357, 360, 361, 365, 368, 373, 390, 391, 396, 397, 398], "120": [337, 351, 373], "120176": 397, "120333": 397, "12068966": 397, "12087021e": 396, "12099190e": 396, "120_000": 391, "121": [337, 400], "1218": 397, "122": 373, "1232": [396, 397], "123e": 354, "125": [354, 356, 373, 396], "12500": 358, "1251": 396, "1252": 397, "125coordin": 396, "125dask": 396, "125nan": 396, "126": 354, "127": [354, 373], "1271": 397, "127409": 397, "1278333": 397, "1285": 397, "129": 397, "12960052": 397, "13": [320, 338, 360, 361, 368, 373, 389, 390, 391, 396, 397, 398], "130": 373, "1300000": 390, "1309": 397, "130983": 397, "132152": 371, "1324": 397, "1340": 397, "134641": 397, "135": [356, 373], "1359": 368, "1362": 397, "136363636": 340, "136b": 361, "13754582e": 396, "1377": 397, "13793103": 397, "138": 366, "13978495": 397, "1399": 397, "139b": 395, "13arrai": [361, 390, 396, 398], "13coordin": [390, 396, 398], "13kb": 361, "13nan": 361, "13time": 396, "13xarrai": [361, 390], "13y": [361, 390, 396], "14": [3, 21, 320, 354, 360, 361, 373, 391, 397], "140": 373, "14000034": 397, "140b": 395, "1415": 397, "142": 157, "143": 157, "1430": 397, "14381246": 397, "144": 397, "145": [356, 373], "14511347": 397, "1454": 397, "1468": 397, "147": 157, "1487": 397, "14964905e": 396, "14991608e": 396, "14th": 3, "15": [106, 108, 110, 247, 304, 305, 320, 338, 340, 353, 354, 356, 357, 358, 359, 360, 361, 364, 365, 368, 373, 375, 377, 389, 391, 397], "150": [27, 307, 309, 337, 338, 339, 340, 341, 342, 345, 351, 366, 368, 373, 397], "1500": 397, "15040016": 397, "15053763": 397, "1507": 397, "1521": 397, "152397": 390, "1545": 397, "155": 373, "15517241": 397, "155578": 391, "156": 396, "1560": 397, "156e": [373, 390], "157": 354, "1574074074074073e": 396, "157407e": 396, "1576": 397, "157e": 396, "158": 396, "15840006": 397, "159": [337, 396], "159016": 397, "15979162": 397, "1598": 397, "16": [290, 291, 320, 341, 361, 362, 368, 373, 391, 396, 397], "160": [337, 373], "160b": 397, "161": 396, "1613": 397, "162": 397, "1635": 397, "165": [373, 391], "1651": 397, "166": 396, "166248": 397, "1666": 397, "1678": [41, 54], "1679": 42, "1690": 397, "169822": 397, "16982248058866": 397, "16b": [345, 354, 361, 395, 396], "16mb": [397, 398], "17": [171, 320, 354, 361, 373, 375, 391, 397], "170": 373, "170174": 397, "1704": 397, "1708": 337, "172": 103, "17204301": 397, "1723": 397, "17241379": 397, "173": 396, "17348": 397, "1743": 397, "175": [373, 396], "1757": 397, "17577079": 397, "177": 361, "177892": 371, "178": 361, "1781": 397, "179": 361, "1796": 397, "17x": 361, "18": [320, 357, 365, 368, 373, 389, 391, 397], "180": [21, 351, 361, 373], "181": 361, "1811": 397, "181818182": 340, "182": [361, 397], "1827957": 397, "183": 397, "1834": 397, "1849": 397, "185": 373, "186": 396, "187": [391, 396], "1870": 397, "187935": 368, "188": 396, "1887": 397, "18965517": 397, "1899": 50, "19": [320, 368, 373, 391, 396, 397, 398], "190": 373, "1900": [50, 338], "1902": 397, "190894": 391, "191": [389, 397, 400], "19174995": 397, "19246": 371, "1926": 397, "192689": 391, "1940": 397, "194318": 397, "195": 373, "19585562e": 396, "1959": 397, "196b": 373, "197": 397, "197855": 397, "1979": [373, 397], "198": 396, "1984": 396, "19840002": 397, "1988": 358, "198arrai": 396, "1990": [157, 304], "1992": 157, "1993": 397, "1996": 358, "1997": 340, "1999": [11, 12, 366], "1arrai": [351, 361, 390, 396], "1b": [395, 396, 397, 398], "1d": [0, 7, 264, 265, 266, 267, 268, 273, 297, 345, 363, 365, 379, 380, 389], "1d_tpt_benchmark": 359, "1e": [44, 47, 48, 49, 106, 150, 290, 291, 292, 294, 295, 303, 304, 308, 354, 356, 361], "1e3": [110, 154, 246, 247], "1kb": [345, 354, 396, 397], "1layer": 354, "1mb": [396, 397], "1st": [290, 291, 292], "1xarrai": 361, "1y": 395, "2": [9, 13, 21, 26, 27, 44, 47, 49, 50, 55, 78, 80, 86, 91, 94, 99, 103, 106, 108, 110, 117, 140, 141, 145, 150, 152, 154, 157, 172, 174, 180, 207, 209, 214, 218, 219, 255, 258, 259, 260, 261, 278, 290, 291, 292, 303, 304, 311, 316, 320, 337, 340, 345, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 368, 369, 373, 375, 376, 379, 380, 384, 385, 386, 388, 390, 391, 394, 395, 396, 397, 398], "20": [44, 47, 48, 49, 66, 106, 108, 110, 157, 246, 247, 304, 338, 340, 351, 353, 357, 358, 360, 368, 373, 391, 397], "200": [251, 358, 360, 361, 364, 369, 370, 373, 390, 396, 397, 398], "2000": [3, 25, 117, 126, 140, 174, 315, 318, 337, 338, 339, 340, 341, 342, 354, 356, 358, 359, 360, 361, 364, 395], "2000d": 359, "2001": [25, 41, 54, 315, 339], "2002": [4, 366], "2003": [337, 342], "2004": 342, "2005": [23, 35, 157, 172, 357, 358, 361], "2007": 368, "2008": [26, 368], "2009": [361, 396], "200_000": 251, "200coordin": 397, "200layer": [390, 396, 397, 398], "200x": [361, 390, 396, 397], "201": 371, "2010": [340, 361, 396], "2011": [361, 368], "2012": [361, 368], "2013": [361, 364], "2014": [361, 368], "2015": 361, "2016": [26, 368], "2017": [345, 397], "2017a": 26, "2017b": 26, "2018": 345, "2019": 320, "202": 122, "2020": [320, 337, 353, 379, 380, 381, 382, 386], "2021": [77, 320], "2022": 320, "2023": 320, "2024": 320, "2030": 356, "2032": 397, "20356822": 397, "2047": 397, "205": 373, "2050": 391, "205088": 397, "20539975": 397, "20689655": 397, "2070": 397, "20772911": 397, "2085": 397, "20898857e": 396, "20933380e": 396, "20arrai": 397, "20coordin": 397, "20xarrai": 397, "20y": 397, "21": [320, 341, 357, 373, 391, 395, 396, 397], "210": 373, "2106": 397, "211": 354, "211782": 368, "212": 354, "2123": 397, "21232": 397, "213": 354, "2138": 397, "214": 354, "215": [354, 373], "21505376": 397, "215arrai": 354, "215xarrai": 354, "216": 354, "2162": 397, "21656537": 397, "216b": 361, "216dask": 354, "216kb": 390, "2176": 397, "218": [373, 390], "218462": 397, "218x": [373, 390], "2195": 397, "2195519960724": 397, "219552": 397, "21kb": 345, "21mb": [390, 396], "22": [320, 368, 373, 391, 396, 397], "220": [373, 397], "2212": 396, "2215": 397, "2229": 397, "22370827": 397, "22413793": 397, "224736": 368, "225": 373, "22500": 358, "225211": 368, "2253": [340, 397], "22580645": 397, "225_500": 368, "226": [359, 365, 389], "2261": [41, 54, 118, 176, 340], "226134": 368, "2262": 42, "226410": 368, "226509": 368, "2268": 397, "2272": 396, "227272727": 340, "2283": 397, "2295": 0, "2296": 0, "22996807": 397, "23": [320, 361, 373, 389, 391, 396, 397], "230": [351, 373], "230500": 361, "2306": 397, "230_000": 361, "23147655": 397, "231500": 361, "2321": 397, "232500": 361, "233500": 361, "2342": 397, "234500": 361, "235": [373, 397], "235500": 361, "2359": 397, "236500": 361, "236695": 397, "2374": 397, "237500": [361, 396], "237512": [361, 390, 396, 397, 398], "237537": [361, 390, 396, 397, 398], "237550": 396, "237562": [361, 390, 396, 397, 398], "237587": [361, 390, 396, 397, 398], "237612": [361, 390, 396, 397, 398], "237637": [361, 390, 396, 397, 398], "237650": 396, "237662": [361, 390, 396, 397, 398], "237687": [361, 390, 396, 397, 398], "237712": [361, 390, 396, 397, 398], "237737": [361, 390, 396, 397, 398], "237750": 396, "237850": 396, "237950": 396, "237_500": 361, "238050": 396, "238150": 396, "238250": 396, "238350": 396, "238450": 396, "238500": 361, "238550": 396, "238650": 396, "238725": 397, "238737": 397, "238750": 396, "238762": 397, "238787": 397, "238812": 397, "238837": 397, "238850": 396, "238862": 397, "238887": 397, "238912": 397, "238937": 397, "238950": 396, "238962": 397, "238987": 397, "239012": 397, "239037": 397, "239050": 396, "239062": 397, "239087": 397, "239112": 397, "239137": 397, "239150": 396, "239162": 397, "239187": 397, "239212": 397, "239237": 397, "239250": 396, "239262": 397, "239287": 397, "239312": 397, "239337": 397, "239350": 396, "239362": 397, "239387": 397, "239412": 397, "239437": 397, "239450": 396, "239462": 397, "239487": 397, "239500": 361, "239512": 397, "239537": 397, "239550": 396, "239562": 397, "239587": 397, "239612": 397, "239637": 397, "239650": 396, "239662": 397, "239687": 397, "23968744": 397, "2397": 397, "239712": 397, "239737": 397, "239750": 396, "239762": 397, "239787": 397, "239812": 397, "239837": 397, "239850": 396, "239862": 397, "239887": 397, "239912": 397, "239937": 397, "239950": 396, "239962": 397, "239987": 397, "24": [3, 341, 368, 373, 391, 396, 397, 398], "240": [351, 373], "240012": [361, 397], "240037": 397, "240050": 396, "240062": 397, "240087": 397, "240112": 397, "240137": 397, "240150": 396, "240162": 397, "240187": 397, "240212": 397, "240237": 397, "240250": 396, "240262": 397, "240287": 397, "240312": 397, "240337": 397, "240350": 396, "240362": 397, "240387": 397, "240412": 397, "240437": 397, "240450": 396, "240462": 397, "240487": 397, "240500": 361, "240512": 397, "240537": 397, "240550": 396, "240562": 397, "240587": 397, "240612": 397, "240637": 397, "240650": 396, "240662": 397, "240687": 397, "240712": 397, "240737": 397, "240750": 396, "240762": 397, "240787": 397, "240812": 397, "240837": 397, "240850": 396, "240862": 397, "240887": 397, "240912": 397, "240937": 397, "240950": 396, "240962": 397, "240987": 397, "240_000": [361, 368], "241012": 397, "241037": 397, "241050": [396, 397], "241150": 396, "2412": 397, "241250": 396, "241350": 396, "24137931": 397, "241450": 396, "241500": 361, "241550": 396, "241650": 396, "241750": 396, "241850": 396, "24192309": 397, "241950": 396, "242050": 396, "242150": 396, "242250": 396, "242350": 396, "242450": 396, "242500": 361, "242550": 396, "242650": 396, "24273429": 361, "242750": 396, "242850": 396, "242950": 396, "2430": 397, "243050": 396, "243150": 396, "243250": 396, "243350": 396, "243450": 396, "243500": 361, "243550": 396, "243650": 396, "243750": 396, "243850": 396, "243927": 397, "243950": 396, "244012": 361, "244050": 396, "244150": 396, "244250": 396, "244350": 396, "2444": 397, "244450": 396, "244500": 361, "244550": 396, "244650": 396, "244750": 396, "244850": 396, "24491787e": 396, "244950": 396, "244_000": 361, "245": 373, "245050": 396, "2451": 397, "245150": 396, "245250": 396, "245350": 396, "245450": 396, "245500": 361, "245550": 396, "245650": 396, "245750": 396, "245850": 396, "245950": 396, "246050": 396, "246150": 396, "246250": 396, "24633751e": 396, "246350": 396, "246450": 396, "2465": 397, "246500": 361, "246550": 396, "246650": 396, "24668083e": 396, "24672249": 361, "246750": 396, "246850": 396, "246950": 396, "247050": 396, "247150": 396, "247250": 396, "24731183": 397, "247350": 396, "247450": 396, "247500": 361, "247525": 368, "247550": 396, "247650": 396, "247750": 396, "247850": 396, "247950": 396, "248": [373, 390], "248050": 396, "2481": 373, "248150": 396, "248250": 396, "248350": 396, "248450": 396, "248500": 361, "248550": 396, "248650": 396, "248750": 396, "248850": 396, "2489": 397, "248950": 396, "249050": 396, "249150": 396, "249250": 396, "249350": 396, "249450": 396, "249500": 361, "249550": 396, "249650": 396, "249750": 396, "249762": [361, 390, 396, 397, 398], "249787": [361, 390, 396, 397, 398], "249812": [361, 390, 396, 397, 398], "249837": [361, 390, 396, 397, 398], "249850": 396, "249862": [361, 390, 396, 397, 398], "249887": [361, 390, 396, 397, 398], "249912": [361, 390, 396, 397, 398], "249937": [361, 390, 396, 397, 398], "249950": 396, "249962": [361, 390, 396, 397, 398], "249987": [361, 390, 396, 397, 398], "24b": [345, 351, 395], "24kb": 397, "25": [157, 318, 320, 351, 356, 359, 361, 368, 373, 390, 391, 396, 397, 398], "250": [150, 152, 154, 338, 345, 373, 397], "250000": 396, "2504": 397, "250500": 361, "250_000": 361, "251159": 397, "25116062": 397, "251500": 361, "2519": 397, "252": [389, 390, 400], "252500": 361, "253500": 361, "25355321": 361, "2542": 397, "254500": 361, "255500": 361, "2556666": 397, "2557": 397, "25598717": 397, "256": 396, "25620192": 361, "256500": 361, "2578": 397, "257_000": 361, "25806452": 397, "258392": 397, "25846219e": 396, "25862069": 397, "2595": 397, "25999999": 397, "25arrai": 351, "25kb": 396, "25th": 251, "26": [320, 368, 373, 391, 397, 398], "2610": 397, "26131344": 397, "262": [357, 365, 389], "2633": 397, "26336139": 361, "2648": 397, "26504986": 361, "26550211": 361, "26586366e": 396, "266": [342, 344, 389], "2666": 397, "2677002": 397, "2687": 397, "2688172": 397, "269": 368, "26985601": 361, "26992607": 397, "27": [26, 99, 338, 361, 373, 390, 391, 397], "270": [21, 342, 361], "27008811": 361, "2701": 397, "2713542": 397, "27164576": 397, "27183901": 361, "2725": 397, "272727273": 340, "274": 397, "27431479": 361, "27500": 358, "275534": 397, "27586207": 397, "276": 396, "27649525": 361, "278": [342, 396], "27823924": 361, "27883947": 397, "27time": 361, "28": [0, 3, 338, 368, 373, 391, 396, 397], "280": [337, 340], "28070347": 361, "28274798": 397, "282767": 397, "28512": [337, 340, 341, 342], "28608515": 361, "28676046": 361, "287": 342, "28762492": 397, "289": 397, "28957748": 397, "28992": [251, 284, 371], "289999": 397, "28kb": 354, "28th": 3, "29": [320, 368, 373, 391, 397, 398], "29032258": 397, "2907364": 361, "291671": 397, "29310345": 397, "294117632": 368, "29513741": 397, "297": [351, 352, 389], "297231": 397, "29728577": 361, "2arrai": 354, "2coordin": [395, 396], "2d": [0, 13, 14, 26, 219, 236, 238, 239, 248, 251, 257, 262, 265, 266, 267, 275, 281, 284, 307, 308, 337, 338, 339, 340, 341, 342, 353, 361, 363, 365, 379, 380, 389, 393, 399, 400], "2f": [307, 308], "2kb": [345, 354, 361, 373, 390, 396, 397, 398], "2layer": [395, 396], "2mb": [361, 390, 397], "2mesh2d_nfac": 354, "2x": 395, "2y": [345, 396], "3": [3, 4, 6, 8, 11, 12, 26, 27, 47, 49, 106, 122, 150, 157, 172, 209, 219, 258, 259, 260, 261, 285, 290, 291, 292, 295, 303, 310, 320, 337, 340, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 369, 373, 375, 379, 380, 382, 384, 385, 386, 388, 390, 391, 394, 395, 396, 397, 398], "30": [27, 66, 221, 222, 278, 279, 281, 294, 295, 303, 307, 308, 309, 337, 338, 339, 340, 341, 342, 345, 351, 358, 360, 361, 368, 373, 396], "300": [288, 358, 360, 364], "30107527": 397, "30180931": 397, "302": 390, "30360409": 397, "303704": 368, "304": 340, "304463": 397, "3044632363935": 397, "305e": 361, "306": 396, "308": [337, 362, 365, 389], "309": 397, "30980277": 397, "30_000": 377, "30t23": [361, 396], "31": [342, 361, 366, 373, 396], "31001320e": 396, "31028404e": 396, "31034483": 397, "31123686e": 396, "3125604112": 371, "314374": 397, "315815": 397, "315e": 361, "318181818": 340, "31937456e": 396, "31958325": 397, "31arrai": [361, 373, 396], "31t00": [361, 373, 396], "31xarrai": 361, "32": [230, 290, 291, 361, 365, 373, 386, 389], "3216": 396, "321606": 397, "32258065": 397, "32500": 358, "325kb": 396, "32630": 251, "32631": 371, "327": 397, "32758621": 397, "3288": 396, "3288002": 397, "328838": 397, "329": [396, 397], "32mb": 397, "33": [340, 368, 373, 397], "33000016": 397, "331": 354, "33302832": 397, "33333333": 397, "33556241": 397, "33594632": 397, "336": 396, "336071": 397, "339": 354, "339959": 397, "34": [373, 389, 396, 397, 398, 400], "340": 354, "341": 354, "342": [354, 368, 397], "343303": 397, "34408602": 397, "34453869": 397, "34482759": 397, "34805989": 397, "35": [170, 295, 337, 338, 339, 340, 341, 342, 351, 353, 356, 359, 368, 373, 397], "350": 345, "35154157": 397, "353213": 397, "35321338409926": 397, "35387764e": 396, "35398254e": 396, "35500002": 397, "35537922": 397, "35661888": 397, "357": [389, 394, 400], "3572": 357, "358": 361, "36": [368, 373, 389, 397, 398], "360446": 397, "36107755": 397, "36206897": 397, "363636364": 340, "364": 366, "364103": 397, "364103388758": 397, "3648": 396, "365": [345, 366, 396, 397], "3655914": 397, "365655": 397, "365d": 366, "36704140e": 396, "36731339e": 396, "36752074": 397, "367678": 397, "37": 373, "371": 391, "3724": [391, 396], "3744": 397, "37491": 397, "375": 391, "37500": 358, "375e": [361, 390, 396, 397, 398], "37634409": 397, "376e": [361, 390, 396, 397, 398], "3776": 397, "37846184": 397, "378e": 396, "379": 396, "37931034": 397, "37948227e": 396, "37981462e": 396, "38": [354, 373, 396, 397], "380": 397, "38137436": 397, "382142": 397, "3834999": 397, "3848": 396, "386406": 391, "387e": 397, "388e": 397, "389799": 397, "39": [373, 397, 398], "390": [368, 390], "391": [337, 344, 389], "3915987": 397, "392b": 373, "39655172": 397, "39657822e": 396, "39692154e": 396, "397": 397, "399285": 397, "39947906": 397, "3arrai": [345, 351], "3coordin": [351, 395], "3d": [0, 5, 7, 15, 88, 96, 114, 137, 142, 147, 167, 236, 238, 239, 262, 268, 278, 279, 281, 294, 345, 358, 361, 373, 374, 377, 379, 380, 387, 389, 393, 399, 400], "3kb": 354, "3rd": [285, 316], "3xarrai": 351, "3y": 345, "4": [5, 27, 47, 49, 91, 94, 99, 103, 113, 117, 136, 140, 141, 145, 157, 170, 171, 174, 180, 181, 219, 258, 259, 260, 261, 303, 308, 309, 318, 320, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 371, 372, 373, 377, 384, 385, 390, 391, 393, 395, 396, 397, 398], "40": [66, 172, 290, 291, 292, 337, 338, 341, 342, 353, 368, 373, 385, 394], "400000": 361, "400b": 396, "400kb": [396, 397], "402943": 397, "4030385": 397, "406517": 397, "407846": 391, "408": 396, "40860215": 397, "4088": 396, "409": 397, "409090909": 340, "40979767e": 396, "40993958e": 396, "40b": 390, "41": [337, 341, 342, 353, 373, 396, 398], "410998257": 371, "411": 337, "413168": 397, "41375": 397, "4137931": 397, "41486168": 397, "41545822": 397, "418": 397, "41935484": 397, "41958737": 397, "41e": 397, "42": [373, 397], "420982": 397, "422": 396, "42485857e": 396, "4252": 396, "42520046": 397, "43": [373, 391], "43103448": 397, "43143739": 397, "432": 396, "4324": 396, "4326": [251, 371], "43262911e": 396, "433": 397, "43572426": 397, "437311964137": 397, "437312": 397, "43812462444505": 397, "438125": 397, "4394": 397, "4399999": 398, "44": [373, 391, 397], "44086022": 397, "441": [365, 366, 389], "441782": 397, "442": [389, 391, 400], "445357": 397, "445850": [369, 370, 371, 373, 390], "445950": [373, 390], "446050": [373, 390], "446150": [373, 390], "446250": [373, 390], "446350": [373, 390], "446450": [373, 390], "446550": [373, 390], "446650": [373, 390], "446750": [373, 390], "447126": 371, "44741655": 397, "448065": 391, "44827586": 397, "44999999": 397, "44arrai": 397, "45": [340, 356, 357, 373, 391, 396], "450": [345, 358, 360, 364], "450000": 391, "450050": 373, "450851": 391, "450_000": [390, 391], "451000": 391, "4516129": 397, "452000": 391, "452589": 397, "453": [340, 344, 389], "453000": 391, "454000": 391, "454545455": 340, "455000": 391, "456": 397, "456000": 391, "457000": 391, "457177": 373, "457215": 373, "458000": 391, "458e": [373, 390], "459000": 391, "459821": 397, "46": [113, 366, 369, 373, 391, 397], "460": 366, "460000": 391, "46072292e": 396, "460_000": 390, "461000": 391, "462000": 391, "463000": 391, "463008": 397, "463013": 391, "46339571": 397, "464000": 391, "465000": 391, "46551724": 397, "465750": 369, "465950": 369, "466": 391, "466000": 391, "4664": 396, "466627": 391, "466650": [373, 390], "466750": [369, 373, 390], "4668": 396, "466850": [373, 390], "466950": [369, 373, 390], "467000": 391, "467050": [373, 390], "467150": [369, 373, 390], "467201": 371, "467233": 391, "467250": [373, 390], "467350": [369, 373, 390], "467450": [373, 390], "467550": [369, 370, 371, 373, 390], "468000": 391, "468151": 371, "4689": 391, "46896210e": 396, "469000": 391, "46933594e": 396, "46arrai": 397, "46e": [373, 390], "46xarrai": 397, "47": [362, 365, 373, 389, 391], "470000": 391, "471": 397, "471000": 391, "472000": 391, "472222222222243": 396, "472890": 368, "473": 368, "473000": 391, "474000": 391, "47500": 358, "475000": 391, "476000": 391, "477000": 391, "47761154": 397, "478000": 391, "478782": 391, "479": 371, "479000": 391, "48": 373, "480622": 397, "480_000": 391, "48275862": 397, "48387097": 397, "484196": 397, "486": 397, "487152": 397, "487854": 397, "48b": [361, 395], "49": [368, 373], "491": 26, "491429": 397, "49462366": 397, "498579": 361, "498661": 397, "498e": 396, "4996": 396, "49976540e": 396, "49arrai": 373, "49y": 373, "4a": 318, "4arrai": 395, "4b": [318, 361, 396, 397], "4b9080cbb3354582": [361, 364, 391, 396], "4c": 318, "4d": 345, "4kb": [361, 390, 396, 397, 398], "4th": [290, 291, 292], "4y": 361, "5": [45, 117, 126, 140, 152, 157, 174, 218, 219, 230, 245, 256, 258, 259, 260, 261, 277, 278, 280, 285, 290, 291, 292, 320, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 368, 369, 371, 373, 375, 379, 380, 385, 388, 390, 391, 394, 395, 396, 397, 398], "50": [27, 66, 157, 245, 303, 307, 308, 309, 339, 345, 358, 360, 371, 373, 396], "500": [125, 150, 152, 154, 157, 353, 354, 356, 358, 359, 360, 361, 364, 366, 390, 396, 397, 398], "5000": [345, 357, 358, 360, 364, 390], "50000": 316, "5001": 361, "500coordin": 397, "500dask": [390, 396], "500fals": 397, "500layer": 396, "500nan": [361, 397], "500time": 361, "500y": [390, 396, 397, 398], "5023": 391, "505e": 361, "50761642e": 396, "50784569e": 396, "50798958": 397, "50840683e": 396, "50853882e": 396, "508670464": 368, "5094004": 397, "50_000": [316, 377], "50kb": 396, "50m": 371, "50th": 251, "50x": 396, "51": [136, 353, 397, 398], "510": 397, "511": 368, "511296": 397, "511471": 391, "5116": 396, "51160002": 397, "51496162e": 396, "51531830e": 396, "515e": 361, "51612903": 397, "517": 373, "51724138": 397, "519461": 397, "52": [371, 373, 397, 398], "52303586468673": 397, "523036": 397, "52335644": 397, "52359343e": 396, "52396874": 397, "525": 397, "52500": 358, "52613735e": 396, "526694": 397, "52688172": 397, "52719975": 397, "52b": [361, 390, 396, 398], "53": [140, 397], "530268": 397, "5317909315": 371, "534": [358, 365, 389], "534013": 361, "53448276": 397, "536": 396, "5375": 397, "53750002": 397, "53761673": 397, "53763441": 397, "53865388624": 371, "53968716e": 396, "53994791": 397, "54064": 390, "54136038e": 396, "542414": 368, "545": 397, "5450002": 397, "545454545": 340, "54699516e": 396, "547": 344, "54708900e": 396, "54834080e": 396, "55": [356, 373, 397], "550": 345, "550500": 361, "550747": 391, "550_000": 361, "551500": 361, "55172414": 397, "552500": 361, "553500": 361, "554500": 361, "555500": 361, "55592707": 397, "555e": 361, "556500": 361, "557": 373, "557500": 361, "55815029e": 396, "558301": 397, "558500": 361, "559000": 396, "559012": [361, 390, 396, 397, 398], "559037": [361, 390, 396, 397, 398], "559050": 396, "559062": [361, 390, 396, 397, 398], "559087": [361, 390, 396, 397, 398], "559112": [361, 390, 396, 397, 398], "559137": [361, 390, 396, 397, 398], "55913978": 397, "559150": 396, "559162": [361, 390, 396, 397, 398], "559187": [361, 390, 396, 397, 398], "559212": [361, 390, 396, 397, 398], "559237": [361, 390, 396, 397, 398], "559250": 396, "559262": [361, 390, 396, 397, 398], "559287": [361, 390, 396, 397, 398], "559312": [361, 390, 396, 397, 398], "559337": [361, 390, 396, 397, 398], "559350": 396, "559362": [361, 390, 396, 397, 398], "559387": [361, 390, 396, 397, 398], "559412": [361, 390, 396, 397, 398], "559437": [361, 390, 396, 397, 398], "559450": 396, "559462": [361, 390, 396, 397, 398], "559487": [361, 390, 396, 397, 398], "559500": 361, "559512": [361, 390, 396, 397, 398], "559537": [361, 390, 396, 397, 398], "559550": 396, "559562": [361, 390, 396, 397, 398], "559587": [361, 390, 396, 397, 398], "559612": [361, 390, 396, 397, 398], "559637": [361, 390, 396, 397, 398], "559650": 396, "559662": [361, 390, 396, 397, 398], "559687": [361, 390, 396, 397, 398], "559712": [361, 390, 396, 397, 398], "559737": [361, 390, 396, 397, 398], "559750": 396, "559762": [361, 390, 396, 397, 398], "559787": [361, 390, 396, 397, 398], "559812": [361, 390, 396, 397, 398], "559837": [361, 390, 396, 397, 398], "559850": 396, "559862": [361, 390, 396, 397, 398], "559887": [361, 390, 396, 397, 398], "559912": [361, 390, 396, 397, 398], "559937": [361, 390, 396, 397, 398], "559950": 396, "559962": [361, 390, 396, 397, 398], "559987": [361, 390, 396, 397, 398], "559_000": [361, 368], "56": [368, 396, 397], "560012": [361, 390, 396, 397, 398], "56002688e": 396, "560037": [361, 390, 396, 397, 398], "560050": 396, "560062": [361, 390, 396, 397, 398], "560087": [361, 390, 396, 397, 398], "560112": [361, 390, 396, 397, 398], "560137": [361, 390, 396, 397, 398], "560150": 396, "560162": [361, 390, 396, 397, 398], "560187": [361, 390, 396, 397, 398], "560212": [361, 390, 396, 397, 398], "560237": [361, 390, 396, 397, 398], "560250": 396, "560262": [361, 390, 396, 397, 398], "560287": [361, 390, 396, 397, 398], "560312": [361, 390, 396, 397, 398], "560337": [361, 390, 396, 397, 398], "560350": [396, 397], "560362": [361, 390, 396, 397, 398], "560387": [361, 390, 396, 397, 398], "560412": [361, 390, 396, 397, 398], "560437": [361, 390, 396, 397, 398], "560450": 396, "560462": [361, 390, 396, 397, 398], "560487": [361, 390, 396, 397, 398], "560500": 361, "560512": [361, 390, 396, 397, 398], "560537": [361, 390, 396, 397, 398], "560550": 396, "560562": [361, 390, 396, 397, 398], "560587": [361, 390, 396, 397, 398], "560612": [361, 390, 396, 397, 398], "560637": [361, 390, 396, 397, 398], "560650": 396, "560662": [361, 390, 396, 397, 398], "560687": [361, 390, 396, 397, 398], "560712": [361, 390, 396, 397, 398], "560737": [361, 390, 396, 397, 398], "560750": 396, "560762": [361, 390, 396, 397, 398], "560787": [361, 390, 396, 397, 398], "560812": [361, 390, 396, 397, 398], "560837": [361, 390, 396, 397, 398], "560850": 396, "560862": [361, 390, 396, 397, 398], "560887": [361, 390, 396, 397, 398], "560912": [361, 390, 396, 397, 398], "560937": [361, 390, 396, 397, 398], "560950": 396, "560962": [361, 390, 396, 397, 398], "560987": [361, 390, 396, 397, 398], "560_000": [361, 390], "561012": [361, 390, 396, 397, 398], "561037": [361, 390, 396, 397, 398], "561050": 396, "561062": [361, 390, 396, 397, 398], "561087": [361, 390, 396, 397, 398], "561112": [361, 390, 396, 397, 398], "561137": [361, 390, 396, 397, 398], "561150": 396, "561162": [361, 390, 396, 397, 398], "561187": [361, 390, 396, 397, 398], "561212": [361, 390, 396, 397, 398], "561237": [361, 390, 396, 397, 398], "561250": 396, "561262": [361, 390, 396, 397, 398], "561287": [361, 390, 396, 397, 398], "561312": [361, 390, 396, 397, 398], "561337": [361, 390, 396, 397, 398], "561350": 396, "561362": [361, 390, 396, 397, 398], "561387": [361, 390, 396, 397, 398], "561412": [361, 390, 396, 397, 398], "561437": [361, 390, 396, 397, 398], "561450": 396, "561462": [361, 390, 396, 397, 398], "561487": [361, 390, 396, 397, 398], "561500": 361, "561512": [361, 390, 396, 397, 398], "561537": [361, 390, 396, 397, 398], "561550": 396, "561562": [361, 390, 396, 397, 398], "561587": [361, 390, 396, 397, 398], "561612": [361, 390, 396, 397, 398], "561637": [361, 390, 396, 397, 398], "561650": 396, "561662": [361, 390, 396, 397, 398], "561687": [361, 390, 396, 397, 398], "561712": [361, 390, 396, 397, 398], "561737": [361, 390, 396, 397, 398], "561750": 396, "561762": [361, 390, 396, 397, 398], "561787": [361, 390, 396, 397, 398], "561800": 397, "561812": [361, 390, 396, 397, 398], "561837": [361, 390, 396, 397, 398], "561850": 396, "561862": [361, 390, 396, 397, 398], "561887": [361, 390, 396, 397, 398], "561912": [361, 390, 396, 397, 398], "561937": [361, 390, 396, 397, 398], "561950": 396, "561962": [361, 390, 396, 397, 398], "561987": [361, 390, 396, 397, 398], "562012": [361, 390, 396, 397, 398], "562037": [361, 390, 396, 397, 398], "562050": 396, "562062": [361, 390, 396, 397, 398], "562087": [361, 390, 396, 397, 398], "562112": [361, 390, 396, 397, 398], "562137": [361, 390, 396, 397, 398], "562150": 396, "562162": [361, 390, 396, 397, 398], "562187": [361, 390, 396, 397, 398], "562212": [361, 390, 396, 397, 398], "562237": [361, 390, 396, 397, 398], "562250": 396, "562262": [361, 390, 396, 397, 398], "562287": [361, 390, 396, 397, 398], "562312": [361, 390, 396, 397, 398], "562337": [361, 390, 396, 397, 398], "562350": 396, "562362": [361, 390, 396, 397, 398], "562387": [361, 390, 396, 397, 398], "562412": [361, 390, 396, 397, 398], "562437": [361, 390, 396, 397, 398], "562450": 396, "562462": [361, 390, 396, 397, 398], "562487": [361, 390, 396, 397, 398], "562500": 361, "562512": [361, 390, 396, 397, 398], "562537": [361, 390, 396, 397, 398], "562550": 396, "562562": [361, 390, 396, 397, 398], "562587": [361, 390, 396, 397, 398], "562612": [361, 390, 396, 397, 398], "562637": [361, 390, 396, 397, 398], "562650": 396, "562662": [361, 390, 396, 397, 398], "562687": [361, 390, 396, 397, 398], "562712": [361, 390, 396, 397, 398], "562737": [361, 390, 396, 397, 398], "562750": 396, "562762": [361, 390, 396, 397, 398], "562787": [361, 368, 390, 396, 397, 398], "562812": [361, 390, 396, 397, 398], "562837": [361, 390, 396, 397, 398], "562850": 396, "562862": [361, 390, 396, 397, 398], "562887": [361, 390, 396, 397, 398], "562912": [361, 390, 396, 397, 398], "562937": [361, 390, 396, 397, 398], "562950": 396, "562962": [361, 390, 396, 397, 398], "562987": [361, 390, 396, 397, 398], "562_000": 361, "563": 397, "563012": [361, 390, 396, 397, 398], "563037": [361, 390, 396, 397, 398], "563050": 396, "563062": [361, 390, 396, 397, 398], "563087": [361, 390, 396, 397, 398], "563112": [361, 390, 396, 397, 398], "563137": [361, 390, 396, 397, 398], "563150": 396, "563162": [361, 390, 396, 397, 398], "563187": [361, 390, 396, 397, 398], "563212": [361, 390, 396, 397, 398], "563237": [361, 390, 396, 397, 398], "563250": 396, "563262": [361, 390, 396, 397, 398], "563287": [361, 390, 396, 397, 398], "563312": [361, 390, 396, 397, 398], "563337": [361, 390, 396, 397, 398], "563350": 396, "563362": [361, 390, 396, 397, 398], "563387": [361, 390, 396, 397, 398], "56340003": 397, "563412": [361, 390, 396, 397, 398], "563437": [361, 390, 396, 397, 398], "563450": 396, "563462": [361, 390, 396, 397, 398], "563487": [361, 390, 396, 397, 398], "563500": 361, "563512": [361, 390, 396, 397, 398], "563537": [361, 390, 396, 397, 398], "563550": 396, "563562": [361, 390, 396, 397, 398], "563571": 368, "563587": [361, 390, 396, 397, 398], "563612": [361, 390, 396, 397, 398], "563637": [361, 390, 396, 397, 398], "563650": 396, "563662": [361, 390, 396, 397, 398], "563687": [361, 390, 396, 397, 398], "563712": [361, 390, 396, 397, 398], "563737": [361, 390, 396, 397, 398], "563750": 396, "563762": [361, 390, 396, 397, 398], "563787": [361, 390, 396, 397, 398], "563800": 368, "563812": [361, 390, 396, 397, 398], "563837": [361, 390, 396, 397, 398], "563850": 396, "563862": [361, 390, 396, 397, 398], "563887": [361, 390, 396, 397, 398], "563906": 368, "563912": [361, 390, 396, 397, 398], "563937": [361, 390, 396, 397, 398], "563950": 396, "563962": [361, 390, 396, 397, 398], "563987": [361, 390, 396, 397, 398], "564000": 396, "564392": 368, "564500": 361, "564_000": [361, 368], "565217280": 368, "565500": 361, "565533": 397, "565e": 361, "566500": 361, "567_000": 361, "56896552": 397, "569108": 397, "56989247": 397, "56b": 361, "57": [365, 366, 373, 389], "57024": 353, "57190623": 397, "572368": 368, "572765": 397, "5727653802364": 397, "57323608e": 396, "57339859e": 396, "574": 396, "57500": 358, "57634": 397, "578": 397, "57982802e": 396, "58": 368, "584505": 397, "5862069": 397, "58788539": 397, "59": [353, 361, 365, 389, 396, 397], "590000": 368, "59039576206": 371, "590909091": 340, "59139785": 397, "592e": 396, "595": 391, "597": 376, "59714": 397, "5972": 396, "59arrai": 397, "59e": [361, 390, 396, 397, 398], "5arrai": [390, 395], "5d": 353, "5e": [361, 390, 396, 397, 398], "5kb": 354, "5mb": [390, 396, 398], "5th": 285, "5xarrai": [390, 395], "5y": 390, "6": [80, 81, 82, 88, 91, 94, 96, 99, 103, 106, 107, 108, 109, 110, 111, 113, 114, 117, 119, 121, 122, 133, 135, 136, 137, 140, 141, 142, 145, 150, 151, 152, 153, 154, 156, 157, 167, 170, 171, 174, 177, 179, 180, 181, 184, 200, 218, 219, 223, 224, 225, 226, 231, 232, 233, 258, 259, 260, 261, 284, 303, 308, 318, 320, 337, 338, 339, 340, 341, 342, 344, 345, 349, 353, 354, 356, 358, 360, 361, 362, 363, 364, 368, 373, 375, 387, 390, 391, 393, 395, 396, 397, 398], "60": [157, 359, 373, 396], "600": 157, "601": 397, "60215054": 397, "60344828": 397, "60386456": 397, "604": 396, "604373": 397, "604e": 397, "607947": 397, "60833979e": 396, "608649": 397, "61": 396, "611605": 397, "61290323": 397, "615179": 397, "616": [356, 365, 389, 397], "6172": 396, "61737657e": 396, "618e": 397, "61984372": 397, "62": [373, 390], "62068966": 397, "625": [339, 344, 389], "6251": 357, "625149": 391, "63": [117, 174, 180, 181, 390], "632793": 397, "633": 397, "634": 396, "6344086": 397, "63479853e": 396, "635": 396, "63573351": 361, "63582288": 397, "63598": 397, "636": 396, "636363636": 340, "63793103": 397, "638e": 396, "639e": [361, 390, 396, 397, 398], "64": [0, 368, 386, 390], "640x480": [375, 397, 398], "641": [345, 347, 389], "64275829": 361, "643212": 397, "645": 365, "64516129": 397, "64976361": 361, "64b": 395, "64e": [297, 361, 390, 396, 397, 398], "64mb": 397, "65": [356, 373], "650": 345, "650000e": 396, "650444": 397, "650kb": 396, "651": 396, "65149546e": 396, "6516": 396, "65180204": 397, "652kb": 396, "65319374": 361, "654": 397, "654019": 397, "65517241": 397, "6558001": 397, "655e": 361, "656": 396, "6576766205017": 397, "657677": 397, "658489": 397, "65848928078788": 397, "66": 397, "66021213": 361, "6608": 396, "662": 391, "665e": 361, "66720984": 361, "66778121": 397, "669": 397, "66944365": 361, "66997651": 361, "67": [86, 373, 396, 397, 398], "670": 368, "67051889": 361, "6706604": 361, "672": [370, 372, 389], "67241379": 397, "674819": 397, "674e": [373, 390], "67500": 358, "67679977": 397, "676e": [373, 390], "67741935": 397, "67764711": 361, "67880011": 397, "679": 397, "679arrai": 397, "68": 397, "681818182": 340, "682052": 397, "682111": 361, "682634": 397, "6828": 390, "6834": 391, "68376037": 397, "68462064": 361, "687e": 397, "68817204": 397, "68908155e": 396, "689284": 397, "68965517": 397, "68arrai": 397, "68xarrai": 397, "69": 397, "6904": 396, "692": [391, 397], "692858": 397, "696516": 397, "69973953": 397, "6arrai": 361, "6mb": 361, "6xarrai": 361, "6y": 361, "7": [3, 26, 112, 157, 172, 256, 258, 259, 260, 261, 318, 320, 340, 345, 351, 354, 358, 360, 361, 364, 368, 373, 386, 390, 391, 395, 396, 397, 398], "70": [358, 360, 361, 373], "70168152": 361, "70234778": 361, "7024": 353, "702e": 397, "70303061": 361, "706": 396, "706002": 397, "70689655": 397, "707": 397, "70967742": 397, "71": [145, 337, 338, 339, 340, 341, 342, 396, 397, 398], "710": 373, "71045101e": 396, "7124": 396, "71310349e": 396, "71318932e": 396, "713659": 397, "714": 396, "7143": 318, "71571869": 397, "716": 396, "717647": 368, "719": [369, 372, 389], "72": [373, 391, 396], "72043011": 397, "72043324e": 396, "720891": 397, "722": [371, 397], "724": 396, "72413793": 397, "725e": 397, "727272727": 340, "728123": 397, "728261": 368, "7284": 396, "72873783e": 396, "72925758e": 396, "72b": 345, "73": [391, 396, 397], "730146": 397, "731060": 368, "731697856155446": 397, "73169786": 397, "731698": 397, "73389453": 361, "73469247": 361, "734arrai": 361, "735": 361, "735356": 397, "73551559": 361, "736": 361, "737": 361, "738": 361, "73mb": 361, "74": [364, 390, 391], "740": [389, 396, 400], "7412": 396, "74137931": 397, "7425878607337": 397, "742588": 397, "744": 391, "746": 397, "74767702": 397, "74989173946": 371, "75": [94, 289, 290, 291, 293, 337, 340, 356, 373, 391], "750": 345, "75000": 357, "75015": 357, "75020": 357, "751": [354, 365, 389], "752498": 397, "75268817": 397, "75328350e": 396, "755842": 397, "75605583e": 396, "75862069": 397, "75934601e": 396, "759731": 397, "75th": 251, "76": [340, 368, 391, 397], "760": 397, "76000023": 397, "763": 396, "76307201": 397, "76344086": 397, "76365618": 397, "764": [354, 396], "766": [375, 376, 389], "766963": 397, "768": 396, "769": 26, "77": [117, 174, 368, 373, 391, 396], "7708": 397, "772727273": 340, "774195": 397, "77586207": 397, "778": 26, "77963534": 397, "779986": 397, "78": [390, 397], "780": 397, "781": [353, 365, 389], "781427": 397, "78494624": 397, "7864": 396, "787407": 361, "787419": 361, "79": [141, 334], "791338": 397, "79133800852065": 397, "792": 396, "79310345": 397, "79561451": 397, "79569892": 397, "797": [338, 344, 389], "79857": 397, "799": 397, "7ec0e": [280, 284], "7layer": 361, "8": [157, 282, 297, 307, 308, 320, 340, 345, 351, 358, 360, 361, 364, 368, 373, 390, 391, 396, 397, 398], "80": [290, 291, 341, 342, 351, 353, 373], "800000": 368, "800kb": 361, "802": 396, "804131": 397, "805802": 397, "806310": 368, "80645161": 397, "809445": 391, "809999": 396, "80b": 395, "81": [117, 174, 337], "81034483": 397, "81159367": 397, "812": [371, 372, 389, 391], "81238127": 397, "813035": 397, "814": 397, "818": 354, "818181818": 340, "82": [117, 174, 337, 373, 396], "820267": 397, "82757283": 397, "82758621": 397, "82795699": 397, "828": [368, 372, 389], "83": [117, 174], "832": [373, 376, 389], "836": [361, 365, 389], "83600044": 397, "837": 397, "83741": 397, "838150": 368, "83870968": 397, "84": [368, 396], "842105344": 368, "843018": 391, "84355199": 397, "844642": 397, "84482759": 397, "84568357": 397, "847584": 340, "85": [356, 373, 398], "850": 345, "851874": 397, "852": 397, "854890": 391, "855": 391, "859106": 397, "85953116": 397, "86": [91, 341, 342, 368, 397, 398], "8608": 396, "86091": 391, "86206897": 397, "86359978": 397, "863636364": 340, "864": 353, "864b": 351, "865": 391, "869": 397, "87": 373, "87096774": 397, "872": 396, "875": [337, 397], "87510014": 397, "87551032": 397, "875arrai": 397, "876249": 397, "8762492488771": 397, "877339": 397, "879": 389, "87931034": 397, "88": 396, "88172043": 397, "883481": 397, "888": 396, "88b": 345, "890": 397, "89000003": 397, "890714": 397, "89148948": 397, "892": 391, "89221048e": 396, "8964": 390, "89655172": 397, "897946": 397, "89848566e": 396, "8arrai": 396, "8b": [345, 354, 361, 373, 390, 395, 396, 397, 398], "8mb": 397, "8xarrai": 396, "9": [157, 320, 339, 340, 345, 351, 354, 360, 361, 368, 373, 379, 382, 386, 390, 391, 396, 397, 398, 400], "90": [21, 358, 360, 373], "900": 345, "90000": 391, "9000001": 397, "901483": 397, "90279961": 397, "90322581": 397, "904": 391, "905": 397, "90746864": 397, "90870237e": 396, "909090909": 340, "90950": [369, 370, 371, 373, 390], "90_000": 391, "91": [345, 390, 397], "91000": 391, "91050": [373, 390], "91150": [373, 390], "91250": [373, 390], "913": 26, "91350": [373, 390], "9137931": 397, "91397849": 397, "914": 397, "91450": [373, 390], "91550": [373, 390], "91560221e": 396, "91650": [373, 390], "91750": [373, 390], "91759992": 397, "91850": [373, 390], "92": [373, 396, 397], "92000": 391, "92048049": 397, "922321": 397, "92344781": 397, "925628": 397, "9258001": 397, "9259787643396": 397, "925979": 397, "926": [364, 365, 389], "92645": 371, "928": [373, 397], "92900181e": 396, "929553": 397, "92arrai": 397, "92c5de": 288, "93": 26, "93000": 391, "93000031": 397, "93103448": 397, "93282318e": 396, "9358001": 397, "936785": 397, "93942697": 397, "94": 390, "94000": 391, "943": 397, "94623656": 397, "94827586": 397, "94934893e": 396, "94950": 369, "95": [356, 373], "95000": 391, "9508": 397, "95150": 369, "952": 396, "95350": 369, "954545455": 340, "95540613": 397, "95569086": 397, "95698925": 397, "9576": 396, "958": 397, "96": [368, 390], "96000": 391, "96116": 397, "963": [355, 365, 389], "964818": 397, "96547222e": 396, "96551724": 397, "96773362e": 396, "968393": 397, "97": [27, 157, 307, 308, 309, 353, 354, 356, 358, 359, 360, 361, 364, 366, 373, 396], "97000": 391, "97071409e": 396, "97132": 373, "972222222222214": 351, "975468": 397, "975625": 397, "977": 391, "97849462": 397, "97wr01926": 340, "98": [26, 27, 245, 307, 308, 309, 337, 338, 339, 340, 341, 342], "98000": 391, "982": 397, "98263748545648": 371, "98275862": 397, "984": 396, "98664236e": 396, "9874959": 397, "987arrai": 396, "98924731": 397, "99": [27, 307, 308, 309, 351, 371], "99000": 391, "99483585": 397, "996": 397, "9976": 396, "998836": 397, "999": 27, "9999": [26, 204, 212], "9999999": 0, "9nan": 345, "9x": 345, "A": [0, 9, 13, 26, 27, 29, 41, 42, 54, 58, 59, 66, 81, 82, 88, 91, 96, 112, 113, 117, 118, 122, 123, 136, 141, 147, 157, 174, 176, 180, 181, 211, 221, 230, 239, 255, 262, 290, 291, 292, 298, 309, 316, 318, 340, 342, 357, 361, 366, 379, 380, 390, 391, 392, 394, 397], "ATS": 157, "And": [340, 375, 386], "As": [0, 7, 118, 157, 176, 334, 353, 354, 356, 357, 358, 359, 361, 364, 377, 385, 391], "At": [0, 25, 84, 90, 93, 98, 116, 120, 126, 139, 144, 149, 165, 169, 178, 315, 386], "Be": [30, 32, 166], "But": 396, "By": [0, 55, 99, 129, 136, 157, 182, 259, 281, 348, 361, 373, 385, 390], "For": [0, 12, 25, 26, 27, 33, 77, 80, 86, 91, 94, 113, 117, 119, 126, 136, 140, 141, 145, 157, 174, 177, 180, 199, 214, 216, 217, 223, 224, 225, 226, 230, 239, 253, 278, 280, 289, 290, 291, 292, 293, 294, 295, 309, 315, 316, 318, 331, 332, 334, 340, 342, 348, 351, 354, 356, 357, 361, 363, 368, 378, 379, 380, 382, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398], "If": [3, 6, 11, 12, 16, 27, 37, 41, 42, 43, 44, 45, 47, 54, 55, 56, 59, 77, 79, 80, 81, 85, 86, 91, 94, 99, 103, 107, 108, 109, 111, 112, 117, 121, 122, 123, 128, 131, 135, 136, 140, 141, 145, 151, 153, 156, 157, 162, 163, 166, 170, 172, 174, 179, 180, 181, 209, 212, 214, 221, 222, 223, 224, 226, 231, 232, 233, 240, 246, 251, 256, 259, 262, 264, 273, 277, 278, 280, 283, 284, 287, 290, 291, 294, 295, 298, 304, 307, 308, 316, 318, 332, 356, 361, 363, 371, 385, 386, 388, 394, 396], "In": [0, 5, 11, 18, 20, 26, 29, 39, 41, 44, 47, 49, 54, 55, 80, 81, 82, 117, 118, 136, 157, 172, 174, 176, 221, 222, 239, 251, 275, 281, 298, 302, 310, 311, 312, 313, 316, 332, 333, 335, 340, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 371, 373, 385, 386, 390, 391, 394, 395, 396, 397, 398], "It": [0, 13, 14, 27, 44, 55, 76, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 200, 221, 222, 230, 279, 290, 291, 292, 296, 309, 335, 351, 353, 356, 357, 360, 361, 362, 368, 373, 375, 379, 382, 385, 386, 387, 391, 395, 396, 398], "Its": [142, 167, 396], "NO": 157, "No": [0, 209], "Not": [47, 49, 79, 80, 86, 91, 94, 117, 122, 141, 145, 172, 174, 180, 181, 259, 334, 351, 379, 380, 386, 388], "On": [118, 176, 332, 333, 336, 388, 397], "One": [31, 66, 112, 113, 266, 268, 280, 285, 287, 294, 368, 379, 382], "Or": [3, 5, 25, 126, 172, 256, 259, 315, 331], "Such": 396, "That": [357, 398], "The": [0, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 25, 26, 27, 29, 30, 31, 33, 36, 37, 41, 44, 45, 47, 49, 51, 54, 55, 58, 59, 66, 68, 70, 72, 74, 76, 77, 78, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 103, 105, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 126, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 157, 163, 164, 165, 167, 168, 169, 171, 172, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 206, 209, 211, 213, 217, 219, 220, 221, 222, 230, 235, 239, 249, 251, 252, 253, 255, 256, 259, 275, 278, 284, 285, 287, 288, 290, 291, 292, 294, 295, 296, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 331, 334, 336, 337, 338, 339, 340, 342, 345, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 371, 373, 375, 377, 379, 380, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 399], "Their": [385, 390], "Then": [128, 129, 130, 221, 222, 362, 366, 386], "There": [5, 45, 118, 176, 332, 335, 345, 360, 362, 371, 385, 392, 394, 396, 397, 398], "These": [0, 13, 14, 25, 47, 49, 84, 90, 93, 98, 116, 120, 126, 139, 144, 149, 165, 169, 178, 199, 202, 246, 247, 280, 284, 286, 294, 315, 334, 343, 346, 348, 349, 363, 367, 377, 386, 388, 390, 391, 392, 395, 396, 397, 398], "To": [0, 5, 26, 35, 39, 41, 44, 45, 47, 55, 59, 84, 90, 93, 98, 116, 120, 125, 126, 139, 140, 144, 149, 165, 169, 178, 230, 239, 251, 253, 259, 281, 295, 315, 331, 334, 336, 337, 338, 339, 340, 341, 342, 345, 354, 357, 361, 366, 370, 373, 377, 379, 380, 382, 386, 388, 390, 394, 395, 396, 397, 398], "With": [118, 136, 176, 377, 378, 379, 386, 390, 397], "_": [0, 41, 42, 43, 44, 47, 54, 55, 74, 75, 76, 77, 78, 79, 80, 85, 86, 91, 94, 106, 108, 110, 112, 113, 117, 122, 123, 136, 140, 141, 145, 150, 152, 154, 157, 161, 163, 166, 170, 171, 172, 173, 174, 180, 181, 345, 394, 396, 397], "__": [74, 75, 76, 77, 78, 79, 80, 85, 86, 91, 94, 106, 108, 110, 112, 113, 117, 122, 123, 136, 140, 141, 145, 150, 152, 154, 157, 161, 163, 166, 170, 171, 172, 173, 174, 180, 181], "__init__": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 58, 61, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 91, 94, 99, 103, 106, 108, 110, 112, 113, 117, 122, 123, 124, 136, 140, 141, 145, 150, 152, 154, 157, 161, 163, 166, 170, 171, 172, 173, 174, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 278, 279, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 336, 386], "__name__": 396, "__version__": 336, "_c": 43, "_dask": 0, "_dtype_lik": 230, "_dtypedict": [230, 249], "_l": [41, 42, 43, 44, 54, 55, 390], "_metadata_dict": 351, "_mf6io": 77, "_p": 43, "_provid": 284, "_regrid_method": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 357, 396], "_required_extra": 26, "_supportsdtyp": [230, 249], "_tricontour": 355, "_type": 230, "_valid": 0, "ab": [339, 345, 357, 358, 360, 364, 366], "abc": 230, "abl": [0, 356, 388, 395], "about": [136, 157, 172, 332, 337, 339, 353, 357, 361, 388], "abov": [0, 27, 136, 163, 166, 170, 218, 234, 307, 309, 354, 361, 377, 388, 390, 391, 394, 396, 397], "abrupt": 304, "abruptli": 395, "absent": 271, "absolut": [27, 135, 136, 157, 221, 307, 309], "abstract": [61, 215], "acceler": [157, 303], "accept": [0, 26, 100, 104, 117, 127, 174, 252, 253, 271, 272, 280, 284, 307, 308, 368, 385, 396, 398], "access": [0, 336, 351, 390, 395], "accessor": [379, 382], "accident": 0, "accompani": 390, "accord": [0, 41, 44, 47, 49, 54, 55, 202, 227, 336, 355, 390, 398], "accordingli": [0, 101, 105], "account": [0, 21, 147, 356, 396, 397], "accumul": [216, 354], "accur": [0, 85, 280], "accuraci": [230, 245, 289, 290, 291, 292, 293], "achiev": [157, 290, 291, 292, 361, 396], "acitv": 294, "acronym": 386, "across": [223, 224, 225, 226, 239, 356, 361, 396, 397, 399], "act": [0, 386, 397], "activ": [0, 16, 26, 51, 78, 80, 81, 82, 83, 89, 92, 97, 99, 101, 105, 107, 109, 111, 112, 115, 118, 121, 123, 136, 138, 143, 148, 151, 153, 156, 157, 164, 168, 172, 176, 179, 202, 204, 218, 223, 224, 225, 226, 231, 232, 233, 236, 238, 241, 242, 243, 244, 254, 262, 294, 295, 304, 307, 308, 310, 318, 337, 338, 339, 340, 341, 342, 345, 361, 386, 388, 395, 396, 397, 398], "active_grid_boundary_xi": [0, 320], "actual": [0, 44, 55, 184, 206, 217, 394], "ad": [44, 59, 77, 78, 133, 136, 157, 255, 256, 275, 304, 354, 358, 360, 363, 373, 386, 394, 396, 397], "adapt": [11, 12, 157, 255, 256], "add": [0, 25, 59, 61, 68, 70, 72, 78, 85, 126, 133, 278, 284, 315, 332, 339, 353, 354, 358, 359, 361, 363, 364, 366, 375, 386, 388, 391, 394, 395, 396, 397], "add_basemap": 284, "add_bounding_box": 278, "add_colorbar": 368, "add_default_file_handl": [56, 59, 68, 72], "add_default_stream_handl": [56, 59, 68, 72], "add_mesh": 278, "add_timemap": 0, "addit": [0, 12, 25, 39, 51, 61, 68, 70, 72, 118, 122, 126, 136, 157, 176, 217, 221, 230, 249, 315, 334, 348, 386, 390], "addition": [129, 182, 230, 386], "additional_depth": [61, 68, 70, 72], "additional_tim": [25, 126, 315, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 358, 359, 360, 361, 364, 366, 395], "address": [0, 332], "adequ": [221, 222, 290, 291, 292, 303, 307, 308, 316], "adher": 0, "adjac": [26, 76, 136, 304], "adjust": [26, 214, 290, 291, 292, 316], "administr": [388, 391], "admiss": [130, 182, 183], "adv": [337, 338, 339, 340, 341, 342, 353, 356, 359, 366], "advanc": [0, 337, 363, 387], "advantag": [334, 394], "advect": [11, 289, 290, 291, 292, 293, 316, 353, 356, 366], "advectiontvd": [337, 338, 339, 340, 341, 342, 353], "advectionupstream": [356, 359, 366], "advent": 292, "advic": [0, 37, 388, 396, 398], "advis": 214, "affair": 386, "affect": [0, 27, 113, 294, 309, 398], "affin": [251, 276, 377, 390], "afresh": 333, "after": [0, 3, 41, 42, 54, 77, 79, 80, 86, 91, 94, 99, 103, 117, 122, 126, 141, 145, 172, 174, 180, 181, 206, 230, 263, 315, 318, 333, 337, 338, 339, 340, 341, 342, 361, 398], "again": [0, 41, 54, 80, 118, 176, 332, 386, 394, 396, 397], "against": [8, 361, 386], "aggreg": [0, 250, 252, 253, 379, 380], "agnost": [0, 102, 117, 174], "agricultur": 361, "ahead": [361, 364, 396], "ahn": [371, 375, 390], "ahn_50m": 371, "ahn_utm": 371, "ahn_utm_50m": 371, "aim": [27, 309], "air": [172, 385], "air_entri": 172, "air_entry_potenti": 172, "al": [297, 356], "albedo": [209, 351], "algorithm": [157, 290, 291, 292, 318, 397], "alh": 85, "alias": 50, "align": [136, 231, 232, 233, 379, 380, 398], "all": [0, 3, 5, 7, 8, 11, 25, 27, 31, 41, 42, 54, 61, 74, 75, 76, 81, 82, 84, 90, 91, 93, 98, 99, 101, 103, 105, 113, 116, 118, 120, 126, 129, 134, 135, 136, 139, 140, 144, 149, 157, 165, 167, 169, 171, 176, 178, 182, 184, 207, 217, 231, 232, 233, 240, 259, 277, 290, 291, 294, 295, 303, 307, 309, 315, 332, 333, 334, 335, 336, 343, 345, 346, 349, 351, 354, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 374, 379, 380, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 398, 399], "all_boundaries_constant_head": 354, "all_package_inst": 396, "all_touch": 240, "alloc": [0, 88, 96, 102, 136, 147, 218, 219, 223, 224, 225, 226, 236, 237, 238, 240], "allocate_drn_cel": [0, 236, 320], "allocate_ghb_cel": [0, 320], "allocate_rch_cel": [0, 218, 320], "allocate_riv_cel": [0, 238, 320, 397], "allocation_opt": [0, 88, 96, 147, 223, 224, 225, 226, 236, 238, 320, 397], "allow": [0, 3, 41, 54, 80, 112, 157, 172, 214, 223, 224, 226, 289, 290, 291, 292, 293, 295, 316, 361, 362, 368, 375, 377, 386, 388, 390, 394], "alon": 361, "along": [0, 9, 10, 13, 14, 21, 85, 128, 131, 136, 239, 255, 256, 258, 265, 266, 267, 268, 304, 354, 361, 368, 373, 390], "alpha": [280, 284, 368, 375], "alreadi": [0, 80, 222, 285, 351, 366, 388, 394, 398, 399], "alright": 398, "also": [0, 21, 27, 39, 41, 44, 54, 55, 80, 86, 91, 94, 117, 130, 136, 141, 145, 157, 174, 180, 181, 182, 183, 200, 201, 213, 230, 239, 262, 289, 290, 291, 292, 293, 294, 295, 307, 309, 332, 333, 334, 345, 354, 356, 357, 358, 361, 362, 369, 373, 375, 377, 379, 380, 385, 386, 388, 390, 391, 394, 395, 396, 397, 398], "alter": [284, 398], "altern": [0, 41, 54, 379, 380, 386, 388], "alternative_cell_averag": [136, 396], "alterra": 26, "although": [74, 304, 353], "altogeth": [379, 380], "alv": 85, "alwai": [0, 20, 25, 32, 44, 45, 50, 100, 104, 126, 127, 136, 166, 172, 297, 302, 315, 316, 332, 377, 379, 380, 386, 390, 394, 396, 398], "ambigu": [260, 261], "amersfoort": [284, 371], "among": [77, 295, 361], "amongst": 0, "amount": [0, 26, 30, 157, 163, 304, 310, 311, 312, 356, 386, 395, 396], "amt": 136, "an": [0, 4, 5, 11, 13, 14, 21, 26, 27, 30, 39, 41, 45, 46, 47, 50, 51, 54, 56, 66, 75, 78, 80, 101, 105, 107, 109, 111, 112, 114, 117, 118, 123, 136, 137, 140, 142, 151, 153, 156, 157, 163, 174, 176, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 221, 227, 231, 232, 233, 240, 251, 255, 256, 258, 259, 260, 261, 265, 266, 267, 268, 276, 280, 284, 287, 295, 303, 304, 307, 308, 309, 318, 320, 334, 335, 338, 339, 340, 342, 345, 354, 356, 357, 358, 360, 361, 364, 368, 369, 375, 377, 383, 385, 387, 388, 390, 391, 392, 394, 395, 396, 399], "anaconda": 388, "analys": 214, "analysi": [337, 354, 361, 379, 380, 382, 387], "analyz": [398, 399], "ananaconda": 386, "angl": [21, 136, 396], "angldegx": [0, 136], "angle1": [136, 194, 396], "angle2": [136, 194, 396], "angle3": [136, 194, 396], "ani": [0, 21, 47, 48, 50, 51, 80, 83, 85, 89, 91, 92, 97, 99, 100, 104, 112, 115, 117, 118, 122, 123, 127, 136, 138, 141, 143, 145, 148, 157, 164, 167, 168, 172, 174, 176, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 227, 230, 249, 258, 260, 264, 265, 266, 267, 268, 271, 289, 290, 291, 292, 293, 304, 316, 332, 379, 380, 382, 383, 388, 394, 396, 397], "anim": [0, 278, 279, 387, 399], "anisotrop": [21, 136, 360], "anisotropi": [21, 34, 136, 304], "anisotropy_angl": 21, "anisotropy_factor": 21, "announc": [63, 64], "annoyingli": 394, "annualcropfactor": 320, "annualgrowthfactor": 351, "anoth": [8, 80, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 251, 357, 379, 380, 385, 390], "answer": 0, "anticip": [294, 295], "anymor": 0, "anyth": [58, 70, 100, 104, 127, 252, 253, 271], "anywai": 332, "anywher": [379, 380], "apart": [0, 216, 332], "api": [0, 77, 102, 249, 252, 253, 274, 334, 345, 364, 391], "apipackag": 0, "appar": 392, "append": [0, 377], "appli": [0, 4, 11, 12, 19, 25, 28, 45, 99, 101, 105, 108, 126, 136, 157, 172, 214, 285, 304, 307, 310, 311, 312, 315, 316, 318, 361, 371, 373, 392, 396], "applic": [0, 66, 297, 318], "approach": [13, 14, 157, 290, 291, 394, 396], "appropri": [0, 157, 265, 266, 267, 268, 304, 379, 380, 388, 395], "approxim": [85, 230, 290, 291, 292, 303, 356, 385], "april": [0, 3, 345, 386], "aqueou": [112, 123], "aquif": [15, 23, 30, 32, 33, 34, 35, 94, 112, 121, 123, 163, 166, 179, 228, 284, 294, 304, 359, 361, 385, 390], "aquitard": [23, 35, 228, 280, 361, 390, 397], "ar": [0, 3, 4, 5, 7, 9, 10, 11, 13, 14, 22, 25, 26, 27, 31, 41, 42, 45, 47, 48, 49, 50, 51, 54, 66, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 104, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 153, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 199, 202, 204, 209, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 236, 238, 239, 246, 247, 251, 255, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 272, 273, 275, 278, 280, 284, 285, 286, 287, 290, 291, 294, 295, 304, 307, 309, 310, 311, 312, 315, 318, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 368, 370, 371, 373, 377, 379, 380, 383, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399], "arang": [251, 258, 337, 338, 339, 340, 341, 342, 345, 353, 356, 357, 358, 359, 360, 364, 366, 373, 375, 391, 397], "arbitrari": [0, 5, 258], "architectur": 386, "area": [26, 29, 32, 141, 166, 199, 202, 203, 219, 230, 249, 252, 295, 310, 311, 312, 356, 361, 368, 369, 379, 380, 382, 385, 397, 398], "area_svat": 202, "areal": 361, "arg": [58, 66, 73, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 218, 219], "arguabl": 385, "argument": [0, 5, 11, 45, 46, 74, 75, 76, 84, 90, 93, 98, 113, 116, 120, 129, 130, 133, 139, 144, 149, 162, 165, 169, 178, 182, 183, 209, 217, 221, 222, 230, 249, 251, 258, 259, 260, 261, 278, 280, 281, 284, 285, 287, 339, 390, 397], "aris": 4, "arithmet": 304, "arm": 386, "around": [3, 290, 291, 292, 332, 348, 388, 394], "arrai": [0, 5, 22, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 105, 112, 113, 114, 115, 116, 117, 120, 123, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 178, 180, 181, 182, 183, 199, 201, 202, 204, 209, 211, 212, 213, 214, 215, 223, 224, 225, 226, 230, 235, 236, 238, 239, 245, 258, 259, 260, 265, 266, 267, 268, 280, 284, 285, 287, 295, 297, 340, 345, 351, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 366, 368, 373, 377, 386, 390, 394, 395, 396, 397, 398], "array_lik": [9, 13, 161, 255, 287], "array_nam": 396, "array_origin": 396, "array_regrid": 396, "arraynam": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178], "arri": 396, "arrow": 354, "articl": [335, 385, 386], "artifact": [361, 364, 396], "artifici": 26, "as_index": 230, "asc": [307, 308], "ascii": [0, 37, 38, 211, 390], "asctim": 56, "asdict": 396, "ask": [0, 332, 383], "assert": 0, "assign": [0, 12, 59, 82, 102, 117, 118, 121, 135, 136, 157, 174, 176, 179, 227, 235, 281, 283, 285, 294, 304, 345, 368, 385, 395, 396, 397], "assign_coord": [281, 285, 356, 361], "assign_edge_coord": 354, "assign_wel": [0, 320], "assoc_column": [0, 47, 49], "assoc_ext": [47, 48], "assoc_kwarg": 45, "associ": [0, 45, 46, 47, 48, 49, 50, 78, 118, 136, 176, 353, 354, 356, 359, 366, 392, 396], "assum": [81, 82, 121, 136, 157, 172, 179, 223, 224, 226, 230, 353, 354, 356, 358, 361, 364, 394, 396], "assumpt": [13, 14, 136], "astyp": [345, 361, 368], "asymmetr": 78, "at_elev": [218, 223, 224, 236, 397], "at_first_act": [218, 225, 397], "ath1": 85, "ath2": 85, "atleast": 0, "ats_outer_maximum_fract": [0, 157], "attach": [0, 353, 358, 360, 364, 390], "attempt": [80, 136, 304], "attent": 398, "attr": [41, 42, 54, 251], "attract": 386, "attribut": [0, 58, 66, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 90, 91, 93, 94, 98, 99, 103, 106, 108, 110, 112, 113, 116, 117, 120, 122, 123, 136, 139, 140, 141, 144, 145, 149, 150, 152, 154, 157, 161, 163, 165, 166, 169, 170, 171, 172, 173, 174, 178, 180, 181, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 230, 251, 256, 271, 345, 351, 354, 357, 361, 373, 377, 390, 391, 394, 395, 396, 397, 398], "atv": 85, "au": 366, "auburn": 337, "autmat": 284, "auto": [0, 320], "autom": 396, "automat": [0, 39, 41, 42, 44, 54, 119, 128, 129, 130, 131, 140, 177, 182, 183, 278, 282, 287, 289, 290, 291, 292, 293, 294, 295, 296, 302, 318, 332, 334, 345, 353, 357, 377, 388, 390, 394], "aux": [80, 86, 91, 94, 117, 141, 145, 174, 180, 181, 353, 366], "auxiliari": [0, 136], "auxiliary_variable_nam": 161, "auxmix": [80, 86, 91, 94, 117, 141, 145, 174, 180, 181], "avail": [0, 58, 66, 157, 220, 221, 222, 223, 224, 225, 226, 236, 238, 251, 334, 348, 353, 354, 356, 358, 361, 364, 368, 386, 388, 392, 394, 396, 397], "averag": [3, 136, 157, 251, 357, 361, 368, 371, 379, 380, 396], "avevap": 351, "avoid": [0, 157, 212, 227, 240, 260, 261, 379, 380], "avprec": 351, "awar": 394, "awrmat": 337, "ax": [0, 21, 25, 126, 136, 280, 284, 285, 287, 288, 315, 337, 338, 339, 340, 341, 342, 354, 355, 356, 357, 361, 362, 366, 368, 369, 370, 371, 373, 375, 391, 394, 396, 397, 398], "ax0": 396, "ax1": 396, "axesimag": [361, 364, 368, 370, 371], "axi": [21, 41, 42, 54, 85, 136, 221, 280, 284, 285, 287, 357, 368, 390, 392], "axix": 377, "b": [25, 32, 126, 166, 228, 229, 251, 277, 280, 284, 315, 359, 386, 394], "b12a1745001": 368, "b12a1745002": 368, "b12a1747001": 368, "b12a1747002": 368, "b12a1748001": 368, "b12a1805001": 368, "b12a1805002": 368, "b12a1806001": 368, "ba": [0, 337, 338, 339, 340, 341, 342], "back": [0, 45, 263, 284, 353, 354, 358, 364, 386, 390, 391], "backend": 0, "background": [284, 361, 373, 377, 385, 388, 397], "backtrack": 157, "backtracking_numb": 157, "backtracking_reduction_factor": 157, "backtracking_residual_limit": 157, "backtracking_toler": 157, "backward": [113, 274], "bakker": 342, "balanc": [0, 217, 288, 290, 291, 292, 295, 307, 308, 355, 356, 396, 399], "band": 251, "bar": [157, 351], "bardelta": 157, "bare": [199, 217, 386], "bare_soil_factor": 199, "barrier": [0, 22, 106, 107, 108, 109, 110, 111, 150, 151, 152, 153, 154, 156, 246, 247], "barrier_gdf": [106, 108, 110, 150, 152, 154], "barrier_i": [150, 152, 154, 246, 247], "barrier_x": [150, 152, 154, 246, 247], "barrier_zbot": [246, 247], "barrier_zbottom": [246, 247], "barrier_ztop": [246, 247], "barycentr": [185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198], "base": [0, 13, 14, 21, 26, 47, 48, 50, 58, 61, 66, 68, 70, 72, 74, 84, 90, 93, 98, 107, 109, 111, 116, 119, 120, 121, 136, 139, 144, 149, 151, 153, 156, 157, 165, 169, 172, 177, 178, 179, 214, 219, 222, 234, 283, 289, 290, 291, 292, 293, 316, 335, 353, 356, 359, 360, 361, 368, 373, 377, 379, 382, 385, 386, 387, 388, 390, 391, 396], "baseexcept": 272, "basemap": [0, 284, 375], "basenam": [99, 103], "baseregridd": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178], "basi": 377, "basic": [239, 280, 294, 295, 304, 340, 351, 397, 398], "basicconfig": 56, "basicflow": [0, 337, 338, 339, 340, 341, 342], "basictransport": [0, 337, 338, 339, 340, 341, 342], "bat": 333, "batch": 0, "bbox_inch": 288, "bc": 172, "bcf": [361, 385], "bdgfff": [5, 373], "bdgflf": [5, 373], "bdgfrf": [5, 373], "becaus": [0, 140, 212, 294, 345, 351, 357, 359, 377, 386, 394, 395], "becom": [0, 44, 55, 80, 136, 290, 291, 292, 304, 385, 395, 396], "bed": [15, 228, 230, 294, 358, 397], "bed_leak": 364, "been": [0, 73, 80, 128, 129, 130, 131, 136, 162, 214, 255, 256, 259, 291, 334, 350, 353, 354, 358, 361, 368, 377, 383, 386, 390, 394, 396, 398], "befor": [0, 9, 10, 26, 41, 42, 54, 102, 121, 133, 179, 250, 256, 345, 361, 362, 368, 379, 380, 396, 397, 398], "beforehand": 12, "begin": [31, 63, 64, 88, 96, 130, 147, 182, 183, 209, 294, 295, 361, 364, 396], "behav": 23, "behavior": [0, 66, 157, 259, 260, 261, 284, 361, 364, 396], "behind": [337, 394], "being": [0, 118, 134, 157, 176, 274, 385, 396], "belong": [0, 107, 109, 111, 134, 151, 153, 156], "below": [3, 4, 7, 18, 27, 29, 41, 51, 54, 99, 136, 157, 163, 166, 170, 172, 218, 233, 234, 290, 291, 292, 295, 298, 307, 309, 313, 335, 348, 353, 356, 386, 394], "below_surfacelevel": 3, "benchmark": [337, 340, 342, 363, 365, 389], "bene": [19, 27, 28, 291, 297, 309], "benefit": 157, "best": [45, 316, 335, 356, 394, 398], "better": [0, 45, 121, 179, 290, 291, 292, 351, 357, 368, 385, 398], "between": [0, 7, 9, 10, 13, 17, 21, 23, 25, 35, 45, 74, 76, 94, 99, 112, 126, 136, 157, 172, 201, 213, 215, 219, 229, 245, 280, 284, 286, 290, 291, 292, 296, 303, 304, 308, 315, 316, 318, 334, 342, 345, 356, 357, 361, 366, 379, 380, 386, 395, 396, 398, 399], "beyond": [118, 176, 221], "bhead": [20, 94, 302], "bi": 157, "bicgstab": [157, 308, 353, 356, 359, 366], "big": [379, 380], "big_align": [379, 380], "bilinear": 251, "billion": 383, "bin": 396, "binari": [0, 37, 39, 78, 112, 128, 129, 130, 131, 135, 140, 182, 183, 334, 353, 356, 359, 361, 366, 377, 379, 382, 386], "binary_dil": [257, 354, 356, 360], "binary_eros": 361, "binaryfil": 377, "bind": [379, 382], "bisect": [307, 308], "bit": [0, 230, 394, 397], "black": [284, 354, 375, 397], "blank": [101, 105], "bloat": 334, "blob": 334, "block": [0, 50, 112, 123, 136, 172, 263, 290, 291, 334, 361, 396], "bnd": [51, 337, 338, 339, 340, 341, 342, 345], "bodi": [0, 253], "bone": 386, "bookkeep": 345, "bool": [0, 3, 5, 41, 42, 43, 51, 54, 59, 68, 72, 77, 78, 79, 80, 85, 86, 91, 94, 99, 100, 102, 103, 104, 106, 108, 110, 112, 113, 117, 121, 122, 123, 126, 127, 128, 129, 130, 132, 135, 136, 140, 141, 145, 150, 152, 154, 157, 161, 162, 163, 166, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 202, 204, 217, 221, 227, 240, 245, 258, 262, 277, 281, 284, 296, 298, 302, 303, 306, 310, 311, 312, 313, 316, 318, 319, 354, 356, 360, 361, 364, 395, 396, 397, 398], "boolean": [0, 3, 8, 163, 166, 223, 224, 225, 226, 236, 238, 241, 242, 243, 244, 251, 280, 284, 361, 379, 380], "boolfalsearrai": [395, 396, 397, 398], "booltruearrai": 396, "border": 354, "border_valu": [354, 356, 360], "borehol": [47, 368, 391], "borehole1d": [47, 49], "borehole3d": [47, 49], "bot": [6, 8, 11, 12, 23, 35, 136, 281, 304, 337, 338, 339, 340, 341, 342, 361, 373], "bot_elev": 364, "both": [0, 5, 26, 27, 77, 85, 112, 123, 140, 147, 157, 209, 218, 230, 239, 252, 253, 255, 256, 259, 280, 284, 285, 287, 290, 291, 316, 336, 337, 340, 345, 357, 361, 362, 377, 385, 386, 388, 395, 396], "bottom": [0, 29, 91, 99, 107, 109, 111, 113, 121, 136, 145, 151, 153, 156, 170, 172, 173, 174, 179, 186, 218, 219, 222, 223, 224, 226, 227, 233, 234, 235, 236, 237, 238, 246, 247, 280, 281, 285, 287, 294, 313, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 358, 359, 360, 361, 364, 366, 373, 390, 396, 397, 398], "bottom_elev": [0, 29, 51, 145, 196, 219, 226, 233, 238, 313, 361, 396, 397, 398], "bottom_l": [378, 379], "bottom_l1": [378, 379], "bottom_resist": 204, "bottom_sourc": 0, "bound": [0, 29, 118, 125, 176, 234, 240, 258, 259, 260, 261, 278, 313], "boundari": [0, 5, 7, 8, 17, 18, 19, 20, 26, 28, 29, 58, 66, 79, 80, 86, 91, 94, 117, 141, 145, 162, 174, 180, 181, 218, 219, 221, 224, 232, 254, 257, 280, 284, 286, 294, 295, 296, 298, 302, 304, 313, 339, 353, 354, 356, 358, 359, 360, 361, 364, 366, 391, 397], "boundary_valu": 125, "boundarycondit": 0, "boundarynorm": 280, "box": [125, 278, 337], "branch": [332, 336], "break": [0, 386, 388], "breviti": 351, "brief": 398, "bring": 383, "broadcast": [5, 345, 351, 397], "broader": 387, "broken": 0, "brook": 172, "brought": 398, "brows": 334, "btn": [0, 337, 338, 339, 340, 341, 342], "budget": [0, 5, 6, 11, 77, 79, 80, 86, 91, 94, 99, 103, 112, 117, 122, 123, 129, 131, 136, 140, 141, 145, 162, 163, 166, 172, 174, 180, 181, 182, 184, 217, 296, 298, 302, 304, 306, 310, 311, 312, 313, 319, 361, 373, 387], "budget_fil": [0, 140], "budget_fileout": 172, "budgetbinfil": 112, "budgetcsv_fileout": 172, "budgetcsvfil": [112, 364], "budgetzon": 5, "bug": [0, 332], "bui": 78, "build": [0, 336, 343, 346, 349, 357, 360, 361, 362, 363, 366, 386, 387, 396, 398, 399], "buildag": [361, 364, 391, 396], "built": 377, "bulk": [112, 123, 359], "bulk_dens": [112, 123, 193, 359, 396], "bundl": 390, "buoyanc": [0, 353], "burden": 356, "burn": [230, 240, 249], "busi": 66, "button": [336, 363], "by_conduct": [219, 397], "by_corrected_transmiss": [219, 238, 397], "by_crosscut_thick": [219, 397], "by_crosscut_transmiss": [219, 397], "by_layer_thick": [219, 397], "by_layer_transmiss": [219, 236, 397], "bypass": 26, "byte": [0, 184, 354, 390, 394, 396], "c": [0, 4, 25, 29, 126, 251, 315, 318, 337, 338, 339, 340, 341, 342, 345, 359, 361, 364, 386, 391, 396, 397], "c0": [228, 230], "c1": [78, 228], "c2": 78, "c_leakag": 320, "c_radial": 320, "ca0020": 288, "cach": [0, 357, 396], "calcul": [0, 3, 5, 8, 11, 12, 21, 74, 78, 80, 99, 107, 109, 111, 136, 141, 151, 153, 156, 157, 163, 166, 171, 172, 230, 294, 295, 304, 306, 307, 310, 311, 312, 316, 318, 361, 368, 387, 392, 398], "calculate_gxg": [0, 320], "calculate_gxg_point": 0, "calendar": [50, 130, 182, 183, 361, 386], "calibr": [26, 214], "call": [0, 26, 45, 77, 78, 84, 87, 90, 93, 95, 98, 102, 116, 118, 119, 120, 126, 128, 129, 130, 131, 133, 139, 144, 146, 149, 157, 165, 169, 175, 176, 177, 178, 220, 221, 222, 230, 274, 278, 281, 290, 291, 315, 332, 345, 351, 361, 368, 379, 382, 386, 394, 396, 398], "callabl": [63, 64, 252, 253], "calss": [27, 309], "camera": 278, "camera_posit": 278, "campbel": 340, "can": [0, 5, 8, 11, 12, 13, 14, 17, 21, 25, 26, 27, 39, 41, 42, 45, 47, 54, 59, 66, 77, 78, 80, 81, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 99, 100, 103, 104, 106, 108, 110, 112, 113, 114, 116, 117, 119, 120, 122, 126, 127, 136, 137, 139, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 157, 163, 165, 166, 167, 169, 170, 174, 177, 178, 180, 181, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 209, 212, 217, 220, 221, 222, 223, 224, 225, 226, 230, 236, 238, 239, 240, 246, 247, 255, 256, 259, 275, 278, 280, 281, 284, 285, 287, 290, 291, 292, 295, 296, 309, 315, 316, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 345, 348, 350, 351, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 366, 368, 369, 373, 377, 378, 379, 380, 382, 385, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398], "canal": 391, "cannot": [39, 50, 118, 136, 157, 176, 209, 236, 238, 386, 394, 395, 396], "cap": [0, 26], "capabl": [157, 399], "capac": [26, 123, 199, 204, 209, 215], "capillari": [172, 214, 385], "captur": [388, 394], "care": [30, 32, 166, 259, 394, 396], "carri": [356, 386, 396, 398], "cartesian": [21, 251], "cartodb": 284, "case": [0, 4, 5, 41, 44, 47, 49, 54, 55, 81, 82, 117, 118, 128, 131, 136, 157, 172, 174, 176, 221, 239, 251, 272, 275, 281, 316, 332, 335, 340, 345, 351, 353, 354, 355, 356, 359, 361, 368, 371, 385, 386, 388, 390, 394, 395, 396, 398], "cat": 47, "catch": 0, "categori": [386, 391], "caus": [0, 27, 136, 212, 214, 231, 232, 233, 290, 291, 304, 309, 316, 356, 361, 364, 371, 396, 398], "caveat": 396, "cbar": 284, "cbc": [0, 129, 140, 172, 182, 184, 354], "cbc_content": 182, "cbc_grid": 354, "cbc_path": [182, 184], "cclose": [303, 308, 337, 338, 339, 340, 341, 342], "cd": [320, 337, 338, 339, 340, 341, 342, 345, 386, 388], "cdist": 0, "cell": [0, 4, 5, 7, 8, 11, 12, 16, 18, 26, 27, 29, 31, 36, 74, 76, 77, 80, 83, 89, 91, 92, 94, 97, 99, 101, 105, 107, 109, 111, 113, 115, 117, 118, 119, 121, 129, 134, 136, 138, 140, 141, 143, 148, 151, 153, 156, 157, 163, 164, 166, 167, 168, 170, 172, 174, 176, 177, 179, 181, 182, 184, 200, 201, 213, 218, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 236, 238, 239, 241, 242, 243, 244, 250, 252, 254, 262, 265, 266, 267, 268, 278, 279, 280, 281, 285, 289, 290, 291, 292, 293, 294, 295, 297, 298, 304, 307, 308, 309, 310, 311, 312, 313, 318, 319, 334, 337, 338, 339, 340, 341, 342, 345, 354, 356, 357, 358, 361, 364, 368, 380, 383, 390, 391, 393, 396, 398, 399], "cell2d": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 181], "cell_averag": 136, "cell_max_nparticl": [290, 291], "cell_min_nparticl": [290, 291], "cell_overlap": 221, "cellcentr": 357, "cellfac": 76, "cellid": [102, 121, 179], "cellsiz": [0, 9, 10, 13, 14, 26, 228, 230, 240, 251, 252, 253, 255, 373, 382], "celltabl": [0, 250, 320], "center": [74, 136, 240, 337, 354, 356, 358, 360, 361, 364], "centimet": 26, "centr": [4, 356, 359, 361, 397], "central": [74, 289, 318, 340], "centroid": [369, 396], "centroidloc": [357, 396], "certain": [0, 5, 18, 29, 37, 294, 298, 313, 368, 386, 388], "cf": 354, "cftime": [0, 36, 41, 42, 54, 319, 377], "cftimeindex": 0, "cg": [157, 354, 358, 360, 361, 364, 366], "cghb": 302, "chanc": 281, "chang": [17, 27, 30, 45, 136, 157, 163, 166, 180, 181, 263, 269, 278, 296, 297, 304, 307, 309, 318, 332, 333, 336, 345, 359, 361, 371, 385, 386, 388, 395, 398, 399], "changelog": [320, 336], "chani": 304, "channel": [386, 388], "character": [358, 360, 364], "characterist": [3, 106, 150, 157, 199, 290, 291, 292], "chart": 351, "chd": [80, 81, 82, 185, 345, 354, 358, 359, 360, 364, 366, 395, 396], "chd_chd": 354, "chd_clip": 354, "chd_concentr": 366, "chd_data": 395, "chd_field": 366, "chd_locat": [354, 356, 360], "chd_time": 395, "cheatsheet": 332, "check": [0, 8, 24, 129, 157, 182, 258, 278, 289, 290, 291, 292, 293, 314, 332, 353, 361, 379, 380, 390, 396, 398], "chemic": [295, 366], "choic": [282, 386, 397], "choleski": [27, 303], "choos": [0, 13, 14, 209, 277, 280, 284], "chosen": [136, 223, 224, 225, 226, 239, 287, 290, 291, 316, 366, 396, 397], "chunk": [0, 221, 354, 377, 390, 396], "chunksiz": [230, 252, 253, 354, 390, 396], "chunktyp": [354, 390, 396], "chunkwis": [0, 230], "cim": 112, "cimfil": 112, "cinact": 295, "circl": [39, 360, 363, 365, 389], "circle_partit": [355, 365, 389], "circle_transport": [356, 365, 389], "circular": [354, 355, 356], "clai": [227, 385], "clarif": 332, "class": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 57, 58, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 90, 91, 93, 94, 98, 99, 103, 106, 108, 110, 112, 113, 116, 117, 120, 122, 123, 124, 136, 139, 140, 141, 144, 145, 149, 150, 152, 154, 157, 161, 163, 165, 166, 169, 170, 171, 172, 173, 174, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 230, 278, 279, 280, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 354, 357, 358], "classic": [337, 339], "classmethod": [81, 82, 88, 96, 114, 118, 137, 142, 147, 155, 167, 176], "clean": [0, 87, 95, 146, 175, 231, 232, 233, 234, 332, 333], "cleaned_d": 398, "cleanup": [0, 389, 399, 400], "cleanup_drn": [0, 87, 320], "cleanup_ghb": [0, 95, 320], "cleanup_riv": [0, 146, 320, 398], "cleanup_wel": [0, 175, 320], "clement": 337, "clemept": 337, "click": 363, "clip": [0, 125, 234, 354, 361, 396], "clip_box": [0, 354, 396], "clip_by_grid": 0, "clipped_half_simulation_constant_head": 354, "clockwis": 136, "clone": [386, 388], "close": [113, 245, 368, 386], "closer": 390, "closur": [157, 245], "cm": [26, 172, 284], "cmap": [278, 280, 282, 353, 356, 368, 373], "coarsen": 0, "coarser": [201, 213, 396], "code": [0, 26, 117, 174, 180, 181, 230, 272, 316, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "coeffici": [26, 30, 32, 85, 112, 123, 136, 157, 166, 204, 297, 359], "coerc": 0, "col_index": [230, 250], "colleagu": [386, 398], "colleagues_river_data": 398, "collect": [25, 51, 126, 184, 230, 315, 337, 338, 340, 341, 342, 353, 357, 358, 360, 361, 364, 366, 369, 386, 387, 390, 397], "collis": 50, "colloqui": 386, "color": [280, 282, 284, 286, 288, 354, 369, 373, 375, 396], "colorbar": [280, 284, 375], "colorbrewer2": [280, 284], "colormap": [280, 284], "column": [0, 5, 9, 10, 11, 12, 13, 14, 26, 39, 45, 47, 48, 49, 102, 112, 136, 180, 207, 227, 230, 234, 240, 249, 250, 252, 253, 304, 310, 311, 338, 340, 341, 345, 357, 358, 360, 361, 364, 366, 368, 377, 379, 380, 390, 391], "column_a": 252, "column_b": 252, "column_name_in_geodatafram": [379, 380], "column_name_in_vector_data": [379, 380], "com": [0, 41, 54, 386, 388], "comand": [337, 338, 339, 340, 341, 342, 345], "combin": [0, 8, 34, 35, 41, 42, 43, 45, 54, 136, 353, 356, 357, 361, 385, 390, 392], "combine_first": 361, "come": [0, 76, 334, 356, 361, 366, 379, 380, 386, 390, 391, 392, 399], "comma": [0, 112], "command": [331, 333, 337, 338, 339, 340, 341, 342, 345, 379, 382, 386, 388, 390], "comment": [0, 334], "commerci": [386, 388], "commit": 334, "common": [33, 136, 231, 232, 233, 234, 239, 272, 274, 294, 385, 390, 398], "commonli": [157, 348, 385, 388, 390], "commun": [0, 172, 335, 386, 388, 398], "compani": 388, "compar": [0, 29, 42, 118, 157, 176, 361, 362, 385, 390, 396, 397], "comparison": [362, 387, 398], "compat": [113, 274, 306], "compil": [41, 42, 54, 220, 221, 222, 386], "complain": 339, "complenetess": 336, "complet": [0, 55, 335, 386, 398], "complex": [345, 377, 383, 386], "compli": 398, "compliant": [0, 100, 104, 127, 271, 378, 379], "complic": [45, 118, 176, 386], "compon": [0, 6, 9, 10, 13, 14, 136, 285], "componenti": 355, "compos": [44, 55], "composit": 0, "compress": 385, "comput": [0, 5, 6, 11, 12, 27, 41, 54, 80, 86, 88, 91, 94, 96, 107, 109, 111, 117, 129, 136, 141, 145, 151, 153, 156, 157, 174, 180, 181, 182, 216, 219, 221, 228, 230, 252, 253, 290, 291, 318, 345, 354, 355, 356, 359, 360, 361, 366, 369, 373, 377, 379, 380, 385, 386, 388, 390, 395, 396, 397], "computation": [290, 291, 292], "conc": [337, 338, 339, 340, 341, 342, 353, 366], "concat": 361, "concaten": [128, 131, 356, 361], "concentr": [0, 74, 76, 78, 79, 80, 86, 91, 94, 112, 113, 117, 128, 131, 140, 141, 145, 162, 174, 180, 181, 185, 188, 191, 195, 196, 231, 232, 233, 278, 290, 291, 292, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 308, 310, 311, 312, 313, 317, 318, 319, 337, 338, 340, 341, 342, 353, 356, 359, 366, 396], "concentration_boundary_typ": [80, 86, 91, 94, 117, 141, 145, 161, 174, 180, 181, 353, 366], "concentration_fil": [0, 140], "concentration_l1": 0, "concept": [361, 385, 394], "conceptu": [337, 338, 339, 340, 342], "concis": 377, "concret": 394, "cond": [20, 29, 86, 94, 277, 302], "conda": [0, 336, 377, 386], "condens": 217, "condiat": 353, "condit": [0, 5, 8, 19, 27, 28, 32, 83, 89, 92, 97, 113, 115, 136, 138, 143, 148, 157, 162, 164, 166, 168, 207, 208, 277, 295, 339, 353, 354, 356, 358, 360, 364, 366, 397], "condition1": [379, 380], "condition2": [379, 380], "conduct": [0, 18, 20, 21, 23, 26, 29, 34, 35, 51, 86, 88, 94, 96, 102, 107, 109, 111, 117, 118, 121, 136, 145, 147, 151, 153, 156, 172, 174, 176, 179, 188, 191, 196, 214, 219, 221, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 298, 302, 304, 313, 318, 340, 345, 353, 354, 356, 357, 358, 360, 379, 380, 382, 385, 390, 398], "conductances_distribut": [236, 238], "conductivity_factor": 26, "config": 56, "config_run": [0, 345], "configur": [0, 56, 383, 385, 396], "confin": [15, 32, 121, 136, 163, 166, 167, 179, 294, 304, 358, 361, 385], "confirm": [363, 384], "confus": 385, "confusingli": 0, "conjug": [27, 157, 303, 309, 316], "conjunct": [157, 278], "connect": [0, 74, 99, 129, 136, 170, 182, 200, 201, 213, 391, 393], "connection_length": 364, "connection_width": 364, "connectiondata": 136, "connectiontyp": 364, "consecut": 318, "consequ": [351, 361, 368, 383, 386], "conserv": [27, 291, 318], "consid": [5, 44, 55, 66, 180, 181, 231, 232, 233, 281, 290, 291, 292, 295, 297, 332, 361, 368, 373, 386, 396], "consider": [0, 385, 394], "consist": [0, 44, 55, 74, 157, 210, 345, 354, 356, 358, 359, 364, 368, 386, 390, 391, 396, 398], "consistenli": 0, "constant": [0, 16, 17, 51, 77, 79, 80, 81, 82, 118, 136, 172, 176, 262, 278, 279, 294, 295, 296, 304, 316, 317, 337, 338, 339, 340, 341, 342, 345, 353, 354, 357, 358, 359, 360, 364, 366, 379, 380, 382, 385, 393, 395, 396, 397], "constant_conc": 359, "constant_concentr": 356, "constant_head": [354, 356, 358, 359, 360, 364], "constantconcentr": 295, "constanthead": [0, 185, 345, 354, 358, 359, 360, 361, 364, 366, 395, 396], "constantheadregridmethod": [0, 81, 82], "constraint": [11, 12, 289, 290, 291, 292, 293, 396], "constrast": 394, "construct": [0, 41, 54, 81, 82, 88, 96, 114, 137, 142, 147, 167, 246, 247, 256, 281, 351, 366, 397], "constructor": [0, 74, 75, 76, 278, 361, 364, 396], "consum": [379, 380, 399], "conta": [48, 354, 358], "contact": [353, 398], "contain": [0, 3, 6, 7, 8, 11, 12, 26, 45, 46, 47, 48, 49, 78, 129, 131, 132, 134, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 210, 211, 213, 215, 218, 219, 223, 224, 225, 226, 227, 230, 236, 238, 239, 251, 278, 280, 284, 285, 287, 288, 304, 335, 345, 351, 353, 354, 360, 361, 362, 368, 373, 374, 385, 388, 390, 391, 392, 396, 397, 398], "contamin": 366, "content": [0, 47, 50, 51, 129, 172, 182, 214], "context": [0, 263, 270], "contextili": [0, 284, 375], "contextmanag": 270, "continu": [66, 157, 272, 318, 332, 366, 390, 392], "contour": [13, 14, 287, 353, 356, 358, 364, 366, 373], "contourf": [353, 355, 356, 358, 364, 366], "contrast": [386, 394], "contribut": [335, 396], "control": [0, 5, 27, 77, 78, 79, 80, 85, 86, 91, 94, 99, 103, 112, 117, 122, 123, 129, 136, 140, 141, 145, 157, 162, 163, 166, 171, 172, 174, 180, 181, 182, 217, 239, 259, 284, 290, 304, 306, 345, 353, 364, 387, 388], "convect": 337, "conveni": [0, 230, 348, 356, 369, 370, 377, 379, 380, 390, 392, 396, 398], "convent": [41, 42, 43, 44, 54, 55, 275, 354, 390], "converg": [27, 157, 290, 291, 303, 307, 308, 309, 318, 353, 364, 385], "convers": [0, 128, 129, 130, 131, 182, 183], "convert": [0, 4, 26, 39, 45, 80, 99, 100, 102, 104, 117, 118, 121, 127, 128, 129, 130, 131, 136, 140, 147, 163, 166, 174, 176, 179, 182, 183, 197, 198, 274, 275, 295, 302, 304, 313, 351, 353, 354, 356, 358, 359, 360, 361, 364, 366, 369, 380, 382, 385, 396], "convert_pointwaterhead_freshwaterhead": 320, "convert_to_disv": 0, "convolut": [379, 380], "convolv": [379, 380], "coo": 230, "coolei": 157, "cooordin": 360, "cooper": 394, "coord": [0, 78, 84, 90, 93, 98, 116, 117, 120, 139, 140, 144, 149, 165, 169, 174, 178, 251, 258, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 359, 360, 364, 366, 395, 397], "coord_refer": [0, 320], "coordin": [0, 7, 9, 10, 13, 14, 36, 41, 44, 50, 78, 117, 130, 136, 163, 170, 174, 182, 183, 199, 202, 204, 211, 212, 214, 215, 221, 222, 230, 239, 249, 251, 252, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 273, 276, 280, 281, 283, 285, 287, 307, 308, 319, 345, 351, 354, 357, 360, 361, 368, 371, 373, 377, 379, 380, 391, 392, 395, 396, 397, 398], "copi": [0, 132, 208, 345, 354, 356, 360, 361, 388, 397, 398], "core": [0, 81, 82, 88, 96, 114, 137, 142, 147, 167, 230, 252, 253, 388, 394], "corei": 172, "corner": 391, "correct": [0, 61, 68, 70, 72, 219, 228, 251, 318, 361, 397, 398], "correct_water_t": 318, "correctli": [0, 66, 377], "correpsond": [130, 182, 183], "correspond": [0, 136, 214, 297, 318, 345, 361, 368, 390], "cost": 334, "costli": 357, "could": [0, 27, 172, 309, 334, 335, 368, 391], "count": [230, 396], "counter": [136, 396], "coupl": [0, 136, 212, 318, 349, 352, 361, 389], "coupler": [0, 320], "couplermap": 320, "couplingmap": 0, "courant": [289, 290, 291, 292, 293, 316, 337, 338, 339, 340, 341, 342, 396], "cover": [199, 335], "coverag": 332, "cpg": 391, "cpt": [47, 49], "cpu": 394, "cpython": 386, "cr": [0, 100, 104, 127, 251, 255, 256, 271, 284, 371, 391], "creat": [0, 44, 45, 47, 55, 82, 84, 90, 93, 98, 99, 100, 103, 104, 116, 117, 118, 120, 126, 132, 139, 140, 144, 149, 162, 165, 169, 174, 176, 178, 209, 217, 230, 235, 246, 247, 251, 258, 265, 266, 267, 268, 280, 285, 307, 308, 332, 333, 336, 337, 338, 339, 340, 342, 345, 353, 355, 357, 359, 360, 361, 366, 369, 370, 371, 373, 375, 377, 385, 386, 388, 390, 394, 395, 396, 397], "create_circle_simul": [355, 360], "create_layered_top": [320, 353], "create_time_discret": [0, 24, 118, 176, 314, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 358, 359, 360, 361, 364, 366, 395], "create_transport_model": 359, "create_twri_simul": [357, 360], "creation": [0, 81, 346, 347, 389], "criter": 245, "criteria": [157, 316, 368], "criterion": [27, 157, 303, 307, 308, 309, 398], "critic": [61, 66, 68, 70, 72, 290, 386], "cross": [0, 9, 10, 13, 14, 21, 255, 256, 280, 285, 287, 290, 291, 303, 320, 337, 338, 339, 340, 342, 373, 374, 387, 390, 397, 399], "cross_sect": [0, 256, 285, 320, 373, 397], "cross_section_lin": [280, 320, 373], "cross_section_linestr": [280, 320, 397], "crosscut": [219, 397], "crossect": 356, "crosssect": 397, "crucial": 396, "crunch": 386, "csv": [112, 157, 172, 217, 368, 392], "csv_output": [0, 157], "ctx": [284, 375], "cube": [112, 123, 157], "cubic": [5, 11, 27, 251, 307, 309], "cubic_splin": 251, "cumsum": 345, "cumul": 345, "current": [0, 26, 127, 140, 157, 212, 295, 316, 351, 386, 387, 394], "curv": 209, "custom": [0, 41, 42, 44, 54, 55, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 281, 375, 396], "cuthil": 157, "cyclic": [0, 157], "d": [0, 4, 6, 9, 10, 13, 14, 22, 25, 26, 41, 44, 54, 55, 56, 126, 128, 129, 130, 131, 182, 183, 209, 211, 228, 229, 255, 278, 288, 310, 311, 312, 315, 318, 335, 339, 342, 345, 351, 353, 354, 359, 361, 373, 377, 378, 379, 380, 386, 397], "da": [0, 41, 44, 54, 55, 239, 248, 258, 259, 260, 261, 262, 275, 278, 279, 280, 281, 282, 287, 361, 378, 379, 380], "da1": [379, 380], "da2": [379, 380], "da3": [379, 380], "da_coord": 264, "da_firstlay": [379, 380], "da_gdal": [378, 379], "da_kd": [379, 380], "da_layer1": [379, 380], "da_select": [379, 380], "da_with_gap": [379, 380], "dai": [3, 5, 11, 19, 26, 28, 130, 182, 183, 209, 212, 215, 216, 297, 361, 366], "daili": [216, 361, 379, 380], "damp": [27, 157, 309, 337, 338, 339, 340, 341, 342], "damp_transi": 27, "dan": [379, 380], "darci": 136, "darcian": 0, "dash": [44, 55], "dask": [0, 259, 270, 354, 377, 387, 388, 390, 394, 396], "dat": 112, "data": [0, 25, 27, 41, 45, 47, 48, 49, 50, 54, 80, 81, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 100, 104, 106, 108, 110, 112, 114, 116, 117, 118, 120, 126, 127, 128, 129, 130, 131, 136, 137, 139, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 165, 167, 169, 174, 176, 178, 180, 182, 183, 184, 200, 201, 202, 204, 210, 211, 213, 222, 230, 231, 232, 233, 240, 245, 246, 247, 249, 251, 252, 253, 255, 256, 258, 259, 262, 275, 278, 279, 280, 285, 287, 288, 294, 298, 306, 307, 309, 315, 337, 338, 339, 340, 341, 342, 345, 348, 351, 353, 354, 356, 360, 362, 364, 366, 367, 368, 369, 370, 372, 373, 375, 382, 386, 387, 388, 389, 393, 394, 395, 396, 399, 400], "data_var": 8, "dataarai": [5, 209], "dataarrai": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 50, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 105, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 153, 155, 156, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 199, 201, 202, 204, 209, 211, 212, 213, 214, 215, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 273, 275, 276, 277, 278, 280, 281, 283, 284, 285, 287, 294, 295, 296, 298, 302, 304, 305, 307, 308, 310, 311, 312, 313, 317, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 359, 360, 361, 366, 371, 373, 380, 390, 394, 395, 396, 397, 398], "dataarrayi": [361, 396], "dataarraylay": [345, 390, 397], "dataarraytim": [345, 361], "databas": [210, 214, 398], "dataclass": [81, 82, 88, 96, 114, 137, 142, 147, 167, 396], "datafram": [0, 12, 45, 46, 47, 48, 49, 50, 106, 108, 110, 118, 150, 152, 154, 172, 176, 227, 230, 234, 250, 252, 253, 288, 307, 308, 339, 340, 342, 345, 351, 361, 379, 380, 382, 391, 392, 396], "dataframegroupbi": [252, 253], "datarrai": [7, 19, 280], "dataset": [0, 3, 6, 8, 11, 12, 41, 54, 118, 129, 131, 176, 182, 222, 255, 256, 269, 271, 275, 277, 351, 354, 355, 356, 361, 377, 390, 391, 394, 395, 396, 397, 398], "datasetdimens": [351, 390, 395, 396, 397, 398], "datatyp": 230, "date": [0, 3, 25, 41, 42, 44, 50, 54, 55, 126, 130, 182, 183, 315, 345, 386], "date_rang": [117, 174, 339, 345, 356, 379, 380], "datecolumn": 288, "daterang": [25, 315], "datetim": [0, 25, 36, 80, 86, 88, 91, 94, 96, 117, 118, 125, 126, 130, 141, 145, 147, 174, 176, 180, 182, 183, 271, 274, 315, 319, 361, 364, 396], "datetime64": [0, 36, 41, 42, 54, 125, 128, 129, 130, 131, 140, 182, 183, 266, 268, 319, 345, 361, 364, 373, 395, 396], "datetimeindex": [345, 361, 395, 396], "datetimeprolepticgregorian": [0, 41, 42, 54], "datimeprolepticgregorian": 0, "datum": 3, "day_of_year": 199, "dbd": 157, "dbf": 391, "dcep": [290, 291, 292], "dchmoc": 290, "dconcentration_epsilon": [290, 291, 292], "dconcentration_hybrid": 290, "deactiv": [85, 118, 157, 176, 231, 232, 233, 398], "deal": [0, 221, 222, 348, 377, 379, 382, 383, 386, 397, 399], "dear": 398, "debug": [0, 61, 63, 64, 66, 68, 70, 72, 102, 307, 308], "dec": 361, "decai": [112, 123, 193, 359, 396], "decay_sorb": [112, 123, 193, 359, 396], "decid": [44, 55], "decim": 295, "declin": [32, 166], "declxml": 0, "decomposit": 157, "decor": [61, 63, 64, 68, 70, 72], "decreas": [0, 157, 397], "dedic": 357, "deep": [26, 397], "deepcopi": 0, "deeper": 397, "deepest": 397, "def": [221, 222, 359, 360, 361, 394, 396], "default": [0, 3, 6, 8, 11, 12, 22, 24, 26, 27, 39, 41, 42, 44, 47, 48, 49, 54, 55, 56, 58, 59, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 99, 100, 102, 104, 112, 113, 114, 116, 117, 120, 121, 122, 123, 127, 128, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 145, 147, 149, 157, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 219, 220, 221, 222, 227, 230, 239, 240, 249, 251, 259, 260, 261, 262, 277, 278, 280, 281, 284, 289, 291, 292, 294, 295, 296, 297, 298, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 331, 333, 356, 357, 361, 373, 379, 380, 385, 388, 391], "defer": [24, 314], "defin": [0, 5, 11, 12, 13, 14, 21, 22, 25, 29, 34, 41, 42, 44, 54, 55, 81, 82, 84, 90, 93, 98, 116, 118, 120, 126, 134, 136, 139, 144, 149, 157, 165, 169, 172, 176, 178, 214, 221, 225, 252, 253, 258, 259, 275, 295, 297, 304, 311, 315, 331, 337, 338, 339, 340, 341, 342, 351, 353, 354, 356, 358, 360, 361, 364, 366, 368, 373, 375, 386, 390, 391, 394, 396, 397, 398], "definin": 396, "definit": [0, 100, 104, 127, 295, 366], "deflat": 307, "degre": [21, 136, 157], "delai": [0, 270, 388], "delc": 366, "delet": [180, 181, 388], "delim_whitespac": [45, 46], "delimet": 0, "delimit": 0, "delr": 366, "delta": [11, 12, 157, 361], "delta_z": 360, "deltar": [0, 336, 337, 338, 339, 340, 341, 342, 345, 386, 387, 388, 396], "delz": 366, "dem": 281, "demand": [0, 209, 290, 291, 292], "demonstr": [337, 339, 341, 342, 343, 346, 348, 349, 361, 363, 367, 377, 390, 395, 397, 399], "denot": [0, 21], "dens": [128, 129, 130, 131, 182, 183, 361], "densemax": 318, "densemin": 318, "denseref": 318, "denseslp": 318, "densiti": [0, 4, 78, 112, 123, 302, 313, 318, 337, 340, 353, 356, 359, 387, 396], "density_concentration_slop": [78, 318, 337, 338, 339, 340, 341, 342, 353, 356], "density_criterion": 318, "density_fresh": 4, "density_max": 318, "density_min": 318, "density_ref": 318, "density_speci": 318, "densityfil": 78, "depenc": 386, "depend": [0, 18, 20, 29, 86, 94, 102, 118, 135, 157, 172, 176, 230, 290, 291, 298, 302, 313, 316, 337, 361, 364, 379, 382, 383, 387, 394, 395, 396], "deploi": 336, "deprec": [180, 181], "deprecationwarn": 0, "depress": 172, "depth": [0, 19, 26, 61, 68, 70, 72, 91, 102, 172, 190, 202, 212, 214, 236, 238, 335, 368, 391, 396, 397], "depth_perched_water_t": 214, "deriv": [0, 162, 170, 356, 368], "descend": [0, 379, 380], "describ": [106, 108, 110, 129, 136, 150, 152, 154, 157, 182, 201, 202, 203, 204, 212, 213, 214, 215, 230, 353, 354, 356, 358, 361, 364, 385, 387, 395, 396, 397], "descript": [157, 217, 335, 342, 358, 397], "design": [0, 9, 10, 13, 14, 41, 54, 80, 136, 241, 242, 243, 244, 255, 256, 377, 386, 390], "desir": [44, 55, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 245, 251, 290, 291, 316, 359], "despit": 392, "destin": [379, 380], "detail": [0, 25, 27, 87, 95, 126, 146, 175, 309, 315, 335, 342, 361, 363, 390, 397], "detect": [0, 260, 261], "determin": [25, 121, 126, 136, 140, 172, 179, 230, 287, 295, 298, 304, 315, 318, 353, 361, 395, 396], "dev": [0, 221, 222], "devault": [307, 308], "develop": [0, 26, 172, 221, 222, 339, 341, 377, 379, 382, 387], "dewat": [136, 358, 359, 360, 361, 364, 396], "df": [45, 47, 48, 49, 230, 253, 288, 351, 378, 379, 380, 382], "di": [0, 81, 82, 87, 88, 95, 96, 122, 128, 129, 130, 131, 136, 142, 146, 147, 175, 180, 182, 183, 186, 353, 357, 358, 359, 360, 364, 366, 387, 396, 398], "diagon": [5, 78, 157, 345], "dict": [8, 42, 45, 46, 47, 49, 50, 51, 52, 81, 82, 88, 96, 114, 118, 125, 129, 131, 137, 142, 147, 155, 167, 176, 182, 184, 231, 232, 233, 240, 251, 259, 278, 280, 284, 285, 287], "dictionari": [0, 40, 42, 45, 46, 47, 49, 50, 51, 80, 81, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 114, 116, 117, 120, 137, 139, 141, 142, 144, 145, 147, 149, 165, 167, 169, 174, 178, 180, 184, 259, 345, 351, 354, 397, 398], "did": [0, 398], "diff": [362, 366, 398], "diff_for_plot": 362, "diff_riv_bot": 398, "diff_stag": 398, "diffc": 85, "differ": [0, 4, 20, 27, 35, 41, 45, 54, 82, 84, 88, 90, 93, 96, 98, 114, 116, 118, 120, 134, 136, 137, 139, 142, 144, 147, 149, 165, 167, 169, 176, 178, 202, 204, 212, 214, 222, 251, 277, 289, 290, 291, 292, 293, 295, 302, 309, 316, 318, 337, 338, 339, 340, 341, 342, 351, 353, 359, 361, 362, 363, 365, 366, 368, 370, 379, 382, 386, 388, 389, 390, 395, 396, 397, 398], "different_ways_to_regrid_model": [357, 365, 389], "difficult": [0, 361], "diffus": [85, 297, 356, 359, 396], "diffusion_coeffici": [85, 187, 297, 337, 338, 339, 340, 341, 342, 353, 356, 359, 366, 396], "digit": [44, 55, 112], "dim": [0, 18, 19, 20, 23, 28, 29, 30, 32, 34, 35, 117, 140, 174, 239, 245, 251, 252, 258, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 366, 379, 380, 394, 395, 398], "dimens": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 26, 33, 44, 55, 80, 86, 91, 94, 112, 117, 118, 123, 128, 129, 131, 141, 145, 162, 174, 176, 180, 182, 218, 221, 223, 224, 225, 226, 230, 235, 236, 238, 239, 246, 247, 251, 252, 253, 254, 255, 256, 257, 259, 271, 275, 277, 278, 280, 281, 285, 287, 294, 345, 351, 354, 361, 366, 373, 377, 379, 380, 382, 386, 394, 395, 396, 397, 398], "dimension": [0, 5, 9, 10, 13, 14, 26, 119, 177, 242, 255, 256, 280, 281, 285, 287, 290, 291, 345, 353, 358, 366, 379, 380, 390, 394], "dimensionless": [32, 91, 112, 166, 304], "dimes": [254, 257], "diminish": 293, "dinoloket": 368, "direct": [0, 5, 6, 9, 10, 11, 13, 14, 85, 102, 136, 289, 290, 291, 292, 293, 304, 305, 317, 334, 353, 356, 357, 361], "directli": [0, 3, 39, 56, 251, 256, 334, 371, 377, 379, 380, 385, 388, 390], "directori": [0, 42, 55, 100, 104, 127, 135, 263, 282, 332, 333, 334, 345, 351, 353, 354, 356, 358, 363, 364, 386, 390, 394], "dirti": 398, "dirty_d": 398, "dis6": 170, "dis_pkg": 398, "disabl": [41, 44, 157, 212], "disappear": [118, 176], "disast": 386, "discard": 3, "discharg": [0, 12, 117, 136, 172, 174, 180, 181, 288], "discontinu": 0, "discrep": [290, 291], "discret": [0, 25, 84, 87, 90, 93, 95, 98, 116, 120, 122, 126, 132, 136, 139, 142, 144, 146, 149, 165, 169, 170, 171, 173, 175, 178, 180, 181, 230, 315, 320, 353, 356, 358, 359, 360, 364, 366, 387, 389, 396, 398, 399, 400], "discretis": 316, "discretizationregridmethod": 0, "discretizationvertic": 0, "discuss": 390, "disk": [354, 386, 394], "dispers": [0, 187, 303, 337, 338, 339, 340, 341, 342, 353, 356, 359, 366, 396], "dispersionregridmethod": 0, "displac": 397, "displai": [278, 279, 396], "display": 396, "dispsers": 85, "disquisit": 0, "distanc": [74, 136, 229], "distcoef": [112, 123, 193, 359, 396], "distinct": 284, "distort": 361, "distrcond": 219, "distribut": [0, 88, 96, 112, 121, 123, 147, 179, 219, 227, 236, 238, 290, 291, 310, 311, 312, 358, 359, 361, 386, 388, 394], "distribute_drn_conduct": [0, 320], "distribute_ghb_conduct": [0, 320], "distribute_riv_conduct": [0, 320, 397], "distributing_data": 397, "distributing_opt": [0, 88, 96, 147, 236, 237, 238, 320, 397], "distribution_coeffici": 112, "disu": 136, "disu6": 170, "disv": [0, 128, 129, 130, 131, 173, 181, 182, 183, 354, 355, 356, 360, 387], "disv6": 170, "ditch": [0, 361, 391, 397], "diverg": [13, 14, 290, 291], "divid": [0, 172, 230, 290, 291, 385, 394], "dll": [0, 77], "dnscrit": 318, "do": [0, 41, 42, 45, 54, 113, 130, 182, 183, 212, 214, 222, 230, 231, 232, 233, 239, 251, 259, 260, 261, 332, 345, 360, 361, 368, 369, 377, 380, 382, 383, 386, 388, 390, 396, 397, 398], "do_something_in_doc": 263, "doc": [0, 221, 222, 252, 253, 263, 281, 333, 345, 360, 386], "docstr": [0, 334], "documen": 390, "document": [0, 87, 95, 146, 175, 272, 278, 281, 332, 334, 335, 336, 354, 356, 361, 366, 379, 380, 387, 394, 396, 397], "doe": [0, 23, 27, 81, 82, 88, 96, 114, 118, 137, 142, 147, 163, 166, 167, 170, 176, 201, 213, 240, 259, 277, 294, 309, 316, 356, 359, 379, 380, 382, 385, 388, 394], "doesn": [58, 66, 70, 240, 332, 339, 359, 386, 388, 390], "doi": [77, 340, 342], "domain": [0, 83, 89, 92, 97, 112, 115, 119, 123, 134, 138, 143, 148, 164, 168, 177, 227, 231, 232, 233, 251, 307, 308, 338, 345, 353, 356, 357, 359, 361, 362, 368], "domin": [290, 291, 292], "don": [278, 356], "done": [81, 128, 129, 130, 131, 182, 183, 206, 307, 308, 333, 357, 361, 363, 379, 380, 385, 394, 396], "doubl": [0, 44, 357], "down": [0, 7, 11, 12, 157], "download": [24, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "downscal": 396, "downsid": 394, "downward": [204, 397], "downward_resist": 204, "dpi": 288, "drain": [86, 112, 218, 223, 229, 231, 236, 298, 358, 360, 361, 364, 385, 396, 397], "drain_elev": [223, 236], "drainag": [0, 129, 147, 182, 188, 358, 360, 396], "drainagepackag": 8, "drainageregridmethod": [0, 88], "draw": [0, 5, 280, 281, 285, 287, 356], "drawdown": [294, 306], "drawn": [256, 280, 285, 287], "driven": [335, 388], "driver": [0, 55, 390], "drn": [8, 50, 129, 182, 184, 188, 218, 219, 236, 358, 360, 396, 397], "drn_budget": [129, 182], "drop": [0, 8, 18, 157, 234, 298, 304, 369], "drop_allnan": 8, "drop_var": [361, 397], "dropna": 369, "drought": 209, "dry": [113, 121, 128, 130, 136, 157, 179, 183, 295, 304], "dry_nan": [128, 130, 183], "ds_flux": 373, "ds_ugrid": [378, 379], "dsp": [187, 337, 338, 339, 340, 341, 342, 353, 356, 359, 366], "dst_cr": [251, 371], "dt": [3, 11, 12], "dt0": 316, "dt_all": 8, "dt_min": 8, "dt_xyz": 11, "dtadj": 157, "dtype": [0, 44, 55, 140, 163, 230, 240, 249, 258, 260, 265, 266, 267, 268, 277, 345, 351, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 373, 390, 391, 395, 396, 397, 398], "dtypelik": [230, 249], "due": [221, 297, 353, 357, 358, 359, 364, 386], "dummi": [58, 70, 369, 370, 395], "dump": [0, 282], "duplic": [0, 45, 80, 86, 91, 94, 117, 141, 145, 174, 180, 230, 358, 392, 397], "durat": [0, 130, 182, 183, 209, 353, 359, 361, 366, 395], "dure": [0, 26, 27, 36, 66, 102, 121, 157, 179, 209, 304, 307, 309, 319, 331, 396], "dutch": 3, "dvc": 387, "dx": [0, 228, 240, 264, 265, 266, 267, 268, 273, 337, 338, 339, 340, 341, 342, 345, 353, 357, 358, 359, 360, 361, 364, 366, 368, 369, 370, 371, 373, 379, 380, 390, 396, 397, 398], "dx_coars": 370, "dy": [0, 228, 240, 251, 265, 266, 267, 268, 273, 337, 338, 339, 340, 341, 342, 345, 353, 357, 358, 360, 361, 364, 366, 368, 369, 370, 371, 373, 379, 380, 390, 396, 397, 398], "dy_coars": 370, "dynam": 290, "dz": [6, 7, 11, 12, 337, 338, 339, 340, 341, 342, 345, 353, 373], "e": [0, 3, 5, 25, 26, 27, 45, 46, 50, 80, 86, 91, 94, 117, 126, 134, 141, 145, 162, 174, 180, 184, 212, 217, 222, 230, 239, 240, 251, 252, 253, 276, 280, 281, 284, 287, 290, 291, 295, 309, 315, 316, 340, 348, 351, 377, 386, 387, 388, 391, 392], "each": [0, 22, 27, 41, 42, 44, 45, 47, 51, 54, 55, 77, 79, 80, 86, 91, 94, 100, 104, 112, 117, 122, 127, 136, 141, 145, 157, 162, 163, 166, 170, 172, 174, 180, 181, 199, 216, 255, 256, 290, 291, 295, 297, 304, 309, 310, 311, 316, 345, 351, 356, 357, 360, 361, 366, 368, 391, 392, 394, 395, 396, 397], "eager": [24, 314, 394], "eager_da": 394, "eager_head": 394, "eager_result": 394, "eagerli": 50, "earlier": [357, 397], "eas": [0, 374], "easi": [332, 388], "easier": [0, 41, 54, 356, 385, 387], "easiest": [45, 379, 380], "easili": [0, 256, 278, 279, 285, 334, 351, 354, 356, 390, 391, 394, 396], "east": [5, 21, 361], "eastern": 361, "eb": 217, "echo": 103, "ecosystem": 388, "edg": [0, 4, 5, 129, 182, 337, 345, 354], "edgecolor": [280, 284, 397], "edit": [0, 363], "editor": 334, "edu": 337, "effect": [0, 8, 85, 107, 109, 111, 112, 123, 136, 151, 153, 156, 157, 295, 297, 305, 317, 361, 385, 396, 397], "effici": [0, 13, 14, 41, 54, 172, 240, 303, 379, 380, 386], "effort": [291, 345], "ehead": 80, "eic": 217, "either": [0, 41, 42, 47, 49, 54, 80, 112, 118, 123, 157, 172, 176, 254, 257, 290, 385, 394, 397], "elast": 385, "elder": [343, 344, 389], "element": [26, 379, 380, 394], "elev": [0, 4, 15, 18, 19, 26, 33, 86, 91, 136, 145, 170, 188, 202, 218, 223, 226, 231, 233, 236, 238, 294, 298, 358, 360, 361, 368, 390, 396, 397, 398], "ellipsoid": [85, 136], "els": [0, 26, 359, 397], "elsewher": [290, 291, 292], "em": [13, 14], "embarrassingli": 394, "embed": 334, "empti": [0, 251, 259, 265, 266, 267, 268, 354, 358, 360, 368], "empty_2d": [0, 320, 368, 369, 370, 371, 379, 380, 396], "empty_2d_transi": [0, 320, 379, 380], "empty_3d": [0, 320, 379, 380], "empty_3d_transi": [0, 320, 379, 380], "emptyregridmethod": 0, "en": [30, 32, 77, 163, 166, 249, 294, 345], "enabl": [0, 332, 348, 388], "encod": [41, 42, 54, 271, 390], "encompass": 361, "encount": 26, "end": [0, 9, 10, 13, 25, 27, 63, 64, 80, 88, 96, 126, 147, 209, 255, 285, 290, 291, 296, 315, 337, 338, 339, 340, 341, 342, 345, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 373, 375, 379, 380, 390, 391, 392, 393, 394, 395, 396, 397, 398], "end_level": [63, 64], "end_sprinkling_season": [209, 351], "endtim": [24, 314, 345, 395], "enforc": [0, 396, 397], "enforce_dim_ord": 397, "eng": 337, "enorm": 383, "enough": [117, 360], "ensur": [0, 50, 231, 232, 233, 271, 361], "enter": [5, 136, 150, 152, 154, 294, 304, 359, 363, 385], "entir": [0, 4, 102, 108, 121, 136, 179, 234, 289, 290, 291, 292, 293, 295, 351, 385, 386, 390, 394, 398], "entri": [0, 42, 50, 51, 78, 103, 117, 118, 157, 172, 174, 176, 271, 336, 354], "enum": [58, 66], "enumer": [218, 219, 223, 224, 225, 226, 236, 238, 397], "env": 391, "environ": [0, 133, 331, 333, 336, 341, 363, 388], "envrion": 386, "envsoft": 77, "epd": 217, "epsg": [251, 284, 371], "epsilon": 172, "eq": 4, "equal": [0, 21, 26, 27, 29, 33, 74, 76, 85, 136, 157, 163, 166, 201, 213, 219, 227, 245, 290, 291, 294, 297, 304, 307, 308, 309, 316, 355, 361, 385, 392, 397], "equat": [5, 27, 78, 136, 157, 303, 304, 309, 318, 361, 379, 380, 382], "equidist": [0, 203, 255, 265, 266, 267, 268, 379, 380], "equilibrium": [112, 123, 205, 206], "equival": [157, 218, 219, 223, 224, 225, 226, 275, 358], "ernst": 229, "erron": [0, 135, 398], "error": [0, 26, 47, 49, 61, 66, 68, 70, 72, 80, 102, 112, 121, 123, 157, 179, 217, 221, 259, 272, 345, 356, 377, 398], "esp": 217, "especi": [0, 157, 351, 377, 385, 386, 388, 390, 395, 396], "espg": 0, "esri": [211, 391], "esrii": [0, 390], "essenti": [230, 386, 391], "essink": 342, "establish": [27, 136, 201, 213, 304, 307, 309], "estim": [157, 361, 385], "et": [91, 172], "et_pot": 172, "etact": 217, "etc": [0, 24, 51, 184, 275, 314, 386, 390, 394, 399], "euler": [290, 291, 292], "eulerian": [290, 291, 292], "evalu": [0, 285, 287, 320, 373, 377, 387, 389, 399, 400], "evapor": [19, 199, 209, 217], "evapotranspir": [0, 172, 190, 201, 211, 217, 288, 361, 396, 397], "evapotranspiration_lay": 300, "evapotranspirationmap": [211, 320], "evapotranspirationregridmethod": 0, "evapotranspor": 201, "even": [0, 13, 14, 27, 118, 136, 176, 289, 290, 291, 292, 293, 294, 295, 307, 308, 385, 390, 394, 395, 396, 397], "event": 66, "eventu": [361, 364, 396], "everi": [0, 3, 5, 25, 31, 45, 51, 77, 78, 79, 80, 86, 91, 94, 99, 103, 113, 117, 122, 126, 129, 136, 141, 145, 162, 163, 166, 172, 174, 180, 181, 182, 221, 285, 290, 291, 294, 295, 297, 304, 315, 361, 366, 390, 391, 392, 393, 394, 399], "everybodi": 334, "everywher": [147, 342], "evt": [0, 91, 190, 361], "evt_ss": 361, "evt_ss_mean": 361, "evt_tran": 361, "ex": [337, 338, 339, 340, 341, 342, 345, 386], "ex01": [358, 360, 364, 366], "ex01_twri": [357, 358, 360, 365, 389], "exact": [359, 388], "exactli": [0, 5, 6, 11, 12, 157, 390], "exampl": [0, 3, 5, 24, 25, 41, 42, 44, 45, 47, 51, 54, 55, 56, 73, 78, 84, 90, 93, 98, 106, 108, 110, 116, 117, 120, 126, 128, 129, 130, 133, 136, 139, 140, 144, 149, 150, 152, 154, 165, 169, 174, 178, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 216, 218, 221, 222, 223, 224, 225, 226, 230, 236, 238, 239, 240, 246, 247, 249, 251, 252, 253, 256, 258, 259, 260, 261, 263, 270, 272, 278, 279, 280, 281, 284, 285, 288, 314, 315, 331, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400], "example_1d_transport": [359, 365, 389], "example_bc": 395, "example_l1": [41, 54], "example_model": [355, 357, 360, 365, 389], "example_with_tim": 45, "examplesimod": 344, "examplesimodflow": 347, "examplesmetaswap": 352, "examplesmf6": 365, "examplesprepar": 372, "examplesvisu": 376, "exce": [4, 233, 245, 289, 290, 291, 292, 293, 316, 394, 396, 398], "exceed": [7, 136, 214, 290, 291, 318, 396], "excel": [332, 392], "except": [0, 113, 259, 260, 261, 272, 284, 390], "exception_typ": 272, "excess": 212, "exchang": [0, 99, 103, 136, 157], "exclud": [170, 396], "exclus": 0, "excpet": 227, "exe": 214, "execut": [0, 113, 133, 318, 334, 337, 338, 339, 340, 341, 342, 344, 345, 347, 352, 353, 354, 356, 358, 361, 363, 364, 365, 372, 376, 386, 389, 400], "exercis": [45, 398], "exfiltr": 29, "exhaust": 399, "exist": [0, 45, 56, 147, 170, 245, 251, 284, 348, 349, 352, 386, 389, 390, 394, 396, 399], "expand": [88, 96, 147, 399], "expand_dim": [353, 356, 359, 366], "expans": [41, 42, 45, 54], "expect": [66, 88, 96, 107, 109, 111, 114, 133, 137, 142, 147, 151, 153, 156, 157, 167, 272, 354, 359, 363, 379, 380, 391], "expens": 75, "experi": [27, 157, 309, 377, 388], "experiment": 0, "explain": [359, 394, 399], "explan": [21, 398, 399], "explicit": [157, 289, 290, 291, 292, 293, 316, 318], "explicitli": [41, 54, 157, 251, 284, 295, 297, 316, 318, 358], "explor": 0, "expon": [123, 172], "exponenti": [112, 157], "export": [0, 377], "express": [41, 42, 54, 295, 394], "extdp": 172, "extend": [0, 172, 201, 213, 377], "extens": [0, 44, 47, 48, 55, 99, 103, 332, 388, 390, 396], "extent": [0, 390], "exterior": [0, 281, 283, 354], "exterior_depth": 281, "exterior_onli": 281, "extern": [26, 354, 356, 361], "extinct": [91, 172], "extinction_depth": [19, 172, 299, 300, 301], "extinction_theta": 172, "extra": [0, 26, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 204, 356, 390], "extra_overlap": 221, "extra_storage_coeffici": 204, "extract": [0, 5, 26, 117, 118, 121, 174, 176, 179, 180, 181, 217, 256, 259, 264, 273, 276, 394], "extrat": 0, "extrem": [0, 157], "f": [4, 25, 126, 315, 340, 396, 397], "f4a582": 288, "face": [0, 5, 9, 10, 11, 13, 14, 74, 129, 136, 182, 184, 254, 257, 304, 354, 355, 356, 373], "face_area": 356, "face_budget_right": 5, "face_dimens": [354, 356, 360], "facebudget": 320, "facebudget_front": 5, "facebudget_low": 5, "facebudget_net": 5, "facecolor": [280, 284, 375, 397], "facet": 377, "fact_mswp": 26, "fact_svat": [199, 351], "factor": [11, 12, 21, 26, 27, 29, 34, 51, 118, 136, 147, 157, 176, 199, 214, 290, 291, 292, 304, 307, 309, 359], "fail": [0, 27, 37, 43, 272, 331, 332], "fairli": 392, "fall": [7, 18, 29, 41, 42, 54, 99, 118, 119, 121, 176, 177, 179, 258, 260, 261, 284, 298, 313, 360, 386], "fallback": [0, 394], "fals": [0, 3, 5, 41, 42, 43, 54, 56, 59, 77, 78, 79, 80, 85, 86, 91, 94, 99, 100, 103, 104, 106, 108, 110, 112, 113, 117, 121, 122, 123, 127, 128, 129, 130, 135, 136, 140, 141, 145, 150, 152, 154, 157, 161, 162, 163, 166, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 221, 222, 230, 240, 251, 262, 277, 280, 281, 284, 296, 298, 299, 300, 301, 302, 304, 306, 307, 308, 310, 311, 312, 313, 316, 318, 319, 337, 338, 339, 340, 341, 342, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 368, 373, 379, 380, 395, 396, 397, 398], "falsearrai": 397, "falsexarrai": [395, 396], "familiar": [354, 358, 360], "faq": [0, 388], "far": [359, 386, 388, 397], "fast": [274, 348, 388, 392, 394], "faster": [0, 85, 278, 279, 303, 318, 386, 388], "fault": 22, "faulti": 0, "favor": 390, "feasibl": 386, "featur": [0, 66, 221, 222, 228, 229, 230, 240, 249, 332, 334, 335, 345, 356, 361, 386, 391, 394, 397, 399], "feature_typ": 39, "fedd": 209, "feddes_p1": [209, 351], "feddes_p2": [209, 351], "feddes_p3h": [209, 351], "feddes_p3l": [209, 351], "feddes_p4": [209, 351], "feddes_t3h": [209, 351], "feddes_t3l": [209, 351], "feed": [354, 358, 398], "feedstock": 0, "few": [0, 333, 353, 357, 358, 364, 386, 392], "fewer": [290, 291], "fff": [9, 10, 13, 14], "fiddli": [41, 54], "field": [0, 9, 10, 13, 14, 84, 90, 93, 98, 116, 120, 136, 139, 144, 149, 165, 169, 178, 255, 256, 285, 290, 291, 297, 356, 357, 359, 366, 373], "fig": [280, 284, 288, 337, 338, 339, 340, 341, 342, 354, 355, 356, 357, 361, 362, 366, 368, 369, 370, 371, 373, 396, 397, 398], "figsiz": [282, 284, 397], "figur": [280, 284, 332, 375, 394, 395, 397, 398], "file": [0, 5, 22, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 77, 78, 79, 80, 86, 91, 94, 99, 100, 103, 104, 106, 108, 110, 112, 113, 117, 118, 122, 123, 127, 128, 129, 130, 131, 135, 136, 140, 141, 145, 150, 152, 154, 157, 162, 163, 166, 170, 172, 174, 176, 180, 181, 182, 183, 184, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 217, 230, 240, 251, 252, 253, 278, 286, 294, 304, 307, 308, 331, 333, 334, 344, 345, 347, 348, 352, 353, 354, 355, 358, 360, 361, 364, 365, 368, 371, 372, 376, 377, 380, 386, 387, 388, 389, 390, 391, 392, 399, 400], "filehandl": [56, 59], "filenam": [41, 42, 43, 44, 54, 55, 56, 61, 68, 70, 72, 157, 390, 391], "fileout": [77, 79, 80, 86, 91, 94, 99, 103, 112, 117, 122, 123, 141, 145, 162, 163, 166, 172, 174, 180, 181, 361], "fill": [0, 118, 157, 176, 245, 249, 265, 266, 267, 268, 320, 345, 361, 392], "fill_between": 280, "fill_valu": [338, 364], "filt_bot": 368, "filt_top": 368, "filter": [0, 101, 105, 227, 234, 281, 360, 390], "filternumm": 368, "final": [25, 126, 230, 315, 337, 338, 339, 340, 341, 342, 345, 361, 362, 366, 388, 390, 392, 397], "find": [0, 42, 316, 332, 350, 354, 386, 388], "fine": 334, "finish": [128, 129, 130, 131, 278, 345], "finit": [27, 289, 290, 291, 292, 293, 309, 316], "fiona": 391, "first": [0, 5, 9, 10, 13, 14, 25, 37, 41, 42, 43, 45, 50, 51, 54, 76, 80, 86, 91, 94, 112, 113, 117, 118, 123, 126, 128, 129, 130, 133, 136, 140, 141, 145, 157, 170, 172, 174, 176, 180, 182, 218, 220, 221, 222, 228, 230, 251, 262, 285, 290, 291, 292, 315, 318, 339, 345, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 371, 373, 379, 380, 385, 386, 388, 390, 391, 395, 396, 397, 398, 399], "first_active_to_elev": [218, 397], "first_order_decai": [112, 123, 359], "firstli": 277, "fit": [45, 377, 394, 398, 399], "fix": [19, 28, 112, 157, 231, 232, 233, 234, 290, 291, 292, 332, 335, 353, 361, 398], "fixed_cel": [0, 91, 141, 395, 396], "fixed_format": 351, "fixed_format_pars": 351, "fixtur": [0, 396], "flag": [27, 41, 54, 59, 78, 79, 80, 85, 86, 91, 94, 112, 113, 117, 122, 123, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 290, 291, 296, 298, 302, 303, 304, 307, 308, 310, 311, 312, 313, 316, 318, 319], "flatten": 51, "flexibl": [0, 5, 275, 387], "flf": [9, 10], "flip": 0, "float": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 36, 41, 44, 47, 49, 51, 55, 78, 79, 80, 83, 86, 89, 91, 92, 94, 97, 112, 113, 115, 117, 118, 122, 123, 125, 136, 138, 141, 143, 145, 148, 157, 163, 164, 166, 168, 170, 171, 172, 173, 174, 176, 180, 181, 199, 201, 202, 204, 207, 209, 211, 212, 213, 214, 215, 227, 228, 229, 230, 234, 240, 245, 246, 247, 249, 250, 252, 253, 260, 264, 265, 266, 267, 268, 271, 273, 278, 280, 281, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 351, 353, 354, 356, 358, 359, 360, 361, 364, 379, 380], "float32": [44, 54, 361, 373, 390, 396, 397, 398], "float326": 396, "float32nan": [396, 397, 398], "float64": [0, 44, 129, 131, 182, 345, 351, 354, 361, 368, 373, 390, 394, 395, 396, 397, 398], "float640": [351, 395], "float641": [351, 354, 361, 395, 396], "float6410": [351, 373], "float64100": [373, 396], "float64120": 351, "float6414": 397, "float642": [361, 390, 396, 397, 398], "float6420": 351, "float64230": 351, "float6425": [361, 390, 396, 397, 398], "float6429": 397, "float644": [373, 390], "float645": [351, 361, 390, 396, 397, 398], "float6450": 345, "float646": 397, "float648": 373, "float64850": 345, "float649": [373, 390], "float6499": 351, "float64nan": [396, 397], "float_format": [307, 308], "flopi": 358, "flow": [0, 5, 6, 9, 10, 11, 13, 14, 44, 47, 49, 76, 77, 78, 79, 80, 85, 86, 91, 94, 99, 103, 106, 108, 110, 112, 117, 122, 123, 129, 135, 136, 141, 145, 150, 152, 154, 157, 162, 163, 166, 172, 174, 180, 181, 182, 184, 212, 246, 247, 285, 290, 291, 294, 295, 304, 305, 307, 316, 317, 318, 320, 337, 340, 353, 354, 355, 357, 359, 364, 366, 374, 376, 385, 387, 389, 390, 395, 396, 399], "flow_solv": [353, 356, 359, 366], "flow_veloc": [0, 9, 10, 320, 373], "flowfront": 5, "flowja": [0, 129, 182], "flowlow": 5, "flowmodel": 359, "flowright": 5, "flowvel_streamlin": [373, 376, 389], "fluid": [78, 318, 342, 356], "flux": [0, 5, 8, 9, 12, 18, 19, 20, 28, 29, 36, 86, 88, 91, 94, 96, 141, 206, 216, 298, 302, 310, 311, 312, 313, 319, 353, 356, 361, 373], "flux_concentr": 353, "fmt": 358, "focus": [357, 360, 387, 390, 391], "folder": [0, 210, 332, 337, 338, 339, 340, 341, 342, 345, 386], "follow": [0, 13, 14, 25, 43, 44, 55, 78, 118, 126, 136, 176, 230, 231, 232, 233, 234, 246, 247, 259, 307, 308, 315, 333, 336, 337, 338, 339, 340, 341, 342, 345, 348, 351, 353, 354, 356, 357, 358, 361, 363, 364, 368, 375, 386, 387, 388, 390, 392, 394, 395, 396, 397, 398], "forc": [25, 126, 315, 383, 397], "foremost": 386, "forg": [0, 336, 386, 388], "form": [129, 182, 275, 353, 354, 358, 360, 377, 379, 382, 386, 390, 391, 392, 399], "format": [0, 56, 78, 81, 82, 88, 91, 96, 112, 114, 118, 137, 142, 147, 167, 176, 276, 278, 288, 306, 307, 308, 320, 332, 348, 361, 377, 387, 391, 392, 394, 399], "former": [334, 398], "formul": [0, 78, 99, 136, 157, 163, 166, 172, 293, 297, 356], "forth": 0, "fortran": 386, "fortun": 392, "forward": [0, 118, 176, 278, 280, 284, 345], "found": [0, 99, 103, 129, 182, 331, 357, 361, 386, 396], "four": [5, 290, 291, 359], "fourth": [290, 291, 292], "frac": [4, 11, 12], "fraction": [112, 157, 209, 289, 290, 291, 292, 293, 295], "fraction_evaporated_sprinkl": [209, 351], "frame": 361, "framework": [26, 56, 58, 59, 68, 72], "framewotk": 361, "free": [0, 91, 337, 394], "freeli": 212, "freq": [339, 345, 356, 361, 395, 396], "frequenc": [3, 140, 392], "frequent": [0, 270, 383], "fresh": [337, 338, 339, 341, 342, 353], "freshwat": [4, 302, 313, 318, 343, 344, 363, 365, 389], "freshwaterhead": 4, "freshwaterlen": [338, 344, 389], "freundlich": 123, "frf": [9, 10, 13, 14], "from": [0, 3, 4, 6, 7, 8, 18, 21, 25, 26, 27, 29, 30, 32, 35, 36, 39, 45, 50, 55, 56, 66, 76, 78, 81, 82, 88, 96, 106, 108, 110, 113, 114, 118, 126, 136, 137, 142, 147, 150, 152, 154, 157, 162, 163, 166, 167, 170, 172, 176, 184, 206, 217, 218, 223, 224, 225, 226, 235, 236, 238, 245, 246, 247, 251, 253, 255, 256, 261, 262, 271, 273, 276, 284, 285, 290, 291, 298, 303, 304, 307, 309, 313, 315, 316, 319, 332, 334, 337, 340, 344, 345, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 368, 371, 372, 376, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 398, 399, 400], "from_datafram": 351, "from_edg": 361, "from_fil": 0, "from_flow_model": [0, 353, 356, 359, 366], "from_imod5_data": 0, "from_imod5_shd_data": 81, "from_lakes_and_outlet": 364, "from_mdal_compliant_ugrid2d": [0, 320], "from_user_input": [100, 104, 127, 271], "front": [0, 5, 6, 9, 10, 11, 13, 14, 129, 182, 285, 304, 359, 373], "frost": 26, "frustrat": [386, 390], "fulfil": [0, 66], "full": [0, 21, 278, 303, 331, 337, 338, 339, 340, 341, 342, 345, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 373, 375, 377, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398], "full_lik": [259, 338, 342, 351, 353, 354, 356, 358, 359, 360, 361, 364, 373, 379, 380], "fulli": [0, 25, 30, 88, 96, 114, 126, 137, 142, 147, 163, 167, 315, 338, 377, 386, 388, 390, 394, 395, 397], "function": [0, 4, 5, 7, 8, 9, 10, 11, 37, 42, 43, 44, 45, 50, 55, 57, 62, 66, 80, 81, 82, 84, 85, 87, 88, 90, 93, 95, 96, 98, 101, 102, 105, 114, 116, 120, 126, 137, 139, 142, 144, 146, 147, 149, 157, 165, 167, 169, 172, 175, 178, 184, 209, 220, 221, 222, 236, 238, 253, 255, 256, 257, 259, 260, 261, 262, 274, 284, 285, 287, 315, 332, 348, 350, 351, 354, 356, 357, 359, 360, 361, 366, 368, 369, 370, 371, 375, 377, 379, 380, 382, 386, 387, 388, 390, 392, 394, 395, 396, 397, 398, 399], "function_nam": 396, "function_that_throws_warn": 270, "functionali": 348, "fundament": 377, "funtion": 348, "further": [21, 118, 157, 176, 354, 397], "furthermor": [0, 102, 140, 170, 219, 295, 334, 361, 385, 397, 398], "futur": [180, 181, 332], "g": [0, 3, 5, 25, 27, 45, 46, 50, 80, 86, 91, 94, 117, 126, 141, 145, 162, 174, 180, 184, 212, 217, 230, 239, 240, 251, 252, 253, 276, 280, 281, 284, 309, 315, 342, 348, 351, 377, 386, 387, 391, 392], "galleri": [334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "gamma": 157, "gap": [239, 245, 281], "gapfil": 399, "gash": 209, "gatkin": 0, "gauss": 251, "gcg": [316, 337, 338, 339, 340, 341, 342], "gcr": 308, "gdal": [0, 54, 55, 100, 104, 127, 240, 251, 378, 379, 390, 391], "gdal_compliant_grid": [0, 378, 379], "gdal_raster": [320, 379, 380], "gdf": [5, 230, 284, 375, 379, 382, 391, 397], "gen": [0, 22, 50, 320], "gener": [0, 5, 20, 27, 41, 44, 47, 49, 54, 55, 94, 112, 113, 117, 162, 174, 214, 218, 221, 222, 224, 230, 232, 239, 251, 265, 266, 267, 268, 289, 290, 291, 292, 293, 297, 302, 303, 308, 309, 316, 320, 333, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 380, 383, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "generalheadboundari": [0, 162, 191, 345, 353, 356, 396], "generalheadboundarypackag": 8, "generalheadboundaryregridmethod": 0, "generalizedconjugategradientsolv": [337, 338, 339, 340, 341, 342], "geodatafram": [0, 37, 38, 39, 45, 50, 106, 108, 110, 150, 152, 154, 230, 240, 246, 247, 248, 249, 256, 284, 345, 369, 371, 379, 380, 382, 391, 392, 397], "geohydrolog": 390, "geohydrologi": 392, "geojson": 391, "geom_typ": 391, "geometr": [0, 316, 360], "geometri": [0, 10, 14, 22, 39, 45, 106, 108, 110, 150, 152, 154, 230, 240, 246, 247, 252, 253, 256, 283, 345, 354, 358, 361, 362, 364, 369, 379, 380, 382, 391, 392, 397], "geometric_mean": [0, 194, 220, 221, 222, 357, 396], "geopackag": 391, "geopanda": [0, 5, 37, 38, 39, 45, 50, 230, 248, 249, 256, 345, 348, 371, 379, 380, 382, 387, 388, 389, 397, 399, 400], "geoseri": 371, "geospati": [251, 388, 390, 391], "geotiff": 390, "get": [0, 5, 44, 55, 77, 129, 157, 182, 251, 259, 261, 262, 285, 296, 302, 310, 311, 312, 333, 351, 361, 370, 386, 388, 390, 394, 396, 398], "get_alldata": 377, "get_cmap": 284, "get_data": 377, "get_label_arrai": [0, 355, 362, 366], "get_lower_active_grid_cel": [0, 320], "get_lower_active_layer_numb": [0, 320], "get_model": 377, "get_regrid_method": 396, "get_upper_active_grid_cel": [0, 320], "get_upper_active_layer_numb": [0, 320], "getlogg": 56, "ghb": [8, 20, 96, 191, 218, 219, 224, 302, 345, 356, 397], "ghb2": 345, "ghb_conc": 353, "ghb_head": 353, "ghbssmden": 302, "ghg": 3, "gi": [256, 377, 387, 388, 390, 391, 399], "gift": [209, 351], "gift_dur": [209, 351], "gigabyt": [377, 386, 388], "git": [332, 334, 386, 387, 388], "github": [0, 275, 332, 336, 386, 387, 388, 396], "gitlab": 0, "give": [0, 44, 55, 385, 396], "given": [0, 5, 7, 9, 10, 13, 14, 25, 47, 49, 99, 117, 126, 132, 157, 172, 202, 249, 255, 256, 278, 284, 315, 316, 373, 385, 396], "glg": 3, "glob": [41, 42, 45, 54, 390], "global": 43, "globpath": 42, "gmre": 308, "go": [113, 336, 337, 338, 339, 340, 341, 342, 345, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 373, 375, 390, 391, 392, 393, 394, 395, 396, 397, 398], "goal": [348, 354, 377], "goe": 394, "good": [278, 280, 284, 285, 361, 396], "got": [0, 388], "gov": [86, 91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 170, 171, 174, 180, 181], "gpd": [5, 37, 38, 39, 45, 106, 108, 110, 150, 152, 154, 230, 246, 247, 248, 249, 256, 345, 379, 382, 391, 397], "gpkg": 391, "grab": 394, "gracefulli": [221, 222, 377], "gradient": [27, 157, 290, 291, 292, 303, 309, 316], "gradual": [304, 395], "granular": [66, 157], "graph": [354, 390, 394, 396], "grassland": 351, "gray_r": 368, "grb": [128, 129, 130, 131, 182, 183, 358, 364, 377, 394], "grb_path": [182, 183], "great": [348, 398, 399], "greater": [0, 27, 32, 134, 136, 157, 163, 166, 172, 289, 290, 291, 292, 293, 297, 303, 307, 308, 309, 316, 318, 335, 377, 385, 388], "greatli": [0, 281, 386], "grei": [280, 397], "grid": [0, 74, 81, 82, 84, 85, 88, 90, 93, 96, 98, 100, 102, 104, 107, 109, 111, 114, 116, 117, 118, 120, 121, 127, 128, 129, 130, 131, 136, 137, 139, 142, 144, 147, 149, 151, 153, 156, 165, 167, 169, 170, 174, 176, 178, 179, 182, 183, 201, 202, 203, 211, 213, 218, 219, 223, 224, 225, 226, 227, 231, 232, 233, 234, 236, 238, 241, 242, 243, 244, 249, 251, 254, 255, 256, 257, 281, 284, 289, 290, 291, 292, 293, 297, 307, 308, 312, 320, 345, 353, 354, 356, 357, 359, 360, 361, 362, 366, 368, 369, 370, 371, 377, 379, 380, 382, 387, 389, 395, 396, 397, 398, 399, 400], "grid_3d": [0, 320], "grid_boundary_xi": [0, 320], "grid_coord": 359, "grid_dim": 359, "grid_shap": 359, "grid_triangl": 356, "gridagnosticwel": [118, 119, 176, 177], "gridanimation3d": [0, 279, 320], "gridblock": 396, "griddata": [0, 112, 320], "griddataarrai": [107, 109, 111, 114, 137, 142, 151, 153, 156, 167], "groenendijk": 26, "ground": 385, "groundwat": [0, 3, 9, 10, 13, 14, 19, 26, 28, 29, 80, 91, 99, 103, 112, 117, 121, 122, 135, 141, 145, 162, 172, 174, 179, 180, 181, 214, 215, 217, 305, 317, 337, 340, 341, 348, 353, 354, 356, 357, 361, 366, 379, 380, 382, 383, 387, 390, 391, 392, 395, 397, 399], "groundwater_et_funct": 172, "groundwaterflowmodel": [0, 162, 353, 354, 356, 358, 359, 360, 361, 364, 366, 395], "groundwatertransport": 78, "groundwatertransportmodel": [0, 353, 356, 359, 366], "group": [0, 45, 184, 250, 387, 392, 396], "groupbi": [45, 230, 252, 253, 368, 379, 380], "growth": 338, "gt": [345, 351, 354, 361, 373, 390, 395, 396, 397, 398], "guarante": 398, "guess": 55, "gui": 0, "guid": [26, 334, 335, 366, 389, 390, 391, 397, 400], "guide_jupyt": 399, "guide_python": 399, "guo": 4, "gvg": [0, 3], "gwf": [0, 77, 80, 99, 106, 108, 110, 113, 136, 150, 152, 154, 157, 163, 166, 172, 361, 362, 396, 398], "gwf_1": [354, 355, 357, 358, 360, 361, 364, 366, 377, 395], "gwf_model": [353, 354, 356, 358, 359, 360, 361, 364, 366, 395, 398], "gwf_simul": [362, 398], "gwfgwf": 0, "gwl": 3, "gwrch_uzf": 0, "gwseep": 172, "gwt": [77, 78, 103, 112, 157], "gwt_model": 353, "gxg": [0, 3], "h": [0, 4, 25, 126, 130, 136, 157, 182, 183, 304, 315, 342], "h1": 366, "h_": 4, "h_fstrict": 307, "h_fstrictpk": 307, "ha": [0, 5, 16, 25, 39, 44, 45, 55, 73, 78, 80, 84, 90, 93, 98, 101, 105, 106, 108, 110, 112, 116, 117, 120, 121, 126, 128, 129, 130, 131, 136, 139, 144, 149, 150, 152, 154, 157, 162, 165, 169, 178, 179, 214, 218, 219, 223, 224, 226, 230, 231, 232, 233, 240, 251, 262, 278, 294, 305, 315, 317, 318, 334, 345, 350, 351, 353, 356, 357, 358, 359, 360, 361, 368, 371, 377, 383, 385, 386, 388, 390, 392, 393, 394, 396, 397, 398], "had": [0, 357], "half": [125, 353, 354], "half_simul": 354, "half_simulation_constant_head": 354, "hand": [78, 85, 136, 157, 303, 351, 386, 398], "handbook": 332, "handi": 351, "handl": [0, 41, 54, 118, 176, 295, 386, 392], "handler": [56, 59], "happen": [66, 147, 332, 361, 396], "harbaugh": [357, 358], "hard": [0, 386], "harder": 157, "hardli": 386, "hardwar": 394, "harmon": [136, 304], "harmonic_mean": [194, 220, 221, 222, 396], "has_nodata": [379, 380], "hasattr": 396, "hassl": 332, "hatch": 280, "hatchl": 0, "have": [0, 25, 41, 44, 45, 54, 55, 80, 86, 91, 94, 102, 112, 117, 118, 123, 126, 134, 136, 141, 145, 157, 162, 163, 166, 174, 176, 180, 199, 201, 202, 204, 212, 213, 214, 215, 222, 223, 224, 226, 230, 246, 255, 256, 259, 280, 285, 287, 291, 294, 295, 315, 332, 334, 335, 339, 340, 345, 351, 354, 355, 356, 358, 359, 360, 361, 363, 364, 366, 368, 371, 377, 379, 380, 382, 385, 386, 388, 390, 391, 394, 395, 396, 397, 398], "haven": 397, "haywir": 394, "hclose": [27, 307, 309, 337, 338, 339, 340, 341, 342], "hclose_inn": 307, "hclosepk": 307, "hd": [140, 183, 354, 358, 361, 364, 377, 394], "hdry": 304, "hds_origin": [362, 396], "hds_path": 183, "hds_regrid": 396, "hds_split": 362, "head": [0, 3, 4, 16, 17, 18, 20, 27, 29, 30, 31, 32, 41, 42, 44, 54, 55, 77, 78, 79, 80, 81, 82, 86, 94, 99, 112, 113, 130, 136, 140, 145, 157, 162, 163, 166, 172, 183, 185, 191, 207, 209, 214, 218, 224, 232, 262, 284, 294, 295, 296, 298, 302, 304, 306, 307, 309, 313, 332, 337, 338, 339, 340, 341, 342, 345, 353, 354, 355, 356, 358, 359, 360, 362, 364, 366, 367, 369, 372, 373, 377, 385, 389, 390, 392, 394, 395, 396, 399], "head_2001": [41, 54], "head_20010101_l1": [41, 54], "head_centr": 345, "head_dri": 304, "head_edg": 345, "head_edge_ris": 345, "head_end": 296, "head_fil": [0, 140], "head_l": [41, 54], "head_l1": [41, 44, 54, 55], "head_l2": [41, 44, 54, 55], "head_observ": 368, "head_period": 345, "head_start": 296, "header": [0, 184, 307, 308, 320], "headfil": 377, "headl11": [41, 54], "heads_grid": 368, "heartili": 332, "heat": 337, "height": [287, 390], "held": 136, "hell": 386, "help": [41, 54, 157, 332, 379, 382, 383, 396, 397, 398, 399], "helpfil": [307, 308], "henc": [50, 337, 338, 339, 340, 342, 359], "henri": [337, 343, 344, 363, 365, 389], "here": [9, 10, 13, 14, 24, 41, 42, 54, 73, 74, 99, 103, 221, 222, 259, 291, 316, 332, 336, 337, 338, 339, 340, 341, 342, 345, 350, 354, 356, 357, 359, 361, 363, 366, 386, 388, 390, 394, 397, 398], "heterogen": 0, "heterogeneous_k": 357, "hex": [280, 284, 286], "hexidecim": [280, 284], "hfb": [0, 106, 107, 108, 109, 110, 111, 150, 151, 152, 153, 154, 156, 246, 247, 345], "hfb6": [106, 108, 110, 150, 152, 154], "hfb_gdf": 345, "hfb_layer": 345, "hhformulation_rh": 78, "high": [284, 353, 394], "higher": [9, 10, 13, 14, 157, 255, 256, 281, 304, 379, 382], "highest": [0, 3, 21, 310], "highli": [303, 360, 386], "hill": [157, 304], "hist": 396, "histori": 157, "hit": [121, 179], "hk": 304, "hm": 136, "hmk": 136, "hmmmm": 398, "hmoc": 290, "hn": 304, "hnoflo": [294, 304], "hoffman": 209, "hold": [23, 219, 230], "hole": [239, 281], "hollow": 281, "homepag": 386, "homogen": 359, "hondsrug": [361, 362, 365, 389, 398], "hondsrug_crosssect": 0, "hondsrug_drainag": 361, "hondsrug_initi": 361, "hondsrug_layermodel": [361, 390], "hondsrug_layermodel_topsystem": 397, "hondsrug_meteorologi": 361, "hondsrug_partit": [362, 365, 389], "hondsrug_planar_riv": 397, "hondsrug_riv": 361, "hondsrug_sav": [362, 396, 398], "hondsrug_simul": [0, 362, 396, 398], "horizont": [0, 5, 13, 14, 21, 22, 23, 34, 85, 106, 108, 110, 117, 118, 129, 136, 150, 152, 154, 170, 174, 176, 182, 227, 228, 229, 239, 246, 247, 290, 291, 297, 304, 310, 311, 312, 340, 354, 355, 357, 361, 396], "horizontal_anisotropi": 304, "horizontalflowbarri": [0, 345], "horizontalflowbarrierhydrauliccharacterist": 0, "horizontalflowbarriermultipli": 0, "horizontalflowbarrierresist": [0, 246, 247], "horizontalhydraulicconduct": [34, 35, 345], "hotfix": 0, "hour": [130, 182, 183], "hourli": [379, 380], "how": [0, 44, 55, 80, 86, 91, 94, 117, 118, 133, 134, 136, 140, 141, 145, 174, 176, 180, 181, 221, 281, 332, 343, 346, 349, 353, 354, 356, 357, 358, 361, 362, 363, 364, 367, 371, 383, 390, 395, 396, 397, 399], "howev": [0, 9, 10, 13, 14, 23, 41, 42, 45, 54, 80, 113, 118, 157, 176, 221, 222, 289, 290, 291, 292, 293, 316, 333, 334, 351, 356, 377, 379, 382, 385, 390, 394, 397, 398], "hoyningen": 209, "html": [55, 77, 221, 222, 249, 252, 253, 281, 333, 334, 345, 386, 396], "http": [0, 30, 32, 41, 54, 55, 77, 86, 91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 163, 166, 170, 171, 174, 180, 181, 221, 222, 249, 252, 253, 275, 280, 281, 284, 337, 338, 339, 340, 341, 342, 345, 386, 387, 388, 396], "hue": 359, "human": [135, 386], "hundr": [383, 390], "hybrid": [290, 291, 292], "hydraul": [21, 23, 30, 32, 34, 35, 78, 94, 102, 106, 107, 109, 111, 113, 121, 136, 145, 150, 151, 153, 156, 163, 166, 172, 179, 214, 219, 228, 230, 236, 238, 304, 340, 396, 397], "hydraulic_characterist": [106, 150], "hydrocoin": [343, 344, 389], "hydrogeolog": 397, "hydrolog": [3, 340, 361, 383, 397], "hydrologi": 342, "hydrostat": 353, "hysteresi": 26, "i": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 43, 44, 45, 47, 50, 51, 54, 55, 59, 66, 68, 70, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 90, 91, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 136, 139, 140, 141, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 235, 239, 240, 249, 251, 252, 253, 255, 256, 259, 262, 264, 272, 274, 275, 277, 278, 279, 280, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 345, 348, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 371, 373, 375, 380, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 395, 397, 398, 399], "iboud": [337, 338, 340, 341, 342], "ibound": [0, 16, 26, 51, 81, 82, 185, 245, 262, 294, 307, 308, 337, 338, 339, 340, 341, 342, 345, 396], "ic": [113, 192, 353, 354, 356, 358, 359, 360, 364, 366, 396], "ic6": 113, "icbcfl": 304, "icbund": [295, 337, 338, 339, 340, 341, 342], "icelltyp": [136, 194, 353, 354, 356, 358, 359, 360, 364, 366, 396], "ichdcb": 296, "iconvert": [163, 166], "id": [0, 45, 47, 48, 117, 174, 227, 230, 234, 253, 361, 368], "id_cod": 45, "id_nam": [22, 36, 319, 337, 339, 340, 341, 342, 345], "idea": [285, 351, 361, 386, 388], "ideflay": 218, "idem": 51, "ident": [81, 82, 88, 96, 114, 137, 142, 147, 167, 316, 390], "identifi": [0, 41, 54, 117, 172, 174, 294, 394, 397], "idf": [0, 3, 5, 47, 49, 50, 54, 203, 217, 274, 281, 306, 307, 308, 320, 337, 338, 339, 340, 341, 342, 345, 377, 390, 394], "idfmap": [0, 320], "idomain": [0, 83, 89, 92, 97, 101, 105, 107, 109, 111, 115, 136, 138, 143, 148, 151, 153, 156, 164, 168, 170, 173, 186, 223, 224, 225, 226, 231, 232, 233, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 390, 396, 397, 398], "if_fals": [277, 379, 380], "if_tru": [277, 379, 380], "iff": 29, "ighbcb": 302, "ignor": [0, 41, 66, 74, 75, 76, 118, 176, 204, 209, 259, 260, 261, 270, 398], "ignore_warn": 320, "ignorecas": [41, 54], "ihdwet": [136, 304], "illustr": [338, 353, 354, 355, 356, 357], "iloc": 391, "ilogg": [68, 70, 72], "ilpfcb": 304, "ilu": [157, 307, 308], "ilut": 157, "im": [157, 366], "imag": [334, 361, 364, 368, 370, 371, 373, 394], "imeth": 184, "imeth1": 0, "imeth1head": 184, "imeth6head": 184, "immedi": [77, 79, 80, 86, 91, 94, 99, 103, 117, 122, 141, 145, 172, 174, 180, 181, 394], "immisc": 342, "immobil": 112, "immobile_poros": 112, "imod": [0, 320, 336, 337, 338, 339, 340, 341, 342, 345, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 380, 382, 383, 384, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399], "imod5": [0, 24, 43, 81, 82, 88, 96, 114, 118, 137, 142, 147, 167, 176, 337, 338, 339, 340, 341, 342, 345], "imod5_data": [81, 82, 88, 96, 114, 118, 137, 142, 147, 155, 167, 176], "imod_v5_3_x64r": 345, "imodenv": 388, "imodflow": [0, 19, 21, 23, 24, 26, 28, 320, 345, 377, 387, 389], "imodflow_jupyt": 346, "imodflow_python": 346, "imodflow_v5_3_metaswap_svn1977_x64r": 345, "imodflowmodel": [0, 345, 395], "imodflowprojectfil": [345, 347, 389], "imperm": 22, "implement": [26, 61, 77, 136, 348, 386], "implicit": [0, 75, 289, 290, 291, 292, 293, 303, 316], "import": [0, 3, 5, 41, 45, 54, 56, 81, 117, 174, 182, 218, 223, 224, 225, 226, 230, 236, 238, 253, 256, 274, 284, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366, 368, 369, 370, 371, 373, 375, 377, 382, 388, 390, 391, 394, 395, 396, 397, 398], "importantli": 0, "imposs": [4, 41, 54], "improv": [0, 157, 335], "imread": 394, "imshow": [284, 361, 364, 368, 370, 371, 394], "imshow_topview": [0, 320], "imt": 318, "in_bound": 258, "inact": [0, 16, 83, 89, 91, 92, 97, 101, 105, 115, 119, 121, 138, 141, 143, 148, 164, 168, 172, 177, 179, 231, 232, 233, 262, 294, 295, 304, 337, 340, 342, 361, 396, 398], "inactict": 396, "inactive_concentr": 295, "inactive_head": 294, "inbetween": 397, "includ": [0, 12, 15, 25, 26, 31, 33, 41, 42, 45, 51, 54, 78, 80, 102, 113, 126, 135, 136, 157, 162, 163, 166, 200, 214, 239, 251, 255, 256, 262, 294, 295, 303, 304, 305, 307, 308, 315, 317, 332, 334, 335, 338, 340, 341, 342, 354, 356, 360, 361, 375, 386, 388, 395, 396, 398], "include_constant_head": 262, "incompat": [0, 386], "incomplet": [27, 157, 303], "inconsist": [0, 118, 176, 398], "inconvert": [167, 385], "incorpor": 239, "incorrect": 0, "incorrectli": 0, "increas": [0, 157, 287, 290, 291, 292, 316, 353, 354, 357, 385, 395, 396, 397], "increment": 157, "ind_i": 259, "ind_x": 259, "inde": 398, "independ": [394, 396], "index": [0, 5, 11, 45, 55, 117, 174, 199, 256, 259, 281, 307, 308, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 361, 366, 373, 379, 380, 382, 386, 390, 395, 396, 397, 398], "indexcolumn": 48, "indic": [26, 27, 77, 78, 79, 80, 85, 86, 91, 94, 99, 102, 103, 112, 113, 117, 122, 123, 134, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 209, 230, 259, 289, 290, 291, 292, 295, 296, 302, 304, 307, 308, 309, 310, 311, 312, 313, 316, 318, 319, 360, 361, 368, 373, 391], "individu": [0, 5, 36, 80, 240, 319, 351, 361, 379, 380, 394], "indivudu": 396, "inequ": [379, 380], "infer": [0, 162, 221, 225, 284, 390], "infi_svat": 204, "infiltr": [26, 29, 147, 172, 217, 320], "infiltration_capac": 204, "infiltration_capacity_rur": 26, "infiltration_capacity_urban": 26, "infiltration_factor": [29, 51, 196, 396], "infiltration_r": 172, "infin": 157, "inflow": [80, 86, 91, 94, 117, 141, 145, 174, 180, 181, 288, 353, 366], "influenc": [26, 157], "info": [56, 61, 63, 64, 66, 68, 70, 72, 337], "inform": [26, 27, 40, 45, 66, 77, 78, 79, 80, 86, 88, 91, 94, 96, 99, 102, 103, 112, 113, 117, 118, 122, 128, 129, 130, 131, 136, 141, 145, 157, 170, 172, 174, 176, 180, 181, 182, 183, 211, 230, 276, 295, 340, 345, 354, 356, 357, 368, 373, 377, 385, 386, 388, 390, 391, 396, 397], "ingo": 5, "inher": 383, "inherit": 0, "ini": [0, 118, 176, 345], "inic": [307, 308], "inifil": 345, "init": [0, 345, 388], "init_svat": [205, 206, 207, 208], "initi": [0, 31, 63, 78, 79, 80, 85, 86, 91, 94, 112, 113, 117, 122, 123, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 205, 206, 207, 208, 209, 221, 222, 278, 290, 291, 292, 294, 295, 304, 316, 353, 356, 357, 359, 364, 395], "initial_immmobile_concentr": 112, "initial_immobile_concentr": 112, "initial_pf": 207, "initialcondit": [192, 353, 354, 356, 358, 359, 360, 361, 364, 366, 396], "initialconditionsequilibrium": 320, "initialconditionspercol": 320, "initialconditionsregridmethod": [0, 114], "initialconditionsrootzonepressurehead": 320, "initialconditionssavedst": 320, "inject": [117, 118, 174, 176, 180, 181, 339, 340, 342, 366], "injection_concentr": 366, "inlin": 334, "inner": [27, 136, 157, 245, 281, 303, 304, 307, 308, 309], "inner_csvfil": [0, 157, 158, 159, 160], "inner_dvclos": [157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "inner_it": [27, 303, 307, 308, 309, 337, 338, 339, 340, 341, 342], "inner_maximum": [157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "inner_rclos": [157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "innerit": [307, 308], "inp": [26, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215], "inplac": [87, 95, 146, 175, 398], "input": [0, 9, 10, 24, 25, 26, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 101, 105, 106, 108, 110, 112, 113, 114, 116, 117, 120, 121, 122, 123, 126, 132, 135, 136, 137, 139, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 157, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 206, 210, 214, 217, 221, 230, 239, 284, 294, 315, 316, 320, 335, 349, 352, 354, 355, 357, 359, 361, 375, 377, 385, 389, 392, 394, 396, 397, 399], "input_fil": 351, "inputfil": 135, "insert": [50, 290, 291, 302, 340, 345, 361, 396], "insid": [0, 66, 141, 356, 386, 395], "insight": 335, "insignific": [290, 291, 295], "inspect": [0, 391, 398], "instal": [0, 100, 104, 127, 271, 377, 379, 382, 383], "install_requir": 377, "instanc": [7, 211, 280, 284, 285, 287], "instead": [0, 27, 41, 42, 45, 47, 49, 50, 54, 81, 113, 118, 157, 176, 222, 240, 253, 264, 272, 273, 278, 309, 316, 318, 345, 377, 379, 380, 385, 386, 390, 394, 397, 398], "instruct": [332, 363, 386], "insuffici": [332, 348], "int": [16, 22, 26, 27, 36, 47, 49, 51, 61, 68, 70, 72, 77, 83, 89, 92, 97, 101, 105, 112, 115, 117, 125, 136, 138, 143, 148, 157, 163, 164, 166, 168, 171, 180, 181, 221, 230, 240, 245, 249, 250, 252, 253, 260, 267, 268, 281, 287, 290, 291, 292, 295, 303, 304, 307, 308, 309, 311, 316, 318, 319, 351, 353, 356, 357, 358, 359, 360, 361, 364, 366], "int32": [230, 354, 356, 360, 361, 373, 390, 396, 397, 398], "int320arrai": 396, "int321": [361, 373, 390, 396, 398], "int321arrai": [361, 397], "int64": [267, 268, 345, 351, 354, 390, 395, 396, 397], "int640": 354, "int641": [345, 351, 354, 390, 396, 397], "int641arrai": [345, 395], "int642": 395, "integ": [47, 48, 49, 83, 89, 92, 97, 101, 105, 115, 136, 138, 140, 143, 148, 157, 164, 168, 170, 173, 202, 209, 221, 230, 242, 244, 253, 267, 268, 280, 284, 294, 295, 303, 307, 308, 311, 361, 377, 379, 380], "integr": [56, 332, 387], "intellig": 0, "intend": [26, 359, 395, 399], "intens": [206, 303, 396], "interact": [0, 29, 77, 228, 332, 386, 394], "interblock": 304, "intercept": [199, 209, 217], "interception_capac": 199, "interception_capacity_per_lai": [209, 351], "interception_capacity_per_lai_rutt": [209, 351], "interception_capacity_per_lai_vonhoyningen": [209, 351], "interception_factor": 199, "interception_intercept": [209, 351], "interception_opt": [209, 351], "intercomparison": 340, "interconnect": 123, "interest": [5, 345, 360, 362, 391, 396, 398], "interfac": [61, 94, 339, 343, 344, 345, 353, 356, 389], "interfer": 388, "interflow": 26, "intermedi": 0, "intermitt": 386, "intern": [0, 77, 170, 209, 385], "internod": 318, "interpl": [379, 380, 382], "interpol": [0, 7, 74, 80, 221, 239, 245, 255, 256, 367, 372, 389, 392], "interpolate_na": [379, 380], "interpolate_value_boundari": [0, 320], "interpolated_head": [361, 368], "interpolated_head_larg": 361, "interpret": [0, 39, 140, 262, 316, 334, 386, 390, 394], "intersect": [377, 391], "intersphinx": 334, "interv": [27, 112, 125, 136, 157, 172, 287, 304], "interval_wet": 304, "intra": [8, 228], "intra_cell_boundary_condit": 320, "intrins": 396, "introduc": [334, 348, 377, 396, 399], "introduct": [353, 354, 356, 358, 361, 364], "intuit": 377, "invalid": 0, "invent": 364, "invers": 396, "invert": [9, 10], "investig": [358, 398], "invididu": 386, "involv": [45, 80, 86, 91, 94, 117, 141, 145, 174, 180, 181, 377, 396], "io": [0, 77, 249, 275, 386, 387, 396], "ipf": [0, 12, 50, 118, 176, 320, 377, 392], "ipf_point": 45, "ipykernel": 386, "ipynb": [337, 338, 339, 340, 341, 342, 345, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 373, 375, 390, 391, 392, 393, 394, 395, 396, 397, 398], "ipython": [334, 386], "irivcb": [313, 319], "irreduc": 172, "irregular": 393, "irrelev": 0, "irrig": 26, "is_act": 397, "is_const": 51, "is_edg": 361, "is_ibound": 262, "is_lak": 364, "is_observ": 368, "is_partit": 0, "is_split": 162, "is_x_centr": 345, "is_x_edg": 345, "isel": [0, 5, 259, 285, 353, 354, 355, 356, 358, 359, 361, 362, 364, 366, 373, 379, 380, 396], "isin": 345, "isnan": [368, 397], "isnul": 354, "isol": [45, 386], "isolv": [303, 307, 308], "isotherm": [112, 123, 303, 307, 308], "isotrop": [21, 297, 360, 396], "issu": [0, 335, 356, 383, 386, 387, 388, 392, 396, 398], "ist": 112, "item": [318, 379, 380], "iter": [25, 27, 85, 126, 136, 157, 245, 278, 303, 304, 307, 308, 309, 315, 318, 368], "iter1": [27, 245, 303, 309, 368], "iterdir": [390, 391], "itrack": [290, 291, 292], "its": [0, 66, 102, 118, 121, 129, 136, 140, 172, 176, 179, 182, 239, 252, 255, 256, 275, 345, 359, 361, 371, 383, 388, 390, 391, 392, 394], "itself": [357, 390], "ityp": [0, 47, 49, 305, 317], "ivertcon": 172, "iwetit": [136, 304], "iwtabl": 318, "iybg": 206, "j": [16, 25, 77, 126, 280, 284, 294, 315, 337, 340, 342], "ja": [129, 182, 184], "jacobi": 303, "jarvi": 209, "jarvis_drought_stress": [209, 351], "jarvis_o2_stress": [209, 351], "jet": [278, 284], "jhydrol": 342, "jinja2": 377, "jit": [220, 221, 222], "join": [230, 361, 379, 380, 390, 391], "journal": [26, 342], "judg": 368, "jump": 281, "jupyt": [334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "just": [0, 41, 54, 118, 176, 240, 334, 342, 351, 356, 370, 379, 380, 388, 390, 396, 397, 398], "k": [16, 21, 84, 90, 93, 98, 107, 109, 111, 116, 120, 121, 136, 139, 144, 149, 151, 153, 156, 165, 169, 178, 179, 194, 227, 236, 237, 238, 280, 294, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 369, 373, 390, 396, 397], "k11": 136, "k22": [136, 194, 396], "k33": [136, 194, 354, 356, 358, 360, 361, 364, 396], "k_horizont": [23, 304, 337, 338, 339, 340, 341, 342], "k_valu": 356, "k_vertic": [35, 304, 337, 338, 339, 340, 341, 342], "kappa": 157, "kd": [281, 359, 379, 380], "kdif": [209, 351], "kdir": [209, 351], "keep": [0, 277, 379, 380, 385, 390, 397], "keep_nan": 277, "kei": [0, 42, 50, 51, 66, 80, 81, 86, 88, 91, 94, 96, 117, 118, 129, 141, 145, 147, 155, 174, 176, 180, 182, 231, 232, 233, 240, 280, 284, 354, 363, 379, 380, 395, 396], "kept": [50, 101, 105], "kernel": [379, 380], "keyboard": 363, "keyerror": 0, "keysview": 354, "keyword": [0, 45, 46, 77, 79, 80, 86, 91, 94, 99, 112, 117, 122, 123, 136, 141, 145, 157, 172, 174, 180, 181, 217, 239, 249, 251, 258, 259, 260, 261, 278, 280, 284, 285, 287, 397], "kg": [4, 353], "kh": [34, 42, 228, 229, 345], "khv": [340, 345], "kib": [354, 390, 396], "kind": 335, "km": 390, "knmi": 361, "know": [356, 377, 388], "knowledg": 388, "known": [12, 383], "konikow": 340, "krylov": [307, 308], "kutta": [290, 291, 292], "kv": [34, 228, 229], "kv_sat": 172, "kva": 345, "kwarg": [45, 46, 73, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 217, 249, 278], "kwargs_aquitard": [280, 397], "kwargs_basemap": [284, 375], "kwargs_colorbar": [280, 284, 375, 397], "kwargs_contour": 287, "kwargs_pcolormesh": 280, "kwargs_quiv": [285, 373], "kwargs_rast": 284, "kwd": [58, 66, 218, 219], "l": [23, 29, 30, 35, 41, 54, 91, 157, 229, 256, 297, 340], "l2": [29, 157], "l2norm": 157, "l2norm_rclos": 157, "l2t": 297, "lab": [27, 309], "label": [0, 136, 284, 355, 361, 366, 375, 377, 390, 392], "label_arrai": 366, "lag": 318, "lagrangian": [290, 291, 292], "lai": 209, "lak": [0, 364, 387], "lake": [0, 337, 363, 365, 369, 370, 371, 375, 389, 391, 396, 397], "lake_grid": [369, 370], "lake_grid_coars": 370, "lake_i": 364, "lake_lay": 364, "lake_x": 364, "lakedata": [0, 364], "lakes_shp": [369, 370, 371, 375, 391], "lakes_wgs84": 371, "lanczo": [251, 303], "land": [33, 172, 204, 209, 212, 294, 391], "landus": [26, 202, 214, 351], "landuse_index": 351, "landuse_indexpandasindexpandasindex": 351, "landuse_nam": [209, 351], "landuse_opt": 351, "landuseopt": [320, 351], "langevin": [4, 342], "langmuir": 123, "languag": 386, "lanuag": 383, "laplac": [0, 245, 379, 380, 382], "laplace_interpol": [0, 320, 368, 379, 380, 382], "larg": [8, 27, 41, 54, 157, 172, 212, 281, 309, 334, 348, 379, 380, 386, 387, 388, 392, 394, 396], "larger": [27, 29, 167, 201, 213, 280, 290, 291, 309, 318, 354, 361, 368, 385, 394, 396], "last": [0, 5, 25, 77, 79, 80, 86, 91, 94, 117, 118, 122, 126, 140, 141, 145, 162, 172, 174, 176, 180, 181, 239, 275, 315, 318, 353, 356, 357, 359, 361, 366, 391, 395], "lat": 371, "later": [118, 172, 176, 386, 398], "latest": [157, 363, 386, 394], "latitud": [9, 13, 255], "latter": [117, 172, 174, 334, 391, 398], "law": 136, "layavg": 304, "layer": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 47, 51, 54, 55, 102, 107, 108, 109, 111, 117, 118, 121, 125, 129, 131, 134, 150, 151, 152, 153, 154, 156, 170, 176, 179, 180, 181, 182, 204, 217, 218, 219, 220, 222, 223, 224, 226, 227, 233, 235, 236, 238, 239, 242, 244, 262, 267, 268, 269, 271, 277, 280, 281, 285, 287, 294, 295, 297, 304, 307, 308, 311, 312, 319, 337, 338, 339, 340, 341, 342, 345, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 373, 385, 390, 392, 394, 395, 396, 397, 398], "layer1": 0, "layer2": 0, "layer_grid": 397, "layer_max": 125, "layer_min": 125, "layer_model": 397, "layer_typ": 304, "layer_wet": 304, "layeredhorizontalflowbarri": 0, "layeredhorizontalflowbarrierhydrauliccharacterist": 0, "layeredhorizontalflowbarriermultipli": 0, "layeredhorizontalflowbarrierresist": 0, "layeredwel": [0, 102], "layermodel": [361, 390], "layernumb": 262, "layerpandasindexpandasindex": [345, 354, 361, 373, 390, 395, 396, 397, 398], "layerpropertyflow": [337, 338, 339, 340, 341, 342], "layerregridd": [0, 320], "layout": 397, "laytyp": 304, "lazi": [377, 389, 399, 400], "lazili": [0, 41, 50, 54, 128, 129, 130, 131, 182, 183], "lazy_da": 394, "lazy_result": 394, "lead": [0, 47, 49, 290, 291, 316, 357, 395, 396], "leaf": 199, "leaf_area_index": 199, "leakag": 228, "learn": 157, "least": [8, 15, 25, 33, 126, 280, 285, 287, 294, 304, 315, 396], "leav": [5, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 356], "led": 386, "left": [11, 12, 353, 358, 360, 361, 364, 366, 397], "left_boundari": 353, "left_low": 345, "left_upp": 345, "leg": 286, "legal": 388, "legend": [280, 284, 286, 375], "legend_level": 280, "len": [343, 344, 345, 363, 364, 365, 389, 396], "length": [0, 25, 27, 112, 123, 126, 136, 157, 171, 172, 227, 228, 246, 247, 280, 284, 286, 289, 290, 291, 292, 293, 307, 309, 310, 311, 312, 315, 316, 356, 357, 361, 373, 385, 390, 391, 396, 397, 398], "length3": [36, 319], "leq": [11, 12], "less": [27, 85, 113, 136, 157, 290, 291, 304, 307, 309, 318, 334, 377, 379, 380, 385], "lesson": 340, "let": [42, 206, 217, 345, 353, 354, 357, 377, 379, 380, 386, 390, 394, 395, 396, 397, 398], "letter": [25, 126, 315], "level": [0, 3, 26, 51, 56, 59, 61, 66, 68, 70, 72, 99, 107, 109, 111, 118, 151, 153, 156, 157, 172, 176, 234, 253, 280, 282, 284, 286, 287, 337, 338, 339, 340, 341, 342, 345, 366, 373, 375, 386, 391, 392, 396], "levelnam": 56, "lgr": 377, "li": 136, "lib": 391, "libari": 388, "libmf6": [0, 77], "librari": [386, 394], "lift": 0, "like": [0, 5, 26, 44, 45, 55, 83, 84, 89, 90, 92, 93, 97, 98, 101, 105, 115, 116, 120, 136, 138, 139, 143, 144, 148, 149, 157, 164, 165, 168, 169, 178, 210, 221, 222, 230, 240, 249, 250, 251, 252, 253, 278, 284, 287, 332, 334, 335, 354, 356, 369, 370, 371, 377, 379, 380, 386, 391, 395, 396, 397, 398, 399], "like_2d": [361, 369, 370], "like_2d_coars": 370, "like_3d": 361, "limit": [0, 157, 230, 289, 290, 291, 292, 293, 318, 386, 388, 398, 399], "line": [5, 9, 13, 14, 22, 39, 61, 68, 70, 72, 78, 240, 246, 247, 255, 280, 283, 287, 338, 345, 351, 353, 354, 356, 358, 359, 361, 364, 373, 375, 386, 390, 391, 394], "line1": 345, "line2": 345, "line2d": [338, 351, 359, 390], "line_3d": [0, 320], "line_intercept": 5, "line_slop": 5, "linear": [0, 27, 74, 78, 80, 112, 123, 157, 172, 221, 307, 308, 309, 318, 359, 379, 380, 382, 385], "linear_acceler": [0, 157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "linearli": 7, "linearsegmentedcolormap": 284, "lineno": 56, "liner": 221, "linestr": [0, 10, 14, 22, 150, 152, 154, 246, 247, 256, 345, 373, 397], "linestring_to_square_zpolygon": [0, 320], "linestring_to_trapezoid_zpolygon": [0, 106, 108, 110, 320], "linewidth": 397, "link": [215, 334, 348, 361, 388, 392, 399], "linspac": [396, 397, 398], "linux": 386, "liquid": 99, "list": [0, 8, 22, 25, 26, 36, 41, 45, 47, 49, 51, 52, 54, 55, 77, 79, 80, 81, 86, 88, 91, 94, 96, 99, 103, 117, 118, 121, 122, 128, 131, 140, 141, 145, 147, 157, 162, 172, 174, 176, 179, 180, 181, 184, 221, 222, 230, 246, 247, 249, 278, 280, 284, 286, 304, 315, 319, 331, 339, 361, 375, 377, 388], "listedcolormap": 280, "listing_fil": [99, 103, 361], "listlik": [36, 280, 284, 288, 319], "littl": [45, 385], "ll": [259, 332, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 361, 364, 368, 369, 370, 371, 373, 386, 388, 390, 395, 396, 397, 398], "lmk": 136, "load": [0, 3, 5, 41, 50, 54, 81, 82, 88, 96, 114, 118, 122, 137, 142, 147, 167, 176, 230, 240, 256, 305, 307, 308, 354, 362, 366, 373, 377, 391, 394, 396, 397], "load_balance_weight": [307, 308], "loadset": 0, "loam": 214, "loc": [364, 368, 396], "local": [157, 331, 332, 336, 388], "locat": [0, 4, 5, 7, 16, 22, 26, 81, 82, 102, 117, 121, 172, 174, 179, 180, 181, 203, 215, 227, 230, 236, 238, 241, 243, 246, 247, 252, 254, 257, 259, 260, 261, 277, 278, 279, 280, 283, 289, 290, 291, 292, 293, 294, 295, 345, 361, 368, 373, 377, 386, 390, 391, 396, 397], "lock": 388, "lockfil": 388, "log": [0, 320], "log_level": [59, 68, 72], "logarithm": [136, 304], "logger": [56, 58, 61, 66, 70], "logger_typ": 59, "loggertyp": [56, 59], "loglevel": [56, 59, 61, 63, 64, 68, 70, 72], "lognorm": 357, "logspac": 397, "loguru": [0, 56, 58, 68], "logurulogg": 58, "lon": 371, "long": [295, 353, 360, 379, 380, 386, 390], "longer": [0, 379, 380, 386], "longitud": [9, 13, 255], "longitudin": [85, 297, 337, 338, 339, 340, 341, 342], "longitudinal_horizont": [85, 187, 353, 356, 359, 366, 396], "longitudinal_vert": [85, 187, 396], "look": [26, 136, 162, 202, 251, 278, 280, 284, 304, 332, 335, 357, 360, 362, 369, 390, 394, 396, 397, 398], "lookup": [26, 201, 213, 214, 351, 396], "lookup_and_forcing_fil": 26, "loop": [240, 256, 377, 390, 397], "loos": 335, "lot": [332, 351, 361, 379, 380, 383, 386, 390, 397], "low": [107, 109, 111, 151, 153, 156, 157, 386, 397], "lower": [0, 4, 5, 6, 9, 10, 11, 29, 41, 54, 113, 117, 118, 129, 157, 174, 176, 182, 209, 233, 242, 284, 285, 304, 313, 354, 373, 397, 398], "lowermost": 241, "lowest": [0, 3], "lowland": 26, "lpf": [304, 337, 338, 339, 340, 341, 342, 361, 385], "lst": [99, 103], "lt": [91, 141, 172, 345, 351, 354, 361, 373, 390, 395, 396, 397, 398], "lu": [157, 351], "luckili": [361, 398], "lump": 303, "lump_dispers": [303, 337, 338, 339, 340, 341, 342], "luse_mswp": 26, "luse_svat": [26, 209, 214, 351], "lx": 366, "ly": 397, "m": [0, 3, 4, 6, 19, 24, 25, 26, 44, 55, 74, 129, 130, 182, 183, 209, 212, 217, 230, 278, 284, 288, 297, 304, 310, 311, 312, 314, 315, 337, 338, 339, 340, 341, 342, 345, 353, 354, 361, 366, 368, 371, 373, 375, 385, 398], "m2": [26, 199, 304], "m3": [4, 6, 199, 215, 288, 304, 353, 366], "maa": 209, "machin": [336, 386, 388], "maco": 386, "macro": 0, "macropor": 214, "made": [0, 100, 104, 118, 127, 176, 234, 236, 238, 278, 351], "magma": [373, 397], "magnitud": [157, 245], "mai": [26, 33, 41, 44, 45, 47, 54, 55, 85, 91, 113, 125, 136, 141, 157, 221, 230, 259, 265, 266, 267, 268, 277, 289, 290, 291, 292, 293, 294, 316, 354, 361, 379, 380, 382, 383, 385, 390, 391, 392, 396], "main": [0, 13, 14, 21, 118, 176], "mainli": 386, "maintain": [0, 113, 157, 221, 222, 290, 291, 336], "maiz": 351, "major": [335, 392], "make": [0, 41, 47, 54, 56, 80, 128, 129, 130, 133, 204, 221, 222, 271, 284, 332, 333, 353, 357, 358, 361, 364, 373, 377, 380, 385, 388, 390, 396, 397], "makedir": 351, "mamba": 0, "mambaforg": 388, "manag": [26, 44, 55, 259, 377, 386, 387, 388, 394], "mandatori": [0, 395, 396], "mangl": 0, "mani": [0, 5, 7, 45, 112, 157, 221, 281, 291, 304, 332, 335, 348, 377, 385, 390, 391, 392, 396, 399], "manner": [78, 79, 80, 85, 86, 91, 94, 112, 113, 117, 122, 123, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 230, 394, 398], "manual": [0, 21, 26, 332, 353, 357, 361, 390, 394, 396, 398], "map": [0, 39, 45, 47, 49, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 284, 374, 376, 389, 390, 391, 399, 400], "mapnik": 375, "march": [0, 3], "mark": [245, 386, 396], "markdown": 334, "marker": 397, "mask": [0, 101, 105], "mask_all_model": 0, "mask_all_packag": [0, 396], "mass": [30, 112, 122, 123, 163, 290, 291, 292, 295, 305, 318, 356, 359, 385, 396], "mass_budget": 359, "massload": 0, "match": [0, 41, 42, 54, 218, 219, 221, 249, 379, 382, 392], "materi": 385, "mathemat": 386, "matplot": 284, "matplotlib": [280, 284, 285, 287, 288, 337, 338, 340, 341, 342, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 368, 369, 370, 371, 373, 374, 375, 377, 386, 388, 390, 394, 396, 397], "matplotlig": 280, "matric": 386, "matrix": [27, 78, 136, 157, 230, 297, 303, 304, 368, 390], "matrix_conditioning_method": 27, "matter": [359, 386, 397], "max": [185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 251, 284, 361, 362, 396, 398], "max_abstraction_groundwat": 215, "max_abstraction_surfacewat": 215, "max_concentr": [353, 356], "max_dens": [353, 356], "max_diff": 398, "max_it": [27, 303, 307, 308, 309, 337, 338, 339, 340, 341, 342], "max_n_transport_timestep": 316, "max_nparticl": 291, "max_overlap": [220, 222], "max_particl": 290, "max_row": 396, "maxbound": 77, "maxim": [7, 19], "maximum": [3, 26, 27, 91, 157, 215, 220, 221, 222, 290, 291, 303, 307, 308, 309, 316, 318, 356, 361, 394], "maximum_r": [299, 300, 301], "mayavi": 394, "mb": [344, 347, 352, 365, 372, 376, 389, 400], "mcdonald": 358, "mckee": 157, "mcve": 335, "md": 157, "mdal": [0, 100, 104, 127, 271, 378, 379], "mdal_compli": [0, 100, 104, 127], "mdal_compliant_ugrid2d": [0, 100, 104, 127, 269, 320, 378, 379], "mean": [0, 26, 41, 54, 84, 90, 93, 98, 116, 118, 120, 129, 133, 136, 139, 144, 149, 157, 165, 169, 176, 178, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 220, 221, 222, 230, 252, 253, 281, 304, 332, 333, 361, 366, 368, 377, 379, 380, 386, 388, 392, 393, 394, 396, 397, 398], "mean_head": [368, 377, 394], "mean_heads_in_grid": 368, "mean_regridd": 221, "mean_voxel": 222, "measur": [0, 3, 21, 217, 252, 361, 368, 392], "mechan": [85, 356], "med": 251, "median": [220, 221, 222], "medium": [295, 385], "meet": 316, "meetpunt": 368, "mem": [344, 347, 352, 365, 372, 376, 389, 400], "memmap": 0, "memori": [0, 27, 41, 54, 85, 136, 157, 172, 212, 230, 290, 291, 303, 354, 377], "merg": [0, 45, 182, 230, 332, 362, 392], "merge_to_dataset": 182, "mesh": [0, 271, 275, 278, 360, 378], "mesh2d": 354, "mesh2d_edge_i": 354, "mesh2d_edge_nod": 354, "mesh2d_edge_x": 354, "mesh2d_face_nod": 354, "mesh2d_nedg": 354, "mesh2d_nfac": 354, "mesh2d_nfacespandasindexpandasindex": 354, "mesh2d_nmax_face_nod": 354, "mesh2d_nnod": 354, "mesh2d_node_i": 354, "mesh2d_node_x": 354, "mesh2d_x": 356, "mesh_kwarg": [278, 279], "mesher": [379, 382], "meshzoo": 0, "messag": [0, 56, 61, 63, 64, 68, 70, 72], "met": [118, 157, 176], "meta": [354, 390, 396], "metadata": [41, 42, 54, 251], "metadata_dict": 351, "metamod": [0, 320], "metasvap": [201, 213], "metaswap": [0, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 216, 217, 320, 352, 389], "metaswap_exampl": [350, 352, 389], "metaswap_jupyt": 349, "metaswap_python": 349, "metaswapmodel": [0, 320], "mete_grid": 211, "mete_mswp": 26, "meteo": [26, 206], "meteo_station_numb": 26, "meteogrid": 320, "meteomap": 0, "meteorolog": [26, 211, 361, 397], "meteorologi": 361, "meter": [3, 5, 11, 157, 212, 214, 297, 304], "meth": 0, "method": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 61, 63, 64, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 98, 99, 103, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 152, 154, 157, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 230, 251, 252, 253, 259, 278, 279, 281, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 354, 355, 356, 357, 359, 361, 371, 373, 377, 379, 380, 382, 390, 394, 395], "method_nam": 396, "method_wet": 304, "metpi": [255, 256], "mf6": [0, 246, 247, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 377, 389, 394, 395, 396, 397, 398], "mf6_jupyt": 363, "mf6_python": 363, "mf6_wel_adapt": 0, "mf6horizontalflowbarri": [107, 109, 111, 151, 153, 156], "mf6io": 86, "mf6io_6": [91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 170, 171, 174, 180, 181], "mf6path": 133, "mf6wel": [0, 102, 121, 179], "mfnadvfd": 318, "mfsimul": 377, "mib": [390, 396], "mic": [303, 337, 338, 339, 340, 341, 342], "microsecond": [130, 182, 183], "mid": [7, 77, 351], "midpoint": [0, 7, 219, 265, 266, 267, 268, 397], "might": [0, 209, 256, 332, 337, 338, 339, 340, 341, 342, 351, 368, 386, 394, 397, 398], "migrat": 0, "million": 390, "milu": 157, "milut": 157, "mimic": [118, 176], "miminum": 361, "min": [26, 251, 284, 361], "min_concentr": [353, 356], "min_dens": [353, 356], "mind": 394, "miniconda": 388, "miniforg": 388, "minim": [12, 295, 335], "minima": 157, "minimum": [8, 11, 12, 26, 157, 220, 221, 222, 227, 234, 290, 291, 295, 318, 335, 361], "minimum_active_thick": 295, "minimum_k": [117, 118, 174, 176, 227, 358, 360], "minimum_thick": [0, 117, 118, 174, 176, 227, 234, 353], "minor": 0, "minu": [136, 157, 172], "minut": [130, 182, 183, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 368, 369, 370, 371, 373, 375, 390, 391, 394, 395, 396, 397, 398], "mipwa": 214, "mipwa2": 361, "misconcept": 386, "mismatch": 219, "misnom": 74, "miss": [0, 259, 260, 261, 361, 392, 395], "mistak": [231, 232, 233, 234, 398], "mix": [0, 140, 162, 163, 166, 275, 295], "mixelm": [289, 290, 291, 292, 293], "ml": 295, "mm": [19, 26, 28, 209, 211, 217, 361], "mmoc": [290, 292], "mobil": [112, 123], "mobile_immobile_mass_transfer_r": 112, "mobilestoragetransf": [193, 353, 356, 359, 366, 396], "mobilestoragetransferregridmethod": 0, "moc": 290, "mod2svat": 200, "mode": [185, 186, 194, 197, 198, 220, 221, 222, 251, 252, 253, 396], "model": [0, 8, 13, 14, 15, 18, 22, 24, 25, 26, 27, 29, 31, 36, 42, 45, 77, 78, 80, 87, 88, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 162, 163, 166, 167, 170, 171, 172, 174, 175, 179, 180, 181, 182, 184, 205, 206, 209, 210, 214, 216, 219, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 236, 238, 262, 281, 289, 290, 291, 292, 293, 294, 295, 297, 298, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 351, 352, 355, 359, 363, 365, 366, 368, 373, 379, 380, 382, 383, 389, 390, 391, 392, 394, 396, 399, 400], "model_nam": 0, "modeldir": [337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 358, 359, 361, 364, 366], "modelgrid": 377, "modellay": [26, 181], "modelnam": [0, 24, 78, 100, 104, 157, 158, 159, 160, 314, 353, 354, 356, 358, 359, 360, 361, 364, 366], "modern": [388, 391], "modflow": [0, 23, 25, 27, 35, 74, 77, 80, 81, 82, 83, 86, 88, 89, 91, 92, 94, 96, 97, 99, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 119, 121, 122, 126, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 148, 150, 151, 152, 153, 154, 156, 157, 164, 167, 168, 170, 171, 172, 174, 177, 179, 180, 181, 200, 217, 223, 224, 225, 226, 231, 232, 233, 309, 310, 311, 312, 315, 316, 318, 348, 349, 353, 354, 356, 358, 360, 361, 363, 364, 377, 383, 385, 391, 395, 399], "modflow2005": [377, 385], "modflow6": [0, 77, 102, 135, 182, 183, 184, 320, 349, 352, 353, 354, 357, 358, 359, 361, 364, 377, 387, 389, 393, 394, 395], "modflow6_write_kwarg": 0, "modflow6simul": [0, 118, 176, 353, 354, 356, 358, 359, 360, 361, 364, 366, 395], "modif": 332, "modifi": [27, 290, 292, 297, 303, 337, 353, 358, 361, 387], "modlfow": 0, "modpath": 377, "modul": [0, 21, 56, 58, 66, 212, 218, 219, 307, 308, 334, 367, 386, 390], "modular": 366, "moistur": [26, 214], "molecular": [85, 297, 356, 396], "moment": [0, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178], "momentum": 157, "monteith": 209, "month": [0, 3, 130, 182, 183, 345], "monthli": [3, 345], "more": [0, 13, 14, 25, 27, 41, 44, 45, 47, 54, 55, 66, 75, 77, 85, 99, 103, 126, 135, 136, 157, 214, 217, 230, 240, 266, 268, 281, 289, 290, 291, 292, 293, 303, 309, 315, 318, 337, 340, 345, 351, 354, 356, 357, 359, 361, 363, 377, 385, 386, 387, 391, 392, 396, 397, 398], "most": [0, 5, 27, 41, 54, 157, 230, 242, 244, 289, 290, 291, 292, 293, 303, 304, 307, 308, 309, 318, 348, 357, 379, 380, 385, 386, 388, 394, 396, 397], "mostli": [377, 399], "mother": 392, "mound": 354, "move": [0, 73, 290, 291, 350, 354], "movement": 342, "mover": 172, "mp4": 278, "mpimg": 394, "msl": [19, 26], "mst": [193, 353, 356, 359, 366], "msw": [0, 320, 351], "mt3d": [11, 12, 74, 316, 377], "mt3dm": [305, 317, 318, 366, 387], "mtdnconc": 318, "much": [0, 27, 136, 278, 279, 289, 290, 291, 292, 293, 309, 318, 345, 385, 386, 388, 398], "multi": [0, 121, 179, 295, 383, 386, 387, 390, 394, 396], "multidimension": 377, "multilinear": [0, 221, 361], "multimodel": [0, 355, 362, 366], "multipl": [0, 27, 41, 42, 43, 47, 50, 54, 78, 118, 121, 128, 131, 176, 179, 223, 224, 225, 226, 236, 238, 250, 256, 280, 359, 361, 385, 386, 390, 397], "multipli": [0, 107, 108, 109, 111, 141, 151, 152, 153, 156, 171, 214, 304, 310, 311, 312, 316, 345, 385, 390, 395], "multispeci": [295, 366], "must": [3, 5, 6, 9, 10, 11, 12, 25, 31, 47, 78, 80, 101, 105, 113, 117, 126, 130, 136, 157, 163, 166, 174, 182, 183, 199, 201, 202, 204, 212, 213, 214, 215, 222, 251, 255, 256, 277, 278, 280, 285, 287, 289, 290, 291, 292, 293, 294, 295, 315, 316, 366, 385, 394, 396], "mutat": 0, "mwe": 335, "mxiter": [27, 245, 303, 307, 308, 309, 368], "mxpart": [290, 291], "mxstrn": 316, "my": [182, 379, 382], "my_first_imodflow_model": 345, "my_project": 388, "mydask": 394, "mypi": 331, "mypy_lint": 331, "myth": 386, "n": [0, 41, 42, 54, 74, 129, 130, 182, 183, 235, 246, 247, 280, 284, 286, 287, 345, 361, 373, 388, 390, 391, 395, 396], "n_face": [354, 356, 360], "n_speci": 295, "n_streamlin": [287, 373], "n_timestep": [126, 171, 316, 353, 356, 359, 366, 395], "n_years_gvg": 3, "n_years_gxg": 3, "nadvfd": 289, "nam": 345, "name": [0, 22, 26, 36, 41, 42, 43, 44, 45, 47, 54, 55, 56, 58, 66, 78, 84, 90, 91, 93, 98, 99, 102, 103, 106, 108, 110, 112, 116, 118, 120, 124, 128, 131, 132, 139, 141, 144, 149, 150, 152, 154, 157, 162, 165, 169, 176, 178, 184, 209, 214, 217, 218, 219, 230, 240, 249, 250, 252, 253, 274, 275, 282, 284, 319, 336, 337, 338, 339, 340, 341, 342, 345, 351, 354, 361, 373, 379, 380, 390, 391, 395, 396, 397, 398], "namefil": 0, "namespac": 0, "namfil": 0, "nan": [0, 5, 44, 47, 49, 55, 83, 89, 92, 97, 115, 128, 130, 138, 143, 148, 164, 168, 172, 183, 221, 222, 239, 249, 251, 259, 265, 266, 267, 268, 277, 345, 353, 358, 359, 360, 361, 364, 368, 369, 379, 380, 396, 397, 398], "nan_lik": 366, "nanarrai": [345, 361, 396, 397, 398], "nanosecond": [130, 182, 183, 361, 364, 396], "nanpercentil": [221, 222], "nanxarrai": 397, "nap": 368, "natur": [140, 290, 291, 392, 397], "nbstripout": 334, "nc": [377, 378, 379, 390], "ncol": [258, 337, 338, 339, 340, 341, 342, 345, 353, 357, 358, 359, 360, 364, 366], "ncomp": 295, "ncr": 303, "ndarrai": [117, 174, 258, 260, 264, 265, 266, 267, 268, 273, 354, 390, 394, 396], "ndim_regrid": 221, "ndimag": [361, 379, 380], "nearest": [3, 201, 213, 221, 239, 251, 361, 373, 377, 379, 380, 390, 394, 396], "nearli": [377, 399], "neatli": [44, 55], "necesarili": 364, "necessari": [0, 112, 221, 290, 291, 345, 361, 370, 375, 386, 396], "necessit": [11, 12], "need": [0, 26, 36, 41, 42, 44, 45, 54, 55, 66, 81, 82, 88, 96, 101, 105, 114, 118, 133, 137, 140, 142, 147, 157, 167, 176, 221, 222, 236, 238, 246, 272, 290, 291, 292, 295, 303, 304, 310, 311, 312, 316, 319, 333, 336, 340, 345, 353, 354, 356, 361, 368, 370, 373, 377, 388, 390, 392, 394, 396, 398], "neg": [0, 5, 11, 27, 112, 117, 122, 123, 136, 174, 180, 181, 251, 337, 338, 339, 340, 341, 342, 361], "neglig": [290, 291, 292, 385, 386], "neighbor": [136, 239, 304, 379, 380, 393], "neighbour": [201, 213, 239, 396], "neither": 26, "nest": [0, 51], "net": [5, 217], "netcdf": [0, 100, 104, 127, 271, 361, 377, 387], "netcdf4": [265, 266, 267, 268], "netflow": 5, "netflow_lay": 5, "netflow_right": 5, "netflow_right_of_diagon": 5, "netherland": [0, 361, 390], "network": 361, "new": [0, 9, 10, 13, 14, 81, 82, 88, 96, 114, 132, 134, 137, 147, 167, 214, 251, 255, 256, 259, 290, 291, 332, 335, 348, 353, 354, 355, 356, 357, 358, 363, 364, 373, 379, 380, 386, 396], "new_model": 357, "new_npf": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178], "new_riv": 398, "new_riv_d": 398, "new_sim": 355, "new_simul": 357, "new_top": 235, "newer": 0, "newton": [0, 99, 157, 361], "next": [0, 25, 118, 126, 176, 211, 290, 291, 292, 315, 345, 361, 363, 366, 368, 373, 375, 394, 395, 396, 397], "nface": [354, 356, 360], "nice": [41, 54, 334, 368, 395, 397], "nieuwkoopse_pla": 364, "nl": [337, 338, 339, 340, 341, 342, 345], "nlai": [294, 337, 338, 339, 340, 341, 342, 345, 353, 357, 358, 359, 360, 364, 366], "nlayer": [354, 356, 360], "nlsink": 292, "no_ptc": [0, 157, 158, 159, 160], "nodata": [0, 44, 47, 48, 49, 55, 83, 89, 92, 97, 115, 138, 143, 148, 164, 168, 203, 231, 232, 233, 240, 249, 277, 398], "nodatavalu": 26, "node": [27, 136, 157, 307, 309, 358, 360, 364], "nodepropertyflow": [0, 88, 96, 147, 194, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 396], "nodepropertyflowregridmethod": [0, 84, 90, 93, 98, 116, 120, 137, 139, 144, 149, 165, 169, 178, 357], "nois": 334, "nomenclatur": 74, "nomin": 172, "non": [0, 5, 7, 13, 14, 50, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 251, 255, 265, 266, 267, 268, 304, 318, 353, 357, 361, 364, 379, 380, 385], "nonconverg": 157, "none": [0, 5, 8, 22, 23, 24, 35, 36, 39, 41, 42, 43, 44, 47, 48, 49, 54, 55, 58, 59, 61, 66, 68, 70, 72, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 98, 99, 100, 103, 104, 112, 113, 114, 116, 117, 120, 122, 123, 125, 127, 128, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 157, 158, 159, 160, 165, 167, 169, 172, 174, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 209, 212, 218, 219, 221, 226, 227, 230, 231, 232, 233, 239, 240, 245, 249, 251, 271, 280, 282, 284, 285, 288, 302, 307, 308, 313, 314, 316, 319, 345, 351, 353, 354, 356, 358, 359, 360, 361, 364, 366, 373, 395, 396, 397, 398], "nonequidist": [0, 264, 273], "nonexarrai": [395, 396, 397, 398], "nonlinear": [27, 157, 303, 307, 308, 309], "nonuniform": [290, 291], "nonzero": 172, "norm": [157, 280], "normal": [41, 42, 54, 66, 118, 176, 206, 290, 291, 318, 385, 396], "north": 21, "northeast": 361, "nota": [19, 27, 28, 291, 297, 309], "notabl": 0, "notat": [41, 54], "note": [5, 9, 10, 13, 14, 19, 23, 26, 28, 35, 39, 41, 42, 45, 47, 54, 74, 75, 76, 77, 78, 133, 136, 157, 172, 203, 209, 246, 251, 256, 265, 266, 267, 268, 278, 289, 290, 291, 292, 293, 295, 307, 308, 316, 334, 337, 338, 339, 340, 341, 342, 354, 356, 357, 361, 373, 377, 386, 390, 391, 397, 398], "notebook": [0, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "noth": 157, "notic": [0, 371, 395], "notnul": [379, 380], "now": [0, 26, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 357, 358, 360, 361, 362, 364, 366, 369, 386, 395, 396, 397, 398], "np": [0, 5, 36, 41, 42, 44, 54, 117, 140, 172, 174, 221, 222, 249, 251, 258, 259, 319, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 368, 369, 373, 375, 379, 380, 390, 391, 394, 395, 396, 397, 398], "nparticles_advect": [290, 291], "nparticles_no_advect": [290, 291], "npc": [307, 308], "npf": [0, 84, 88, 90, 93, 96, 98, 116, 120, 136, 137, 139, 144, 147, 149, 165, 169, 178, 194, 353, 354, 356, 357, 358, 359, 360, 364, 366, 385, 396], "npf_regrid": 357, "nph": [290, 291], "npl": [290, 291], "nplane": [290, 291], "npmax": [290, 291], "npmin": [290, 291], "npsink": 292, "nrchop": [310, 311, 312], "nrow": [258, 337, 338, 339, 340, 341, 342, 345, 353, 357, 358, 359, 360, 364, 366, 396], "nseg": 0, "nstp": [171, 316], "nswtcpl": 318, "ntrailwav": 172, "null": 58, "nulllogg": 58, "numba": [221, 222, 377], "numba_celltre": 388, "number": [0, 3, 26, 27, 44, 47, 48, 49, 50, 55, 61, 68, 70, 72, 77, 80, 91, 112, 117, 122, 126, 141, 145, 157, 171, 174, 180, 181, 206, 218, 221, 230, 242, 244, 258, 260, 287, 289, 290, 291, 292, 293, 294, 295, 303, 304, 307, 308, 309, 311, 316, 318, 334, 336, 338, 340, 341, 348, 353, 358, 359, 360, 361, 364, 366, 368, 374, 379, 380, 383, 385, 386, 388, 390, 391, 393, 394, 396, 397], "number_orthogon": 157, "number_partit": [355, 362], "numer": [0, 157, 335, 359, 361, 385, 396], "numpi": [0, 44, 140, 221, 222, 230, 240, 259, 266, 268, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 368, 373, 375, 377, 386, 388, 390, 391, 394, 395, 396, 397, 398], "numpysupport": [221, 222], "nutshel": [388, 394], "nwaveset": 172, "o": 351, "object": [0, 22, 41, 42, 54, 61, 81, 82, 88, 96, 102, 114, 118, 121, 126, 132, 137, 140, 142, 147, 167, 176, 179, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 209, 220, 221, 222, 276, 277, 284, 315, 320, 337, 338, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 361, 364, 366, 368, 369, 370, 371, 373, 377, 390, 391, 395, 396, 397, 398], "objectnonearrai": [395, 396, 397, 398], "observ": [79, 80, 86, 91, 94, 117, 122, 141, 145, 172, 174, 180, 181, 354, 368, 391, 395, 396, 397, 398], "obsolet": 0, "obstruct": 22, "obtain": [9, 10, 13, 14, 255, 256, 280, 285, 287, 304, 361, 362, 368, 371, 373], "obviou": [334, 394], "oc": [0, 140, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 358, 359, 360, 364, 366], "occupi": [26, 107, 109, 111, 151, 153, 156], "occur": [0, 26, 27, 50, 80, 112, 113, 230, 252, 253, 281, 318, 361, 385, 397], "occurr": 26, "octob": 345, "off": [0, 78, 337, 338, 339, 340, 342, 345, 358, 369, 390, 395, 396, 397], "offici": 0, "often": [318, 385, 386, 391, 398], "ogr": [230, 240, 252, 253, 391], "ogw": 86, "oh": 398, "ok": 363, "old": [336, 379, 380], "old_riv": 398, "older": [0, 385], "olsthoorn": [13, 14], "omit": 157, "ommit": 394, "onc": [0, 42, 80, 220, 221, 222, 275, 386, 394], "one": [0, 5, 8, 25, 27, 39, 41, 44, 45, 47, 50, 54, 55, 81, 82, 84, 88, 90, 93, 96, 98, 106, 108, 110, 112, 113, 114, 116, 117, 120, 123, 126, 136, 137, 139, 140, 142, 144, 147, 149, 150, 152, 154, 157, 163, 165, 166, 167, 169, 170, 174, 178, 221, 222, 227, 230, 231, 232, 233, 239, 245, 251, 275, 278, 289, 290, 291, 292, 293, 295, 297, 303, 304, 307, 308, 309, 315, 316, 318, 336, 353, 357, 359, 360, 361, 368, 370, 377, 386, 390, 392, 394, 396], "ones": [345, 351, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 379, 380, 394, 395, 396], "ones_lik": [5, 351, 353, 396, 397], "onli": [0, 5, 8, 11, 12, 13, 14, 19, 26, 27, 28, 36, 41, 44, 54, 55, 80, 81, 84, 90, 93, 98, 106, 107, 108, 109, 110, 111, 112, 113, 116, 120, 130, 136, 139, 140, 144, 149, 150, 151, 152, 153, 154, 156, 157, 163, 165, 166, 169, 170, 172, 178, 182, 183, 203, 209, 214, 221, 225, 230, 239, 251, 252, 279, 281, 285, 290, 291, 292, 303, 304, 305, 307, 308, 316, 317, 318, 319, 333, 337, 338, 339, 340, 341, 342, 345, 354, 356, 361, 368, 377, 385, 387, 388, 394, 395, 396, 397, 398], "onlin": [332, 334, 394, 398], "onto": [9, 10, 13, 14, 132, 249, 357], "open": [0, 3, 5, 42, 50, 128, 129, 130, 131, 182, 183, 251, 253, 281, 320, 337, 338, 339, 340, 341, 342, 345, 359, 363, 378, 379, 386, 387, 390, 394, 396], "open_": 0, "open_cbc": 0, "open_concentr": [0, 353, 356, 359, 366], "open_dataarrai": [378, 379], "open_dataset": [0, 320, 361, 378, 379, 390], "open_dv": 0, "open_flow_budget": [0, 354, 355], "open_hd": [0, 358, 361, 364, 377, 394], "open_head": [0, 353, 354, 355, 356, 361, 362, 396], "open_projectfile_data": [0, 81, 82, 88, 96, 114, 118, 137, 142, 147, 167, 176, 320], "open_rasterio": 251, "open_subdomain": [0, 320], "open_transport_budget": [0, 359], "openstreetmap": [0, 375], "oper": [0, 45, 66, 101, 105, 277, 290, 291, 292, 356, 361, 369, 379, 380, 382, 386, 388, 391, 394], "opposit": 157, "opt": 396, "optim": [157, 316, 386, 394], "option": [0, 3, 4, 5, 6, 8, 11, 12, 19, 22, 24, 27, 28, 36, 39, 41, 42, 43, 44, 45, 47, 49, 54, 55, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 99, 100, 103, 104, 112, 114, 116, 117, 118, 120, 122, 123, 125, 127, 130, 135, 136, 137, 139, 140, 141, 142, 144, 145, 147, 149, 157, 162, 163, 165, 166, 167, 169, 171, 172, 174, 176, 178, 180, 181, 182, 183, 209, 214, 218, 219, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 236, 238, 239, 240, 249, 251, 252, 253, 262, 271, 277, 280, 284, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 298, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 332, 356, 361, 371, 385, 388, 390, 391, 396], "optionalkeyword": 157, "order": [0, 75, 76, 80, 112, 117, 123, 157, 174, 234, 245, 277, 287, 290, 291, 292, 316, 359, 361, 368, 379, 380, 397], "ordin": 351, "ordinari": [379, 380, 394], "org": [30, 32, 55, 77, 163, 166, 221, 222, 252, 253, 280, 281, 284, 340, 342, 345], "organ": [383, 388], "orient": [136, 353], "origin": [0, 4, 45, 101, 105, 157, 172, 227, 316, 334, 353, 354, 355, 357, 358, 360, 361, 362, 371, 390, 396, 398], "original_modeldir": 362, "original_rch_packag": 396, "original_simul": 396, "orthomin": 303, "oscil": 76, "oss": [337, 338, 339, 340, 341, 342, 345], "other": [0, 41, 42, 47, 54, 55, 74, 77, 126, 136, 157, 184, 223, 224, 226, 252, 280, 285, 287, 315, 334, 354, 359, 361, 366, 379, 380, 385, 386, 388, 391, 394, 395, 397], "otherwis": [47, 140, 250, 297, 345, 395], "oud": 342, "our": [332, 334, 345, 354, 369, 371, 395, 397, 398], "out": [0, 118, 136, 176, 259, 260, 281, 285, 332, 360, 377, 380, 385, 386, 388, 394, 395, 396, 397], "out_of_bound": [0, 259, 260, 261], "outcom": 366, "outer": [27, 136, 157, 245, 303, 304, 307, 308, 309, 337, 340, 361, 379, 380], "outer_csvfil": [0, 157, 158, 159, 160], "outer_dvclos": [157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "outer_edg": 361, "outer_maximum": [157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "outflow": [80, 86, 91, 94, 117, 141, 145, 174, 180, 181, 288], "outgo": 5, "outletman": 0, "outletspecifi": 0, "outletweir": 0, "outlin": [118, 176, 353], "output": [0, 4, 5, 25, 26, 45, 56, 59, 77, 78, 79, 80, 86, 91, 94, 99, 103, 112, 117, 122, 123, 126, 130, 132, 136, 140, 141, 145, 157, 162, 163, 166, 170, 172, 174, 180, 181, 182, 183, 216, 217, 235, 249, 278, 304, 306, 315, 320, 334, 345, 353, 354, 357, 362, 364, 377, 392, 394, 396, 399], "outputcontrol": [0, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 358, 359, 360, 361, 364, 366], "outsid": [0, 83, 89, 92, 97, 115, 118, 138, 143, 148, 164, 168, 176, 227, 231, 232, 233, 234, 260, 261, 368, 394], "over": [0, 8, 11, 34, 80, 84, 86, 90, 91, 93, 94, 98, 112, 116, 117, 120, 123, 139, 141, 144, 145, 149, 165, 169, 172, 174, 178, 180, 181, 212, 218, 219, 221, 236, 238, 240, 246, 247, 256, 277, 278, 279, 284, 285, 289, 290, 291, 292, 293, 307, 308, 310, 311, 312, 334, 345, 353, 354, 356, 377, 386, 390, 394, 396, 397], "overal": 359, "overcom": 157, "overhaul": 0, "overhead": [220, 221, 222, 396], "overlai": [280, 282, 284, 368, 375, 397], "overlap": [8, 84, 90, 93, 98, 108, 116, 120, 139, 144, 149, 165, 169, 178, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 219, 221, 227, 357, 396], "overli": [136, 223, 224, 226], "overrid": [81, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 137, 139, 142, 144, 147, 149, 165, 167, 169, 178], "overridden": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178], "overview": [353, 354, 356, 357, 358, 361, 364, 386, 399], "overwhelm": 285, "overwrit": [101, 105], "overwritten": [0, 250], "own": [0, 44, 55, 56, 221, 222, 345, 383], "oxygen": 209, "p": [26, 41, 54, 63, 64, 337, 340, 342, 366], "p1": 209, "p2": 209, "p30": [221, 222], "p30_regridd": 221, "p30_result": [221, 222], "p30_voxel": 222, "p3h": 209, "p3l": 209, "p4": 209, "p54": [11, 12], "pack": 395, "packag": [0, 12, 17, 18, 19, 20, 25, 26, 28, 29, 34, 36, 56, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 214, 218, 219, 230, 236, 238, 294, 295, 296, 298, 302, 304, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 336, 339, 340, 345, 348, 350, 351, 353, 354, 356, 357, 358, 359, 360, 363, 365, 366, 370, 375, 377, 379, 382, 383, 385, 387, 388, 389, 390, 391, 394, 395, 398, 399], "package_convergence_filenam": 364, "package_instance_cr": 396, "package_nam": [161, 386, 396], "packagenam": 147, "pad": [44, 55, 223, 224, 226], "page": [86, 91, 94, 99, 103, 113, 117, 122, 136, 140, 141, 145, 157, 170, 171, 174, 180, 181, 320, 335, 377, 386], "pair": [9, 13, 255, 373, 391], "panda": [0, 45, 46, 47, 48, 49, 50, 118, 176, 227, 230, 234, 250, 252, 253, 266, 268, 288, 339, 340, 342, 345, 348, 351, 353, 354, 356, 359, 361, 364, 366, 368, 369, 377, 379, 380, 382, 387, 388, 389, 391, 395, 396, 399, 400], "pandamesh": [379, 382], "para_sim": 206, "parallel": [0, 307, 308, 362, 388, 394, 396], "paramet": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 351, 353, 354, 358, 359, 360, 364, 368, 383, 385, 391, 396], "parameter": 26, "paraview": 306, "parent": 0, "parenthes": 50, "pars": [0, 41, 255, 256, 274, 351], "part": [0, 5, 26, 41, 42, 54, 83, 89, 92, 97, 108, 115, 138, 143, 148, 164, 168, 274, 277, 278, 333, 337, 338, 339, 340, 341, 342, 345, 361, 362, 386, 391, 392], "partial": [107, 109, 111, 151, 153, 156, 377, 396], "particl": [289, 290, 291, 292, 293, 316], "partit": [0, 134, 162, 307, 308, 363, 365, 366, 389], "partition_gener": [0, 355, 362, 366], "partopt": [307, 308], "pass": [0, 5, 41, 54, 170, 253, 355, 361, 364, 396], "passthrough": [83, 89, 92, 97, 101, 105, 115, 138, 143, 148, 164, 168, 396, 397], "past": [157, 386], "path": [0, 26, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 100, 104, 127, 128, 129, 130, 133, 135, 172, 182, 183, 184, 208, 210, 230, 240, 252, 253, 263, 286, 307, 308, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 358, 361, 363, 364, 378, 379, 380, 386, 390, 391], "path_a": 252, "path_b": 252, "pathcollect": 397, "pathlib": [26, 46, 47, 48, 49, 50, 135, 182, 183, 184, 230, 240, 252, 253, 390], "pathlik": [50, 51, 52], "pattern": [0, 40, 41, 42, 43, 44, 45, 53, 54, 55, 157, 290, 291, 292, 390], "pcg": [27, 50, 157, 304, 307, 337, 338, 339, 340, 341, 342, 345], "pcolormesh": 280, "pd": [3, 12, 25, 36, 45, 117, 172, 174, 227, 253, 307, 308, 315, 319, 339, 340, 342, 345, 351, 353, 356, 359, 361, 366, 368, 379, 380, 395, 396], "pdf": [86, 91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 170, 171, 174, 180, 181, 337], "peat": 385, "peatland": 361, "peclet": 396, "peek": 278, "penetr": 397, "penman": 209, "peopl": 386, "per": [0, 3, 5, 11, 27, 30, 32, 47, 112, 123, 128, 129, 130, 131, 140, 157, 163, 166, 182, 183, 184, 215, 227, 228, 230, 250, 290, 291, 307, 309, 356, 357, 366, 368, 385], "percel": [289, 290, 291, 292, 293], "percentag": 123, "percentil": [251, 252, 253], "perch": [26, 136, 214, 358, 359, 360, 361, 364, 396], "perched_water_t": 26, "percol": 206, "perfect": 332, "perforation_length": 360, "perform": [0, 24, 45, 78, 157, 239, 274, 314, 357, 386, 394], "perimet": [228, 229], "period": [17, 25, 26, 27, 50, 77, 79, 80, 86, 88, 91, 94, 96, 99, 103, 113, 117, 122, 126, 140, 141, 145, 147, 157, 162, 171, 172, 174, 180, 181, 209, 216, 296, 304, 309, 315, 316, 353, 356, 361, 395], "period_data": [88, 96, 147], "period_tim": 345, "periodic_stress": 345, "periods_da": 345, "perlen": [171, 316], "permeabl": 21, "perpendicular": [13, 14, 21, 356], "perspect": [386, 391, 396], "pet": 172, "petm": 91, "pf": 207, "pfree": 351, "phase": [112, 123], "phenomenon": 21, "phreatic": [0, 204, 228], "physic": [0, 4, 26, 202, 210, 214, 353, 356, 364], "picard": 157, "pick": 332, "pictur": [369, 394], "pie": 355, "piec": [272, 355, 394], "pile": 22, "pip": [0, 377, 379, 382, 386], "pipe": [361, 396], "pipe_cond": 361, "pipe_elev": 361, "pipelin": 336, "pixel": [240, 284], "pixi": [0, 331, 333, 336, 377, 386, 391], "pkg": [351, 396], "pkg_name": 125, "pkgname": 102, "place": [0, 36, 117, 118, 129, 174, 176, 182, 227, 277, 290, 291, 319, 354, 361, 396], "placed_wel": 227, "placement": [290, 291, 292], "plai": 304, "plan": [290, 291], "planar": [0, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 218, 223, 224, 225, 226, 236, 238, 244, 397], "planar_riv": 397, "plane": [136, 239, 254, 257, 290, 291, 396], "plant": 172, "planview": 390, "pleas": [5, 42, 45, 78, 113, 256, 258, 335, 361], "plot": [0, 9, 10, 278, 280, 281, 284, 285, 287, 337, 338, 339, 340, 341, 342, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 368, 369, 370, 371, 374, 376, 377, 386, 389, 390, 391, 392, 396, 397, 398], "plot_colorbar": [280, 397], "plot_histograms_side_by_sid": 396, "plot_kwarg": 396, "plot_map": [0, 320, 375, 376, 389, 396, 397, 398], "plote": 373, "plotter": 278, "plotter_kwarg": [278, 279], "plt": [284, 288, 337, 338, 339, 340, 341, 342, 351, 354, 355, 356, 357, 361, 362, 366, 368, 369, 370, 371, 373, 394, 396, 397], "plume": 359, "pm": [217, 379, 382], "png": [0, 282, 288, 394], "pocket": [343, 344, 389], "point": [0, 4, 9, 13, 39, 45, 100, 104, 117, 118, 127, 136, 174, 176, 234, 240, 255, 258, 259, 260, 261, 302, 313, 320, 366, 367, 369, 372, 373, 377, 386, 389, 391, 394, 395], "point_interpol": [368, 372, 389], "point_valu": 0, "pointer": [307, 308], "points_from_xi": [45, 391], "points_gdf": 391, "points_in_bound": [0, 260, 261, 320], "points_indic": [0, 320], "points_outside_grid": 368, "points_set_valu": [0, 259, 320, 368], "points_valu": [0, 320, 361, 379, 380], "pointwaterhead": 4, "polcg": 157, "polydata": 283, "polygon": [0, 39, 45, 106, 108, 110, 230, 240, 246, 247, 249, 252, 253, 283, 320, 367, 372, 389, 391, 397], "polygonize_rast": [369, 372, 389], "polygonized_lak": 369, "polygontyp": [246, 247], "polynomi": 27, "pond": [26, 199, 217, 320], "ponding_depth": 212, "ponding_depth_rur": 26, "ponding_depth_urban": 26, "ponding_factor": 199, "pooch": [377, 388], "pop": [278, 396, 398], "popular": [386, 387, 399], "pore": [112, 304, 385, 396], "poros": [0, 6, 8, 11, 12, 112, 123, 193, 295, 337, 338, 339, 340, 341, 342, 353, 356, 359, 366, 373, 385, 396], "porou": [295, 385], "portion": [30, 163, 334], "posit": [5, 11, 27, 117, 122, 136, 174, 180, 181, 184, 278, 287, 304, 340, 342], "positron": 284, "possibl": [0, 13, 14, 26, 44, 47, 49, 55, 80, 85, 217, 221, 222, 351, 361, 368, 373, 375, 379, 380, 382, 388, 396, 397], "possibli": 255, "post": [136, 377], "pota": 351, "potato": 351, "potenti": [118, 172, 176], "power": 394, "pp": [26, 361], "pp_ss": 361, "pp_ss_mean": 361, "pp_tran": 361, "practic": 386, "pragmat": [41, 54, 385, 386], "pre": [0, 8, 386], "precipit": [206, 211, 213, 217, 361, 397], "precipitationmap": [211, 320], "precis": [0, 44, 361, 364, 396], "precomput": 245, "precondit": [27, 157, 309], "precondition": [157, 303, 307, 308, 337, 338, 339, 340, 341, 342], "preconditionedconjugategradientsolv": [337, 338, 339, 340, 341, 342, 345], "preconditioner_drop_toler": 157, "preconditioner_level": 157, "predefin": 157, "predifin": 157, "prefer": [0, 290, 291], "preferenti": 26, "prepar": [0, 5, 87, 88, 95, 96, 100, 102, 104, 127, 146, 147, 175, 206, 295, 320, 353, 361, 368, 369, 370, 371, 379, 380, 387, 389, 391, 397, 398, 399], "prepare_jupyt": 367, "prepare_python": 367, "prepare_wel_for_mf6": 0, "prepend": 0, "prescrib": [80, 356, 360], "presenc": [0, 214, 396], "present": [0, 3, 5, 7, 26, 47, 50, 78, 80, 81, 82, 101, 105, 112, 129, 130, 157, 182, 183, 230, 280, 284, 285, 287, 360, 388], "preserv": [0, 277, 379, 380], "press": [278, 336, 363], "pressur": [172, 207, 209, 214, 318], "prevent": [0, 66, 78, 118, 176, 221, 396], "preview": 394, "previou": [80, 157, 171, 208, 361, 368, 373, 375, 388, 398], "previous": [0, 208, 274, 351, 361, 368, 373, 386, 397], "price": 386, "primari": [0, 361, 391, 394], "primarili": [387, 390, 391], "primod": [73, 350], "princip": [21, 136, 348], "principl": 45, "print": [0, 26, 27, 63, 64, 77, 79, 80, 86, 91, 94, 99, 103, 117, 122, 129, 140, 141, 145, 157, 162, 172, 174, 180, 181, 182, 272, 278, 294, 354, 361, 362, 366, 371, 390, 391, 396, 397], "print_convergence_info": 27, "print_flow": [77, 79, 80, 86, 91, 94, 99, 103, 117, 122, 141, 145, 161, 162, 172, 174, 180, 181, 353, 354, 356, 358, 360, 361, 364, 366, 395, 396, 397, 398], "print_if_error": [0, 320, 398], "print_input": [77, 79, 80, 86, 91, 94, 99, 103, 106, 108, 110, 117, 122, 141, 145, 150, 152, 154, 172, 174, 180, 181, 246, 247, 353, 354, 356, 358, 360, 361, 364, 366, 395, 396, 397, 398], "print_opt": [0, 157, 158, 159, 160, 353, 354, 356, 358, 359, 360, 361, 364, 366], "print_stag": 364, "printout": [27, 295], "printout_interv": 27, "priori": 356, "priorit": 277, "prj": [0, 81, 82, 88, 96, 114, 118, 137, 142, 147, 167, 176, 320, 391], "probabl": [332, 398], "problem": [27, 157, 295, 303, 307, 308, 309, 335, 337, 339, 340, 342, 353, 356, 357, 358, 359, 385, 386, 398], "problemat": [0, 398], "procedur": 318, "process": [0, 26, 41, 54, 56, 118, 136, 176, 230, 318, 356, 361, 377, 385, 386, 390, 396, 397], "processor": 386, "produc": [0, 250, 281, 397, 399], "product": [112, 123, 157], "prof": [13, 14], "profil": [205, 206, 359], "program": [74, 112, 123, 136, 141, 157, 170, 256, 316, 318, 345, 361, 363, 383, 386], "progress": 316, "project": [0, 9, 10, 13, 14, 50, 51, 56, 214, 251, 332, 334, 335, 336, 371, 373, 387, 388, 391, 398], "projectfil": [0, 26, 118, 176, 345], "prompt": [337, 338, 339, 340, 341, 342, 345, 386], "prone": 377, "proper": 0, "properli": [0, 386], "properti": [0, 23, 35, 136, 304, 358, 360, 364, 385, 390, 391, 392, 396], "proport": [20, 91, 302, 361], "proportion": 361, "proportion_depth": [0, 91, 190, 396], "proportion_r": [0, 91, 190, 396], "provid": [0, 9, 10, 13, 14, 19, 25, 26, 28, 43, 56, 78, 79, 80, 85, 86, 91, 94, 112, 113, 117, 122, 123, 125, 126, 130, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 209, 217, 221, 222, 230, 249, 251, 265, 266, 267, 268, 280, 284, 315, 320, 334, 335, 345, 348, 353, 354, 356, 361, 369, 371, 373, 375, 377, 379, 380, 383, 386, 387, 390, 391, 392, 395, 397, 398, 399], "provis": 388, "prsiti": [295, 366], "pseudo": 157, "psgw": 217, "pssw": 217, "pstem": 351, "ptc": 157, "public": [102, 274], "publish": 0, "publsihed_pdf": 337, "pull": [0, 332, 386], "pump": [36, 227, 319, 339, 340, 391], "pun": 209, "pure": [66, 386, 395], "purpos": [0, 102, 383], "push": [336, 361], "put": [136, 345], "pxdp": 91, "py": [333, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400], "pydata": [221, 222, 252, 253], "pyogrio": 391, "pypi": [336, 386], "pyplot": [337, 338, 340, 341, 342, 351, 354, 355, 356, 357, 361, 362, 366, 368, 369, 370, 371, 373, 394, 396, 397], "pyproj": [371, 388], "pytest": [0, 332], "python": [0, 25, 45, 56, 58, 59, 72, 118, 126, 140, 176, 209, 256, 315, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 379, 380, 382, 383, 384, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "pythonlogg": 58, "pyton": 56, "pyvista": [0, 278, 281, 283, 374, 388], "q": [12, 117, 174, 180, 181, 278, 339, 340, 342, 366], "q1": 251, "q3": 251, "q_": 12, "qdr": 217, "qg": 0, "qgi": [0, 391], "qmodf": 217, "qrun": 217, "qscale": 339, "qspgw": 217, "quadcontourset": [287, 353, 356, 358, 364, 366, 373], "quadmesh": [337, 338, 340, 341, 342, 357, 361, 369, 390], "quadrilater": [0, 275], "qualiti": [0, 368, 398], "qualnam": [58, 66, 218, 219], "quantil": 282, "quantile_colorscal": 282, "quantiti": [0, 32, 166], "quasi": [15, 26, 88, 96, 114, 137, 142, 147, 167, 294, 358], "queri": 77, "question": [0, 383], "quickli": [354, 356], "quit": [390, 392, 397], "quiver": [0, 9, 10, 320, 354], "quiver_lin": [0, 285, 320, 373], "quiver_linestr": [0, 285, 320], "quot": [0, 377], "r": [11, 12, 41, 54, 280, 284, 386], "r_fstrict": 307, "r_fstrictpk": 307, "radial": 229, "radial_c": 229, "rag": 140, "rainfal": [288, 364], "rais": [0, 47, 78, 79, 80, 85, 86, 91, 94, 112, 113, 117, 122, 123, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 221, 227, 259, 260, 261, 270, 272, 398], "ram": 394, "random": [290, 291, 292, 357], "randomli": [290, 291], "rang": [0, 26, 27, 118, 136, 157, 172, 176, 280, 309, 337, 338, 339, 340, 341, 342, 385, 396], "rangeindex": 354, "raphson": [99, 157], "rare": [0, 290, 291, 348], "raster": [0, 5, 54, 55, 230, 239, 240, 250, 251, 252, 253, 284, 320, 367, 372, 375, 378, 389, 393, 399, 400], "rasterio": [0, 41, 42, 100, 104, 127, 240, 249, 251, 253, 271, 276, 320, 387, 388, 390], "rasterize_cellt": [230, 320], "rasterize_shp": [370, 372, 389], "rasterr": [369, 370], "rate": [0, 19, 28, 36, 77, 79, 80, 86, 91, 94, 99, 103, 112, 117, 118, 121, 122, 123, 141, 145, 157, 162, 172, 174, 176, 179, 180, 181, 190, 195, 218, 225, 227, 310, 311, 312, 319, 337, 338, 339, 340, 341, 342, 345, 353, 356, 358, 360, 361, 366, 395, 396], "rate_factor_tim": [117, 174], "rate_transi": [117, 174], "rate_wel": 358, "rather": [0, 41, 42, 54, 136, 221, 277, 334, 348, 385, 386, 390, 394, 399], "ratio": [297, 304], "ratio_horizont": 297, "ratio_vert": 297, "rational": 348, "ravel": 397, "raw": 377, "rbot": [29, 313], "rcb": [307, 308], "rch": [0, 141, 142, 195, 218, 338, 354, 356, 358, 360, 395, 396, 397], "rch_conc": 338, "rch_concentr": 356, "rch_data": 395, "rch_rate": [338, 354, 356, 358, 360], "rch_ss": 361, "rch_ss_tran": 361, "rch_time": 395, "rch_total": 361, "rch_tran": 361, "rch_trans_yr": 361, "rclose": [27, 157, 307, 309, 337, 338, 339, 340, 341, 342], "rclose_inn": 307, "rclose_opt": [0, 157], "rclosepk": 307, "rcm": 157, "rd": 251, "rdnew": 284, "rdylbu": 373, "rdylbu_r": [353, 356, 375], "re": [0, 9, 10, 41, 45, 54, 221, 269, 278, 332, 371, 386, 390, 394], "reach": [206, 221], "reaction": 366, "reactiv": 387, "read": [0, 27, 31, 38, 40, 46, 50, 51, 77, 79, 80, 86, 91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 128, 129, 130, 131, 141, 145, 150, 152, 154, 170, 172, 174, 180, 181, 182, 183, 184, 294, 304, 316, 318, 320, 334, 335, 349, 352, 354, 361, 368, 377, 378, 379, 380, 385, 386, 389, 390, 392], "read_ascii": [0, 37, 320], "read_associ": 320, "read_binari": 37, "read_csv": [45, 46, 368], "read_dens": 318, "read_fil": [5, 45, 230, 256, 379, 382, 391], "read_grb": 0, "read_imod_legend": 320, "read_metaswap_fil": [351, 352, 389], "read_projectfil": [0, 320], "read_timfil": 320, "readabl": [0, 135, 386], "reader": 0, "readthedoc": [77, 249], "real": [157, 290, 297, 303, 308, 396], "reason": [0, 25, 33, 118, 126, 157, 176, 274, 289, 290, 291, 292, 293, 294, 315, 379, 380, 385, 394], "reassign": [91, 141], "reattach": 396, "rebuilt": 333, "recalcul": [157, 318], "recent": [157, 297], "recharg": [0, 19, 25, 26, 123, 126, 195, 225, 310, 311, 312, 315, 338, 354, 358, 360, 364, 395, 396], "recharge_lay": 311, "rechargehighestact": 338, "rechargeregridmethod": [0, 142, 396], "recip": [0, 386], "recogn": [0, 334], "recommend": [136, 230, 318, 332, 386, 388, 396], "recomput": [121, 179], "record": [0, 112, 184, 304, 316], "rectangl": [39, 353], "rectangular": [353, 358, 360, 361, 362, 364, 390], "recurs": [42, 307, 308], "redirect": 0, "reduc": [0, 19, 27, 29, 157, 172, 281, 307, 308, 309, 379, 380, 396, 397], "reduct": [157, 209, 379, 380], "refer": [0, 4, 5, 11, 26, 42, 45, 78, 81, 170, 221, 222, 230, 252, 253, 256, 258, 273, 276, 279, 281, 295, 318, 345, 361, 368, 370, 371, 388, 391, 394], "reference_concentr": [78, 353, 356], "reference_dens": [78, 353, 356], "refin": 0, "reflect": 396, "regard": 5, "regardless": [27, 316], "regex": [41, 42, 43, 54], "regex101": [41, 54], "region": [26, 27, 287, 297, 309, 363, 365, 389, 396], "regrid": [0, 81, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 132, 136, 137, 139, 142, 144, 147, 149, 165, 167, 169, 178, 220, 221, 222, 320, 360, 361, 363, 365, 379, 380, 389, 399, 400], "regrid_cach": [81, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 137, 139, 142, 144, 147, 149, 165, 167, 169, 178, 357, 396], "regrid_lik": [0, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 357, 396], "regrid_method": [185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 396], "regrid_method_setup": 396, "regrid_method_t": 396, "regrid_method_typ": 96, "regrid_schem": [81, 82, 88, 114, 137, 142, 147, 167], "regridd": [0, 81, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 137, 139, 142, 144, 147, 149, 165, 167, 169, 178, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 222, 320, 357, 361, 379, 380, 396], "regridded_k_1": 357, "regridded_k_2": 357, "regridded_k_3": 357, "regridded_recharg": 396, "regridded_simul": 396, "regridded_simulation_nam": 132, "regridded_twri": 357, "regridder_typ": [81, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 137, 139, 142, 144, 147, 149, 165, 167, 169, 178, 357, 396], "regriddertyp": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 357, 396], "regridderweightscach": [0, 81, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 137, 139, 142, 144, 147, 149, 165, 167, 169, 178, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 357, 396], "regridmethod": 0, "regridmethodtyp": [81, 84, 90, 93, 96, 98, 116, 120, 137, 139, 144, 149, 165, 169, 178], "regular": [41, 42, 54, 85, 100, 104, 127, 136, 255, 256, 361, 369], "reinstal": [0, 388], "reinstat": 0, "rel": [3, 47, 48, 136, 157, 221, 290, 291, 292, 303, 308, 385, 394, 398], "relat": [26, 212, 214, 318, 361, 396, 399], "relativ_rclos": 157, "relative_rclos": 157, "relativeoverlap": [185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 396], "relax": [27, 99, 157, 245, 307, 308, 309, 337, 338, 339, 340, 341, 342, 361, 364, 396], "relaxation_factor": [157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "releas": [0, 30, 32, 163, 166, 180, 181, 304, 337, 338, 339, 340, 341, 342, 345, 386], "relev": [0, 230, 357, 386], "reli": [41, 54, 251, 386], "remain": [0, 30, 80, 118, 136, 163, 172, 176, 295, 316, 385], "rememb": [41, 54], "remot": 386, "remov": [102, 119, 121, 122, 172, 177, 179, 227, 231, 232, 233, 239, 259, 271, 290, 291, 334, 361, 368, 379, 380, 386, 396, 397], "renam": [0, 41, 47, 49, 54, 361], "render": [0, 240, 278, 279, 281, 334, 398], "reorder": 157, "reordering_method": [0, 157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "rep": 26, "repeat": [0, 50, 80, 86, 91, 94, 117, 141, 145, 174, 180, 345, 397], "repeat_item": [80, 86, 91, 94, 117, 141, 145, 174, 180], "repeat_stress": [80, 86, 91, 94, 117, 141, 145, 174, 180, 395, 396, 397, 398], "repeatedli": [220, 221, 222], "replac": [0, 45, 50, 277, 290, 291, 357, 361, 379, 380, 385, 396], "report": [0, 26, 366], "reposistori": 386, "repositori": [0, 332, 334, 386, 388], "repres": [0, 24, 33, 39, 44, 85, 112, 130, 136, 157, 182, 183, 278, 294, 304, 353, 361, 366, 379, 382, 385, 390, 391, 392], "represent": [0, 102, 107, 109, 111, 130, 151, 153, 156, 182, 183, 281, 390, 396], "reproduc": [335, 387, 388], "reproject": [0, 320, 367, 372, 389, 390], "reproject_kwarg": 251, "request": [0, 118, 176, 214, 332, 335], "requir": [0, 4, 11, 24, 25, 26, 27, 39, 41, 45, 50, 54, 78, 85, 100, 104, 112, 117, 118, 123, 126, 127, 128, 129, 130, 131, 136, 157, 174, 176, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 211, 221, 230, 234, 271, 275, 277, 280, 284, 285, 287, 294, 295, 307, 308, 309, 315, 334, 345, 351, 356, 361, 368, 377, 378, 379, 382, 386, 388, 394, 395, 396, 397, 398], "rergrid": 396, "resampl": [3, 118, 176, 251, 361, 377, 379, 380, 392], "research": 340, "resembl": 357, "reserv": 45, "reset": [278, 289, 290, 291, 292, 293, 318], "reset_index": 361, "reshap": 258, "residu": [27, 157, 172, 214, 307, 309], "resisit": 204, "resist": [22, 26, 29, 106, 107, 109, 110, 111, 151, 153, 154, 156, 204, 212, 228, 229, 230, 246, 247, 345], "resistor": 396, "resolut": [230, 252, 253, 290, 291, 371, 392], "resolv": 0, "resourc": [91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 170, 171, 174, 180, 181, 332, 337, 340, 358], "respect": [0, 3, 25, 37, 126, 128, 129, 130, 131, 136, 182, 183, 218, 280, 315, 378, 379, 390, 395], "respectivli": 284, "respons": [199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 385], "rest": [345, 357, 366, 396], "restack": [0, 269], "restor": 385, "restructur": [0, 334], "result": [0, 4, 5, 8, 11, 12, 26, 45, 112, 118, 123, 157, 176, 221, 230, 249, 251, 259, 277, 278, 281, 294, 295, 303, 304, 316, 318, 334, 339, 340, 342, 359, 362, 366, 368, 371, 373, 379, 380, 385, 386, 388, 390, 394, 396, 397], "result_dir": 394, "resultdir_is_workdir": [337, 338, 339, 340, 341, 342], "resultdir_is_workspac": 0, "retain": [74, 157], "retard": [11, 12, 359], "retent": 172, "retriev": 337, "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 81, 82, 83, 84, 88, 89, 90, 92, 93, 96, 97, 98, 102, 107, 109, 111, 114, 115, 116, 120, 121, 125, 128, 129, 130, 131, 132, 134, 137, 138, 139, 142, 143, 144, 147, 148, 149, 151, 153, 156, 164, 165, 167, 168, 169, 178, 179, 182, 183, 184, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 278, 280, 281, 283, 284, 285, 286, 287, 288, 351, 354, 355, 359, 360, 361, 379, 380, 398], "return_cbar": 284, "return_cmap_norm": 280, "return_index": 281, "reus": [351, 396], "revers": [101, 105, 157], "revert": 0, "revisit": 377, "revolv": 348, "rewet": [113, 136, 396], "rewet_factor": [136, 396], "rewet_iter": [136, 396], "rewet_lay": [136, 194, 396], "rewet_method": [136, 396], "rgb": 280, "rgba": 284, "rho": [4, 318], "rho_": 4, "rhobulk": 359, "rhs_option": [136, 396], "rich": 390, "richard": 26, "rid": 333, "ridg": [361, 397], "right": [0, 5, 6, 9, 10, 11, 12, 13, 14, 78, 85, 129, 136, 157, 182, 285, 303, 304, 353, 366, 373, 388, 397], "right_boundari": 353, "right_low": 345, "right_upp": 345, "rioxarrai": [100, 104, 127, 251, 271], "rise": 214, "riv": [8, 24, 51, 145, 196, 218, 219, 238, 314, 396, 397, 398], "riv_alloc": 397, "riv_bot": 361, "riv_bottom": 397, "riv_cleaned_dict": 398, "riv_cond": 361, "riv_conduc": 397, "riv_conduct": 397, "riv_pkg": 398, "riv_primari": 0, "riv_stag": [361, 397], "river": [0, 8, 24, 25, 126, 196, 218, 226, 233, 238, 288, 314, 315, 396, 398], "riverb": [29, 145, 313, 396], "riverpackag": 8, "riverregridmethod": [0, 147], "rivssmden": 313, "robin": 397, "robust": [75, 157, 386], "rock": 123, "role": [304, 399], "root": [172, 207, 332], "root_act": 172, "root_potenti": 172, "rootact": 172, "rootzon": [26, 202], "rootzone_depth": 202, "rootzone_thick": 26, "rotat": [136, 209, 251, 342, 371, 390, 396], "rotated_exampl": 251, "rotational_period": [209, 351], "roughli": [355, 396, 397], "round_ext": 0, "routin": [27, 157, 309, 399], "row": [0, 5, 9, 10, 11, 13, 14, 85, 102, 180, 230, 304, 337, 338, 340, 341, 357, 358, 360, 361, 364, 366, 377, 390, 391, 392, 396], "row_index": [230, 250], "rsc": [209, 351], "rsoil": [209, 351], "rst": 334, "rsw": [209, 351], "ru": 0, "ruff": 332, "rule": [27, 309, 390, 396], "run": [0, 24, 102, 121, 128, 129, 130, 131, 179, 206, 208, 331, 332, 333, 334, 336, 351, 355, 357, 359, 362, 366, 368, 369, 370, 371, 373, 375, 377, 386, 388, 390, 391, 394, 395, 396, 397, 398], "runfil": [0, 338, 340, 341, 342], "rung": [290, 291, 292], "runoff": [26, 212], "runoff_resist": 212, "runoff_resistance_rur": 26, "runoff_resistance_urban": 26, "runon": [26, 212, 217], "runon_resist": 212, "runon_resistance_rur": 26, "runon_resistance_urban": 26, "runtim": [121, 179], "runtimewarn": 270, "rural": 26, "rutter": 209, "sai": [216, 221, 379, 380], "salin": [78, 338, 353, 356], "salt": [209, 337, 339, 342], "saltmax": 351, "saltslop": 351, "saltwat": [343, 344, 389], "saltwaterpocket": [341, 344, 389], "same": [0, 4, 25, 27, 30, 32, 41, 42, 45, 54, 78, 82, 84, 88, 90, 93, 96, 98, 112, 114, 116, 118, 120, 126, 134, 137, 139, 142, 144, 147, 149, 157, 165, 166, 167, 169, 176, 178, 219, 239, 251, 295, 307, 309, 315, 331, 345, 348, 353, 356, 357, 359, 361, 368, 371, 373, 379, 380, 386, 388, 390, 392, 396, 397], "sampl": [0, 10, 14, 252, 253, 256, 379, 380, 390, 394, 396], "sand": 337, "sandi": 385, "sanford": 340, "sat": 136, "satisfi": [11, 27, 172, 278, 307, 309], "satur": [0, 30, 136, 163, 172, 214, 228, 229, 295, 304, 361, 385], "save": [0, 100, 103, 104, 112, 127, 136, 172, 206, 208, 221, 296, 298, 302, 304, 306, 310, 311, 312, 313, 319, 320, 332, 345, 361, 390, 394], "save_budget": [140, 296, 298, 299, 300, 301, 302, 304, 310, 311, 312, 313, 319, 353, 354, 356, 358, 359, 360, 361, 364, 366], "save_budget_idf": 306, "save_budget_tec": 306, "save_budget_vtk": 306, "save_concentr": [140, 353, 356, 359, 366], "save_concentration_idf": [306, 337, 338, 339, 340, 341, 342], "save_concentration_tec": 306, "save_concentration_vtk": 306, "save_flow": [0, 77, 79, 80, 86, 91, 94, 99, 103, 112, 117, 122, 123, 136, 141, 145, 161, 162, 163, 166, 172, 174, 180, 181, 353, 354, 356, 358, 359, 360, 361, 364, 366, 395, 396, 397, 398], "save_flux": 345, "save_head": [140, 345, 353, 354, 356, 358, 359, 360, 361, 364, 366], "save_head_idf": [306, 337, 338, 339, 340, 341, 342], "save_head_tec": 306, "save_head_vtk": 306, "save_satur": [0, 136, 396], "save_specific_discharg": [136, 360, 366, 396], "saved_st": 208, "savefig": 288, "scalar": [0, 27, 265, 266, 267, 268, 277, 379, 380], "scale": [157, 172, 214, 339], "scale_hydraulic_conduct": 214, "scale_pressure_head": 214, "scale_soil_moistur": 214, "scaling_method": [0, 157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "scalingfactor": 320, "scanopi": 351, "scap_svat": 215, "scatter": [358, 360, 397], "scene": 394, "schedul": [270, 394], "schemat": [23, 35], "schemata": 398, "scheme": [26, 74, 75, 76, 157, 289, 290, 291, 292, 293, 303, 316], "schemit": 397, "scientic": 377, "scientif": [112, 387, 388], "scipi": [361, 377, 379, 380, 388], "sconc": [295, 337, 338, 340, 341, 342], "scraper": 394, "scratch": 345, "screen": [102, 121, 174, 179, 360], "screen_bottom": [0, 174, 227, 234, 353, 358, 360, 366], "screen_lay": 360, "screen_top": [0, 174, 227, 234, 353, 358, 360, 366], "script": [0, 272, 334, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 368, 369, 370, 371, 373, 375, 386, 387, 388, 390, 391, 394, 395, 396, 397, 398], "sea": [3, 288, 397], "search": [3, 7, 239, 363], "searchabl": 332, "season": [80, 86, 91, 94, 117, 141, 145, 174, 180, 209], "seawat": [0, 4, 307, 308, 314, 318, 353, 377, 387], "seawat_get_runfil": 0, "seawat_writ": 0, "seawat_write_runfil": 0, "seawatmodel": [0, 337, 338, 339, 340, 341, 342, 395], "second": [0, 51, 75, 80, 85, 86, 91, 94, 117, 130, 136, 141, 145, 157, 174, 180, 182, 183, 280, 285, 287, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 368, 369, 370, 371, 373, 375, 385, 390, 391, 394, 395, 396, 397, 398], "second_result": 221, "second_sourc": 221, "secondli": [0, 277, 386, 399], "section": [0, 9, 10, 13, 14, 21, 255, 256, 280, 285, 287, 290, 291, 320, 337, 338, 339, 340, 342, 361, 373, 374, 383, 387, 388, 390, 394, 397, 399], "sediment": [26, 227], "see": [0, 21, 27, 41, 44, 47, 54, 55, 73, 77, 87, 95, 133, 146, 175, 217, 249, 275, 278, 304, 307, 309, 332, 340, 342, 353, 354, 356, 357, 358, 359, 361, 363, 369, 371, 379, 380, 385, 386, 388, 390, 394, 395, 397, 398], "seem": [392, 394, 398], "seen": [337, 396], "segment": [0, 91, 396], "sel": [0, 3, 5, 129, 182, 259, 345, 354, 356, 357, 358, 360, 361, 362, 364, 373, 377, 379, 380, 381, 382, 390, 394, 396, 397], "select": [0, 5, 11, 27, 45, 118, 125, 176, 223, 224, 225, 226, 230, 236, 238, 280, 290, 291, 292, 320, 336, 345, 354, 356, 361, 363, 368, 373, 377, 387, 390, 392, 394, 397, 399], "select_point": [379, 382], "self": [126, 335, 387], "semant": [0, 336], "semi": [3, 22], "send": [25, 126, 315, 332], "sens": 386, "sensit": 214, "sentenc": 388, "sep": [47, 307, 308], "separ": [0, 11, 41, 42, 54, 100, 104, 112, 127, 140, 206, 271, 280, 353, 360, 361, 362, 377, 379, 382, 385, 396, 398], "seper": [209, 388], "sequenc": [78, 230, 239, 249, 267, 268], "sequenti": 136, "seri": [0, 3, 80, 91, 141, 253, 379, 380, 382, 387, 389, 399, 400], "serial": 396, "serv": [45, 157, 221, 290, 291, 294], "servic": 386, "set": [0, 3, 7, 25, 26, 27, 29, 33, 42, 50, 59, 76, 77, 78, 80, 83, 85, 86, 89, 91, 92, 94, 97, 101, 102, 105, 115, 117, 118, 121, 126, 132, 133, 136, 138, 140, 141, 143, 145, 148, 157, 162, 164, 167, 168, 174, 176, 179, 180, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 204, 209, 212, 214, 217, 218, 219, 223, 224, 225, 226, 227, 231, 232, 233, 234, 259, 260, 271, 275, 278, 280, 281, 284, 289, 290, 291, 292, 293, 294, 295, 297, 303, 307, 308, 309, 313, 315, 316, 318, 320, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 360, 364, 366, 368, 385, 387, 396, 397, 398, 399], "set_aspect": [354, 356], "set_axis_off": 394, "set_index": [45, 351, 396], "set_opt": 396, "set_repeat_stress": [0, 80, 86, 91, 94, 117, 141, 145, 174, 180], "set_text": 396, "set_titl": [362, 397, 398], "set_ylabel": 396, "setnodatahead": 0, "setup": [0, 56, 59, 278, 279, 337, 341, 353, 354, 356, 358, 359, 360, 364], "setuptool": 0, "seven": 361, "sever": [26, 61, 68, 70, 72, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 137, 139, 142, 144, 147, 149, 157, 165, 167, 169, 178, 386], "sg": 256, "shallow": [26, 214], "shape": [0, 10, 14, 22, 39, 134, 150, 152, 154, 240, 246, 247, 249, 251, 256, 283, 345, 353, 354, 355, 357, 358, 359, 360, 364, 366, 369, 370, 388, 390, 394, 396, 397], "shape_area": 391, "shape_leng": 391, "shapefil": [5, 230, 240, 252, 253, 256, 367, 369, 371, 372, 389, 391], "share": [0, 74, 295, 386, 392], "sharei": [396, 397], "sharex": [396, 397], "sharp": 359, "shd": [31, 81, 82, 340, 345], "shead": 80, "sheet": 22, "shell": [386, 388], "shorter": [0, 25, 126, 259, 315, 332, 396], "shortli": [353, 354, 356, 358, 361, 364], "should": [0, 5, 7, 8, 15, 22, 25, 26, 27, 33, 59, 78, 79, 80, 81, 82, 85, 86, 88, 91, 94, 96, 112, 113, 114, 117, 122, 123, 126, 134, 135, 136, 137, 140, 141, 145, 147, 157, 162, 163, 166, 167, 170, 171, 172, 173, 174, 180, 181, 209, 212, 221, 222, 227, 245, 250, 251, 253, 279, 281, 284, 289, 294, 296, 298, 302, 303, 306, 307, 308, 309, 313, 315, 316, 319, 336, 353, 357, 359, 360, 361, 362, 368, 388, 390, 394, 395, 396, 398], "show": [44, 55, 251, 357, 359, 361, 362, 366, 368, 373, 375, 385, 394, 397], "shown": [366, 390, 397], "shp": [5, 45, 230, 253, 256, 379, 380, 382, 391], "shx": 391, "side": [5, 85, 136, 157, 303, 340, 397, 398], "sign": 157, "signifi": 0, "signific": [0, 356], "significantli": [0, 157, 240, 303, 377], "silenc": [361, 364, 396], "silent": 0, "sim_concentr": 356, "sim_head": 356, "sim_w": 377, "simgro": [26, 212, 217], "similar": [0, 23, 26, 84, 90, 93, 98, 116, 120, 134, 139, 144, 149, 157, 165, 169, 178, 220, 221, 222, 304, 359, 362, 369, 379, 380, 382, 386, 396], "similarli": 0, "simpl": [0, 5, 74, 157, 337, 338, 339, 340, 342, 345, 353, 354, 356, 357, 358, 359, 364, 394, 397], "simplest": [375, 397], "simpli": [0, 256, 332, 386, 388, 394], "simplif": 26, "simplifi": [0, 361, 386], "simpson": 337, "simtim": 356, "simul": [0, 17, 18, 20, 25, 26, 29, 31, 36, 77, 78, 80, 81, 82, 86, 88, 91, 94, 96, 99, 100, 103, 104, 112, 113, 117, 118, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 145, 147, 157, 162, 167, 170, 171, 172, 174, 176, 180, 181, 182, 183, 290, 291, 294, 295, 296, 298, 302, 303, 304, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 353, 354, 355, 357, 358, 359, 360, 362, 364, 366, 377, 385, 390, 395, 396, 397], "simulate_groundwater_seepag": 172, "simulate_seepag": 172, "simulation_bc": 395, "simulation_start_tim": [0, 128, 129, 130, 131, 182, 183], "sinc": [0, 41, 45, 54, 230, 290, 291, 337, 338, 339, 340, 342, 353, 356, 361, 369, 379, 382, 386, 390, 394, 396, 397], "singl": [0, 5, 25, 27, 41, 42, 44, 45, 47, 48, 49, 51, 54, 55, 78, 80, 82, 91, 103, 112, 117, 122, 126, 136, 141, 145, 150, 152, 154, 157, 174, 180, 181, 184, 221, 251, 295, 315, 353, 358, 359, 360, 361, 364, 385, 386, 390, 392, 394], "single_valu": [379, 380], "singlelayerhorizontalflowbarrierhydrauliccharacterist": 0, "singlelayerhorizontalflowbarriermultipli": 0, "singlelayerhorizontalflowbarrierresist": 0, "sink": [0, 8, 12, 13, 14, 56, 162, 290, 291, 292, 295, 305, 317, 353, 356], "sink_nparticl": [290, 292], "sink_particle_plac": [290, 292], "site": 391, "situat": [33, 294, 316, 348, 398], "six": 361, "size": [0, 80, 86, 91, 94, 117, 135, 141, 145, 157, 174, 180, 230, 252, 253, 265, 266, 267, 268, 307, 308, 345, 351, 353, 354, 355, 358, 361, 364, 373, 375, 379, 380, 390, 395, 396, 397, 398, 399], "sizeabl": 359, "skip": [0, 107, 109, 111, 151, 153, 156, 351, 373, 379, 380], "slice": [0, 5, 125, 255, 256, 281, 285, 361, 373, 379, 380, 390], "slightli": [357, 371, 379, 382, 385], "slip": 398, "slope": [26, 78, 318, 353, 356], "slow": [0, 11, 12, 157, 386, 394, 399], "small": [11, 12, 157, 230, 290, 291, 292, 354, 366, 379, 380, 385, 398], "small_align": [379, 380], "smaller": [27, 135, 157, 245, 280, 290, 291, 309, 354, 388, 394], "smallest": [27, 309], "smassrat": 122, "smear": 359, "smoothli": 172, "snakemak": 387, "snap": 0, "snap_to_grid": 0, "snippet": [0, 335, 396], "snow": 26, "so": [0, 12, 13, 14, 26, 55, 82, 118, 176, 209, 230, 236, 238, 251, 255, 256, 274, 284, 285, 332, 335, 339, 340, 342, 351, 354, 356, 361, 362, 366, 368, 369, 377, 379, 380, 385, 386, 388, 390, 394, 395, 396, 397, 398], "soft": 385, "softwar": [66, 91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 170, 171, 174, 180, 181, 332, 334, 377, 386, 391], "soil": [26, 172, 199, 207, 210, 212, 214, 217, 385], "soil_cov": 199, "soil_moisture_factor": 26, "soil_physical_unit": [26, 202], "solut": [0, 27, 41, 54, 74, 103, 112, 113, 122, 123, 170, 290, 295, 303, 309, 316, 318, 337, 340, 342, 353, 354, 356, 358, 360, 361, 363, 364, 365, 366, 385, 386, 389, 394], "solutionpresetcomplex": 157, "solutionpresetmoder": 157, "solutionpresetsimpl": 157, "solv": [0, 27, 157, 289, 291, 292, 297, 303, 307, 308, 309, 316, 353, 356, 361, 362, 385, 386], "solver": [27, 132, 157, 245, 297, 303, 304, 307, 308, 309, 316, 320, 353, 354, 358, 359, 360, 364], "some": [0, 27, 66, 118, 157, 176, 214, 221, 231, 232, 233, 234, 253, 269, 278, 285, 297, 307, 308, 309, 332, 333, 345, 351, 354, 356, 359, 360, 361, 362, 366, 368, 373, 377, 386, 390, 394, 395, 396, 397, 398], "someth": [26, 284, 360, 379, 380], "sometim": [348, 386], "somewhat": [23, 334, 357], "sophist": 136, "sorb": [112, 123], "sorption": [11, 12, 112, 123, 303, 307, 308, 359], "sort": [0, 44, 55], "sound": 214, "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 63, 64, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 94, 95, 96, 99, 103, 106, 108, 110, 112, 113, 114, 117, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 379, 380, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "source_cells": 221, "sourcesinkmix": [0, 353, 356, 359, 366], "south": 21, "sp2": [123, 193, 396], "space": [0, 74, 112, 265, 266, 267, 268, 318, 360, 377, 385, 386, 388, 390, 391], "span": 218, "spandasindexpandasindex": 397, "spars": 230, "spatial": [0, 45, 100, 104, 127, 250, 253, 273, 276, 359, 378, 379, 380, 388, 391, 392, 396], "spatial_refer": [240, 320], "speci": [0, 43, 78, 103, 128, 131, 162, 295, 318, 353, 356, 359, 366, 387], "special": [26, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 206, 278, 334, 379, 380, 396], "species_a": 359, "species_b": 359, "species_c": 359, "species_d": 359, "species_l": [0, 128, 131, 359], "speciesnam": 359, "specif": [0, 5, 12, 26, 30, 32, 39, 80, 81, 82, 88, 96, 114, 136, 137, 142, 147, 157, 163, 166, 167, 214, 217, 230, 251, 295, 304, 311, 348, 361, 366, 386, 388, 390, 391, 392, 399], "specifi": [0, 16, 17, 23, 25, 26, 27, 29, 31, 34, 35, 36, 39, 41, 44, 54, 55, 59, 61, 68, 70, 72, 77, 78, 79, 80, 82, 84, 85, 86, 90, 91, 93, 94, 98, 99, 103, 106, 108, 110, 112, 113, 116, 117, 118, 120, 122, 123, 126, 136, 139, 140, 141, 144, 145, 149, 150, 152, 154, 157, 162, 163, 165, 166, 169, 170, 172, 174, 176, 178, 180, 181, 199, 209, 211, 216, 230, 251, 258, 260, 261, 287, 289, 290, 291, 292, 293, 294, 295, 296, 304, 306, 310, 311, 312, 313, 315, 316, 318, 319, 337, 338, 340, 341, 342, 345, 356, 357, 361, 377, 390, 396], "specific_storag": [30, 32, 163, 166, 197, 304, 337, 338, 339, 340, 341, 342, 353, 354, 356, 358, 359, 360, 361, 364, 366, 396], "specific_yield": [0, 163, 166, 197, 198, 304, 353, 354, 356, 358, 359, 360, 361, 364, 366, 396], "specificstorag": [0, 197, 353, 354, 356, 358, 359, 360, 361, 364, 366, 396], "specificstorageregridmethod": 0, "speed": [0, 82, 84, 88, 90, 93, 96, 98, 114, 116, 120, 137, 139, 142, 144, 147, 149, 165, 167, 169, 178, 281, 394], "sphinx": [333, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "split": [0, 5, 44, 55, 162, 290, 291, 292, 355, 362, 366, 390, 392], "split_conc": 366, "split_modeldir": [362, 366], "split_simul": [362, 366], "splitter": 334, "spread": 85, "spring": [3, 361], "sprinkl": [0, 26, 209, 217, 320], "sprinkling_capac": 26, "sprinkling_lay": 26, "sprinkling_typ": 26, "spyder": 334, "squar": [172, 246, 390], "squeez": 251, "src": [122, 284, 375], "src_cr": [251, 371], "src_nodata": 251, "src_transform": 251, "ss": [32, 163, 166, 184, 304, 361], "ssm": [0, 296, 302, 305, 317, 353, 356, 359, 366], "ssor": 303, "ssume": 251, "stabil": [11, 12, 157, 289, 290, 291, 292, 293, 316, 396], "stability_constraint_advect": 320, "stability_constraint_wel": 320, "stabl": [77, 249, 345], "stack": [269, 354, 390, 396], "stacked_y_x": [379, 380], "stackoverflow": 335, "stage": [0, 29, 51, 118, 145, 172, 176, 196, 218, 219, 223, 226, 233, 238, 313, 345, 361, 396, 397, 398], "stage_above_riv_bot": 398, "stage_bottom": 397, "stage_lin": 397, "stage_to_riv_bot": [218, 226, 238, 397], "stage_to_riv_bot_drn_abov": [218, 397], "stagefil": 364, "stai": 167, "stamen": [0, 284], "standard": [297, 316, 353, 379, 382, 386, 387, 396], "start": [0, 9, 10, 13, 25, 31, 42, 50, 58, 66, 80, 81, 82, 113, 126, 136, 184, 192, 206, 209, 218, 219, 255, 278, 285, 294, 295, 296, 304, 315, 333, 334, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 359, 360, 363, 364, 366, 368, 369, 371, 373, 377, 386, 390, 395, 396, 397, 398], "start_dat": 353, "start_hour": 0, "start_level": [63, 64], "start_minut": 0, "start_sprinkling_season": [209, 351], "starting_concentr": [295, 337, 338, 339, 340, 341, 342], "starting_head": [31, 294, 337, 338, 339, 340, 341, 342, 345, 361], "starting_head_as_confined_thick": [136, 396], "starting_heads_larg": 368, "startinghead": 345, "starttim": 361, "starttime_steadi": 361, "stat": [379, 380], "state": [0, 13, 14, 26, 27, 31, 78, 113, 118, 157, 163, 166, 176, 206, 208, 294, 307, 308, 316, 318, 354, 359, 360, 366, 386, 388], "statement": [0, 398], "states_for_boundari": [0, 125, 354], "static": [47, 162, 345], "staticgridanimation3d": [0, 278, 320], "station": 26, "statist": 399, "statu": [170, 398], "stdout": 56, "steadi": [0, 13, 14, 26, 27, 31, 113, 118, 157, 163, 166, 176, 294, 316, 354, 359, 360, 366], "steadyst": 113, "steamlin": 373, "steep": 26, "step": [27, 77, 79, 80, 86, 91, 94, 99, 112, 117, 122, 140, 141, 145, 157, 162, 171, 172, 174, 180, 181, 230, 289, 290, 291, 292, 293, 309, 316, 318, 331, 333, 336, 351, 353, 354, 356, 357, 358, 360, 361, 364, 366, 377, 379, 380, 394, 396], "stepsiz": [295, 316], "stiff": 385, "still": [0, 118, 176, 295, 368, 395, 398], "stitl": 278, "sto": [163, 166, 197, 198, 345, 353, 354, 356, 358, 359, 360, 364, 366], "stop": [27, 157, 307, 309, 318, 354, 386], "stor": [32, 166], "storag": [0, 30, 32, 112, 123, 163, 166, 184, 204, 304, 353, 356, 364, 366, 386, 394, 396], "storage_coeffici": [32, 166, 167, 198, 396], "storagecoeffici": [0, 198, 345, 385, 396], "storagecoefficientregridmethod": [0, 167], "store": [0, 47, 49, 82, 84, 88, 90, 93, 96, 98, 100, 104, 114, 116, 118, 120, 127, 128, 129, 130, 131, 137, 139, 142, 144, 147, 149, 165, 167, 169, 176, 178, 182, 183, 184, 274, 294, 334, 351, 354, 357, 359, 361, 377, 386, 388, 390, 391, 392, 394, 397], "str": [22, 24, 25, 26, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 61, 68, 70, 72, 74, 75, 76, 78, 81, 82, 84, 88, 90, 93, 96, 98, 99, 100, 102, 103, 104, 112, 114, 116, 118, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 142, 144, 147, 149, 155, 157, 161, 162, 165, 167, 169, 172, 176, 178, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 208, 210, 220, 221, 222, 230, 231, 232, 233, 239, 240, 249, 250, 252, 253, 259, 260, 263, 266, 268, 274, 280, 284, 286, 288, 314, 315, 318, 319, 345, 359], "straight": [5, 26, 386], "straightforward": [334, 357, 366, 394], "stream": [13, 14, 59, 287], "streamfunct": [0, 13, 14, 320, 373], "streamfunction_lin": [0, 287, 320, 373], "streamfunction_linestr": [0, 287, 320], "streamhandl": 56, "streamlin": [0, 374, 376, 389], "strength": 19, "stress": [17, 25, 27, 77, 79, 80, 86, 91, 94, 99, 103, 113, 117, 122, 126, 135, 140, 141, 145, 157, 162, 171, 172, 174, 180, 181, 209, 217, 296, 304, 309, 315, 316, 345, 353, 356, 361, 387, 395], "strict": [102, 121, 157, 179], "strict_well_valid": [0, 102, 121, 179], "stricter": 307, "strictli": [4, 85, 136], "string": [0, 39, 41, 42, 44, 47, 49, 54, 55, 78, 102, 117, 128, 130, 131, 140, 174, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 209, 251, 274, 288, 289, 291, 292], "strt": [113, 136, 294], "structer": 170, "structur": [0, 51, 100, 104, 112, 122, 127, 180, 275, 348, 353, 357, 358, 364, 387, 388, 392, 393, 399], "structureddiscret": [0, 81, 82, 87, 88, 95, 96, 142, 146, 147, 175, 186, 353, 358, 359, 360, 361, 364, 366, 396, 398], "stuck": 157, "studi": [27, 297, 309, 361, 368, 379, 382], "style": 280, "subdirectori": [100, 104], "subdivid": 227, "subdivis": 227, "subdomain": [0, 43, 307, 308, 355], "subject": [335, 383], "submit": [295, 335], "submodel": [0, 355, 362], "submodel_label": [134, 355, 362], "subplot": [284, 288, 337, 338, 339, 340, 341, 342, 354, 355, 356, 357, 361, 362, 366, 368, 369, 370, 371, 373, 394, 396, 397], "subprocess": 133, "subsequ": [25, 80, 126, 206, 315, 316], "subset": [0, 397], "subsoil": 26, "substract": 3, "subtl": 398, "subtract": 345, "subunit": [202, 204, 212, 214, 215], "succe": 386, "succesfulli": [0, 337, 338, 339, 340, 341, 342, 398], "success": [0, 7, 171, 316], "suction": 385, "suddenli": 386, "suffer": 0, "suffici": [27, 157, 290, 291, 309], "suffix": 0, "suggest": [0, 157, 297, 332], "suit": [332, 391], "suitabl": [157, 353, 392], "sum": [0, 5, 136, 172, 216, 217, 220, 221, 222, 230, 307, 308, 345, 390], "summari": [112, 157, 158, 159, 160, 320, 353, 354, 356, 358, 359, 360, 361, 364, 366], "summed_conduct": 230, "summer": [0, 50, 345], "sup": 353, "suppli": [3, 26, 280, 345], "support": [0, 44, 54, 55, 56, 79, 80, 84, 86, 90, 91, 93, 94, 98, 99, 112, 116, 117, 118, 120, 122, 130, 139, 140, 141, 144, 145, 149, 165, 169, 172, 174, 176, 178, 180, 181, 182, 183, 209, 212, 221, 222, 230, 240, 252, 253, 259, 276, 278, 351, 356, 361, 364, 387, 388, 391, 392, 393, 394, 395, 396, 397], "supportsindex": [230, 249], "sure": [41, 47, 54, 128, 129, 130, 133, 221, 222, 361, 379, 380], "surfac": [3, 5, 26, 29, 33, 91, 141, 157, 172, 190, 202, 212, 215, 217, 228, 234, 253, 294, 299, 300, 301, 345, 361, 375, 390, 396], "surface_depression_depth": 172, "surface_elev": [26, 202], "surface_level": [253, 375], "surfacelevel": 3, "surfacewat": 215, "surflevel": 3, "surpress": 76, "surprisingli": 386, "surround": 227, "suspici": 398, "svat": [26, 200, 201, 202, 203, 204, 212, 213, 215], "svat2etrefgrid": 201, "svat2precgrid": 213, "svat2swnr_roff": 212, "switch": 0, "sy": [0, 32, 56, 163, 166, 184, 304, 361], "symmetr": 157, "synchon": 396, "synchron": 396, "synonym": 385, "syntax": 334, "synthet": [0, 353, 357, 358, 364], "sys1": 0, "system": [0, 19, 28, 50, 66, 112, 118, 176, 228, 229, 251, 295, 345, 361, 363, 366, 371, 386, 388, 391, 397], "t": [11, 12, 23, 35, 58, 63, 64, 66, 70, 240, 278, 307, 308, 332, 339, 345, 356, 359, 386, 388, 390, 397], "t3h": 209, "t3l": 209, "tab": [336, 363], "tab20": 397, "tabl": [26, 27, 33, 202, 214, 230, 250, 294, 318, 351, 385, 391, 392, 396], "tabular": [361, 391, 392], "tact": 217, "tag": 336, "tail": 396, "take": [0, 36, 45, 55, 221, 222, 255, 256, 259, 278, 319, 332, 345, 353, 379, 380, 390, 394, 396, 397], "taken": [0, 3, 251, 256, 359, 394, 396], "target": [0, 371, 396], "target_di": [81, 82, 88, 96, 142, 147], "target_grid": [84, 90, 93, 98, 114, 116, 120, 132, 137, 139, 144, 149, 165, 167, 169, 178, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 357, 396], "target_npf": [88, 96, 147], "task": [295, 331, 377, 394], "tdbg": 206, "tdi": 171, "teamciti": 336, "tec": 0, "tech": 26, "technic": 386, "techniqu": 358, "tecplot": [0, 306], "tediou": 388, "tell": [345, 356], "temp_dir": [369, 370, 371], "tempdir": [375, 390, 391], "temperatur": [318, 396], "templat": [0, 240, 361], "template_data": 395, "tempor": 171, "temporari": [0, 351, 390], "temporarili": [45, 386, 394], "temporary_directori": [337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 358, 359, 361, 362, 364, 366, 369, 370, 371, 375, 390, 391, 394, 396, 398], "tend": 44, "tensor": [21, 136, 303, 396], "term": [5, 11, 21, 77, 78, 79, 80, 83, 85, 86, 89, 91, 92, 94, 97, 99, 103, 112, 115, 117, 122, 123, 136, 138, 141, 143, 145, 148, 157, 162, 163, 164, 166, 168, 172, 174, 180, 181, 229, 251, 289, 291, 292, 295, 297, 303, 304, 308, 316, 361, 385, 386], "termin": [112, 123, 157, 316, 318], "tesselate_centroidal_voronoi": 356, "test": [0, 291, 331, 384, 396], "text": [0, 38, 112, 118, 135, 136, 176, 184, 334, 351, 362, 373, 386, 396, 398], "textfil": [118, 176, 386, 388], "than": [0, 4, 27, 29, 32, 41, 42, 54, 75, 113, 117, 118, 136, 157, 163, 166, 167, 172, 174, 176, 201, 213, 221, 230, 234, 240, 245, 277, 279, 280, 284, 289, 290, 291, 292, 293, 297, 303, 304, 307, 308, 309, 316, 318, 334, 348, 359, 361, 368, 385, 386, 388, 390, 392, 394, 396, 398], "thank": 377, "thei": [0, 41, 42, 45, 50, 54, 81, 130, 157, 167, 182, 183, 221, 222, 227, 270, 310, 311, 312, 331, 334, 354, 361, 379, 382, 385, 386, 388, 390, 391, 394, 396, 399], "them": [0, 44, 45, 55, 221, 222, 332, 334, 354, 359, 361, 366, 369, 373, 386, 388, 390, 394], "theme": 0, "theoret": [337, 386], "theori": [26, 337], "therebi": [5, 11, 12], "therefor": [0, 101, 105, 157, 356, 359, 361, 386, 395, 396, 397, 398, 399], "thermodynam": 396, "theta": [12, 157, 172], "theta_init": 172, "theta_r": 172, "theta_sat": 172, "thetaim": 112, "thi": [0, 4, 5, 9, 10, 11, 21, 23, 25, 26, 27, 29, 30, 32, 34, 35, 37, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 61, 68, 70, 72, 73, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 105, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 130, 132, 133, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 151, 153, 156, 157, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 221, 223, 224, 225, 226, 230, 231, 232, 233, 234, 236, 238, 239, 240, 249, 251, 255, 256, 258, 259, 260, 261, 272, 274, 277, 281, 284, 290, 291, 292, 294, 297, 304, 307, 308, 309, 310, 311, 312, 315, 316, 318, 320, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 345, 348, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 371, 373, 377, 378, 379, 380, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "thick": [0, 26, 32, 117, 118, 136, 166, 174, 176, 219, 227, 228, 229, 234, 294, 295, 304, 354, 360, 361, 366, 385, 390, 397], "thicker": 397, "thickstrt": 136, "thin": 285, "thing": [77, 118, 176, 214, 386, 390, 397], "think": 398, "thinner": 234, "third": [85, 136, 157, 357], "thirdli": 386, "thirteen": 361, "thkmin": 295, "those": [240, 295, 316, 369, 379, 382, 396], "though": [136, 307, 308, 385, 394, 395], "thought": 394, "thousand": 390, "three": [0, 3, 5, 9, 10, 11, 13, 14, 118, 119, 136, 157, 176, 177, 214, 221, 255, 256, 281, 285, 290, 291, 342, 345, 358, 361, 366, 371, 379, 380, 390, 391, 395], "threedimension": [9, 10], "thresh": [136, 304], "threshold": [7, 18, 29, 136, 298, 313], "threshold_sprinkl": [209, 351], "threw": 0, "through": [0, 5, 9, 10, 13, 14, 118, 170, 172, 176, 255, 256, 284, 295, 304, 345, 356, 373, 398], "throughout": [167, 294, 295, 358, 360, 364], "throw": [0, 102, 121, 135, 179, 345], "thrown": 0, "thu": [29, 128, 131, 163, 166, 219, 289, 290, 291, 292, 293, 304, 361], "thumb": [27, 309], "tidi": [41, 54, 390], "tie": 239, "tif": [54, 55, 251, 253, 361, 390], "tight": [288, 397], "tight_layout": [396, 397], "tightli": 361, "tile": [0, 345], "tileprovid": 284, "tim": 345, "time": [0, 3, 5, 17, 19, 25, 26, 27, 28, 31, 36, 41, 42, 43, 44, 50, 51, 54, 55, 77, 79, 80, 82, 84, 86, 88, 90, 91, 93, 94, 96, 98, 99, 112, 113, 114, 116, 117, 118, 120, 122, 123, 125, 126, 129, 130, 131, 132, 135, 137, 139, 140, 141, 142, 144, 145, 147, 149, 157, 162, 163, 165, 167, 169, 171, 172, 174, 176, 178, 180, 181, 182, 183, 206, 209, 211, 216, 221, 236, 238, 239, 259, 266, 268, 274, 278, 279, 288, 294, 295, 296, 307, 309, 310, 311, 312, 315, 316, 317, 319, 332, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366, 368, 369, 370, 371, 373, 375, 377, 386, 387, 390, 391, 394, 396, 397, 398, 399], "time_discret": [0, 126, 345, 353, 356, 359, 366, 395], "time_max": [88, 96, 125, 147, 396], "time_min": [88, 96, 125, 147], "time_unit": [0, 128, 129, 130, 131, 182, 183], "timedelta": [3, 130, 182, 183, 361], "timedelta64": [345, 361, 364, 396], "timediscret": [126, 315, 395], "timemap": 345, "timeoutputcontrol": 320, "timepandasindexpandasindex": [345, 354, 361, 395, 396], "timeri": 392, "times_rainfal": 364, "times_sto": 361, "timeseri": [0, 45, 47, 49, 91, 118, 172, 176, 361, 378, 389, 400], "timespan": 0, "timestamp": [36, 41, 54, 118, 176, 266, 268, 278, 319], "timestap": [11, 12], "timestep": [0, 8, 11, 12, 126, 128, 129, 130, 131, 182, 183, 216, 318, 345, 354, 356, 361, 390, 395, 396], "timestep_dur": [171, 316, 395], "timestep_multipli": [171, 316, 395], "timestr": 0, "timevaryingconstantconcentr": 0, "tip": 368, "titl": [278, 373, 396], "tmp_dir": 398, "tmp_path": 355, "tmpdir": [362, 396, 398], "to_cr": 371, "to_csv": [307, 308], "to_datafram": [361, 379, 380, 382], "to_datetim": [320, 353, 359, 361, 366, 395], "to_fil": 391, "to_list": 368, "to_mf6_pkg": [0, 118, 119, 176, 177], "to_netcdf": [0, 377, 378, 379, 390], "to_timedelta": [353, 359, 361, 366], "to_ugrid2d": [0, 320, 378, 379], "todo": 172, "togeth": [354, 368, 387, 399], "token": 0, "toler": [3, 157], "toml": [0, 100, 104, 127, 331, 336, 388], "tomli": 0, "tonerlit": 284, "too": 399, "tool": [334, 361, 368, 383, 387, 392], "toolset": 387, "toolz": 377, "top": [0, 6, 7, 8, 11, 12, 19, 23, 28, 35, 51, 107, 109, 111, 121, 136, 151, 153, 156, 163, 166, 170, 172, 173, 174, 179, 186, 219, 222, 223, 224, 226, 227, 228, 229, 234, 235, 236, 237, 238, 246, 247, 280, 281, 285, 287, 294, 310, 311, 312, 337, 338, 339, 340, 341, 342, 345, 353, 354, 355, 356, 358, 359, 360, 361, 364, 366, 373, 377, 387, 388, 390, 396, 397, 399], "top1d": [337, 338, 339, 340, 341, 342], "top_bot": [6, 8, 11, 12, 373], "top_elev": [19, 364], "top_sourc": 0, "topic": [50, 51], "topographi": 26, "topologi": [134, 271, 275, 354, 379, 382, 390], "topsystem": [0, 88, 96, 147, 218, 223, 224, 225, 226, 389, 399, 400], "total": [26, 27, 112, 157, 217, 290, 291, 293, 295, 337, 338, 339, 340, 341, 342, 344, 345, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 389, 390, 391, 394, 395, 396, 397, 398, 400], "total_flux": 353, "total_kd": [379, 380], "touch": 240, "tov": 368, "toward": [136, 290, 291, 292, 304, 354, 361], "tox": 0, "tpt_1": 366, "tpt_a": 359, "tpt_b": 359, "tpt_c": 359, "tpt_d": 359, "tpt_model": [359, 366], "tqdm": 377, "track": [289, 290, 291, 292, 293, 316], "tradit": 390, "tradition": 337, "transfer": 112, "transform": [0, 3, 118, 176, 222, 320, 371], "transient": [0, 27, 36, 47, 117, 157, 163, 166, 167, 174, 266, 268, 278, 279, 304, 316, 319, 353, 354, 356, 358, 359, 360, 364, 366], "transient_da": [379, 381], "transient_uda": [379, 382], "translat": 386, "transluc": 284, "transmiss": [121, 179, 219, 227, 304, 361, 385, 390, 397], "transmissivity_l": 390, "transmissivity_l1": 390, "transmissivity_l10": 390, "transmissivity_l11": 390, "transmissivity_l12": 390, "transmissivity_l13": 390, "transmissivity_l2": 390, "transmissivity_l3": 390, "transmissivity_l4": 390, "transmissivity_l5": 390, "transmissivity_l6": 390, "transmissivity_l7": 390, "transmissivity_l8": 390, "transmissivity_l9": 390, "transpar": [280, 284, 368], "transpir": [209, 217], "transport": [0, 74, 77, 80, 86, 91, 94, 103, 117, 128, 131, 135, 141, 145, 162, 174, 180, 181, 289, 290, 291, 292, 293, 295, 303, 308, 316, 318, 320, 337, 340, 342, 353, 363, 365, 387, 389], "transport_2d": [365, 366, 389], "transport_initial_timestep": 316, "transport_model": 356, "transport_solv": [353, 356, 359, 366], "transport_timestep_multipli": 316, "transportmodel": 359, "transpos": 361, "transsmis": 390, "transvers": [85, 297], "transversal_horizont": 187, "transversal_horizontal1": [85, 187, 353, 356, 359, 366, 396], "transversal_horizontal2": [85, 187, 396], "transversal_vert": [85, 187, 356, 396], "transverse_horizontal1": 85, "transverse_horizontal2": 85, "tranverse_vert": 85, "trapezoid": 247, "treat": [0, 25, 118, 126, 136, 176, 295, 315], "treatment": 303, "trend": [199, 345], "trend_da": 345, "treshold": 7, "tri": [37, 55, 355], "triangl": [275, 280, 284, 379, 382, 397], "trianglemesh": [379, 382], "triangular": [354, 356], "trick": 259, "tricontourset": 355, "tripl": 112, "troublesom": 398, "trpt": 297, "trpv": 297, "true": [0, 3, 5, 8, 45, 46, 56, 59, 77, 78, 79, 80, 85, 86, 91, 94, 100, 102, 103, 104, 112, 113, 117, 121, 122, 123, 126, 127, 129, 132, 135, 136, 140, 141, 145, 157, 161, 162, 163, 166, 170, 171, 172, 173, 174, 179, 180, 181, 182, 217, 227, 240, 251, 262, 277, 280, 281, 282, 284, 298, 303, 307, 308, 316, 318, 337, 338, 339, 340, 341, 342, 353, 354, 356, 358, 359, 360, 361, 364, 366, 379, 380, 396, 397], "truncat": 26, "try": [43, 280, 284, 332, 386, 394], "tslngh": 316, "tsmult": [171, 316], "ttsmult": 316, "tupl": [6, 84, 90, 93, 98, 116, 120, 139, 144, 147, 149, 165, 169, 178, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 226, 230, 249, 264, 273, 280, 284, 288], "turn": [0, 47, 230, 387, 390, 391], "tutori": 332, "tvd": [75, 293, 316], "tweak": 396, "twice": [290, 291], "two": [26, 39, 44, 45, 55, 76, 78, 118, 119, 136, 176, 177, 216, 221, 242, 245, 275, 277, 280, 281, 284, 285, 287, 290, 291, 318, 345, 353, 354, 361, 366, 373, 377, 379, 380, 385, 386, 388, 391, 394, 395, 397], "twodimension": [290, 291], "twri": [0, 357, 360, 363, 364, 365, 366, 389, 394], "twri_output": 394, "txt": [45, 46, 47, 48, 49], "type": [0, 3, 4, 6, 12, 13, 14, 24, 26, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 58, 66, 81, 82, 83, 84, 88, 89, 90, 92, 93, 96, 97, 98, 102, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 120, 121, 123, 125, 128, 129, 130, 131, 132, 137, 138, 139, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 164, 165, 167, 168, 169, 170, 178, 179, 182, 183, 184, 199, 202, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 295, 303, 304, 314, 354, 361, 363, 366, 390, 391, 394, 396, 397], "typeerror": [0, 272], "typic": [26, 27, 157, 239, 309, 361, 386, 390, 391, 392, 394], "typo": 0, "u": [0, 9, 10, 285, 354, 361, 368, 373, 377, 390, 394], "ucn": 140, "uda": [378, 379, 382], "uda_md": [378, 379], "ugrid": [0, 100, 104, 127, 271, 275, 354, 355, 356, 360, 382], "ugrid2d": [354, 356, 379, 382], "ugrid2d_dataset": 275, "ugrid_d": [378, 379], "ugriddataarrai": [0, 81, 82, 83, 84, 88, 89, 90, 92, 93, 96, 97, 98, 101, 105, 107, 109, 111, 114, 115, 116, 118, 119, 120, 121, 125, 128, 129, 130, 131, 132, 134, 137, 138, 139, 142, 143, 144, 147, 148, 149, 151, 153, 155, 156, 164, 165, 167, 168, 169, 173, 176, 177, 178, 179, 182, 183, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 254, 257, 258, 259, 260, 261, 356, 360], "ugriddatarrai": [223, 224, 226], "ugriddataset": [129, 131, 182, 269, 354], "ultim": 293, "unambigu": [130, 182, 183], "unassoci": [118, 176], "uncertainti": 214, "uncompromis": 332, "unconfin": [0, 32, 163, 166, 304, 385], "unconsolid": 26, "uncoupl": 318, "under": [0, 32, 42, 99, 157, 166, 274, 284, 361, 363, 395], "under_relax": [99, 157, 353, 354, 356, 358, 359, 360, 361, 364, 366], "under_relaxation_gamma": 157, "under_relaxation_kappa": 157, "under_relaxation_momentum": 157, "under_relaxation_theta": 157, "undergo": 396, "underli": [4, 91, 136, 141, 172], "underrelax": 157, "underscor": [41, 42, 54], "understand": [356, 386], "undesir": 396, "undo": 269, "undul": 26, "unexpect": [66, 221, 379, 380], "unfortun": 259, "unidata": [255, 256], "uniform": [290, 291, 304, 307, 308, 354, 358, 360, 364, 366], "unimport": 297, "uninstal": 0, "unintend": 209, "union": [37, 38, 39, 125, 128, 130, 133, 183, 252, 253, 275], "unionimeth1head": 184, "uniqu": [25, 47, 117, 126, 174, 315], "unit": [0, 4, 26, 27, 30, 32, 36, 130, 157, 163, 166, 182, 183, 202, 204, 212, 214, 215, 217, 288, 295, 297, 304, 307, 309, 310, 311, 312, 318, 319, 331, 353, 356, 361, 385], "unitless": 157, "unittest": 331, "unless": [27, 112, 123, 136, 295, 309], "unlik": [19, 28, 316, 356, 388, 393], "unlimit": 26, "unmodifi": [84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178], "unnam": 368, "unpack": [259, 373], "unpartit": [362, 366], "unreli": 44, "unrend": 334, "unrot": 136, "unsatisfi": 386, "unsatur": [26, 172, 385], "unsaturated_databas": 210, "unsaturatedzoneflow": 0, "unsplit": 366, "unstabl": [356, 396], "unstack": [0, 271], "unstructur": [0, 100, 104, 127, 136, 354, 356, 360, 378, 389, 399, 400], "unstructuredgrid": 281, "until": [0, 25, 41, 54, 80, 126, 278, 315, 345, 394, 397], "unus": 294, "unwant": 277, "up": [0, 13, 14, 44, 55, 82, 84, 87, 88, 90, 93, 95, 96, 98, 114, 116, 120, 136, 137, 139, 142, 144, 146, 147, 149, 165, 167, 169, 175, 178, 202, 218, 231, 232, 233, 234, 278, 281, 332, 337, 338, 339, 340, 341, 342, 345, 354, 356, 358, 364, 366, 379, 380, 394, 396, 397, 398, 399], "updat": [0, 101, 105, 240, 336, 386, 388], "upload": 336, "upon": [0, 78, 79, 80, 85, 86, 91, 94, 102, 112, 113, 117, 122, 123, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181], "upond": 0, "upper": [0, 218, 223, 224, 226, 244, 262, 345], "upper_active_lay": [0, 320], "uppermost": [4, 243, 361], "upscal": 396, "upsid": 0, "upstream": [75, 76, 288, 289, 318, 361], "upw": 361, "upward": [204, 397], "upward_resist": 204, "upwind": 76, "urban": 26, "urban_area": 26, "urgenc": [61, 68, 70, 72], "url": 0, "us": [0, 3, 4, 5, 9, 10, 11, 17, 18, 20, 23, 25, 26, 27, 29, 34, 35, 36, 37, 41, 42, 44, 45, 50, 54, 55, 56, 59, 61, 66, 68, 70, 72, 74, 77, 78, 80, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96, 98, 100, 102, 104, 112, 113, 114, 116, 117, 118, 120, 121, 126, 128, 130, 131, 134, 136, 137, 139, 141, 142, 144, 145, 147, 149, 157, 163, 165, 166, 167, 169, 170, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 199, 201, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 230, 239, 240, 245, 246, 247, 251, 252, 253, 256, 258, 259, 260, 261, 265, 266, 267, 268, 272, 274, 277, 278, 279, 280, 281, 284, 285, 287, 289, 290, 291, 292, 294, 296, 297, 298, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 386, 387, 388, 390, 391, 394, 395, 397, 398], "usabl": 391, "usag": [222, 230, 291, 394], "use_absolute_path": 135, "use_binari": 135, "use_cftim": [41, 42, 43, 54], "use_relative_weight": [221, 222], "use_src_attr": 251, "usecas": 274, "user": [0, 13, 14, 26, 37, 102, 112, 136, 157, 172, 209, 294, 316, 334, 363, 366, 386, 388, 389, 396, 397, 400], "user_guid": 396, "userspecifi": 316, "userwarn": [361, 364, 391, 396], "usg": [86, 91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 170, 171, 174, 180, 181, 377, 387], "usual": [27, 31, 157, 251, 290, 291, 294, 303, 307, 308, 309, 310, 311, 312, 337, 338, 339, 340, 341, 342, 345, 351, 353, 357, 358, 361, 364, 368, 373, 395, 397, 398], "util": [0, 44, 55, 81, 82, 88, 96, 114, 137, 142, 147, 167, 255, 256, 320, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 390, 391, 394, 396, 397, 398], "utm30n": 251, "uzf": [0, 172, 387, 396], "v": [0, 9, 10, 26, 285, 354, 366, 373], "v0": 0, "v1": 0, "v5": [21, 337, 338, 339, 340, 341, 342, 345], "v7": 26, "v8": 209, "v_": 11, "vados": 26, "valid": [0, 50, 77, 78, 79, 80, 85, 86, 91, 94, 100, 102, 104, 112, 113, 117, 118, 121, 122, 123, 126, 127, 132, 135, 136, 140, 141, 145, 157, 161, 162, 163, 166, 170, 171, 172, 173, 174, 176, 179, 180, 181, 227, 239, 396, 398], "validationerror": [0, 78, 79, 80, 85, 86, 91, 94, 112, 113, 117, 122, 123, 135, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 231, 232, 233, 398], "valu": [0, 3, 4, 5, 7, 20, 26, 27, 31, 39, 41, 42, 44, 45, 47, 48, 49, 54, 55, 58, 66, 78, 80, 83, 85, 86, 89, 91, 92, 94, 97, 101, 105, 112, 113, 115, 117, 122, 123, 128, 129, 130, 131, 134, 136, 138, 141, 143, 145, 148, 157, 163, 164, 166, 168, 170, 171, 172, 174, 180, 181, 182, 183, 207, 212, 218, 219, 221, 222, 223, 224, 226, 230, 239, 240, 245, 246, 249, 250, 258, 259, 260, 261, 262, 277, 281, 284, 287, 289, 290, 291, 292, 293, 294, 295, 297, 302, 303, 304, 306, 307, 308, 309, 316, 318, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 359, 361, 364, 366, 368, 369, 377, 383, 385, 390, 394, 396, 397, 398], "valueerror": [0, 260, 261], "values_to_set": 259, "van": 26, "vanilla": 348, "vari": [0, 136, 246, 247, 304, 317, 361, 379, 380, 385, 397], "variabl": [0, 16, 23, 41, 54, 78, 81, 82, 88, 91, 96, 112, 114, 133, 136, 137, 142, 147, 157, 162, 167, 217, 231, 232, 233, 271, 275, 294, 295, 311, 318, 340, 351, 353, 354, 356, 361, 363, 364, 386, 390, 395, 396, 397, 398], "variable_vertical_conduct": [136, 358, 359, 360, 361, 364, 396], "variablecv": 136, "variabledensityflow": [337, 338, 339, 340, 341, 342], "variableoutputcontrol": 320, "variant": [17, 296], "variat": 293, "varieti": [0, 361, 387], "variou": [0, 316], "vcr": 217, "vdf": [337, 338, 339, 340, 341, 342], "ve": [0, 278, 379, 382, 386], "vector": [5, 27, 230, 240, 249, 252, 253, 284, 345, 369, 389, 390, 394, 399, 400], "veget": [199, 209], "vegetation_factor": 199, "vegetation_index": [199, 209, 351], "vegetation_index_da": 351, "veldhuizen": 26, "veloc": [0, 6, 9, 10, 359, 366, 374, 376, 389], "veri": [27, 230, 309, 345, 353, 354, 356, 385, 388, 390, 394, 395], "verifi": [119, 177, 335, 394, 396, 398], "versa": 399, "versatil": [387, 390], "version": [0, 45, 77, 80, 132, 157, 277, 337, 338, 339, 340, 341, 342, 356, 358, 361, 379, 380, 385, 387, 398], "versu": 386, "vertic": [0, 5, 23, 26, 34, 35, 83, 85, 89, 92, 97, 101, 105, 115, 136, 138, 143, 148, 164, 168, 170, 172, 173, 181, 214, 218, 219, 222, 223, 224, 225, 226, 228, 229, 236, 238, 239, 246, 247, 255, 256, 290, 291, 297, 304, 310, 311, 343, 344, 345, 353, 356, 361, 364, 373, 379, 382, 387, 389, 391, 396, 397], "vertical_anisotropi": 34, "vertical_exagger": [278, 279, 281], "verticalanisotropi": [35, 345], "verticalinterfac": [342, 344, 389], "verticesdiscret": [0, 87, 95, 146, 175, 186, 354, 356, 360, 396], "via": [0, 5, 128, 129, 130, 131, 182, 183, 305, 317, 334, 377, 385, 388, 390, 391, 392], "vice": 399, "view": [0, 26, 136, 290, 291, 390, 391, 395], "viewer": 390, "violat": [13, 14], "viridi": [282, 396, 397, 398], "visibl": [259, 391], "visual": [0, 13, 14, 25, 51, 126, 315, 320, 334, 355, 359, 373, 375, 377, 387, 388, 389, 394, 396, 397, 398, 399], "visualis": [339, 340, 342], "visualize_jupyt": 374, "visualize_python": 374, "visualstudiocod": 332, "vka": 304, "void": 123, "volum": [5, 27, 30, 32, 112, 123, 136, 163, 166, 172, 304, 309, 356, 385, 396], "volumetr": [117, 141, 174, 180, 181, 310, 311, 312, 356], "von": 209, "voronoi": 356, "voxel": [0, 280, 281, 285, 287, 320], "vpt": 396, "vscode": [334, 394], "vtk": 306, "vx": [6, 336, 373], "vy": [6, 373], "vz": [6, 373], "w": [0, 4, 41, 54, 130, 182, 183, 340], "wa": [0, 80, 130, 182, 183, 337, 356, 361, 386, 388, 391, 396, 398], "wageningen": 26, "wai": [0, 5, 13, 14, 45, 118, 176, 230, 280, 335, 348, 363, 365, 368, 375, 379, 380, 389, 392, 397, 398], "wall": 22, "walsum": 26, "wang": [11, 12], "want": [56, 81, 84, 90, 93, 98, 116, 120, 139, 144, 149, 165, 169, 178, 221, 336, 345, 356, 357, 379, 380, 386, 388, 394, 396, 398], "warn": [0, 59, 61, 66, 68, 70, 72, 259, 260, 261, 361, 364, 396], "warp": 251, "wast": 392, "water": [0, 4, 26, 29, 30, 32, 33, 86, 91, 94, 99, 103, 106, 108, 110, 113, 117, 122, 136, 140, 141, 145, 150, 152, 154, 157, 163, 166, 170, 171, 172, 174, 180, 181, 209, 212, 215, 217, 228, 229, 253, 288, 294, 304, 318, 337, 338, 339, 340, 342, 345, 353, 356, 358, 359, 361, 385, 387, 391, 396, 399], "water_content_fil": 172, "water_mov": 172, "waterbal": 288, "waterbalance_barchart": 320, "watert": [26, 214], "waterwai": [230, 391], "wd": [290, 291, 292], "we": [0, 12, 81, 84, 90, 93, 98, 116, 118, 120, 139, 140, 144, 149, 165, 169, 172, 176, 178, 209, 212, 230, 255, 256, 277, 332, 334, 335, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 369, 370, 371, 373, 377, 379, 380, 382, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399], "web": [337, 338, 339, 340, 341, 342, 345], "websit": [41, 54, 361, 368], "week": [130, 182, 183], "weight": [0, 74, 75, 76, 82, 84, 88, 90, 93, 96, 98, 114, 116, 118, 120, 137, 139, 142, 144, 147, 149, 165, 167, 169, 176, 178, 219, 221, 222, 289, 290, 291, 292, 307, 308, 318, 357, 361, 379, 380, 396, 397], "weighting_factor": [290, 291, 292], "wel": [12, 102, 117, 174, 180, 181, 337, 339, 340, 341, 342, 345, 358, 360, 366, 395], "wel_df": 345, "welcom": 335, "weldata": [339, 340, 342], "well": [0, 25, 45, 102, 117, 118, 119, 121, 126, 157, 180, 181, 184, 200, 211, 214, 218, 227, 234, 315, 332, 334, 336, 337, 339, 340, 341, 342, 353, 356, 357, 358, 360, 366, 368, 377, 379, 380, 388, 390, 391, 392, 394, 395, 396], "well_i": 360, "well_rat": 360, "well_x": 360, "welldisstructur": 0, "welldisvertic": 0, "wells_i": 358, "wells_l": 45, "wells_l1": 45, "wells_l2": 45, "wells_x": 358, "weltim": [117, 174], "were": [0, 80, 361, 368, 373, 396, 397, 398], "west": [21, 361, 390, 398], "western": 398, "wet": [136, 157, 228, 229, 304], "wetdri": 136, "wetfactor": 304, "wetfct": [136, 304], "wether": 316, "wetted_area": 26, "wgs84": [251, 371], "what": [0, 45, 251, 259, 260, 261, 278, 361, 377, 388, 396, 397, 398], "wheel": [379, 382], "when": [0, 3, 4, 11, 12, 24, 27, 45, 50, 61, 66, 68, 70, 72, 78, 80, 85, 99, 118, 121, 129, 136, 140, 157, 163, 166, 172, 176, 179, 182, 227, 251, 272, 278, 279, 284, 290, 291, 292, 294, 303, 304, 307, 308, 309, 314, 334, 354, 361, 362, 379, 380, 385, 386, 394, 395, 396, 397, 399], "whenev": [27, 78], "where": [0, 4, 5, 7, 22, 29, 32, 41, 54, 76, 81, 82, 101, 105, 166, 172, 221, 225, 227, 230, 231, 232, 233, 245, 252, 264, 290, 291, 295, 311, 320, 336, 337, 338, 339, 340, 341, 342, 345, 351, 354, 356, 358, 360, 361, 364, 373, 379, 380, 382, 385, 386, 388, 394, 396, 397, 398], "wherea": [118, 176, 345, 361], "whether": [0, 5, 8, 44, 78, 79, 80, 85, 86, 91, 94, 99, 100, 104, 112, 113, 117, 122, 123, 127, 128, 129, 130, 135, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181, 182, 183, 202, 204, 221, 258, 277, 280, 281, 290, 291, 292, 316, 356, 368], "which": [0, 4, 10, 11, 14, 19, 21, 25, 26, 27, 33, 36, 39, 41, 42, 44, 45, 47, 54, 55, 77, 78, 79, 80, 86, 91, 94, 99, 100, 102, 103, 104, 107, 109, 111, 113, 117, 118, 122, 126, 127, 128, 131, 132, 133, 134, 135, 136, 141, 145, 147, 151, 153, 156, 157, 162, 172, 174, 176, 180, 181, 209, 214, 216, 217, 221, 223, 224, 225, 226, 230, 233, 236, 238, 239, 245, 252, 253, 255, 256, 258, 259, 277, 284, 289, 290, 291, 292, 293, 294, 295, 304, 306, 309, 310, 311, 312, 315, 316, 319, 332, 334, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 359, 361, 364, 366, 368, 370, 371, 377, 385, 386, 387, 390, 391, 395, 396, 397, 398], "while": [0, 30, 157, 163, 172, 239, 290, 291, 292, 334, 354, 379, 380, 385, 386, 399], "white": [284, 354, 373], "whiten": 280, "whiten_triangl": [280, 284], "whitespac": 397, "who": [0, 388], "whole": [66, 357, 362, 396], "whose": [240, 396], "why": [118, 176, 377, 386, 398], "wide": 5, "width": [112, 366, 391], "wiki": [30, 32, 163, 166], "wikipedia": [30, 32, 163, 166, 385], "wil": 42, "wildcard": 390, "wildli": 397, "window": [3, 133, 278, 333, 337, 338, 339, 340, 341, 342, 345, 363, 377, 386, 392], "winter": [0, 50, 345], "wise": [379, 380, 398], "wish": [45, 230, 277], "with_gap": [379, 380, 382], "within": [0, 45, 80, 136, 230, 240, 256, 258, 290, 291, 296, 310, 311, 312, 316, 332, 356, 357, 361, 386, 395], "within_polygon": 45, "without": [0, 3, 8, 13, 14, 47, 50, 74, 80, 86, 91, 94, 117, 118, 141, 145, 174, 176, 180, 220, 221, 222, 227, 235, 251, 307, 308, 354, 362, 368, 379, 382, 388, 394, 396, 397], "wofost": 199, "wonder": [118, 176], "word": 385, "work": [0, 13, 14, 25, 41, 44, 54, 66, 126, 127, 130, 157, 182, 183, 251, 258, 259, 290, 291, 315, 332, 335, 337, 338, 339, 340, 341, 342, 345, 354, 356, 361, 364, 379, 380, 382, 383, 384, 386, 387, 388, 390, 391, 392, 394, 395, 396, 398], "workaround": 385, "workflow": [332, 387, 399], "world": 396, "worri": 386, "worsen": 157, "worth": 335, "worthi": 337, "would": [0, 4, 44, 55, 136, 332, 354, 386, 394, 396], "wouldn": 345, "wq": [0, 19, 28, 43, 320, 337, 338, 339, 340, 341, 342, 344, 377, 387, 389, 395], "wq_jupyt": 343, "wq_python": 343, "wq_v5_3_svn359_x64r": [337, 338, 339, 340, 341, 342], "wrap": [81, 82, 88, 96, 114, 137, 142, 147, 167, 257, 277, 280, 285, 287, 332, 390, 391], "wrapper": 61, "write": [0, 24, 41, 42, 44, 47, 49, 54, 55, 56, 78, 100, 102, 104, 107, 109, 111, 112, 119, 121, 127, 128, 129, 130, 133, 151, 153, 156, 177, 179, 203, 209, 210, 216, 217, 259, 276, 278, 280, 285, 287, 314, 320, 335, 337, 338, 339, 340, 341, 342, 345, 351, 353, 355, 356, 359, 361, 362, 364, 366, 377, 386, 387, 390, 391, 395, 396], "write_assoc": [0, 320], "write_qgis_project": 0, "writecontext": 0, "writeup": [133, 363], "written": [0, 44, 47, 48, 49, 55, 59, 77, 78, 79, 80, 86, 91, 94, 99, 103, 112, 117, 122, 123, 135, 136, 140, 141, 145, 157, 162, 163, 166, 170, 172, 174, 180, 181, 184, 211, 216, 217, 271, 296, 304, 334, 345, 361, 386, 390, 394, 398], "wrong": [78, 79, 80, 85, 86, 91, 94, 112, 113, 117, 122, 123, 136, 140, 141, 145, 157, 162, 163, 166, 170, 171, 172, 173, 174, 180, 181], "www": 337, "x": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 84, 85, 90, 93, 98, 102, 106, 108, 110, 116, 117, 120, 125, 129, 131, 136, 139, 144, 149, 165, 169, 170, 174, 178, 182, 222, 227, 228, 230, 234, 239, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 275, 277, 278, 280, 281, 285, 287, 304, 319, 336, 337, 338, 339, 340, 341, 342, 345, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 368, 371, 373, 377, 379, 380, 381, 382, 391, 392, 394, 395, 396, 397, 398], "x27": [345, 351, 354, 361, 373, 390, 395, 396, 397, 398], "x86": 386, "x_line": 397, "x_max": [125, 354], "x_min": 125, "xarrai": [0, 5, 9, 10, 13, 14, 41, 42, 43, 44, 50, 54, 55, 81, 82, 88, 96, 114, 137, 140, 142, 147, 167, 172, 227, 230, 231, 232, 233, 234, 239, 240, 249, 251, 252, 253, 254, 255, 256, 257, 259, 262, 264, 265, 266, 267, 268, 271, 273, 276, 277, 307, 308, 335, 337, 338, 339, 340, 341, 342, 345, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 373, 377, 379, 380, 382, 387, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400], "xarri": [121, 179], "xlabel": 351, "xmax": [240, 264, 265, 266, 267, 268, 273, 345, 353, 357, 358, 359, 360, 361, 364, 368, 369, 370, 371, 379, 380, 396], "xmi": 77, "xmin": [240, 264, 265, 266, 267, 268, 273, 345, 353, 357, 358, 359, 360, 361, 364, 368, 369, 370, 371, 379, 380, 396], "xor": [379, 380], "xpandasindexpandasindex": [345, 361, 373, 390, 395, 396, 397, 398], "xr": [0, 3, 4, 5, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 79, 80, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 101, 105, 112, 113, 115, 116, 117, 120, 122, 123, 125, 128, 129, 130, 131, 132, 136, 138, 139, 140, 141, 143, 144, 145, 148, 149, 163, 164, 165, 166, 168, 169, 170, 172, 174, 178, 180, 181, 182, 183, 199, 201, 202, 204, 209, 211, 212, 213, 214, 215, 216, 228, 229, 239, 240, 245, 248, 250, 251, 258, 259, 260, 261, 262, 265, 266, 267, 268, 271, 275, 278, 280, 281, 283, 284, 285, 287, 294, 295, 296, 298, 302, 304, 305, 310, 311, 312, 313, 317, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 373, 378, 379, 380, 390, 394, 395, 396, 397], "xsection_alloc": 397, "xsection_distribut": 397, "xsection_k": 397, "xsection_layer_nr": 397, "xt3d": [85, 136, 356], "xt3d_off": [85, 353, 356, 359, 366], "xt3d_option": [136, 396], "xt3d_rh": [85, 353, 356, 359, 366], "xtick": 351, "xu": [83, 84, 89, 90, 92, 93, 97, 98, 101, 105, 115, 116, 120, 125, 128, 129, 130, 131, 132, 138, 139, 143, 144, 148, 149, 164, 165, 168, 169, 173, 178, 182, 183, 259, 354, 356, 360, 379, 382], "xugrid": [0, 81, 82, 88, 96, 114, 121, 137, 142, 147, 167, 179, 227, 231, 232, 233, 234, 254, 257, 269, 354, 356, 360, 377, 379, 382, 388, 396], "xxxx": 0, "xy": [254, 257, 283, 396], "xy0": [246, 247], "xy1": [246, 247], "xy2": [246, 247], "xyz": 0, "y": [0, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 44, 45, 55, 84, 85, 90, 93, 98, 102, 106, 108, 110, 116, 117, 120, 125, 129, 131, 136, 139, 144, 149, 165, 169, 170, 174, 178, 182, 222, 227, 228, 230, 234, 239, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 275, 277, 278, 281, 288, 304, 319, 336, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 357, 358, 359, 360, 361, 364, 366, 368, 371, 373, 377, 379, 380, 381, 382, 391, 392, 394, 395, 396, 397, 398], "y_max": 125, "y_min": 125, "ye": 361, "year": [0, 3, 41, 50, 54, 118, 130, 176, 182, 183, 206, 209, 345, 356, 361], "yearli": [199, 361], "yet": [0, 79, 80, 86, 91, 94, 117, 122, 136, 141, 145, 172, 174, 180, 181, 259, 277, 363, 379, 382, 397], "yield": [32, 163, 166, 167, 290, 291, 304, 356, 357, 361], "yincreas": [337, 338, 339, 340, 341, 342, 353, 357, 373], "ylabel": 351, "ymax": [240, 265, 266, 267, 268, 273, 345, 357, 358, 360, 361, 364, 368, 369, 370, 371, 379, 380, 396], "ymin": [240, 265, 266, 267, 268, 273, 345, 357, 358, 360, 361, 364, 368, 369, 370, 371, 379, 380, 396], "yml": 0, "you": [0, 5, 25, 26, 41, 42, 44, 45, 54, 55, 56, 59, 61, 68, 70, 72, 118, 119, 126, 128, 129, 130, 133, 176, 177, 214, 217, 221, 222, 246, 247, 256, 259, 278, 284, 315, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 345, 350, 351, 354, 360, 361, 362, 363, 367, 378, 379, 380, 383, 386, 388, 394, 395, 396, 397, 398], "your": [0, 41, 45, 54, 56, 128, 129, 130, 133, 180, 181, 221, 222, 285, 332, 336, 337, 338, 339, 340, 341, 342, 345, 351, 353, 354, 356, 358, 361, 363, 364, 386, 388, 394, 395, 396, 398], "yourself": [259, 284, 388, 396], "ypandasindexpandasindex": [345, 361, 373, 390, 395, 396, 397, 398], "z": [0, 4, 6, 7, 11, 85, 136, 246, 247, 281, 283, 336, 353, 356, 373], "zarr": 0, "zb0": [246, 247], "zb1": [246, 247], "zb2": 247, "zbot": [106, 108, 110, 246, 247], "zbottom": [0, 246, 247], "zero": [0, 5, 18, 19, 27, 44, 55, 112, 123, 134, 136, 157, 172, 214, 290, 291, 298, 304, 316, 318, 359, 361, 366, 396], "zero_order_decai": [112, 123], "zerodivisionerror": 0, "zeros_lik": [351, 354, 356, 357, 360, 366], "zetaim": 112, "zheng": [11, 12], "zip": [0, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "zmax": 353, "zmin": 353, "zonal": [0, 252, 253], "zonal_aggreg": [252, 253], "zonal_aggregate_polygon": [0, 320], "zonal_aggregate_rast": [0, 320], "zone": [5, 22, 26, 172, 207, 252, 253, 379, 380, 391], "zone2d": 5, "zone_of_interest": 5, "zt0": [246, 247], "zt1": [246, 247], "zt2": 247, "ztop": [0, 106, 108, 110, 246, 247]}, "titles": ["Changelog", "Evaluate model output", "iMODFLOW", "imod.evaluate.calculate_gxg", "imod.evaluate.convert_pointwaterhead_freshwaterhead", "imod.evaluate.facebudget", "imod.evaluate.flow_velocity", "imod.evaluate.interpolate_value_boundaries", "imod.evaluate.intra_cell_boundary_conditions", "imod.evaluate.quiver_line", "imod.evaluate.quiver_linestring", "imod.evaluate.stability_constraint_advection", "imod.evaluate.stability_constraint_wel", "imod.evaluate.streamfunction_line", "imod.evaluate.streamfunction_linestring", "imod.flow.Bottom", "imod.flow.Boundary", "imod.flow.ConstantHead", "imod.flow.Drain", "imod.flow.EvapoTranspiration", "imod.flow.GeneralHeadBoundary", "imod.flow.HorizontalAnisotropy", "imod.flow.HorizontalFlowBarrier", "imod.flow.HorizontalHydraulicConductivity", "imod.flow.ImodflowModel", "imod.flow.ImodflowModel.create_time_discretization", "imod.flow.MetaSwap", "imod.flow.PreconditionedConjugateGradientSolver", "imod.flow.Recharge", "imod.flow.River", "imod.flow.SpecificStorage", "imod.flow.StartingHead", "imod.flow.StorageCoefficient", "imod.flow.Top", "imod.flow.VerticalAnisotropy", "imod.flow.VerticalHydraulicConductivity", "imod.flow.Well", "imod.formats.gen.read", "imod.formats.gen.read_ascii", "imod.formats.gen.write", "imod.formats.idf.header", "imod.formats.idf.open", "imod.formats.idf.open_dataset", "imod.formats.idf.open_subdomains", "imod.formats.idf.save", "imod.formats.ipf.read", "imod.formats.ipf.read_associated", "imod.formats.ipf.save", "imod.formats.ipf.write", "imod.formats.ipf.write_assoc", "imod.formats.prj.open_projectfile_data", "imod.formats.prj.read_projectfile", "imod.formats.prj.read_timfile", "imod.formats.rasterio.header", "imod.formats.rasterio.open", "imod.formats.rasterio.save", "imod.logging", "imod.logging.config", "imod.logging.config.LoggerType", "imod.logging.config.configure", "imod.logging.ilogger", "imod.logging.ilogger.ILogger", "imod.logging.logging_decorators", "imod.logging.logging_decorators.init_log_decorator", "imod.logging.logging_decorators.standard_log_decorator", "imod.logging.loglevel", "imod.logging.loglevel.LogLevel", "imod.logging.logurulogger", "imod.logging.logurulogger.LoguruLogger", "imod.logging.nulllogger", "imod.logging.nulllogger.NullLogger", "imod.logging.pythonlogger", "imod.logging.pythonlogger.PythonLogger", "imod.couplers.metamod.MetaMod", "imod.mf6.AdvectionCentral", "imod.mf6.AdvectionTVD", "imod.mf6.AdvectionUpstream", "imod.mf6.ApiPackage", "imod.mf6.Buoyancy", "imod.mf6.ConstantConcentration", "imod.mf6.ConstantHead", "imod.mf6.ConstantHead.from_imod5_data", "imod.mf6.ConstantHead.from_imod5_shd_data", "imod.mf6.ConstantHead.mask", "imod.mf6.ConstantHead.regrid_like", "imod.mf6.Dispersion", "imod.mf6.Drainage", "imod.mf6.Drainage.cleanup", "imod.mf6.Drainage.from_imod5_data", "imod.mf6.Drainage.mask", "imod.mf6.Drainage.regrid_like", "imod.mf6.Evapotranspiration", "imod.mf6.Evapotranspiration.mask", "imod.mf6.Evapotranspiration.regrid_like", "imod.mf6.GeneralHeadBoundary", "imod.mf6.GeneralHeadBoundary.cleanup", "imod.mf6.GeneralHeadBoundary.from_imod5_data", "imod.mf6.GeneralHeadBoundary.mask", "imod.mf6.GeneralHeadBoundary.regrid_like", "imod.mf6.GroundwaterFlowModel", "imod.mf6.GroundwaterFlowModel.dump", "imod.mf6.GroundwaterFlowModel.mask_all_packages", "imod.mf6.GroundwaterFlowModel.prepare_wel_for_mf6", "imod.mf6.GroundwaterTransportModel", "imod.mf6.GroundwaterTransportModel.dump", "imod.mf6.GroundwaterTransportModel.mask_all_packages", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.HorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierMultiplier", "imod.mf6.HorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.HorizontalFlowBarrierResistance", "imod.mf6.HorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.ImmobileStorageTransfer", "imod.mf6.InitialConditions", "imod.mf6.InitialConditions.from_imod5_data", "imod.mf6.InitialConditions.mask", "imod.mf6.InitialConditions.regrid_like", "imod.mf6.LayeredWell", "imod.mf6.LayeredWell.from_imod5_data", "imod.mf6.LayeredWell.mask", "imod.mf6.LayeredWell.regrid_like", "imod.mf6.LayeredWell.to_mf6_pkg", "imod.mf6.MassSourceLoading", "imod.mf6.MobileStorageTransfer", "imod.mf6.Modflow6Simulation", "imod.mf6.Modflow6Simulation.clip_box", "imod.mf6.Modflow6Simulation.create_time_discretization", "imod.mf6.Modflow6Simulation.dump", "imod.mf6.Modflow6Simulation.open_concentration", "imod.mf6.Modflow6Simulation.open_flow_budget", "imod.mf6.Modflow6Simulation.open_head", "imod.mf6.Modflow6Simulation.open_transport_budget", "imod.mf6.Modflow6Simulation.regrid_like", "imod.mf6.Modflow6Simulation.run", "imod.mf6.Modflow6Simulation.split", "imod.mf6.Modflow6Simulation.write", "imod.mf6.NodePropertyFlow", "imod.mf6.NodePropertyFlow.from_imod5_data", "imod.mf6.NodePropertyFlow.mask", "imod.mf6.NodePropertyFlow.regrid_like", "imod.mf6.OutputControl", "imod.mf6.Recharge", "imod.mf6.Recharge.from_imod5_data", "imod.mf6.Recharge.mask", "imod.mf6.Recharge.regrid_like", "imod.mf6.River", "imod.mf6.River.cleanup", "imod.mf6.River.from_imod5_data", "imod.mf6.River.mask", "imod.mf6.River.regrid_like", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic", "imod.mf6.SingleLayerHorizontalFlowBarrierHydraulicCharacteristic.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier", "imod.mf6.SingleLayerHorizontalFlowBarrierMultiplier.to_mf6_pkg", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.from_imod5_data", "imod.mf6.SingleLayerHorizontalFlowBarrierResistance.to_mf6_pkg", "imod.mf6.Solution", "imod.mf6.SolutionPresetComplex", "imod.mf6.SolutionPresetModerate", "imod.mf6.SolutionPresetSimple", "imod.mf6.SourceSinkMixing", "imod.mf6.SourceSinkMixing.from_flow_model", "imod.mf6.SpecificStorage", "imod.mf6.SpecificStorage.mask", "imod.mf6.SpecificStorage.regrid_like", "imod.mf6.StorageCoefficient", "imod.mf6.StorageCoefficient.from_imod5_data", "imod.mf6.StorageCoefficient.mask", "imod.mf6.StorageCoefficient.regrid_like", "imod.mf6.StructuredDiscretization", "imod.mf6.TimeDiscretization", "imod.mf6.UnsaturatedZoneFlow", "imod.mf6.VerticesDiscretization", "imod.mf6.Well", "imod.mf6.Well.cleanup", "imod.mf6.Well.from_imod5_data", "imod.mf6.Well.mask", "imod.mf6.Well.regrid_like", "imod.mf6.Well.to_mf6_pkg", "imod.mf6.WellDisStructured", "imod.mf6.WellDisVertices", "imod.mf6.open_cbc", "imod.mf6.open_hds", "imod.mf6.read_cbc_headers", "imod.mf6.regrid.ConstantHeadRegridMethod", "imod.mf6.regrid.DiscretizationRegridMethod", "imod.mf6.regrid.DispersionRegridMethod", "imod.mf6.regrid.DrainageRegridMethod", "imod.mf6.regrid.EmptyRegridMethod", "imod.mf6.regrid.EvapotranspirationRegridMethod", "imod.mf6.regrid.GeneralHeadBoundaryRegridMethod", "imod.mf6.regrid.InitialConditionsRegridMethod", "imod.mf6.regrid.MobileStorageTransferRegridMethod", "imod.mf6.regrid.NodePropertyFlowRegridMethod", "imod.mf6.regrid.RechargeRegridMethod", "imod.mf6.regrid.RiverRegridMethod", "imod.mf6.regrid.SpecificStorageRegridMethod", "imod.mf6.regrid.StorageCoefficientRegridMethod", "imod.msw.AnnualCropFactors", "imod.msw.CouplerMapping", "imod.msw.EvapotranspirationMapping", "imod.msw.GridData", "imod.msw.IdfMapping", "imod.msw.Infiltration", "imod.msw.InitialConditionsEquilibrium", "imod.msw.InitialConditionsPercolation", "imod.msw.InitialConditionsRootzonePressureHead", "imod.msw.InitialConditionsSavedState", "imod.msw.LanduseOptions", "imod.msw.MetaSwapModel", "imod.msw.MeteoGrid", "imod.msw.Ponding", "imod.msw.PrecipitationMapping", "imod.msw.ScalingFactors", "imod.msw.Sprinkling", "imod.msw.TimeOutputControl", "imod.msw.VariableOutputControl", "imod.prepare.ALLOCATION_OPTION", "imod.prepare.DISTRIBUTING_OPTION", "imod.prepare.LayerRegridder", "imod.prepare.Regridder", "imod.prepare.Voxelizer", "imod.prepare.allocate_drn_cells", "imod.prepare.allocate_ghb_cells", "imod.prepare.allocate_rch_cells", "imod.prepare.allocate_riv_cells", "imod.prepare.assign_wells", "imod.prepare.c_leakage", "imod.prepare.c_radial", "imod.prepare.celltable", "imod.prepare.cleanup_drn", "imod.prepare.cleanup_ghb", "imod.prepare.cleanup_riv", "imod.prepare.cleanup_wel", "imod.prepare.create_layered_top", "imod.prepare.distribute_drn_conductance", "imod.prepare.distribute_ghb_conductance", "imod.prepare.distribute_riv_conductance", "imod.prepare.fill", "imod.prepare.gdal_rasterize", "imod.prepare.get_lower_active_grid_cells", "imod.prepare.get_lower_active_layer_number", "imod.prepare.get_upper_active_grid_cells", "imod.prepare.get_upper_active_layer_number", "imod.prepare.laplace_interpolate", "imod.prepare.linestring_to_square_zpolygons", "imod.prepare.linestring_to_trapezoid_zpolygons", "imod.prepare.polygonize", "imod.prepare.rasterize", "imod.prepare.rasterize_celltable", "imod.prepare.reproject", "imod.prepare.zonal_aggregate_polygons", "imod.prepare.zonal_aggregate_raster", "imod.select.active_grid_boundary_xy", "imod.select.cross_section_line", "imod.select.cross_section_linestring", "imod.select.grid_boundary_xy", "imod.select.points_in_bounds", "imod.select.points_indices", "imod.select.points_set_values", "imod.select.points_values", "imod.select.upper_active_layer", "imod.util.cd", "imod.util.coord_reference", "imod.util.empty_2d", "imod.util.empty_2d_transient", "imod.util.empty_3d", "imod.util.empty_3d_transient", "imod.util.from_mdal_compliant_ugrid2d", "imod.util.ignore_warnings", "imod.util.mdal_compliant_ugrid2d", "imod.util.print_if_error", "imod.util.spatial_reference", "imod.util.to_datetime", "imod.util.to_ugrid2d", "imod.util.transform", "imod.util.where", "imod.visualize.GridAnimation3D", "imod.visualize.StaticGridAnimation3D", "imod.visualize.cross_section", "imod.visualize.grid_3d", "imod.visualize.imshow_topview", "imod.visualize.line_3d", "imod.visualize.plot_map", "imod.visualize.quiver", "imod.visualize.read_imod_legend", "imod.visualize.streamfunction", "imod.visualize.waterbalance_barchart", "imod.wq.AdvectionFiniteDifference", "imod.wq.AdvectionHybridMOC", "imod.wq.AdvectionMOC", "imod.wq.AdvectionModifiedMOC", "imod.wq.AdvectionTVD", "imod.wq.BasicFlow", "imod.wq.BasicTransport", "imod.wq.ConstantHead", "imod.wq.Dispersion", "imod.wq.Drainage", "imod.wq.EvapotranspirationHighestActive", "imod.wq.EvapotranspirationLayers", "imod.wq.EvapotranspirationTopLayer", "imod.wq.GeneralHeadBoundary", "imod.wq.GeneralizedConjugateGradientSolver", "imod.wq.LayerPropertyFlow", "imod.wq.MassLoading", "imod.wq.OutputControl", "imod.wq.ParallelKrylovFlowSolver", "imod.wq.ParallelKrylovTransportSolver", "imod.wq.PreconditionedConjugateGradientSolver", "imod.wq.RechargeHighestActive", "imod.wq.RechargeLayers", "imod.wq.RechargeTopLayer", "imod.wq.River", "imod.wq.SeawatModel", "imod.wq.SeawatModel.create_time_discretization", "imod.wq.TimeDiscretization", "imod.wq.TimeVaryingConstantConcentration", "imod.wq.VariableDensityFlow", "imod.wq.Well", "API Reference", "Input/output", "Logging", "MetaMod", "MODFLOW6", "MetaSWAP", "Prepare model input", "Select points and cross sections", "Utilities", "Visualize", "iMOD-WQ", "Debugging Continuous Integration", "Contributing Code", "Building documentation and examples", "Developing examples", "Developing", "How to release a new version", "Elder", "Freshwater Lens", "Henry", "Hydrocoin", "Saltwater Pocket", "Vertical Interface", "iMOD-WQ", "Computation times", "Model Creation", "iMODFLOW", "Computation times", "Examples", "MetaSWAP", "Coupled MetaSWAP - Modflow6 model", "Reading existing MetaSWAP input", "Computation times", "Henry", "Circle", "Circle partitioned", "Freshwater lens (circle)", "Different ways to regrid models", "TWRI", "1D Solute Transport Benchmarks", "Example models", "Regional model", "Partitioning a regional model", "MODFLOW6", "Lake package example", "Computation times", "Transport 2d example", "Prepare", "Head point interpolation", "Polygonize raster", "Rasterize shapefiles", "Reproject data", "Computation times", "Flow velocities and streamlines", "Visualization", "Plot maps", "Computation times", "General Questions", "Data In/Out", "How do I \u2026", "Data modification", "Plot a timeseries for a single cell", "Unstructured", "FAQ", "Known Issues", "Groundwater Modeling with iMOD", "Installing Python and packages", "iMOD Python: make massive MODFLOW models", "Installing", "Computation times", "Raster data and xarray", "Vector data and Geopandas", "Time series data and Pandas", "Unstructured Grids", "Lazy evaluation", "Model time discretization", "Regridding", "Topsystem: from 2D map to 3D model", "Data cleanup", "User Guide", "Computation times"], "titleterms": {"0": 0, "01": 0, "02": 0, "03": 0, "04": 0, "05": 0, "06": 0, "07": 0, "08": 0, "09": 0, "1": [0, 371], "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "1d": 359, "2": [0, 371], "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 0, "2024": 0, "21": 0, "22": 0, "23": 0, "25": 0, "26": 0, "29": 0, "2d": [366, 397], "3": [0, 371], "3d": 397, "4": 0, "5": 0, "6": [0, 384], "7": 0, "8": 0, "9": 0, "A": [386, 396], "If": [379, 380], "In": [378, 379], "The": 398, "active_grid_boundary_xi": 254, "ad": [0, 361], "add": 356, "advectioncentr": 74, "advectionfinitediffer": 289, "advectionhybridmoc": 290, "advectionmoc": 291, "advectionmodifiedmoc": 292, "advectiontvd": [75, 293], "advectionupstream": 76, "agon": 386, "alloc": 397, "allocate_drn_cel": 223, "allocate_ghb_cel": 224, "allocate_rch_cel": 225, "allocate_riv_cel": 226, "allocation_opt": 218, "along": [379, 380], "an": [351, 379, 380, 386], "anaconda": 386, "annualcropfactor": 199, "api": 320, "apipackag": 77, "ar": 385, "arithmet": [379, 380], "arrai": [379, 380], "assign": [356, 361], "assign_wel": 227, "attach": 361, "autom": 332, "background": 386, "barrier": 345, "basic": 395, "basicflow": 294, "basictransport": 295, "benchmark": 359, "bit": 386, "bottom": 15, "boundari": [16, 337, 338, 340, 341, 342, 345, 395, 396], "bug": 335, "build": [333, 337, 338, 339, 340, 341, 342, 345], "buoyanc": [78, 356], "c_leakag": 228, "c_radial": 229, "calcul": 373, "calculate_gxg": 3, "cd": 263, "cell": [379, 381, 382, 397], "cellsiz": [371, 379, 380], "celltabl": 230, "central": 345, "chang": [0, 379, 380], "changelog": 0, "chd": 361, "chunk": 394, "circl": [354, 355, 356], "clean": 398, "cleanup": [87, 95, 146, 175, 398], "cleanup_drn": 231, "cleanup_ghb": 232, "cleanup_riv": 233, "cleanup_wel": 234, "clip_box": 125, "code": 332, "coeffici": 385, "comparison": 396, "comput": [344, 347, 352, 365, 372, 376, 389, 394, 400], "conda": 388, "condit": [337, 338, 340, 341, 342, 345, 361, 379, 380, 395, 396], "conduct": [361, 396, 397], "config": [57, 58, 59], "configur": 59, "conflict": 386, "constant": 361, "constantconcentr": 79, "constanthead": [17, 80, 81, 82, 83, 84, 296], "constantheadregridmethod": 185, "continu": 331, "contribut": 332, "control": [332, 361], "convers": 391, "convert": [378, 379], "convert_pointwaterhead_freshwaterhead": 4, "coord_refer": 264, "coordin": [356, 358, 364, 390], "coupl": 350, "coupler": 73, "couplermap": 200, "cr": 390, "creat": [351, 354, 356, 358, 364, 379, 380], "create_layered_top": 235, "create_time_discret": [25, 126, 315], "creation": 345, "cross": 327, "cross_sect": 280, "cross_section_lin": 255, "cross_section_linestr": 256, "dask": [379, 380], "data": [361, 371, 377, 378, 379, 380, 390, 391, 392, 397, 398], "dataarrai": [358, 364, 378, 379], "dataset": [371, 378, 379, 380, 382], "date": 361, "debug": 331, "default": 396, "delai": 394, "deltaforg": 388, "depend": [377, 386, 388], "deprec": 0, "develop": [334, 335, 386, 388], "di": 361, "differ": [357, 377], "dimens": 390, "discret": [324, 337, 338, 339, 340, 342, 345, 361, 395], "discretizationregridmethod": 186, "dispers": [85, 297], "dispersionregridmethod": 187, "distribut": 397, "distribute_drn_conduct": 236, "distribute_ghb_conduct": 237, "distribute_riv_conduct": 238, "distributing_opt": 219, "ditch": 345, "do": 379, "document": 333, "domain": [354, 371, 396], "drain": 18, "drainag": [86, 87, 88, 89, 90, 298, 361], "drainageregridmethod": 188, "drn": 361, "dump": [100, 104, 127], "e": [379, 380], "edg": 361, "elder": 337, "els": [379, 380], "empti": [379, 380], "empty_2d": 265, "empty_2d_transi": 266, "empty_3d": 267, "empty_3d_transi": 268, "emptyregridmethod": 189, "environ": 386, "evalu": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 379, 380, 394], "evapotranspir": [19, 91, 92, 93], "evapotranspirationhighestact": 299, "evapotranspirationlay": 300, "evapotranspirationmap": 201, "evapotranspirationregridmethod": 190, "evapotranspirationtoplay": 301, "exampl": [333, 334, 348, 351, 360, 364, 366, 397], "exist": [351, 398], "experienc": 388, "extent": [379, 380], "extra": 395, "extract": 361, "facebudget": 5, "factor": 385, "faq": 383, "file": [351, 378, 379, 394], "fill": [239, 379, 380, 382], "final": 396, "fix": 0, "flopi": 377, "flow": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 324, 330, 345, 356, 361, 373], "flow_veloc": 6, "forc": [379, 380], "format": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 390], "freshwat": [338, 356], "from": [377, 379, 380, 382, 397], "from_flow_model": 162, "from_imod5_data": [81, 88, 96, 114, 118, 137, 142, 147, 155, 167, 176], "from_imod5_shd_data": 82, "from_mdal_compliant_ugrid2d": 269, "function": 373, "g": [379, 380], "gdal_raster": 240, "gen": [37, 38, 39], "gener": [377, 379, 382, 385], "generalheadboundari": [20, 94, 95, 96, 97, 98, 302], "generalheadboundaryregridmethod": 191, "generalizedconjugategradientsolv": 303, "geopanda": 391, "get": [379, 380], "get_lower_active_grid_cel": 241, "get_lower_active_layer_numb": 242, "get_upper_active_grid_cel": 243, "get_upper_active_layer_numb": 244, "grid": [2, 358, 364, 393], "grid_3d": 281, "grid_boundary_xi": 257, "gridanimation3d": 278, "griddata": 202, "groundwat": 385, "groundwaterflowmodel": [99, 100, 101, 102], "groundwatertransportmodel": [103, 104, 105], "guid": 399, "head": [361, 368, 379, 381, 382], "header": [40, 53], "henri": [339, 353], "histogram": 396, "horizont": 345, "horizontalanisotropi": 21, "horizontalflowbarri": 22, "horizontalflowbarrierhydrauliccharacterist": [106, 107], "horizontalflowbarriermultipli": [108, 109], "horizontalflowbarrierresist": [110, 111], "horizontalhydraulicconduct": 23, "how": [336, 377, 379], "hydraul": 361, "hydrocoin": 340, "hydrogeologi": [340, 345], "i": [377, 379, 394, 396], "ic": 361, "icelltyp": 361, "idf": [40, 41, 42, 43, 44, 378, 379], "idfmap": 203, "ignore_warn": 270, "ilogg": [60, 61], "immobilestoragetransf": 112, "imod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 330, 343, 377, 385, 386, 387, 388], "imodflow": [2, 346], "imodflowmodel": [24, 25], "import": [361, 378, 379], "imshow_topview": 282, "increas": [379, 380], "infiltr": [204, 385], "inform": 361, "init_log_decor": 63, "initi": [337, 338, 340, 341, 342, 345, 361], "initialcondit": [113, 114, 115, 116], "initialconditionsequilibrium": 205, "initialconditionspercol": 206, "initialconditionsregridmethod": 192, "initialconditionsrootzonepressurehead": 207, "initialconditionssavedst": 208, "inp": 351, "input": [321, 326, 351, 390, 391], "instal": [386, 388], "integr": 331, "interfac": 342, "interpol": [361, 368, 379, 380, 382], "interpolate_value_boundari": 7, "intra_cell_boundary_condit": 8, "ipf": [45, 46, 47, 48, 49, 378, 379], "issu": 384, "known": 384, "lake": 364, "landuseopt": 209, "laplace_interpol": 245, "larg": 377, "latest": 388, "layer": [379, 380, 381, 382], "layeredwel": [117, 118, 119, 120, 121], "layerpropertyflow": 304, "layerregridd": 220, "layout": 394, "lazi": 394, "len": [338, 356], "line_3d": 283, "linestring_to_square_zpolygon": 246, "linestring_to_trapezoid_zpolygon": 247, "load": [361, 379, 380], "locat": 392, "log": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 322], "loggertyp": 58, "logging_decor": [62, 63, 64], "loglevel": [65, 66], "logurulogg": [67, 68], "make": [378, 379, 387], "map": [375, 397], "mask": [83, 89, 92, 97, 115, 119, 138, 143, 148, 164, 168, 177], "mask_all_packag": [101, 105], "massiv": 387, "massload": 305, "masssourceload": 122, "mdal_compliant_ugrid2d": 271, "memori": [379, 380, 394], "mesh": [354, 356, 379, 382], "metamod": [73, 323], "metaswap": [26, 325, 349, 350, 351], "metaswapmodel": 210, "meteogrid": 211, "method": [324, 396, 398], "mf6": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "miniconda": 386, "miniforg": 386, "mobilestoragetransf": 123, "mobilestoragetransferregridmethod": 193, "model": [1, 2, 324, 326, 330, 345, 350, 353, 354, 356, 357, 358, 360, 361, 362, 364, 377, 385, 387, 395, 397, 398], "modflow": [384, 387, 394], "modflow6": [324, 350, 363, 385, 397, 398], "modflow6simul": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "modif": [379, 380], "more": 390, "msw": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "multipl": [378, 379], "netcdf": [378, 379, 390], "new": [336, 371, 388, 398], "nodata": [379, 380, 382], "node": 361, "nodepropertyflow": [136, 137, 138, 139], "nodepropertyflowregridmethod": 194, "non": 396, "note": 396, "npf": 361, "nulllogg": [69, 70], "numpi": [379, 380], "object": 324, "obtain": 396, "oc": 361, "one": [379, 381, 382], "onli": 371, "open": [41, 54, 353, 354, 356, 358, 364], "open_cbc": 182, "open_concentr": 128, "open_dataset": 42, "open_flow_budget": 129, "open_hd": 183, "open_head": 130, "open_projectfile_data": 50, "open_subdomain": 43, "open_transport_budget": 131, "option": 397, "other": 390, "out": [378, 379], "outer": 345, "output": [1, 321, 324, 356, 361, 390, 391], "outputcontrol": [140, 306], "over": [379, 380], "overview": 397, "packag": [2, 324, 361, 364, 386, 396, 397], "pain": 386, "panda": 392, "parallelkrylovflowsolv": 307, "parallelkrylovtransportsolv": 308, "paramet": 356, "part": [379, 380], "partit": [355, 362], "period": 345, "pip": 388, "pitfal": 394, "pixi": 388, "plot": [373, 375, 379, 381, 382], "plot_map": 284, "pocket": 341, "point": [327, 361, 368, 371, 379, 380, 382, 392], "points_in_bound": 258, "points_indic": 259, "points_set_valu": 260, "points_valu": 261, "polygon": [248, 369, 379, 380], "pond": 212, "precipitationmap": 213, "preconditionedconjugategradientsolv": [27, 309], "prepar": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 326, 367], "prepare_wel_for_mf6": 102, "print_if_error": 272, "prj": [50, 51, 52], "properti": [361, 379, 380], "python": [377, 386, 387, 388], "pythonlogg": [71, 72], "qgi": [378, 379], "question": 377, "quiver": [285, 373], "quiver_lin": 9, "quiver_linestr": 10, "raster": [249, 369, 370, 371, 379, 380, 390, 391], "rasterio": [53, 54, 55], "rasterize_cellt": 250, "rch": 361, "read": [37, 45, 324, 351], "read_ascii": 38, "read_associ": 46, "read_cbc_head": 184, "read_imod_legend": 286, "read_projectfil": 51, "read_timfil": 52, "readabl": [378, 379], "recharg": [28, 141, 142, 143, 144, 356, 361], "rechargehighestact": 310, "rechargelay": 311, "rechargeregridmethod": 195, "rechargetoplay": 312, "refer": [320, 390], "region": [361, 362], "regrid": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 324, 357, 396], "regrid_lik": [84, 90, 93, 98, 116, 120, 132, 139, 144, 149, 165, 169, 178], "regridd": 221, "releas": 336, "remov": 0, "report": 335, "reproject": [251, 371], "resampl": 371, "resolut": [379, 380], "result": [337, 338, 341, 353, 354, 356, 358, 361, 364], "review": 332, "rise": 345, "riv": 361, "river": [29, 145, 146, 147, 148, 149, 313, 361, 385, 397], "riverregridmethod": 196, "run": [133, 337, 338, 339, 340, 341, 342, 345, 353, 354, 356, 358, 361, 364], "saltwat": 341, "save": [44, 47, 55], "scalingfactor": 214, "seawatmodel": [314, 315], "section": 327, "select": [254, 255, 256, 257, 258, 259, 260, 261, 262, 327, 379, 380, 382], "seri": 392, "set": [324, 330, 361, 386, 395], "shapefil": 370, "simul": [356, 361, 398], "singl": [378, 379, 380, 381, 382], "singlelayerhorizontalflowbarrierhydrauliccharacterist": [150, 151], "singlelayerhorizontalflowbarriermultipli": [152, 153], "singlelayerhorizontalflowbarrierresist": [154, 155, 156], "size": 394, "slice": 354, "smooth": [379, 380], "solut": [157, 359], "solutionpresetcomplex": 158, "solutionpresetmoder": 159, "solutionpresetsimpl": 160, "solver": [2, 361], "sourcesinkmix": [161, 162], "spatial_refer": 273, "specif": [371, 385], "specifi": 395, "specificstorag": [30, 163, 164, 165], "specificstorageregridmethod": 197, "split": 134, "sprinkl": 215, "stability_constraint_advect": 11, "stability_constraint_wel": 12, "standard_log_decor": 64, "start": 361, "startinghead": 31, "state": 361, "staticgridanimation3d": 279, "statist": [379, 380], "steadi": 361, "sto": 361, "stor": 385, "storag": [361, 385], "storagecoeffici": [32, 166, 167, 168, 169], "storagecoefficientregridmethod": 198, "streamfunct": 287, "streamfunction_lin": 13, "streamfunction_linestr": 14, "streamlin": 373, "structur": [377, 378, 379], "structureddiscret": 170, "style": 332, "sum": [379, 380], "summari": [379, 380], "support": 377, "system": 390, "test": 332, "time": [344, 347, 352, 361, 365, 372, 376, 379, 380, 381, 382, 389, 392, 395, 400], "timediscret": [171, 316], "timeoutputcontrol": 216, "timeseri": [379, 381, 382, 392], "timevaryingconstantconcentr": 317, "to_datetim": 274, "to_mf6_pkg": [107, 109, 111, 121, 151, 153, 156, 179], "to_ugrid2d": 275, "top": 33, "topsystem": 397, "transform": 276, "transient": 361, "transport": [324, 330, 356, 359, 366, 396], "two": 390, "twri": 358, "ugrid": [378, 379], "ugriddataarrai": 354, "unsaturatedzoneflow": 172, "unstructur": [379, 382, 393], "unsupport": 396, "up": 386, "updat": 398, "upper_active_lay": 262, "us": [385, 396], "user": 399, "util": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 328], "valu": [379, 380], "variabl": [378, 379, 380], "variabledensityflow": 318, "variableoutputcontrol": 217, "vector": [371, 379, 380, 382, 391], "veloc": 373, "version": [332, 336, 384, 386, 388], "vertic": 342, "verticalanisotropi": 34, "verticalhydraulicconduct": 35, "verticesdiscret": 173, "visual": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 329, 353, 354, 356, 358, 361, 364, 374], "visualis": [337, 338, 341], "voxel": 222, "wai": [357, 388], "waterbalance_barchart": 288, "well": [36, 174, 175, 176, 177, 178, 179, 319, 345], "welldisstructur": 180, "welldisvertic": 181, "what": 385, "where": 277, "which": 388, "without": [386, 398], "wq": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 330, 343], "write": [39, 48, 135, 354, 358, 398], "write_assoc": 49, "x": 390, "xarrai": 390, "y": 390, "yield": 385, "zonal": [379, 380], "zonal_aggregate_polygon": 252, "zonal_aggregate_rast": 253}})