<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="6" tests="1483" time="1048.396" timestamp="2024-04-11T15:59:05.058537" hostname="L03154"><properties><property name="hypothesis-statistics-imod/tests/test_msw/test_grid_data.py::test_write" value="aW1vZC90ZXN0cy90ZXN0X21zdy90ZXN0X2dyaWRfZGF0YS5weTo6dGVzdF93cml0ZToKCiAgLSBkdXJpbmcgcmV1c2UgcGhhc2UgKDAuMDMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IH4gMjZtcywgb2Ygd2hpY2ggfiAybXMgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDEgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDIuNjIgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IH4gMTktMzIgbXMsIG9mIHdoaWNoIH4gMS0zIG1zIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSA5OSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MTAw" /><property name="hypothesis-statistics-imod/tests/test_msw/test_infiltration.py::test_write" value="aW1vZC90ZXN0cy90ZXN0X21zdy90ZXN0X2luZmlsdHJhdGlvbi5weTo6dGVzdF93cml0ZToKCiAgLSBkdXJpbmcgcmV1c2UgcGhhc2UgKDAuMDMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IH4gMzBtcywgb2Ygd2hpY2ggfiA1bXMgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDEgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNDEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IH4gOS0yMSBtcywgb2Ygd2hpY2ggfiAwLTMgbXMgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDk5IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0xMDA=" /></properties><testcase classname="imod.tests.test_assign_wells" name="test_vectorized_overlap" time="0.003" /><testcase classname="imod.tests.test_assign_wells" name="test_compute_overlap" time="0.002" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_locate_wells__no_kh[all_in_domain]" time="0.022" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_locate_wells[all_in_domain]" time="0.012" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_locate_wells_errors[all_in_domain]" time="0.020" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_assign_wells_errors[all_in_domain]" time="0.006" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_assign_wells__no_kh[all_in_domain]" time="0.033" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_assign_wells[all_in_domain]" time="0.023" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_assign_wells_minimum_thickness[all_in_domain]" time="0.022" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_assign_wells_transient_rate[all_in_domain]" time="0.054" /><testcase classname="imod.tests.test_assign_wells.TestAssignWell" name="test_assign_wells_out_of_domain[mix_wells]" time="0.010" /><testcase classname="imod.tests.test_benchmark" name="test_setup_basic_flopy" time="2.564" /><testcase classname="imod.tests.test_benchmark" name="test_setup_basic_imod" time="1.032" /><testcase classname="imod.tests.test_benchmark" name="test_write_basic_flopy" time="2.072" /><testcase classname="imod.tests.test_benchmark" name="test_write_basic_imod_binary" time="0.891" /><testcase classname="imod.tests.test_benchmark" name="test_write_basic_imod_text" time="1.078" /><testcase classname="imod.tests.test_code_checks" name="test_check_modules" time="0.344" /><testcase classname="imod.tests.test_common" name="test_starts" time="0.001" /><testcase classname="imod.tests.test_common" name="test_weights" time="0.002" /><testcase classname="imod.tests.test_common" name="test_relative_weights" time="0.001" /><testcase classname="imod.tests.test_common" name="test_area_weighted_methods" time="0.001" /><testcase classname="imod.tests.test_common" name="test_methods" time="0.002" /><testcase classname="imod.tests.test_common" name="test_methods_zeros" time="0.001" /><testcase classname="imod.tests.test_common" name="test_overlap" time="0.001" /><testcase classname="imod.tests.test_common" name="test_reshape" time="0.001" /><testcase classname="imod.tests.test_common" name="test_is_subset" time="0.001" /><testcase classname="imod.tests.test_common" name="test_selection_indices" time="0.001" /><testcase classname="imod.tests.test_common" name="test_slice_src" time="0.005" /><testcase classname="imod.tests.test_common" name="test_define_single_dim_slices" time="0.001" /><testcase classname="imod.tests.test_common" name="test_sel_chunks" time="0.031" /><testcase classname="imod.tests.test_data" name="test_twri_output" time="0.011" /><testcase classname="imod.tests.test_data" name="test_hondsrug_data" time="0.269" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_1d" time="0.010" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_1d__reversed" time="0.007" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_1d__beyond_egdes" time="0.006" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_2d[1]" time="1.075" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_2d[2]" time="0.032" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_2d__reversed_y[1]" time="0.042" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_2d__reversed_y[2]" time="0.033" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_1d__nan_withstartingedge[1]" time="0.019" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_1d__nan_withstartingedge[2]" time="0.019" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_1d__nan_withendingedge[1]" time="0.029" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_1d__nan_withendingedge[2]" time="0.024" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_2d__over_z[1]" time="0.068" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_2d__over_z[2]" time="0.040" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_3d__over_xyz[1]" time="0.080" /><testcase classname="imod.tests.test_interpolate" name="test_interpolate_3d__over_xyz[2]" time="0.044" /><testcase classname="imod.tests.test_layer" name="test_get_lower_active_grid[all_active_structured]" time="0.011" /><testcase classname="imod.tests.test_layer" name="test_get_lower_active_grid[all_active_unstructured]" time="0.010" /><testcase classname="imod.tests.test_layer" name="test_get_lower_active_grid[structured]" time="0.012" /><testcase classname="imod.tests.test_layer" name="test_get_lower_active_grid[unstructured]" time="0.013" /><testcase classname="imod.tests.test_layer" name="test_get_upper_active_grid[all_active_structured]" time="0.009" /><testcase classname="imod.tests.test_layer" name="test_get_upper_active_grid[all_active_unstructured]" time="0.010" /><testcase classname="imod.tests.test_layer" name="test_get_upper_active_grid[structured]" time="0.011" /><testcase classname="imod.tests.test_layer" name="test_get_upper_active_grid[unstructured]" time="0.013" /><testcase classname="imod.tests.test_layer" name="test_get_lower_layer_number[all_active_structured]" time="0.007" /><testcase classname="imod.tests.test_layer" name="test_get_lower_layer_number[all_active_unstructured]" time="0.009" /><testcase classname="imod.tests.test_layer" name="test_get_lower_layer_number[structured]" time="0.010" /><testcase classname="imod.tests.test_layer" name="test_get_lower_layer_number[unstructured]" time="0.012" /><testcase classname="imod.tests.test_layer" name="test_get_upper_layer_number[all_active_structured]" time="0.007" /><testcase classname="imod.tests.test_layer" name="test_get_upper_layer_number[all_active_unstructured]" time="0.009" /><testcase classname="imod.tests.test_layer" name="test_get_upper_layer_number[structured]" time="0.010" /><testcase classname="imod.tests.test_layer" name="test_get_upper_layer_number[unstructured]" time="0.013" /><testcase classname="imod.tests.test_layerregrid" name="test_layerregridder__mean_1" time="0.007" /><testcase classname="imod.tests.test_layerregrid" name="test_layerregridder__mean_2" time="0.006" /><testcase classname="imod.tests.test_layerregrid" name="test_layerregridder_dst_larger_src" time="0.006" /><testcase classname="imod.tests.test_layerregrid" name="test_layerregridder__mode" time="0.005" /><testcase classname="imod.tests.test_layerregrid" name="test_layerregridder_topbot_nan" time="0.008" /><testcase classname="imod.tests.test_regrid" name="test_make_regrid" time="0.001" /><testcase classname="imod.tests.test_regrid" name="test_regrid_1d" time="0.002" /><testcase classname="imod.tests.test_regrid" name="test_iter_regrid__1d" time="0.002" /><testcase classname="imod.tests.test_regrid" name="test_nd_regrid__1d" time="0.001" /><testcase classname="imod.tests.test_regrid" name="test_nd_regrid__2d__first" time="0.001" /><testcase classname="imod.tests.test_regrid" name="test_nd_regrid__2d__mean" time="0.001" /><testcase classname="imod.tests.test_regrid" name="test_nd_regrid__3d__first" time="0.001" /><testcase classname="imod.tests.test_regrid" name="test_nd_regrid__4d3d__first" time="0.002" /><testcase classname="imod.tests.test_regrid" name="test_regrid_coord" time="0.003" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean1d" time="0.006" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean1d__dx_negative" time="0.007" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean1d__with_time" time="0.010" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean1d__opposite_dx[1]" time="0.037" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean1d__opposite_dx[2]" time="0.035" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean1d__opposite_dx[3]" time="0.026" /><testcase classname="imod.tests.test_regrid" name="test_regrid__coordinate_errors" time="0.004" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean2d[1]" time="0.083" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean2d[2]" time="0.043" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean2d[3]" time="0.044" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean2d_over3darray[1]" time="0.070" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean2d_over3darray[2]" time="0.034" /><testcase classname="imod.tests.test_regrid" name="test_regrid_mean2d_over3darray[3]" time="0.033" /><testcase classname="imod.tests.test_regrid" name="test_regrid_conductance2d" time="0.042" /><testcase classname="imod.tests.test_regrid" name="test_regrid_errors" time="0.014" /><testcase classname="imod.tests.test_regrid" name="test_str_method" time="0.015" /><testcase classname="imod.tests.test_regrid" name="test_no_overlap" time="0.007" /><testcase classname="imod.tests.test_reproject" name="test_basic_resample__nearest" time="0.252" /><testcase classname="imod.tests.test_reproject" name="test_basic_resample__bilinear" time="0.027" /><testcase classname="imod.tests.test_reproject" name="test_basic_reproject" time="0.078" /><testcase classname="imod.tests.test_reproject" name="test_reproject__use_src_attrs" time="0.049" /><testcase classname="imod.tests.test_reproject" name="test_reproject_resample" time="0.024" /><testcase classname="imod.tests.test_reproject" name="test_reproject_rotation__via_kwargs" time="0.073" /><testcase classname="imod.tests.test_reproject" name="test_reproject_rotation__use_src_attrs" time="0.047" /><testcase classname="imod.tests.test_spatial" name="test_round_extent" time="0.001" /><testcase classname="imod.tests.test_spatial" name="test_fill" time="0.015" /><testcase classname="imod.tests.test_spatial" name="test_laplace_interpolate" time="0.008" /><testcase classname="imod.tests.test_spatial" name="test_rasterize" time="0.016" /><testcase classname="imod.tests.test_spatial" name="test_polygonize" time="0.006" /><testcase classname="imod.tests.test_spatial" name="test_handle_dtype" time="0.001" /><testcase classname="imod.tests.test_spatial" name="test_gdal_rasterize" time="0.430" /><testcase classname="imod.tests.test_spatial" name="test_private_celltable" time="0.009" /><testcase classname="imod.tests.test_spatial" name="test_celltable" time="0.011" /><testcase classname="imod.tests.test_spatial" name="test_rasterize_table" time="0.004" /><testcase classname="imod.tests.test_spatial" name="test_zonal_aggregate_raster" time="0.066" /><testcase classname="imod.tests.test_spatial" name="test_zonal_aggregate_polygons" time="0.057" /><testcase classname="imod.tests.test_voxelize" name="test_voxelize__mean_1" time="0.008" /><testcase classname="imod.tests.test_voxelize" name="test_voxelize__mean_2" time="0.006" /><testcase classname="imod.tests.test_voxelize" name="test_voxelize__max_overlap_1" time="0.006" /><testcase classname="imod.tests.test_voxelize" name="test_voxelize__max_overlap_2" time="0.006" /><testcase classname="imod.tests.test_couplers.test_metamod" name="test_metamod_init" time="0.001" /><testcase classname="imod.tests.test_evaluate.test_boundaries" name="test_interpolate_value_boundaries_layers" time="0.012" /><testcase classname="imod.tests.test_evaluate.test_boundaries" name="test_interpolate_value_boundaries_layers_dz1d" time="0.012" /><testcase classname="imod.tests.test_evaluate.test_boundaries" name="test_interpolate_value_boundaries2" time="0.011" /><testcase classname="imod.tests.test_evaluate.test_boundaries" name="test_interpolate_value_boundaries_nan" time="0.012" /><testcase classname="imod.tests.test_evaluate.test_boundaries" name="test_interpolate_value_boundaries_voxels" time="0.011" /><testcase classname="imod.tests.test_evaluate.test_boundaries" name="test_interpolate_value_boundaries_scalardz" time="0.011" /><testcase classname="imod.tests.test_evaluate.test_boundaries" name="test_interpolate_value_boundaries_samevalues" time="0.017" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_flowlower_up" time="0.037" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_flowlower_down" time="0.041" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_lower_netzero" time="0.015" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_lower_right" time="0.016" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_flow_right_lower_netzero" time="0.016" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_flow_right_lower" time="0.060" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_flow_right_lower__aniflow" time="0.037" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_transient_flow" time="0.023" /><testcase classname="imod.tests.test_evaluate.test_budget" name="test_flowlower_up_big_budgetzonenr" time="0.037" /><testcase classname="imod.tests.test_evaluate.test_constraints" name="test_stability_constraint_wel" time="0.018" /><testcase classname="imod.tests.test_evaluate.test_constraints" name="test_stability_constraint_advection" time="0.041" /><testcase classname="imod.tests.test_evaluate.test_constraints" name="test_intra_cell_boundary_conditions" time="0.118" /><testcase classname="imod.tests.test_evaluate.test_constraints" name="test_intra_cell_boundary_conditions_thickness_zero" time="0.008" /><testcase classname="imod.tests.test_evaluate.test_cross_sections" name="test_streamfunction" time="0.079" /><testcase classname="imod.tests.test_evaluate.test_cross_sections" name="test_quiver" time="0.095" /><testcase classname="imod.tests.test_evaluate.test_head" name="test_convert_pointwaterhead_freshwaterhead_scalar" time="0.001" /><testcase classname="imod.tests.test_evaluate.test_head" name="test_convert_pointwaterhead_freshwaterhead_da" time="0.010" /><testcase classname="imod.tests.test_evaluate.test_head" name="test_calculate_gxg" time="0.040" /><testcase classname="imod.tests.test_evaluate.test_head" name="test_calculate_gxg_nan" time="0.032" /><testcase classname="imod.tests.test_evaluate.test_head" name="test_calculate_gxg_points" time="0.065" /><testcase classname="imod.tests.test_flow.test_flow_ani" name="test_anisotropy" time="0.004" /><testcase classname="imod.tests.test_flow.test_flow_bas" name="test_boundary" time="0.005" /><testcase classname="imod.tests.test_flow.test_flow_bas" name="test_top" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_bas" name="test_bot" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_bas" name="test_starting_head" time="0.003" /><testcase classname="imod.tests.test_flow.test_flow_cap" name="test_metaswap_render" time="0.026" /><testcase classname="imod.tests.test_flow.test_flow_cap" name="test_metaswap_pkgcheck" time="0.018" /><testcase classname="imod.tests.test_flow.test_flow_cap" name="test_metaswap_pkgcheck_fail" time="0.019" /><testcase classname="imod.tests.test_flow.test_flow_cap" name="test_check_extra_files_no_files" time="0.018" /><testcase classname="imod.tests.test_flow.test_flow_cap" name="test_check_extra_files_missing_files" time="0.018" /><testcase classname="imod.tests.test_flow.test_flow_chd" name="test_constant_head" time="0.010" /><testcase classname="imod.tests.test_flow.test_flow_chd" name="test_periodic_constant_head" time="0.005" /><testcase classname="imod.tests.test_flow.test_flow_chd" name="test_steady_state_constant_head" time="0.004" /><testcase classname="imod.tests.test_flow.test_flow_conductivity" name="test_horizontal_conductivity" time="0.003" /><testcase classname="imod.tests.test_flow.test_flow_conductivity" name="test_vertical_conductivity" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_conductivity" name="test_vertical_anisotropy" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_conductivity" name="test_transmissivity" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_conductivity" name="test_vertical_resistance" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_dis" name="test_create_time_discretization" time="0.006" /><testcase classname="imod.tests.test_flow.test_flow_dis" name="test_create_time_discretization_cftime" time="0.007" /><testcase classname="imod.tests.test_flow.test_flow_drn" name="test_drain_transient" time="0.010" /><testcase classname="imod.tests.test_flow.test_flow_drn" name="test_drain_transient_scalar" time="0.009" /><testcase classname="imod.tests.test_flow.test_flow_drn" name="test_drain_transient_scalar_paths" time="0.010" /><testcase classname="imod.tests.test_flow.test_flow_evt" name="test_evapotranspiration_no_time" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_ghb" name="test_general_head" time="0.009" /><testcase classname="imod.tests.test_flow.test_flow_hfb" name="test_horizontal_flow_barrier_render" time="0.008" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_compose_all_packages" time="0.035" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_write_model" time="0.079" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_write_model_no_oc" time="0.027" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_write_model_metaswap" time="0.114" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_write_model_horizontal_flow_barrier" time="0.094" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_compose_periods" time="0.005" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_render_periods" time="0.003" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_write_model_periodic" time="0.077" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_convert_to_runfile" time="0.076" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_convert_to_mf2005" time="0.076" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_convert_to_mf6" time="0.075" /><testcase classname="imod.tests.test_flow.test_flow_model" name="test_wrong_convert_setting" time="0.004" /><testcase classname="imod.tests.test_flow.test_flow_oc" name="test_compose_oc_configuration_no_layers" time="0.003" /><testcase classname="imod.tests.test_flow.test_flow_oc" name="test_compose_oc_configuration_all_layers" time="0.003" /><testcase classname="imod.tests.test_flow.test_flow_oc" name="test_compose_oc_configuration_layers" time="0.006" /><testcase classname="imod.tests.test_flow.test_flow_pkggroups" name="test_group_rendered_no_time" time="0.008" /><testcase classname="imod.tests.test_flow.test_flow_pkggroups" name="test_group_rendered_mixed_time_no_time" time="0.012" /><testcase classname="imod.tests.test_flow.test_flow_pkggroups" name="test_group_rendered" time="0.009" /><testcase classname="imod.tests.test_flow.test_flow_pkggroups" name="test_group_synchronize_times_rendered" time="0.006" /><testcase classname="imod.tests.test_flow.test_flow_pkggroups" name="test_two_wels" time="0.014" /><testcase classname="imod.tests.test_flow.test_flow_rch" name="test_recharge_no_time" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_riv" name="test_river" time="0.013" /><testcase classname="imod.tests.test_flow.test_flow_sto" name="test_storage_coefficient" time="0.003" /><testcase classname="imod.tests.test_flow.test_flow_sto" name="test_specific_storage" time="0.002" /><testcase classname="imod.tests.test_flow.test_flow_timeutil" name="test_insert_unique_package_times" time="0.010" /><testcase classname="imod.tests.test_flow.test_flow_timeutil" name="test_insert_unique_package_times_overlap" time="0.004" /><testcase classname="imod.tests.test_flow.test_flow_timeutil" name="test_insert_unique_package_times_manual_insert" time="0.004" /><testcase classname="imod.tests.test_flow.test_flow_wel" name="test_wel" time="0.009" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_to_nan" time="0.001" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_check_cellsizes" time="0.001" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_has_dim" time="0.001" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__dims_error[float32-kind0]" time="0.004" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__dims_error[float32-kind1]" time="0.003" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__steady[float32-kind0]" time="0.041" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__steady[float32-kind1]" time="0.031" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen[float32-kind0]" time="0.030" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen[float32-kind1]" time="0.022" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__paths[float32-kind0]" time="0.035" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__paths[float32-kind1]" time="0.024" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_lazy[float32]" time="0.007" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__dims_error[float64-kind0]" time="0.003" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__dims_error[float64-kind1]" time="0.003" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__steady[float64-kind0]" time="0.040" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__steady[float64-kind1]" time="0.033" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen[float64-kind0]" time="0.031" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen[float64-kind1]" time="0.024" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__paths[float64-kind0]" time="0.033" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__paths[float64-kind1]" time="0.023" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_lazy[float64]" time="0.007" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__descending_layer[kind0]" time="0.061" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__descending_layer[kind1]" time="0.037" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__int32coords[float32-kind0]" time="0.009" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__int32coords[float32-kind1]" time="0.007" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__int32coords[float64-kind0]" time="0.009" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_save__int32coords[float64-kind1]" time="0.007" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__nptime[float32-kind0]" time="0.107" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__nptime[float32-kind1]" time="0.060" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoord[float32-kind0]" time="0.021" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoord[float32-kind1]" time="0.017" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoordsteady[float32-kind0]" time="0.021" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoordsteady[float32-kind1]" time="0.017" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_withinbounds[float32-kind0]" time="0.062" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_withinbounds[float32-kind1]" time="0.034" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__nptime[float64-kind0]" time="0.105" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__nptime[float64-kind1]" time="0.064" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoord[float64-kind0]" time="0.021" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoord[float64-kind1]" time="0.017" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoordsteady[float64-kind0]" time="0.021" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__timecoordsteady[float64-kind1]" time="0.017" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_withinbounds[float64-kind0]" time="0.064" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_withinbounds[float64-kind1]" time="0.040" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_outofbounds[float32-kind0]" time="0.096" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_outofbounds[float32-kind1]" time="0.056" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_nodim[float32-kind0]" time="0.016" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_nodim[float32-kind1]" time="0.011" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_outofbounds[float64-kind0]" time="0.099" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_outofbounds[float64-kind1]" time="0.059" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_nodim[float64-kind0]" time="0.017" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen__cftime_nodim[float64-kind1]" time="0.012" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen_sorting_headers_paths[kind0]" time="0.134" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen_sorting_headers_paths[kind1]" time="0.063" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen_timelayer[kind0]" time="0.153" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen_timelayer[kind1]" time="0.082" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen_timelayer_chunks[kind0]" time="0.206" /><testcase classname="imod.tests.test_formats.test_array_io" name="test_saveopen_timelayer_chunks[kind1]" time="0.139" /><testcase classname="imod.tests.test_formats.test_disv_conversion" name="test_convert_to_disv[create_quadgrid]" time="0.338"><failure message="KeyError: &quot;'factor'. Errored while opening/reading data entries for: (chd)&quot;">path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_convert_to_disv_create_qu0/imodflow/imodflow.prj')

    def open_projectfile_data(path: FilePath) -&gt; Dict[str, Any]:
        """
        Read the contents of an iMOD project file and read/open the data present in
        it:
    
        * IDF data is lazily loaded into xarray.DataArrays.
        * GEN data is eagerly loaded into geopandas.GeoDataFrames
        * IPF data is eagerly loaded into pandas.DataFrames
        * Non-file based entries (such as the PCG settings) are kept as a dictionary.
    
        When multiple systems are present, they are numbered starting from one, e.g.:
    
        * drn-1
        * drn-2
    
        Xarray requires valid dates for the time coordinate. Aliases such as
        "summer" and "winter" that are associated with dates in the project file
        Periods block cannot be used in the time coordinate. Hence, this function
        will instead insert the dates associated with the aliases, with the year
        replaced by 1899; as the iMOD calendar starts at 1900, this ensures that
        the repeats are always first and that no date collisions will occur.
    
        Parameters
        ----------
        path: pathlib.Path or str.
    
        Returns
        -------
        data: Dict[str, Any]
        Keys are the iMOD project file "topics", without parentheses.
        """
        content = read_projectfile(path)
        periods_block = content.pop("periods", None)
        if periods_block is None:
            periods = {}
        else:
            # Set the year of a repeat date to 1899: this ensures it falls outside
            # of the iMOD calendar. Collisions are then always avoided.
            periods = {
                key: _process_time(time, yearfirst=False).replace(year=1899)
                for key, time in periods_block.items()
            }
    
        # Pop species block, at the moment we do not do much with,
        # since most regional models are without solute transport
        content.pop("species", None)
    
        has_topbot = "(top)" in content and "(bot)" in content
        prj_data = {}
        repeat_stress = {}
        for key, block_content in content.items():
            repeats = None
            try:
                if key == "(hfb)":
                    data = _read_package_gen(block_content, has_topbot)
                elif key == "(wel)":
                    data, repeats = _read_package_ipf(block_content, periods)
                elif key == "(cap)":
                    variables = set(METASWAP_VARS).intersection(block_content.keys())
                    data = _open_package_idf(block_content, variables)
                elif key in ("extra", "(pcg)"):
                    data = [block_content]
                elif key in KEYS:
                    variables = KEYS[key]
                    data = _open_package_idf(block_content, variables)
                elif key in DATE_KEYS:
                    variables = DATE_KEYS[key]
&gt;                   data, repeats = _open_boundary_condition_idf(
                        block_content, variables, periods
                    )

..\formats\prj\prj.py:939: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\formats\prj\prj.py:719: in _open_boundary_condition_idf
    das[i][variable] = _create_dataarray(paths, headers, values)
..\formats\prj\prj.py:559: in _create_dataarray
    da = apply_factor_and_addition(headers, da)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

headers = [{'dims': ('time', 'layer'), 'directory': Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_...ytest-of-slooten/pytest-438/test_convert_to_disv_create_qu0/imodflow/chd'), 'dtype': 'float32', 'dx': 100.0, ...}, ...]
da = &lt;xarray.DataArray 'head' (time: 11, layer: 1, y: 9, x: 9)&gt; Size: 4kB
dask.array&lt;stack, shape=(11, 1, 9, 9), dtype=floa...4 8B -100.0
  * time     (time) datetime64[ns] 88B 2018-01-01 2018-02-01 ... 2018-11-01
  * layer    (layer) int32 4B 1

    def apply_factor_and_addition(headers, da):
        nlayers = len(da.coords["layer"])
        for ilayer in range(nlayers):
&gt;           factor = headers[ilayer]["factor"]
E           KeyError: 'factor'

..\formats\prj\prj.py:566: KeyError

During handling of the above exception, another exception occurred:

imodflow_model = {'pcg': &lt;imod.flow.slv.PreconditionedConjugateGradientSolver object at 0x0000014FC6A15710&gt;, 'bnd': &lt;imod.flow.bas.Boun... object at 0x0000014FC7AF7750&gt;, 'time_discretization': &lt;imod.flow.dis.TimeDiscretization object at 0x0000014FC8646310&gt;}
tmp_path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_convert_to_disv_create_qu0')
create_grid = &lt;function create_quadgrid at 0x0000014FC2B7E020&gt;

    @pytest.mark.skipif(xu_version_to_skip, reason="xugrid == 0.5.0 | xugrid &lt; 0.4.0")
    @pytest.mark.usefixtures("imodflow_model")
    @pytest.mark.parametrize("create_grid", [create_quadgrid, create_trigrid])
    def test_convert_to_disv(imodflow_model, tmp_path, create_grid):
        imodflow_model.write(tmp_path / "imodflow")
    
&gt;       data, repeats = imod.prj.open_projectfile_data(tmp_path / "imodflow/imodflow.prj")

test_formats\test_disv_conversion.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_convert_to_disv_create_qu0/imodflow/imodflow.prj')

    def open_projectfile_data(path: FilePath) -&gt; Dict[str, Any]:
        """
        Read the contents of an iMOD project file and read/open the data present in
        it:
    
        * IDF data is lazily loaded into xarray.DataArrays.
        * GEN data is eagerly loaded into geopandas.GeoDataFrames
        * IPF data is eagerly loaded into pandas.DataFrames
        * Non-file based entries (such as the PCG settings) are kept as a dictionary.
    
        When multiple systems are present, they are numbered starting from one, e.g.:
    
        * drn-1
        * drn-2
    
        Xarray requires valid dates for the time coordinate. Aliases such as
        "summer" and "winter" that are associated with dates in the project file
        Periods block cannot be used in the time coordinate. Hence, this function
        will instead insert the dates associated with the aliases, with the year
        replaced by 1899; as the iMOD calendar starts at 1900, this ensures that
        the repeats are always first and that no date collisions will occur.
    
        Parameters
        ----------
        path: pathlib.Path or str.
    
        Returns
        -------
        data: Dict[str, Any]
        Keys are the iMOD project file "topics", without parentheses.
        """
        content = read_projectfile(path)
        periods_block = content.pop("periods", None)
        if periods_block is None:
            periods = {}
        else:
            # Set the year of a repeat date to 1899: this ensures it falls outside
            # of the iMOD calendar. Collisions are then always avoided.
            periods = {
                key: _process_time(time, yearfirst=False).replace(year=1899)
                for key, time in periods_block.items()
            }
    
        # Pop species block, at the moment we do not do much with,
        # since most regional models are without solute transport
        content.pop("species", None)
    
        has_topbot = "(top)" in content and "(bot)" in content
        prj_data = {}
        repeat_stress = {}
        for key, block_content in content.items():
            repeats = None
            try:
                if key == "(hfb)":
                    data = _read_package_gen(block_content, has_topbot)
                elif key == "(wel)":
                    data, repeats = _read_package_ipf(block_content, periods)
                elif key == "(cap)":
                    variables = set(METASWAP_VARS).intersection(block_content.keys())
                    data = _open_package_idf(block_content, variables)
                elif key in ("extra", "(pcg)"):
                    data = [block_content]
                elif key in KEYS:
                    variables = KEYS[key]
                    data = _open_package_idf(block_content, variables)
                elif key in DATE_KEYS:
                    variables = DATE_KEYS[key]
                    data, repeats = _open_boundary_condition_idf(
                        block_content, variables, periods
                    )
                else:
                    raise KeyError(f"Unsupported key: '{key}'")
            except Exception as e:
&gt;               raise type(e)(f"{e}. Errored while opening/reading data entries for: {key}")
E               KeyError: "'factor'. Errored while opening/reading data entries for: (chd)"

..\formats\prj\prj.py:945: KeyError</failure></testcase><testcase classname="imod.tests.test_formats.test_disv_conversion" name="test_convert_to_disv[create_trigrid]" time="0.306"><failure message="KeyError: &quot;'factor'. Errored while opening/reading data entries for: (chd)&quot;">path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_convert_to_disv_create_tr0/imodflow/imodflow.prj')

    def open_projectfile_data(path: FilePath) -&gt; Dict[str, Any]:
        """
        Read the contents of an iMOD project file and read/open the data present in
        it:
    
        * IDF data is lazily loaded into xarray.DataArrays.
        * GEN data is eagerly loaded into geopandas.GeoDataFrames
        * IPF data is eagerly loaded into pandas.DataFrames
        * Non-file based entries (such as the PCG settings) are kept as a dictionary.
    
        When multiple systems are present, they are numbered starting from one, e.g.:
    
        * drn-1
        * drn-2
    
        Xarray requires valid dates for the time coordinate. Aliases such as
        "summer" and "winter" that are associated with dates in the project file
        Periods block cannot be used in the time coordinate. Hence, this function
        will instead insert the dates associated with the aliases, with the year
        replaced by 1899; as the iMOD calendar starts at 1900, this ensures that
        the repeats are always first and that no date collisions will occur.
    
        Parameters
        ----------
        path: pathlib.Path or str.
    
        Returns
        -------
        data: Dict[str, Any]
        Keys are the iMOD project file "topics", without parentheses.
        """
        content = read_projectfile(path)
        periods_block = content.pop("periods", None)
        if periods_block is None:
            periods = {}
        else:
            # Set the year of a repeat date to 1899: this ensures it falls outside
            # of the iMOD calendar. Collisions are then always avoided.
            periods = {
                key: _process_time(time, yearfirst=False).replace(year=1899)
                for key, time in periods_block.items()
            }
    
        # Pop species block, at the moment we do not do much with,
        # since most regional models are without solute transport
        content.pop("species", None)
    
        has_topbot = "(top)" in content and "(bot)" in content
        prj_data = {}
        repeat_stress = {}
        for key, block_content in content.items():
            repeats = None
            try:
                if key == "(hfb)":
                    data = _read_package_gen(block_content, has_topbot)
                elif key == "(wel)":
                    data, repeats = _read_package_ipf(block_content, periods)
                elif key == "(cap)":
                    variables = set(METASWAP_VARS).intersection(block_content.keys())
                    data = _open_package_idf(block_content, variables)
                elif key in ("extra", "(pcg)"):
                    data = [block_content]
                elif key in KEYS:
                    variables = KEYS[key]
                    data = _open_package_idf(block_content, variables)
                elif key in DATE_KEYS:
                    variables = DATE_KEYS[key]
&gt;                   data, repeats = _open_boundary_condition_idf(
                        block_content, variables, periods
                    )

..\formats\prj\prj.py:939: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\formats\prj\prj.py:719: in _open_boundary_condition_idf
    das[i][variable] = _create_dataarray(paths, headers, values)
..\formats\prj\prj.py:559: in _create_dataarray
    da = apply_factor_and_addition(headers, da)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

headers = [{'dims': ('time', 'layer'), 'directory': Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_...ytest-of-slooten/pytest-438/test_convert_to_disv_create_tr0/imodflow/chd'), 'dtype': 'float32', 'dx': 100.0, ...}, ...]
da = &lt;xarray.DataArray 'head' (time: 11, layer: 1, y: 9, x: 9)&gt; Size: 4kB
dask.array&lt;stack, shape=(11, 1, 9, 9), dtype=floa...4 8B -100.0
  * time     (time) datetime64[ns] 88B 2018-01-01 2018-02-01 ... 2018-11-01
  * layer    (layer) int32 4B 1

    def apply_factor_and_addition(headers, da):
        nlayers = len(da.coords["layer"])
        for ilayer in range(nlayers):
&gt;           factor = headers[ilayer]["factor"]
E           KeyError: 'factor'

..\formats\prj\prj.py:566: KeyError

During handling of the above exception, another exception occurred:

imodflow_model = {'pcg': &lt;imod.flow.slv.PreconditionedConjugateGradientSolver object at 0x0000014FC6A15710&gt;, 'bnd': &lt;imod.flow.bas.Boun... object at 0x0000014FC7AF7750&gt;, 'time_discretization': &lt;imod.flow.dis.TimeDiscretization object at 0x0000014FC8646310&gt;}
tmp_path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_convert_to_disv_create_tr0')
create_grid = &lt;function create_trigrid at 0x0000014FC2B7E0C0&gt;

    @pytest.mark.skipif(xu_version_to_skip, reason="xugrid == 0.5.0 | xugrid &lt; 0.4.0")
    @pytest.mark.usefixtures("imodflow_model")
    @pytest.mark.parametrize("create_grid", [create_quadgrid, create_trigrid])
    def test_convert_to_disv(imodflow_model, tmp_path, create_grid):
        imodflow_model.write(tmp_path / "imodflow")
    
&gt;       data, repeats = imod.prj.open_projectfile_data(tmp_path / "imodflow/imodflow.prj")

test_formats\test_disv_conversion.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/test_convert_to_disv_create_tr0/imodflow/imodflow.prj')

    def open_projectfile_data(path: FilePath) -&gt; Dict[str, Any]:
        """
        Read the contents of an iMOD project file and read/open the data present in
        it:
    
        * IDF data is lazily loaded into xarray.DataArrays.
        * GEN data is eagerly loaded into geopandas.GeoDataFrames
        * IPF data is eagerly loaded into pandas.DataFrames
        * Non-file based entries (such as the PCG settings) are kept as a dictionary.
    
        When multiple systems are present, they are numbered starting from one, e.g.:
    
        * drn-1
        * drn-2
    
        Xarray requires valid dates for the time coordinate. Aliases such as
        "summer" and "winter" that are associated with dates in the project file
        Periods block cannot be used in the time coordinate. Hence, this function
        will instead insert the dates associated with the aliases, with the year
        replaced by 1899; as the iMOD calendar starts at 1900, this ensures that
        the repeats are always first and that no date collisions will occur.
    
        Parameters
        ----------
        path: pathlib.Path or str.
    
        Returns
        -------
        data: Dict[str, Any]
        Keys are the iMOD project file "topics", without parentheses.
        """
        content = read_projectfile(path)
        periods_block = content.pop("periods", None)
        if periods_block is None:
            periods = {}
        else:
            # Set the year of a repeat date to 1899: this ensures it falls outside
            # of the iMOD calendar. Collisions are then always avoided.
            periods = {
                key: _process_time(time, yearfirst=False).replace(year=1899)
                for key, time in periods_block.items()
            }
    
        # Pop species block, at the moment we do not do much with,
        # since most regional models are without solute transport
        content.pop("species", None)
    
        has_topbot = "(top)" in content and "(bot)" in content
        prj_data = {}
        repeat_stress = {}
        for key, block_content in content.items():
            repeats = None
            try:
                if key == "(hfb)":
                    data = _read_package_gen(block_content, has_topbot)
                elif key == "(wel)":
                    data, repeats = _read_package_ipf(block_content, periods)
                elif key == "(cap)":
                    variables = set(METASWAP_VARS).intersection(block_content.keys())
                    data = _open_package_idf(block_content, variables)
                elif key in ("extra", "(pcg)"):
                    data = [block_content]
                elif key in KEYS:
                    variables = KEYS[key]
                    data = _open_package_idf(block_content, variables)
                elif key in DATE_KEYS:
                    variables = DATE_KEYS[key]
                    data, repeats = _open_boundary_condition_idf(
                        block_content, variables, periods
                    )
                else:
                    raise KeyError(f"Unsupported key: '{key}'")
            except Exception as e:
&gt;               raise type(e)(f"{e}. Errored while opening/reading data entries for: {key}")
E               KeyError: "'factor'. Errored while opening/reading data entries for: (chd)"

..\formats\prj\prj.py:945: KeyError</failure></testcase><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_invalid_feature_string" time="0.001" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_invalid_feature_type" time="0.001" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_shapely_gen_conversion" time="0.003" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature[point]" time="0.012" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature[line]" time="0.011" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature[polygon]" time="0.012" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature[circle]" time="0.013" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature[rectangle]" time="0.014" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_multi_feature" time="0.014" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature__infer_type[point]" time="0.013" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature__infer_type[line]" time="0.013" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature__infer_type[polygon]" time="0.014" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature__infer_type[circle]" time="0.013" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_single_feature__infer_type[rectangle]" time="0.012" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_column_truncation" time="0.023" /><testcase classname="imod.tests.test_formats.test_gen" name="test_gen_empty_column" time="0.008" /><testcase classname="imod.tests.test_formats.test_gen" name="test_parse_ascii_points" time="0.002" /><testcase classname="imod.tests.test_formats.test_gen" name="test_parse_ascii_segment_linestrings[linestrings_comma_delimited]" time="0.007" /><testcase classname="imod.tests.test_formats.test_gen" name="test_parse_ascii_segment_linestrings[linestring_whitespace_delimited]" time="0.004" /><testcase classname="imod.tests.test_formats.test_gen" name="test_parse_ascii_segment_linestrings[linestring_3d]" time="0.004" /><testcase classname="imod.tests.test_formats.test_gen" name="test_parse_ascii_segment_polygon" time="0.004" /><testcase classname="imod.tests.test_formats.test_gen" name="test_parse_ascii_segment_mixed_topology_error" time="0.003" /><testcase classname="imod.tests.test_formats.test_gen" name="test_read_ascii" time="0.009" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains[constant-equidistant=True]" time="0.075" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains[constant-equidistant=False]" time="0.082" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains[labeled-equidistant=True]" time="0.071" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains[labeled-equidistant=False]" time="0.081" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains__start_nr_not_zero[constant-equidistant=True]" time="0.071" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains__start_nr_not_zero[constant-equidistant=False]" time="0.082" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains__start_nr_not_zero[labeled-equidistant=True]" time="0.072" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains__start_nr_not_zero[labeled-equidistant=False]" time="0.084" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_pattern_None[constant-equidistant=True]" time="0.072" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_pattern_None[constant-equidistant=False]" time="0.083" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_pattern_None[labeled-equidistant=True]" time="0.072" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_pattern_None[labeled-equidistant=False]" time="0.083" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species[constant_species-equidistant=True]" time="0.123" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species[constant_species-equidistant=False]" time="0.145" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species[labeled_species-equidistant=True]" time="0.125" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species[labeled_species-equidistant=False]" time="0.152" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species_pattern_None[constant_species-equidistant=True]" time="0.127" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species_pattern_None[constant_species-equidistant=False]" time="0.144" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species_pattern_None[labeled_species-equidistant=True]" time="0.124" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_species_pattern_None[labeled_species-equidistant=False]" time="0.144" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_error[constant-equidistant=True]" time="0.031" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_error[constant-equidistant=False]" time="0.040" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_error[labeled-equidistant=True]" time="0.030" /><testcase classname="imod.tests.test_formats.test_idf" name="test_open_subdomains_error[labeled-equidistant=False]" time="0.039" /><testcase classname="imod.tests.test_formats.test_idf" name="test_xycoords_equidistant" time="0.001" /><testcase classname="imod.tests.test_formats.test_idf" name="test_xycoords_nonequidistant" time="0.001" /><testcase classname="imod.tests.test_formats.test_idf" name="test_xycoords_equidistant_array" time="0.001" /><testcase classname="imod.tests.test_formats.test_idf" name="test_saveopen__nonequidistant" time="0.014" /><testcase classname="imod.tests.test_formats.test_idf" name="test_save_topbot__single_layer[float32]" time="0.011" /><testcase classname="imod.tests.test_formats.test_idf" name="test_saveopen_dtype[float32]" time="0.011" /><testcase classname="imod.tests.test_formats.test_idf" name="test_dtype_error[float32]" time="0.003" /><testcase classname="imod.tests.test_formats.test_idf" name="test_nodata[float32]" time="0.005" /><testcase classname="imod.tests.test_formats.test_idf" name="test_save_topbot__single_layer[float64]" time="0.011" /><testcase classname="imod.tests.test_formats.test_idf" name="test_saveopen_dtype[float64]" time="0.011" /><testcase classname="imod.tests.test_formats.test_idf" name="test_dtype_error[float64]" time="0.003" /><testcase classname="imod.tests.test_formats.test_idf" name="test_nodata[float64]" time="0.005" /><testcase classname="imod.tests.test_formats.test_idf" name="test_save_topbot__layers" time="0.041" /><testcase classname="imod.tests.test_formats.test_idf" name="test_save_topbot__layers_nonequidistant" time="0.037" /><testcase classname="imod.tests.test_formats.test_idf" name="test_save_topbot__only_z" time="0.037" /><testcase classname="imod.tests.test_formats.test_idf" name="test_save_topbot__errors" time="0.005" /><testcase classname="imod.tests.test_formats.test_idf" name="test_save_open_arbitrary_4D" time="0.055" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__itype1implicit" time="0.019" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read__comma" time="0.006" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read__space" time="0.005" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_list" time="0.008" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,-,-,-,]" time="0.018" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,-,-,- ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,-,- -,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,-,- - ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,- -,-,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,- -,- ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,- - -,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,-,- - - ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- -,-,-,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- -,-,- ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- -,- -,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- -,- - ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- - -,-,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- - -,- ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- - - -,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[,- - - - ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,-,-,-,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,-,-,- ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,-,- -,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,-,- - ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,- -,-,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,- -,- ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,- - -,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ -,- - - ]" time="0.018" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - -,-,-,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - -,-,- ]" time="0.014" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - -,- -,]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - -,- - ]" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - - -,-,]" time="0.014" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - - -,- ]" time="0.014" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - - - -,]" time="0.014" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_read_associated__parameterized_delim[ - - - - ]" time="0.014" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_write_assoc_itype1" time="0.015" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_write_assoc_itype2" time="0.013" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_write" time="0.007" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_lower_dataframe_colnames" time="0.001" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_lower_dataframe_colnames__ValueError" time="0.001" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_is_single_value" time="0.003" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_save__assoc_itype1" time="0.032" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_save__assoc_itype2_" time="0.029" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_save__assoc_itype1__layers" time="0.061" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_save__missing" time="0.007" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_error_fileinfo" time="0.007" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_save__assoc_itype1__layers__integerID" time="0.034" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_unique_ids_per_layer" time="0.006" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_quoting" time="0.007" /><testcase classname="imod.tests.test_formats.test_ipf" name="test_alternative_quotes_assoc" time="0.007" /><testcase classname="imod.tests.test_formats.test_prj" name="test_tokenize" time="0.002" /><testcase classname="imod.tests.test_formats.test_prj.TestLineIterator" name="test_init" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj.TestLineIterator" name="test_traversal" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj.TestLineIterator" name="test_iter" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_wrap_error_message[ValueError]" time="0.002" /><testcase classname="imod.tests.test_formats.test_prj" name="test_wrap_error_message[TypeError]" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parseblockheader" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parse_time" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parse_blockline" time="0.002" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parse_nsub_nsystem" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parse_notimeblock" time="0.002" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parse_speciesblock" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parse_capblock" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_parse_pcgblock" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test__parse_block" time="0.002" /><testcase classname="imod.tests.test_formats.test_prj" name="test__parse_periodsblock" time="0.001" /><testcase classname="imod.tests.test_formats.test_prj" name="test_read_error" time="0.004" /><testcase classname="imod.tests.test_formats.test_prj" name="test_process_time" time="0.002" /><testcase classname="imod.tests.test_formats.test_prj.TestProjectFile" name="test_read_projectfile" time="0.041" /><testcase classname="imod.tests.test_formats.test_prj.TestProjectFile" name="test_open_projectfile_data" time="0.138"><failure message="KeyError: &quot;'factor'. Errored while opening/reading data entries for: (ghb)&quot;">path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/prj-data1/testprojectfile.prj')

    def open_projectfile_data(path: FilePath) -&gt; Dict[str, Any]:
        """
        Read the contents of an iMOD project file and read/open the data present in
        it:
    
        * IDF data is lazily loaded into xarray.DataArrays.
        * GEN data is eagerly loaded into geopandas.GeoDataFrames
        * IPF data is eagerly loaded into pandas.DataFrames
        * Non-file based entries (such as the PCG settings) are kept as a dictionary.
    
        When multiple systems are present, they are numbered starting from one, e.g.:
    
        * drn-1
        * drn-2
    
        Xarray requires valid dates for the time coordinate. Aliases such as
        "summer" and "winter" that are associated with dates in the project file
        Periods block cannot be used in the time coordinate. Hence, this function
        will instead insert the dates associated with the aliases, with the year
        replaced by 1899; as the iMOD calendar starts at 1900, this ensures that
        the repeats are always first and that no date collisions will occur.
    
        Parameters
        ----------
        path: pathlib.Path or str.
    
        Returns
        -------
        data: Dict[str, Any]
        Keys are the iMOD project file "topics", without parentheses.
        """
        content = read_projectfile(path)
        periods_block = content.pop("periods", None)
        if periods_block is None:
            periods = {}
        else:
            # Set the year of a repeat date to 1899: this ensures it falls outside
            # of the iMOD calendar. Collisions are then always avoided.
            periods = {
                key: _process_time(time, yearfirst=False).replace(year=1899)
                for key, time in periods_block.items()
            }
    
        # Pop species block, at the moment we do not do much with,
        # since most regional models are without solute transport
        content.pop("species", None)
    
        has_topbot = "(top)" in content and "(bot)" in content
        prj_data = {}
        repeat_stress = {}
        for key, block_content in content.items():
            repeats = None
            try:
                if key == "(hfb)":
                    data = _read_package_gen(block_content, has_topbot)
                elif key == "(wel)":
                    data, repeats = _read_package_ipf(block_content, periods)
                elif key == "(cap)":
                    variables = set(METASWAP_VARS).intersection(block_content.keys())
                    data = _open_package_idf(block_content, variables)
                elif key in ("extra", "(pcg)"):
                    data = [block_content]
                elif key in KEYS:
                    variables = KEYS[key]
                    data = _open_package_idf(block_content, variables)
                elif key in DATE_KEYS:
                    variables = DATE_KEYS[key]
&gt;                   data, repeats = _open_boundary_condition_idf(
                        block_content, variables, periods
                    )

..\formats\prj\prj.py:939: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\formats\prj\prj.py:719: in _open_boundary_condition_idf
    das[i][variable] = _create_dataarray(paths, headers, values)
..\formats\prj\prj.py:559: in _create_dataarray
    da = apply_factor_and_addition(headers, da)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

headers = [{'dims': ('time', 'layer'), 'directory': Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/prj-d...ath('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/prj-data1'), 'dtype': 'float32', 'dx': 1.0, ...}]
da = &lt;xarray.DataArray 'conductance' (time: 3, layer: 1, y: 2, x: 2)&gt; Size: 48B
dask.array&lt;stack, shape=(3, 1, 2, 2), dtype...float64 8B -1.0
  * time     (time) datetime64[ns] 24B 1900-01-01 1901-01-02 1901-01-03
  * layer    (layer) int32 4B 1

    def apply_factor_and_addition(headers, da):
        nlayers = len(da.coords["layer"])
        for ilayer in range(nlayers):
&gt;           factor = headers[ilayer]["factor"]
E           KeyError: 'factor'

..\formats\prj\prj.py:566: KeyError

During handling of the above exception, another exception occurred:

self = &lt;test_prj.TestProjectFile object at 0x0000014FC2C32250&gt;

    def test_open_projectfile_data(self):
&gt;       content, repeats = imod.prj.open_projectfile_data(self.prj_path)

test_formats\test_prj.py:523: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

path = Path('C:/Users/slooten/AppData/Local/Temp/pytest-of-slooten/pytest-438/prj-data1/testprojectfile.prj')

    def open_projectfile_data(path: FilePath) -&gt; Dict[str, Any]:
        """
        Read the contents of an iMOD project file and read/open the data present in
        it:
    
        * IDF data is lazily loaded into xarray.DataArrays.
        * GEN data is eagerly loaded into geopandas.GeoDataFrames
        * IPF data is eagerly loaded into pandas.DataFrames
        * Non-file based entries (such as the PCG settings) are kept as a dictionary.
    
        When multiple systems are present, they are numbered starting from one, e.g.:
    
        * drn-1
        * drn-2
    
        Xarray requires valid dates for the time coordinate. Aliases such as
        "summer" and "winter" that are associated with dates in the project file
        Periods block cannot be used in the time coordinate. Hence, this function
        will instead insert the dates associated with the aliases, with the year
        replaced by 1899; as the iMOD calendar starts at 1900, this ensures that
        the repeats are always first and that no date collisions will occur.
    
        Parameters
        ----------
        path: pathlib.Path or str.
    
        Returns
        -------
        data: Dict[str, Any]
        Keys are the iMOD project file "topics", without parentheses.
        """
        content = read_projectfile(path)
        periods_block = content.pop("periods", None)
        if periods_block is None:
            periods = {}
        else:
            # Set the year of a repeat date to 1899: this ensures it falls outside
            # of the iMOD calendar. Collisions are then always avoided.
            periods = {
                key: _process_time(time, yearfirst=False).replace(year=1899)
                for key, time in periods_block.items()
            }
    
        # Pop species block, at the moment we do not do much with,
        # since most regional models are without solute transport
        content.pop("species", None)
    
        has_topbot = "(top)" in content and "(bot)" in content
        prj_data = {}
        repeat_stress = {}
        for key, block_content in content.items():
            repeats = None
            try:
                if key == "(hfb)":
                    data = _read_package_gen(block_content, has_topbot)
                elif key == "(wel)":
                    data, repeats = _read_package_ipf(block_content, periods)
                elif key == "(cap)":
                    variables = set(METASWAP_VARS).intersection(block_content.keys())
                    data = _open_package_idf(block_content, variables)
                elif key in ("extra", "(pcg)"):
                    data = [block_content]
                elif key in KEYS:
                    variables = KEYS[key]
                    data = _open_package_idf(block_content, variables)
                elif key in DATE_KEYS:
                    variables = DATE_KEYS[key]
                    data, repeats = _open_boundary_condition_idf(
                        block_content, variables, periods
                    )
                else:
                    raise KeyError(f"Unsupported key: '{key}'")
            except Exception as e:
&gt;               raise type(e)(f"{e}. Errored while opening/reading data entries for: {key}")
E               KeyError: "'factor'. Errored while opening/reading data entries for: (ghb)"

..\formats\prj\prj.py:945: KeyError</failure></testcase><testcase classname="imod.tests.test_formats.test_prj" name="test_read_timfile" time="0.007" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_saveopen" time="0.036" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_saveopen__nodata_dtype" time="0.058" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1--999-int32-None-None]" time="0.018" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0--999.0-float32-None-None]" time="0.017" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0-nan-float32-None-None]" time="0.018" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0--999.9-float32-None-None]" time="0.018" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0--999.99-float32-None-None]" time="0.018" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.01--999.99-float32-None-None]" time="0.017" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1--999-int32-3-None]" time="0.017" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0--999.99-float32-2-None]" time="0.017" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0-nan-float32-2-None]" time="0.017" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.01-nan-float32-2-None]" time="0.018" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1--999-int32-None-3]" time="0.017" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0--999.99-float32-None-4]" time="0.018" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.0-nan-float32-None-5]" time="0.018" /><testcase classname="imod.tests.test_formats.test_rasterio" name="test_rasterio_ascii[1.01-nan-float32-None-5]" time="0.016" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_no_configuration" time="0.001" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_logger[LoggerType.NULL-NullLogger]" time="0.001" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_logger[LoggerType.PYTHON-PythonLogger]" time="0.001" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_logger[LoggerType.LOGURU-LoguruLogger]" time="0.004" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_change_logger_during_runtime" time="0.004" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_calls_forwarded_to_loggers[LoggerType.NULL-imod.logging.config.NullLogger]" time="0.005" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_calls_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger]" time="0.004" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_calls_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger]" time="0.005" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-True-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-True-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-True-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-True-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-True-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-False-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-False-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-False-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-False-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-True-False-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-True-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-True-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-True-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-True-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-True-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-False-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-False-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-False-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-False-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.PYTHON-imod.logging.config.PythonLogger-False-False-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-True-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-True-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-True-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-True-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-True-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-False-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-False-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-False-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-False-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-True-False-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-True-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-True-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-True-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-True-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-True-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-False-LogLevel.DEBUG]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-False-LogLevel.INFO]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-False-LogLevel.WARNING]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-False-LogLevel.ERROR]" time="0.002" /><testcase classname="imod.tests.test_logging.test_logging" name="test_logging_configure_param_forwarded_to_loggers[LoggerType.LOGURU-imod.logging.config.LoguruLogger-False-False-LogLevel.CRITICAL]" time="0.002" /><testcase classname="imod.tests.test_mf6.test_circle" name="test_simulation_write_and_run" time="0.621" /><testcase classname="imod.tests.test_mf6.test_circle" name="test_gwfmodel_render" time="0.326" /><testcase classname="imod.tests.test_mf6.test_circle" name="test_simulation_write_and_run_evt" time="0.653" /><testcase classname="imod.tests.test_mf6.test_circle" name="test_gwfmodel_render_evt" time="0.335" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_dis_render" time="0.072" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_chd_render" time="0.066" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_drn_render" time="0.067" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_ic_render" time="0.065" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_npf_render" time="0.077" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_oc_render" time="0.064" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_rch_render" time="0.068" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_wel_render" time="0.197" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_solver_render" time="0.067" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_gwfmodel_render" time="0.191" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_simulation_render" time="0.062" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_simulation_write_and_run" time="0.257" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_simulation_write_storage" time="0.442" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_simulation_wrong_dtype" time="0.146" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_simulation_validate_false" time="0.144" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_simulation_write_errors" time="0.066" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_slice_and_run" time="0.224" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_slice_and_run_with_state" time="0.441" /><testcase classname="imod.tests.test_mf6.test_ex01_twri" name="test_slice_and_run_purge_empty_package" time="0.212" /><testcase classname="imod.tests.test_mf6.test_ex01_twri_disv" name="test_simulation_write_and_run" time="0.365" /><testcase classname="imod.tests.test_mf6.test_ex01_twri_disv" name="test_slice_and_run" time="0.330" /><testcase classname="imod.tests.test_mf6.test_exchangebase" name="test_package_name_construct_name" time="0.001" /><testcase classname="imod.tests.test_mf6.test_exchangebase" name="test_package_name_missing_name[None-None-expectation0]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_exchangebase" name="test_package_name_missing_name[testmodel1-None-expectation1]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_exchangebase" name="test_package_name_missing_name[None-testmodel2-expectation2]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_exchangebase" name="test_package_name_missing_name[testmodel1-testmodel2-expectation3]" time="0.002" /><testcase classname="imod.tests.test_mf6.test_exchangebase" name="test_get_specification" time="0.001" /><testcase classname="imod.tests.test_mf6.test_import_prj" name="test_import_constants" time="0.165" /><testcase classname="imod.tests.test_mf6.test_import_prj" name="test_import_idf" time="0.158" /><testcase classname="imod.tests.test_mf6.test_import_prj" name="test_import_gen" time="0.242" /><testcase classname="imod.tests.test_mf6.test_import_prj" name="test_import_ipf" time="0.192" /><testcase classname="imod.tests.test_mf6.test_ist" name="test_ist_simple" time="0.006" /><testcase classname="imod.tests.test_mf6.test_ist" name="test_ist_elaborate" time="0.012" /><testcase classname="imod.tests.test_mf6.test_mf6_absolute_paths" name="test_simulation_writes_full_paths_if_requested" time="0.614" /><testcase classname="imod.tests.test_mf6.test_mf6_absolute_paths" name="test_uzf_writes_full_paths_if_requested" time="0.058" /><testcase classname="imod.tests.test_mf6.test_mf6_adv" name="test_advection_upstream" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_adv" name="test_advection_central" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_adv" name="test_advection_TVD" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_api_package" name="test_render" time="0.004" /><testcase classname="imod.tests.test_mf6.test_mf6_buoy" name="test_buoyancy_package_simple" time="0.004" /><testcase classname="imod.tests.test_mf6.test_mf6_buoy" name="test_buoyancy_package_full" time="0.004" /><testcase classname="imod.tests.test_mf6.test_mf6_buoy" name="test_buoyancy_package_update_transport_names" time="0.005" /><testcase classname="imod.tests.test_mf6.test_mf6_buoy" name="test_buoyancy_package_update_transport_names_check" time="0.004" /><testcase classname="imod.tests.test_mf6.test_mf6_chd" name="test_render" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_chd" name="test_from_file" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_chd" name="test_wrong_dtype" time="0.006" /><testcase classname="imod.tests.test_mf6.test_mf6_chd" name="test_render_concentration" time="0.016" /><testcase classname="imod.tests.test_mf6.test_mf6_chd" name="test_write_concentration_period_data" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_clipped_boundary_condition_creator.TestClippedBoundaryConditionCreator" name="test_create_different_n_clipped_cells[15]" time="0.099" /><testcase classname="imod.tests.test_mf6.test_mf6_clipped_boundary_condition_creator.TestClippedBoundaryConditionCreator" name="test_create_different_n_clipped_cells[0]" time="0.092" /><testcase classname="imod.tests.test_mf6.test_mf6_clipped_boundary_condition_creator.TestClippedBoundaryConditionCreator" name="test_create_different_n_clipped_cells[36]" time="0.090" /><testcase classname="imod.tests.test_mf6.test_mf6_clipped_boundary_condition_creator.TestClippedBoundaryConditionCreator" name="test_create_different_dis[basic_unstructured_dis-xugrid]" time="0.062" /><testcase classname="imod.tests.test_mf6.test_mf6_clipped_boundary_condition_creator.TestClippedBoundaryConditionCreator" name="test_create_different_dis[basic_dis-xarray]" time="0.015" /><testcase classname="imod.tests.test_mf6.test_mf6_cnc" name="test_render" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_cnc" name="test_write_period_data" time="0.024" /><testcase classname="imod.tests.test_mf6.test_mf6_dis" name="test_render" time="0.008" /><testcase classname="imod.tests.test_mf6.test_mf6_dis" name="test_wrong_dtype" time="0.005" /><testcase classname="imod.tests.test_mf6.test_mf6_dis" name="test_bottom_exceeding_itself" time="0.013" /><testcase classname="imod.tests.test_mf6.test_mf6_dis" name="test_top_exceeding_bottom" time="0.026" /><testcase classname="imod.tests.test_mf6.test_mf6_dis" name="test_overlaying_bottom_inactive" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_dis" name="test_disconnected_idomain" time="0.038" /><testcase classname="imod.tests.test_mf6.test_mf6_dis" name="test_write_ascii_griddata_2d_3d" time="0.013" /><testcase classname="imod.tests.test_mf6.test_mf6_disv" name="test_zero_thickness_validation" time="0.080" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_write" time="0.015" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_wrong_dtype" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_validate_false" time="0.005" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_check_conductance_zero" time="0.019" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_validate_concentration" time="0.060" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_discontinuous_layer" time="0.008" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_3d_singelayer" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_render_concentration" time="0.018" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_repeat_stress" time="0.016" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_repeat_stress_old_style" time="0.009" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_clip_box" time="0.010" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_clip_box_transient" time="0.025" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_repr" time="0.010" /><testcase classname="imod.tests.test_mf6.test_mf6_drn" name="test_html_repr" time="0.023" /><testcase classname="imod.tests.test_mf6.test_mf6_dsp" name="test_dispersion_default" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_dsp" name="test_dispersion_options" time="0.012" /><testcase classname="imod.tests.test_mf6.test_mf6_dsp" name="test_dispersion_erronous_options" time="0.006" /><testcase classname="imod.tests.test_mf6.test_mf6_dsp" name="test_dispersion_layered" time="0.015" /><testcase classname="imod.tests.test_mf6.test_mf6_evt" name="test_render" time="0.025" /><testcase classname="imod.tests.test_mf6.test_mf6_evt" name="test_get_options__no_segments" time="0.008" /><testcase classname="imod.tests.test_mf6.test_mf6_evt" name="test_get_options__with_segments" time="0.012" /><testcase classname="imod.tests.test_mf6.test_mf6_evt" name="test_get_bin_ds__no_segments" time="0.010" /><testcase classname="imod.tests.test_mf6.test_mf6_evt" name="test_get_bin_ds__with_segments" time="0.023" /><testcase classname="imod.tests.test_mf6.test_mf6_evt" name="test_wrong_dim_order" time="0.011" /><testcase classname="imod.tests.test_mf6.test_mf6_flopy_compatibility" name="test_readable_by_flopy[True]" time="0.344" /><testcase classname="imod.tests.test_mf6.test_mf6_flopy_compatibility" name="test_readable_by_mf6[True]" time="0.238" /><testcase classname="imod.tests.test_mf6.test_mf6_flopy_compatibility" name="test_readable_by_mf6[False]" time="0.329" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf.TestGwfgwf" name="test_render_exchange_file_structured" time="0.024" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf.TestGwfgwf" name="test_render_exchange_file_unstructured" time="0.021" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf.TestGwfgwf" name="test_error_clip" time="0.011" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_newton_propagated[False]" time="0.928" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_newton_propagated[True]" time="0.889" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_xt3d_propagated[False]" time="0.872" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_xt3d_propagated[True]" time="0.883" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_variablecv_propagated[False]" time="0.882" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_variablecv_propagated[True]" time="0.879" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_dewatered_propagated[False]" time="0.883" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_option_dewatered_propagated[True]" time="0.900" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_save_flows_propagated[False]" time="0.870" /><testcase classname="imod.tests.test_mf6.test_mf6_gwfgwf" name="test_save_flows_propagated[True]" time="0.878" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter[basic_unstructured_dis]" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter[basic_dis]" time="0.018" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter_layered[LayeredHorizontalFlowBarrierResistance-resistance-1000.0-0.001-basic_unstructured_dis]" time="0.068" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter_layered[LayeredHorizontalFlowBarrierResistance-resistance-1000.0-0.001-basic_dis]" time="0.072" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter_layered[LayeredHorizontalFlowBarrierMultiplier-multiplier-1.5--1.5-basic_unstructured_dis]" time="0.059" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter_layered[LayeredHorizontalFlowBarrierMultiplier-multiplier-1.5--1.5-basic_dis]" time="0.073" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter_layered[LayeredHorizontalFlowBarrierHydraulicCharacteristic-hydraulic_characteristic-0.001-0.001-basic_unstructured_dis]" time="0.061" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_creates_mf6_adapter_layered[LayeredHorizontalFlowBarrierHydraulicCharacteristic-hydraulic_characteristic-0.001-0.001-basic_dis]" time="0.071" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[-5.0--35.0-expected_values0]" time="0.056" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[0.0--35.0-expected_values1]" time="0.059" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[-5.0--135.0-expected_values2]" time="0.056" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[-5.0--135.0-expected_values3]" time="0.056" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[100.0--135.0-expected_values4]" time="0.056" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[0.0--200.0-expected_values5]" time="0.057" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[100.0-50.0-expected_values6]" time="0.057" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_different_z_boundaries[0.0--2.5-expected_values7]" time="0.056" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_invalid_edges[0-parameterizable_basic_dis0-1.0-1]" time="0.078" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_invalid_edges[0-parameterizable_basic_dis0-2.0-0]" time="0.012"><skipped type="pytest.xfail" message="Test expected to fail if expected number barriers = 0" /></testcase><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_invalid_edges[-1-parameterizable_basic_dis0-1.0-1]" time="0.078" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_invalid_edges[-1-parameterizable_basic_dis0-2.0-0]" time="0.012"><skipped type="pytest.xfail" message="Test expected to fail if expected number barriers = 0" /></testcase><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_barrier_parts_adjacent_to_inactive_cells[parameterizable_basic_dis0-0-1.0-2]" time="0.080" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_barrier_parts_adjacent_to_inactive_cells[parameterizable_basic_dis0-0-2.0-1]" time="0.078" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_barrier_parts_adjacent_to_inactive_cells[parameterizable_basic_dis0--1-1.0-2]" time="0.078" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_to_mf6_remove_barrier_parts_adjacent_to_inactive_cells[parameterizable_basic_dis0--1-2.0-1]" time="0.078" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_is_empty" time="0.011" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_set_options[True-parameterizable_basic_dis0]" time="0.076" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb" name="test_set_options[False-parameterizable_basic_dis0]" time="0.076" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb_adapter" name="test_hfb_render[structured]" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb_adapter" name="test_hfb_render[untructured]" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb_adapter" name="test_hfb_writing_one_layer[structured]" time="0.017" /><testcase classname="imod.tests.test_mf6.test_mf6_hfb_adapter" name="test_hfb_writing_one_layer[untructured]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_mf6_ic" name="test_render" time="0.004" /><testcase classname="imod.tests.test_mf6.test_mf6_ic" name="test_wrong_dtype" time="0.002" /><testcase classname="imod.tests.test_mf6.test_mf6_ic" name="test_validate_false" time="0.002" /><testcase classname="imod.tests.test_mf6.test_mf6_ic" name="test_wrong_arguments" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_ims" name="test_render" time="0.009" /><testcase classname="imod.tests.test_mf6.test_mf6_ims" name="test_wrong_dtype" time="0.008" /><testcase classname="imod.tests.test_mf6.test_mf6_ims" name="test_drop_and_add_model" time="0.011" /><testcase classname="imod.tests.test_mf6.test_mf6_ims" name="test_remove_non_present_model" time="0.009" /><testcase classname="imod.tests.test_mf6.test_mf6_ims" name="test_add_already_present_model" time="0.009" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_alternative_constructor" time="0.066" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_render" time="0.063" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_connection_dataframe" time="0.063" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_outlet_dataframe" time="0.062" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_write" time="0.070" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_write_disv_three_lakes" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_rendering_transient" time="0.106" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_rendering_transient_all_timeseries" time="0.172" /><testcase classname="imod.tests.test_mf6.test_mf6_lak" name="test_lake_rendering_unstructured" time="0.108" /><testcase classname="imod.tests.test_mf6.test_mf6_lake_table" name="test_mf6_write_number_tables" time="0.251" /><testcase classname="imod.tests.test_mf6.test_mf6_lake_table" name="test_mf6_laketable_reference" time="0.101" /><testcase classname="imod.tests.test_mf6.test_mf6_lake_validation" name="test_lake_init_validation_dim_mismatch" time="0.018" /><testcase classname="imod.tests.test_mf6.test_mf6_lake_validation" name="test_lake_init_validation_type_mismatch" time="0.018" /><testcase classname="imod.tests.test_mf6.test_mf6_lake_validation" name="test_lake_write_validation_sign_mismatch" time="0.027" /><testcase classname="imod.tests.test_mf6.test_mf6_logging" name="test_write_package_is_logged" time="0.039" /><testcase classname="imod.tests.test_mf6.test_mf6_logging" name="test_write_model_is_logged" time="0.534" /><testcase classname="imod.tests.test_mf6.test_mf6_logging" name="test_write_simulation_is_logged" time="1.487" /><testcase classname="imod.tests.test_mf6.test_mf6_logging" name="test_runtime_is_logged" time="0.521" /><testcase classname="imod.tests.test_mf6.test_mf6_mask_simulation" name="test_mask_simulation" time="6.763" /><testcase classname="imod.tests.test_mf6.test_mf6_mask_simulation" name="test_mask_split_simulation" time="2.268" /><testcase classname="imod.tests.test_mf6.test_mf6_mask_simulation" name="test_mask_simulation_different_domains" time="1.246" /><testcase classname="imod.tests.test_mf6.test_mf6_model" name="test_checks_required_pkgs" time="0.178" /><testcase classname="imod.tests.test_mf6.test_mf6_model" name="test_key_assign" time="0.060" /><testcase classname="imod.tests.test_mf6.test_mf6_model" name="test_circle_roundtrip" time="0.820" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_write_valid_model_without_error" time="0.034" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_write_without_dis_pkg_return_error" time="0.028" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_write_with_invalid_pkg_returns_error" time="0.032" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_write_with_two_invalid_pkg_returns_two_errors" time="0.036" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_render_newton[False-False]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_render_newton[False-True]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_render_newton[True-False]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestModel" name="test_render_newton[True-True]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestGroundwaterFlowModel" name="test_clip_box_without_state_for_boundary" time="0.029" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestGroundwaterFlowModel" name="test_clip_box_with_state_for_boundary" time="0.041" /><testcase classname="imod.tests.test_mf6.test_mf6_model.TestGroundwaterFlowModel" name="test_clip_box_with_unassigned_boundaries_in_original_model" time="0.033" /><testcase classname="imod.tests.test_mf6.test_mf6_model" name="test_purge_empty_package" time="0.661" /><testcase classname="imod.tests.test_mf6.test_mf6_model" name="test_deepcopy" time="0.395" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_validation_inactive_cell_pillar" time="2.084" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_validation_one_inactive_cell[0-layer_and_face0]" time="2.091" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_validation_one_inactive_cell[0-layer_and_face1]" time="2.089" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_validation_one_inactive_cell[0-layer_and_face2]" time="2.086" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_validation_one_inactive_cell[-1-layer_and_face0]" time="2.097" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_validation_one_inactive_cell[-1-layer_and_face1]" time="2.083" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_validation_one_inactive_cell[-1-layer_and_face2]" time="2.111" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_layered_and_scalar_package_input[layer_and_face0]" time="1.886" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_layered_and_scalar_package_input[layer_and_face1]" time="1.887" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masked_model_layered_and_scalar_package_input[layer_and_face2]" time="1.898" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masking_preservers_inactive_cells[0]" time="1.240" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masking_preservers_inactive_cells[-1]" time="1.248" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_masking_masks_vertical_passthrough_cells" time="1.254" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_structured_xy_masks_across_all_layers[mask_cells0]" time="1.553" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_structured_xy_masks_across_all_layers[mask_cells1]" time="1.331" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_with_layer_array[layer_mask0]" time="1.812" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_with_layer_array[layer_mask1]" time="1.727" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_with_layer_array[layer_mask2]" time="1.826" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_unstructured[0-mask_cell0]" time="1.833" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_unstructured[0-mask_cell1]" time="1.842" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_unstructured[-1-mask_cell0]" time="1.840" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_unstructured[-1-mask_cell1]" time="1.854" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_with_time_coordinate" time="0.390" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_structured[0-mask_cells0]" time="1.533" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_structured[0-mask_cells1]" time="1.330" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_structured[-1-mask_cells0]" time="1.544" /><testcase classname="imod.tests.test_mf6.test_mf6_model_masking" name="test_mask_structured[-1-mask_cells1]" time="1.331" /><testcase classname="imod.tests.test_mf6.test_mf6_mst" name="test_render_simple" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_mst" name="test_render_first_order_decay" time="0.047" /><testcase classname="imod.tests.test_mf6.test_mf6_mst" name="test_render_zero_order_decay" time="0.033" /><testcase classname="imod.tests.test_mf6.test_mf6_mst" name="test_wrong_decay_order" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_npf" name="test_render" time="0.044" /><testcase classname="imod.tests.test_mf6.test_mf6_npf" name="test_wrong_dtype" time="0.029" /><testcase classname="imod.tests.test_mf6.test_mf6_npf" name="test_validate_false" time="0.016" /><testcase classname="imod.tests.test_mf6.test_mf6_npf" name="test_incompatible_setting" time="0.058" /><testcase classname="imod.tests.test_mf6.test_mf6_npf" name="test_wrong_dim" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_npf" name="test_configure_xt3d" time="0.061" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_string" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_string_two_timesteps" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_int" time="0.028" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_bool_fail" time="0.024" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_string_fail" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_mixed_two_timesteps" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_string_concentration" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_render_string_two_timesteps_concentration" time="0.034" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_wrong_arguments_concentration" time="0.009" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_fileout_none" time="0.029" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_fileout_abs" time="0.033" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_fileout_relative" time="0.032" /><testcase classname="imod.tests.test_mf6.test_mf6_oc" name="test_oc_write" time="0.044" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_read_disgrb" time="0.894" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_hds" time="1.266" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_read_cbc_headers" time="0.914" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_read_cbc_headers__transient" time="1.030" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_dis_indices" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_dis_indices__idomain" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_cbc__dis" time="0.930" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_cbc__dis_transient" time="1.216" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_cbc__dis_datetime" time="1.093" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_cbc__dis_transient_unconfined" time="1.453" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_cbc__disv" time="1.156" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_cbc__disv_datetime" time="0.062" /><testcase classname="imod.tests.test_mf6.test_mf6_out" name="test_open_cbc__disv_sto" time="1.199" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_clip_time_indexer__full" time="0.004" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_clip_time_indexer__after" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_clip_time_indexer__before" time="0.007" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_clip_time_indexer__within" time="0.006" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_clip_repeat_stress__all_repeats" time="0.013" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_clip_repeat_stress__some_repeats" time="0.013" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_mask_structured" time="0.063" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_mask_unstructured" time="0.104" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_mask_scalar_input" time="0.062" /><testcase classname="imod.tests.test_mf6.test_mf6_pkgbase" name="test_mask_layered_input" time="0.079" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_render" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_render_transient" time="0.032" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_wrong_dtype" time="0.023" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_no_layer_dim" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_transient_no_layer_dim" time="0.032" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_render_concentration" time="0.036" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_no_layer_coord" time="0.024" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_scalar" time="0.024" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_validate_false" time="0.013" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_write_concentration_period_data" time="0.070" /><testcase classname="imod.tests.test_mf6.test_mf6_rch" name="test_clip_box" time="0.059" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid" name="test_regrid_structured" time="1.121" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid" name="test_regrid_unstructured" time="1.804" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid" name="test_regrid_structured_missing_dx_and_dy" time="0.046" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid" name="test_regrid" time="0.380" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid" name="test_regridding_can_skip_validation" time="4.174" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid" name="test_regridding_layer_based_array" time="0.050" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_regrid_structured_model_to_structured_model" time="1.420" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_regrid_structured_model_with_wells_to_structured_model" time="1.490" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_regrid_unstructured_model_with_wells_to_unstructured_model" time="2.520" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_regrid_unstructured_model_to_unstructured_model" time="2.363" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_regrid_unstructured_model_with_inactive_cells[0]" time="2.959" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_regrid_unstructured_model_with_inactive_cells[-1]" time="2.875" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_model_regridding_can_skip_validation" time="31.679" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_model" name="test_model_regridding_can_validate" time="29.626" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_simulation" name="test_regrid_structured_simulation_to_structured_simulation" time="2.152" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_simulation" name="test_regrid_unstructured_simulation_to_unstructured_simulation" time="3.290" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_simulation" name="test_regridded_simulation_has_required_packages" time="2.216" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_simulation" name="test_regrid_with_methods_without_functions" time="1.897" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_transport" name="test_regrid_transport[col_row_dimension0]" time="11.906" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_transport" name="test_regrid_transport[col_row_dimension1]" time="10.646" /><testcase classname="imod.tests.test_mf6.test_mf6_regrid_transport" name="test_regrid_transport[col_row_dimension2]" time="13.130" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_render[structured]" time="0.047" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_render[unstructured]" time="0.088" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_wrong_dtype[structured]" time="0.029" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_wrong_dtype[unstructured]" time="0.081" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_all_nan[structured]" time="0.069" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_all_nan[unstructured]" time="0.189" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_inconsistent_nan[structured]" time="0.068" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_inconsistent_nan[unstructured]" time="0.178" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_layer_as_coord_in_active_cells[structured]" time="0.068" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_layer_as_coord_in_active_cells[unstructured]" time="0.177" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_layer_as_coord_in_inactive_cells[structured]" time="0.067" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_layer_as_coord_in_inactive_cells[unstructured]" time="0.177" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_layer[structured]" time="0.028" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_layer[unstructured]" time="0.079" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_dimsize_zero" time="0.025" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_zero_conductance[structured]" time="0.067" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_zero_conductance[unstructured]" time="0.181" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_bottom_above_stage[structured]" time="0.068" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_bottom_above_stage[unstructured]" time="0.185" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_riv_bottom_above_dis_bottom[structured]" time="0.099" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_riv_bottom_above_dis_bottom[unstructured]" time="0.265" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_boundary_outside_active_domain[structured]" time="0.098" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_boundary_outside_active_domain[unstructured]" time="0.257" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_check_dim_monotonicity" time="0.078" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_validate_false" time="0.019" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_render_concentration" time="0.045" /><testcase classname="imod.tests.test_mf6.test_mf6_riv" name="test_write_concentration_period_data" time="0.075" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_twri_roundtrip" time="0.815" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_twri_transient_roundtrip" time="0.893" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_twri_disv_roundtrip" time="0.511" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_circle_roundtrip" time="0.903" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_simulation_open_head" time="0.929" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_simulation_open_head_relative_path" time="0.898" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_simulation_open_flow_budget" time="0.945" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_write_circle_model_twice" time="1.205" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation" name="test_simulation_open_concentration_fail" time="0.888" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_write_sets_directory" time="0.028" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_write_with_default_arguments_writes_expected_files" time="0.027" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_write_modflow6model_has_errors_raises_exception" time="0.025" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_split_simulation_only_has_packages" time="0.053" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_split_multiple_flow_models" time="0.326" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_regrid_multiple_flow_models" time="0.326" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_clip_multiple_flow_models" time="0.331" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_exchanges_in_simulation_file" time="3.433" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_write_exchanges" time="0.932" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_prevent_split_after_split" time="2.269" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_prevent_clip_box_after_split" time="2.258" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_deepcopy" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_simulation.TestModflow6Simulation" name="test_prevent_regrid_like_after_split" time="2.260" /><testcase classname="imod.tests.test_mf6.test_mf6_src" name="test_render" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_src" name="test_render_mass_source_transient" time="0.036" /><testcase classname="imod.tests.test_mf6.test_mf6_ssm" name="test_transport_model_rendering" time="0.209" /><testcase classname="imod.tests.test_mf6.test_mf6_ssm" name="test_transport_model_multi_bcs_rendering" time="0.200" /><testcase classname="imod.tests.test_mf6.test_mf6_ssm" name="test_transport_model_rendering_settings" time="0.200" /><testcase classname="imod.tests.test_mf6.test_mf6_ssm" name="test_wrong_dtype" time="0.073" /><testcase classname="imod.tests.test_mf6.test_mf6_statusinfo.TestStatusInfo" name="test_errors_add_message_has_error" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_statusinfo.TestStatusInfo" name="test_errors_add_three_messages_has_three_messages" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_statusinfo.TestNestedStatusInfo" name="test_errors_multiple_children_and_grandchildren_flatten_nested_errors" time="0.001" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_render_specific_storage_with_specific_yield" time="0.034" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_render_specific_storage_without_specific_yield" time="0.030" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_render_specific_storage_save_flows" time="0.032" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_render_specific_storage_three_periods" time="0.034" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_render_storage_coefficient" time="0.031" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_render_storage_coefficient_save_flows" time="0.033" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_storage_deprecation_warning" time="0.003" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_wrong_dtype_sc" time="0.027" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_wrong_dtype_ss" time="0.028" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_validate_false" time="0.028" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_validate_transient_wrong_dtype" time="0.025" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_validate_transient_wrong_dim" time="0.026" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_wrong_value_ss" time="0.075" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_wrong_value_sc" time="0.076" /><testcase classname="imod.tests.test_mf6.test_mf6_sto" name="test_check_nan_in_active_cell" time="0.122" /><testcase classname="imod.tests.test_mf6.test_mf6_timedis" name="test_render" time="0.028" /><testcase classname="imod.tests.test_mf6.test_mf6_timedis" name="test_wrong_dtype" time="0.021" /><testcase classname="imod.tests.test_mf6.test_mf6_timedis" name="test_wrong_dims" time="0.022" /><testcase classname="imod.tests.test_mf6.test_mf6_timedis" name="test_validate_false" time="0.014" /><testcase classname="imod.tests.test_mf6.test_mf6_transport_model" name="test_long_package_name" time="0.014" /><testcase classname="imod.tests.test_mf6.test_mf6_transport_model" name="test_transport_model_rendering" time="0.041" /><testcase classname="imod.tests.test_mf6.test_mf6_transport_model" name="test_assign_flow_discretization" time="0.112" /><testcase classname="imod.tests.test_mf6.test_mf6_transport_model" name="test_flowmodel_validation" time="0.372" /><testcase classname="imod.tests.test_mf6.test_mf6_transport_model" name="test_transport_concentration_loading" time="3.923" /><testcase classname="imod.tests.test_mf6.test_mf6_transport_model" name="test_transport_balance_loading" time="3.790" /><testcase classname="imod.tests.test_mf6.test_mf6_transport_model" name="test_transport_output_wrong_species" time="3.668" /><testcase classname="imod.tests.test_mf6.test_mf6_unsupported_grid_operations" name="test_mf6_simulation_partition_with_lakes" time="0.358" /><testcase classname="imod.tests.test_mf6.test_mf6_unsupported_grid_operations" name="test_mf6_simulation_regrid_with_lakes" time="0.354" /><testcase classname="imod.tests.test_mf6.test_mf6_unsupported_grid_operations" name="test_mf6_model_regrid_with_lakes" time="0.353" /><testcase classname="imod.tests.test_mf6.test_mf6_unsupported_grid_operations" name="test_mf6_package_regrid_with_lakes" time="0.352" /><testcase classname="imod.tests.test_mf6.test_mf6_unsupported_grid_operations" name="test_mf6_simulation_clip_with_lakes" time="0.351" /><testcase classname="imod.tests.test_mf6.test_mf6_unsupported_grid_operations" name="test_mf6_model_clip_with_lakes" time="0.347" /><testcase classname="imod.tests.test_mf6.test_mf6_unsupported_grid_operations" name="test_mf6_package_clip_with_lakes" time="0.350" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_wrong_dtype" time="0.043" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_landflag" time="0.044" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_iuzno" time="0.045" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_ivertcon" time="0.045" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_checkoptions" time="0.055" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_to_sparsedata" time="0.056" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_fill_perioddata" time="0.057" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_packagedata" time="0.045" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf" name="test_render" time="0.048" /><testcase classname="imod.tests.test_mf6.test_mf6_uzf_model" name="test_simulation_write" time="1.425" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__high_lvl_stationary" time="0.105" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__validate" time="0.062" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__high_lvl_multilevel" time="0.098" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__high_lvl_transient" time="0.104" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[True-True-True]" time="0.101" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[True-True-False]" time="0.102" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[True-False-True]" time="0.102" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[True-False-False]" time="0.102" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[False-True-True]" time="0.100" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[False-True-False]" time="0.103" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[False-False-True]" time="0.101" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_to_mf6_pkg__save_flows[False-False-False]" time="0.101" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_is_empty" time="0.070" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_xy-parameterizable_basic_dis0]" time="0.044" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_layer_max-parameterizable_basic_dis0]" time="0.046" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_layer_min-parameterizable_basic_dis0]" time="0.046" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_layer_min_layer_max-parameterizable_basic_dis0]" time="0.047" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_top_is_scalar-parameterizable_basic_dis0]" time="0.046" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_top_is_non_layered_structuredgrid-parameterizable_basic_dis0]" time="0.054" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_top_is_layered_structuredgrid-parameterizable_basic_dis0]" time="0.049" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_top_is_non_layered_unstructuredgrid-parameterizable_basic_dis0]" time="0.076" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_top_is_layered_unstructuredgrid-parameterizable_basic_dis0]" time="0.072" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_missing_top-parameterizable_basic_dis0]" time="0.038" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_stationary[clip_missing_bottom-parameterizable_basic_dis0]" time="0.038" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_clip_box__high_lvl_transient[parameterizable_basic_dis0]" time="0.087" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_derive_cellid_from_points" time="0.006" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_render__stationary" time="0.053" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_render__transient" time="0.062" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_wrong_dtype" time="0.021" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_validate_false" time="0.013" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_render__concentration_dis_structured_constant_time" time="0.161" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_render__concentration_dis_vertices_constant_time" time="0.046" /><testcase classname="imod.tests.test_mf6.test_mf6_wel" name="test_render__concentration_dis_vertices_transient" time="0.050" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_mf6wel_to_struct_array__stationary" time="0.021" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_mf6wel_to_struct_array__transient" time="0.024" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_mf6wel_write_datafile__stationary" time="0.021" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_mf6wel_write__stationary" time="0.034" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_mf6wel_write__transient" time="0.041" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_mf6wel_render__transient" time="0.018" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_remove_inactive__stationary" time="0.005" /><testcase classname="imod.tests.test_mf6.test_mf6_wel_lowlvl" name="test_remove_inactive__transient" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[AdvectionCentral]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[AdvectionTVD]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[AdvectionUpstream]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[ApiPackage]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[Buoyancy]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[Dispersion]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[GWFGWF]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[GWFGWT]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[GWTGWT]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[ImmobileStorageTransfer]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[InitialConditions]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[MobileStorageTransfer]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[NodePropertyFlow]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[OutputControl]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[Solution]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[SpecificStorage]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[Storage]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[StorageCoefficient]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[StructuredDiscretization]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[TimeDiscretization]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_package_class_attributes[VerticesDiscretization]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[ConstantConcentration]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[ConstantHead]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[Drainage]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[Evapotranspiration]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[GeneralHeadBoundary]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[HorizontalFlowBarrierBase]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[HorizontalFlowBarrierHydraulicCharacteristic]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[HorizontalFlowBarrierMultiplier]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[HorizontalFlowBarrierResistance]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[Lake]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[LayeredHorizontalFlowBarrierHydraulicCharacteristic]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[LayeredHorizontalFlowBarrierMultiplier]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[LayeredHorizontalFlowBarrierResistance]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[MassSourceLoading]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[Recharge]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[River]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[SourceSinkMixing]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[Well]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[WellDisStructured]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_boundary_class_attributes[WellDisVertices]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_adv_boundary_class_attributes[UnsaturatedZoneFlow]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance0]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance1]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance2]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance3]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance4]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance5]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance6]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance7]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance8]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance9]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance10]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance11]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance12]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance13]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance14]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance15]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance16]" time="0.005" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance17]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance18]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance19]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance20]" time="0.005" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance21]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance22]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance23]" time="0.005" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance24]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance25]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance26]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance27]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance28]" time="0.006" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance29]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance30]" time="0.011" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance31]" time="0.015" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance32]" time="0.006" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance33]" time="0.013" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance34]" time="0.007" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance35]" time="0.006" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance36]" time="0.006" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance37]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance38]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance39]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance40]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance41]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance42]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance43]" time="0.008" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance44]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance45]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance46]" time="0.006" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_render_twice[instance47]" time="0.013" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance0]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance1]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance2]" time="0.019" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance3]" time="0.035" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance4]" time="0.015" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance5]" time="0.024" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance6]" time="0.018" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance7]" time="0.015" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance8]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance9]" time="0.010" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance10]" time="0.017" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance11]" time="0.019" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance12]" time="0.021" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance13]" time="0.025" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance14]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance15]" time="0.025" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance16]" time="0.045" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance17]" time="0.017" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance18]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance19]" time="0.012" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance20]" time="0.018" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance21]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance22]" time="0.021" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance23]" time="0.026" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance24]" time="0.023" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance25]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance26]" time="0.023" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance27]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance28]" time="0.113" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance29]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance30]" time="0.014" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance31]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance32]" time="0.013" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance33]" time="0.023" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance34]" time="0.043" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance35]" time="0.015" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance36]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance37]" time="0.011" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance38]" time="0.017" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance39]" time="0.018" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance40]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance41]" time="0.025" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance42]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance43]" time="0.018" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance44]" time="0.021" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance45]" time="0.013" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance46]" time="0.113" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_save_and_load[instance47]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance0]" time="0.002" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance1]" time="0.005" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance2]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance3]" time="0.007" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance4]" time="0.005" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance5]" time="0.010" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance6]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance7]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance8]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance9]" time="0.002" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance10]" time="0.011" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance11]" time="0.006" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance12]" time="0.010" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance13]" time="0.022" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance14]" time="0.008" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance15]" time="0.020" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance16]" time="0.012" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance17]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance18]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance19]" time="0.002" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance20]" time="0.010" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance21]" time="0.010" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance22]" time="0.012" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance23]" time="0.024" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance24]" time="0.012" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance25]" time="0.010" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance26]" time="0.015" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance27]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance28]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance29]" time="0.005" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance30]" time="0.011" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance31]" time="0.027" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance32]" time="0.008" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance33]" time="0.025" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance34]" time="0.012" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance35]" time="0.008" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance36]" time="0.008" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance37]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance38]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance39]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance40]" time="0.013" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance41]" time="0.024" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance42]" time="0.013" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance43]" time="0.009" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance44]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance45]" time="0.004" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance46]" time="0.016" /><testcase classname="imod.tests.test_mf6.test_package_sanity" name="test_repr[instance47]" time="0.010" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_write_well[write_wel_structured]" time="0.110" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_write_well[write_wel_unstructured]" time="0.122" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_write_well_from_model" time="1.011" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_write_well_from_model_transient_rate" time="1.071" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_write_all_wells_filtered_out" time="0.860" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_write_one_well_filtered_out" time="0.857" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_write_one_layer_filtered_out" time="0.938" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_constraints_are_configurable" time="1.716" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_non_unique_ids" time="0.452" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_error_message_wells_outside_grid[twri_model]" time="0.893" /><testcase classname="imod.tests.test_mf6.test_well_highlvl" name="test_error_message_wells_outside_grid[circle_model]" time="0.892" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_create_exchanges_validate_number_of_exchanges[parameterizable_basic_dis0-1-1]" time="0.079" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_create_exchanges_validate_number_of_exchanges[parameterizable_basic_dis0-3-1]" time="0.185" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_create_exchanges_validate_number_of_exchanges[parameterizable_basic_dis0-1-3]" time="0.184" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_create_exchanges_validate_number_of_exchanges[parameterizable_basic_dis0-3-3]" time="0.619" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_create_exchanges_validate_local_cell_ids[parameterizable_basic_dis0-split_along_x_axis]" time="0.136" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_create_exchanges_validate_local_cell_ids[parameterizable_basic_dis0-split_along_y_axis]" time="0.136" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_create_exchanges_validate_local_cell_ids[parameterizable_basic_dis0-split_along_both_axis]" time="0.266" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_exchange_geometric_information[parameterizable_basic_dis0-split_along_x_axis]" time="0.141" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_exchange_geometric_information[parameterizable_basic_dis0-split_along_y_axis]" time="0.138" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_structured.TestExchangeCreator_Structured" name="test_exchange_geometric_information[parameterizable_basic_dis0-split_along_both_axis]" time="0.278" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_unstructured.TestExchangeCreator_Unstructured" name="test_create_exchanges_unstructured_validate_number_of_exchanges[2]" time="0.540" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_unstructured.TestExchangeCreator_Unstructured" name="test_create_exchanges_unstructured_validate_number_of_exchanges[3]" time="0.589" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_unstructured.TestExchangeCreator_Unstructured" name="test_create_exchanges_unstructured_validate_number_of_exchanges[5]" time="0.691" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_unstructured.TestExchangeCreator_Unstructured" name="test_create_exchanges_unstructured_validate_exchange_locations" time="0.539" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_unstructured.TestExchangeCreator_Unstructured" name="test_create_exchanges_unstructured_validate_geometric_coefficients[parameterizable_basic_dis0]" time="0.090" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_unstructured.TestExchangeCreator_Unstructured" name="test_create_exchanges_unstructured_validate_auxiliary_coefficients[x-parameterizable_basic_dis0]" time="0.090" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_exchange_creator_unstructured.TestExchangeCreator_Unstructured" name="test_create_exchanges_unstructured_validate_auxiliary_coefficients[y-parameterizable_basic_dis0]" time="0.090" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter" name="test_slice_model_structured" time="1.342" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter" name="test_slice_model_unstructured" time="1.290" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter" name="test_slice_model_with_auxiliary_variables" time="5.316" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_slice_model_structured" time="1.692" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_dump" time="19.671" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_model" time="21.408" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_model_evaluate_output" time="15.876" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_model_evaluate_output_with_species" time="15.401" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_settings[True-TVD]" time="5.377" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_settings[True-upstream]" time="5.411" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_settings[True-central]" time="5.398" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_settings[False-TVD]" time="5.382" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_settings[False-upstream]" time="5.392" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_modelsplitter_transport" name="test_split_flow_and_transport_settings[False-central]" time="5.374" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partition_generation" name="test_partition_1d_errors" time="0.001" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partition_generation" name="test_partition_1d_partition_short_axis" time="0.001" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partition_generation" name="test_partition_1d_happy_flow" time="0.001" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partition_generation" name="test_partition_2d_unstructured" time="0.497" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partition_generation" name="test_partition_2d_structured" time="0.385" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioned_simulation_postprocessing" name="test_import_heads_structured" time="4.001" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioned_simulation_postprocessing" name="test_import_heads_unstructured" time="4.693" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioned_simulation_postprocessing" name="test_import_balances_structured" time="4.750" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioned_simulation_postprocessing" name="test_import_balances_unstructured" time="5.026" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured[diagonal_array_1]" time="4.057" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured[diagonal_array_2]" time="4.005" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured[four_squares]" time="6.680" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured[intrusion]" time="4.091" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured[island]" time="3.818" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_split_dump[four_squares]" time="7.912" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_write_after_split[four_squares]" time="3.907" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_inactive_cells[diagonal_array_1]" time="4.063" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_inactive_cells[diagonal_array_2]" time="4.017" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_inactive_cells[four_squares]" time="6.758" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_inactive_cells[intrusion]" time="3.983" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_inactive_cells[island]" time="3.804" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_vpt_cells[diagonal_array_1]" time="4.172" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_vpt_cells[diagonal_array_2]" time="4.004" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_vpt_cells[four_squares]" time="6.647" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_vpt_cells[intrusion]" time="3.979" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_with_vpt_cells[island]" time="3.917" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_geometry_auxiliary_variables[intrusion]" time="1.635" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[diagonal_array_1-one_well]" time="3.963" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[diagonal_array_1-all_well]" time="4.073" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[diagonal_array_2-one_well]" time="3.918" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[diagonal_array_2-all_well]" time="4.061" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[four_squares-one_well]" time="6.641" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[four_squares-all_well]" time="6.803" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[intrusion-one_well]" time="3.959" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[intrusion-all_well]" time="4.322" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[island-one_well]" time="4.933" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_one_high_level_well[island-all_well]" time="4.915" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_1-hfb_vertical]" time="5.607" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_1-hfb_horizontal]" time="5.646" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_1-hfb_horizontal_outside_domain]" time="4.506" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_1-hfb_diagonal]" time="4.635" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_2-hfb_vertical]" time="4.564" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_2-hfb_horizontal]" time="4.711" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_2-hfb_horizontal_outside_domain]" time="5.706" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[diagonal_array_2-hfb_diagonal]" time="5.220" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[four_squares-hfb_vertical]" time="9.764" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[four_squares-hfb_horizontal]" time="9.022" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[four_squares-hfb_horizontal_outside_domain]" time="8.567" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[four_squares-hfb_diagonal]" time="4.620"><skipped type="pytest.xfail" message="Combination hfb - partition_array expected to fail." /></testcase><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[intrusion-hfb_vertical]" time="5.161" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[intrusion-hfb_horizontal]" time="5.354" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[intrusion-hfb_horizontal_outside_domain]" time="5.379" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[intrusion-hfb_diagonal]" time="5.244" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[island-hfb_vertical]" time="5.065" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[island-hfb_horizontal]" time="5.076" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[island-hfb_horizontal_outside_domain]" time="5.100" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_structured" name="test_partitioning_structured_hfb[island-hfb_diagonal]" time="5.225" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured[two_parts]" time="4.774" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured[three_parts]" time="7.132" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured[concentric]" time="5.578" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_inactive_cells[two_parts-0]" time="4.359" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_inactive_cells[two_parts--1]" time="4.394" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_inactive_cells[three_parts-0]" time="5.924" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_inactive_cells[three_parts--1]" time="6.072" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_inactive_cells[concentric-0]" time="4.837" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_inactive_cells[concentric--1]" time="4.958" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[two_parts-hfb_vertical]" time="4.767" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[two_parts-hfb_horizontal]" time="4.903" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[two_parts-hfb_horizontal_outside_domain]" time="5.007" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[two_parts-hfb_horizontal_origin]" time="5.032" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[two_parts-hfb_diagonal]" time="5.236" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[three_parts-hfb_vertical]" time="6.706" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[three_parts-hfb_horizontal]" time="6.708" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[three_parts-hfb_horizontal_outside_domain]" time="6.731" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[three_parts-hfb_horizontal_origin]" time="6.892" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[three_parts-hfb_diagonal]" time="6.643" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[concentric-hfb_vertical]" time="0.526"><skipped type="pytest.xfail" message="Combination hfb - partition_array expected to fail." /></testcase><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[concentric-hfb_horizontal]" time="5.462" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[concentric-hfb_horizontal_outside_domain]" time="5.391" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[concentric-hfb_horizontal_origin]" time="5.430" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_hfb[concentric-hfb_diagonal]" time="5.278" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_well[two_parts-one_well]" time="5.038" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_well[two_parts-all_wells]" time="5.273" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_well[three_parts-one_well]" time="6.531" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_well[three_parts-all_wells]" time="7.157" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_well[concentric-one_well]" time="5.480" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partitioning_unstructured_with_well[concentric-all_wells]" time="5.668" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partition_transport[two_parts]" time="10.215" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partition_transport[three_parts]" time="14.332" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partition_transport[concentric]" time="11.386" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partition_transport_multispecies[two_parts]" time="14.705" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partition_transport_multispecies[three_parts]" time="20.872" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_partition_transport_multispecies[concentric]" time="17.037" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured" name="test_slice_model_twice" time="4.986" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts]" time="5.105" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts2]" time="5.106" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts3]" time="4.720" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts4]" time="4.908" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts_inverse]" time="5.002" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts_inverse2]" time="5.077" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts_inverse3]" time="4.889" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[two_parts_inverse4]" time="4.862" /><testcase classname="imod.tests.test_mf6.test_multimodel.test_mf6_partitioning_unstructured_discharge" name="test_specific_discharge_results[three_parts]" time="6.675" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid_convex_grid" time="0.087" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid_concave_grid" time="0.051" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid_unstructured_grid" time="0.076" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid_wrong_grid_type" time="0.003" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid_with_line_data_package__structured" time="0.033" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid_with_line_data_package__unstructured" time="0.034" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid__structured_grid_full" time="0.046" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid__structured_grid_clipped" time="0.046" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid__unstructured_grid_full" time="0.055" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid__unstructured_grid_clipped" time="0.046" /><testcase classname="imod.tests.test_mf6.test_utilities.test_clip_utilities" name="test_clip_by_grid_contains_non_grid_data_variables" time="0.054" /><testcase classname="imod.tests.test_mf6.test_utilities.test_regrid_utils" name="test_regridders_weight_cache_returns_similar_instance_when_enum_and_method_match" time="0.147" /><testcase classname="imod.tests.test_mf6.test_utilities.test_regrid_utils" name="test_regridders_weight_cache_combining_different_instantiation_parmeters" time="0.127" /><testcase classname="imod.tests.test_mf6.test_utilities.test_regrid_utils" name="test_regridders_weight_cache_returns_different_instance_when_name_does_not_match" time="0.066" /><testcase classname="imod.tests.test_mf6.test_utilities.test_regrid_utils" name="test_non_regridder_cannot_be_instantiated" time="0.005" /><testcase classname="imod.tests.test_mf6.test_utilities.test_regrid_utils" name="test_regridders_weight_cache_grows_up_to_size_limit" time="0.154" /><testcase classname="imod.tests.test_mf6.test_utilities.test_regrid_utils" name="test_error_messages" time="0.065" /><testcase classname="imod.tests.test_mf6.test_utilities.test_regrid_utils" name="test_create_regridder_from_class_not_enum" time="0.083" /><testcase classname="imod.tests.test_mf6.test_utilities.test_schemata_utilities" name="test_filter_schemata_dict[empty]" time="0.001" /><testcase classname="imod.tests.test_mf6.test_utilities.test_schemata_utilities" name="test_filter_schemata_dict[river_allnodata]" time="0.002" /><testcase classname="imod.tests.test_mf6.test_utilities.test_schemata_utilities" name="test_filter_schemata_dict[river_allnodata_identitynodataschema]" time="0.003" /><testcase classname="imod.tests.test_mf6.test_utilities.test_schemata_utilities" name="test_filter_schemata_dict[river_not_found]" time="0.003" /><testcase classname="imod.tests.test_msw.test_coupler_mapping" name="test_simple_model_with_sprinkling" time="0.073" /><testcase classname="imod.tests.test_msw.test_coupler_mapping" name="test_simple_model_with_sprinkling_1_subunit" time="0.070" /><testcase classname="imod.tests.test_msw.test_coupler_mapping" name="test_simple_model_without_sprinkling" time="0.054" /><testcase classname="imod.tests.test_msw.test_evapotranspiration_mapping" name="test_evapotranspiration_mapping_simple" time="0.007" /><testcase classname="imod.tests.test_msw.test_evapotranspiration_mapping" name="test_evapotranspiration_mapping_negative_dx" time="0.007" /><testcase classname="imod.tests.test_msw.test_evapotranspiration_mapping" name="test_evapotranspiration_mapping_out_of_bound" time="0.013" /><testcase classname="imod.tests.test_msw.test_grid_data" name="test_write" time="2.673" /><testcase classname="imod.tests.test_msw.test_grid_data" name="test_generate_index_array" time="0.028" /><testcase classname="imod.tests.test_msw.test_grid_data" name="test_simple_model" time="0.024" /><testcase classname="imod.tests.test_msw.test_grid_data" name="test_simple_model_1_subunit" time="0.037" /><testcase classname="imod.tests.test_msw.test_grid_data" name="test_area_grid_exceeds_cell_area" time="0.023" /><testcase classname="imod.tests.test_msw.test_grid_data" name="test_non_equidistant" time="0.015" /><testcase classname="imod.tests.test_msw.test_infiltration" name="test_write" time="1.451" /><testcase classname="imod.tests.test_msw.test_infiltration" name="test_simple_model" time="0.031" /><testcase classname="imod.tests.test_msw.test_initial_conditions" name="test_initial_conditions_equilibrium" time="0.005" /><testcase classname="imod.tests.test_msw.test_initial_conditions" name="test_initial_conditions_percolation" time="0.002" /><testcase classname="imod.tests.test_msw.test_initial_conditions" name="test_initial_conditions_rootzone_pressure_head" time="0.004" /><testcase classname="imod.tests.test_msw.test_initial_conditions" name="test_initial_conditions_saved_state" time="0.003" /><testcase classname="imod.tests.test_msw.test_initial_conditions" name="test_initial_conditions_saved_state_no_file" time="0.002" /><testcase classname="imod.tests.test_msw.test_landuse_options" name="test_landuse_options" time="0.054" /><testcase classname="imod.tests.test_msw.test_meteo_grid" name="test_meteo_grid" time="0.028" /><testcase classname="imod.tests.test_msw.test_meteo_grid" name="test_meteo_no_time_grid" time="0.004" /><testcase classname="imod.tests.test_msw.test_model" name="test_msw_model_write" time="0.319" /><testcase classname="imod.tests.test_msw.test_model" name="test_get_starttime" time="0.174" /><testcase classname="imod.tests.test_msw.test_model" name="test_get_pkgkey" time="0.151" /><testcase classname="imod.tests.test_msw.test_model" name="test_check_required_packages" time="0.199" /><testcase classname="imod.tests.test_msw.test_model" name="test_check_vegetation_indices_in_annual_crop_factors" time="0.163" /><testcase classname="imod.tests.test_msw.test_model" name="test_check_landuse_indices_in_lookup_options" time="0.352" /><testcase classname="imod.tests.test_msw.test_model" name="test_render_unsat_database_path" time="0.201" /><testcase classname="imod.tests.test_msw.test_output_control" name="test_var_oc" time="0.010" /><testcase classname="imod.tests.test_msw.test_output_control" name="test_time_oc" time="0.007" /><testcase classname="imod.tests.test_msw.test_output_control" name="test_idf_oc_write_simple_model" time="0.019" /><testcase classname="imod.tests.test_msw.test_output_control" name="test_idf_oc_settings_simple_model" time="0.022" /><testcase classname="imod.tests.test_msw.test_ponding" name="test_simple_model" time="0.023" /><testcase classname="imod.tests.test_msw.test_precipitation_mapping" name="test_precipitation_mapping_simple" time="0.007" /><testcase classname="imod.tests.test_msw.test_precipitation_mapping" name="test_precipitation_mapping_negative_dy" time="0.010" /><testcase classname="imod.tests.test_msw.test_precipitation_mapping" name="test_precipitation_mapping_out_of_bound" time="0.004" /><testcase classname="imod.tests.test_msw.test_scaling_factors" name="test_simple_model" time="0.015" /><testcase classname="imod.tests.test_msw.test_sprinkling" name="test_simple_model" time="0.039" /><testcase classname="imod.tests.test_msw.test_sprinkling" name="test_simple_model_1_subunit" time="0.051" /><testcase classname="imod.tests.test_select.test_select_cross_sections" name="test_draw_line__diagonal" time="0.002" /><testcase classname="imod.tests.test_select.test_select_cross_sections" name="test_cross_section" time="0.018" /><testcase classname="imod.tests.test_select.test_select_grid" name="test_grid_boundary_xy__all_active" time="0.007" /><testcase classname="imod.tests.test_select.test_select_grid" name="test_grid_boundary_xy__inactive" time="0.006" /><testcase classname="imod.tests.test_select.test_select_grid" name="test_grid_boundary_xy__unstructured" time="0.021" /><testcase classname="imod.tests.test_select.test_select_grid" name="test_active_grid_boundary_xy__all_active" time="0.006" /><testcase classname="imod.tests.test_select.test_select_grid" name="test_active_grid_boundary_xy__inactive" time="0.008" /><testcase classname="imod.tests.test_select.test_select_layers" name="test_upper_active_layer_ibound" time="0.005" /><testcase classname="imod.tests.test_select.test_select_layers" name="test_upper_active_layer_ibound_some_inactive" time="0.011" /><testcase classname="imod.tests.test_select.test_select_layers" name="test_upper_active_layer_ibound_all_inactive" time="0.006" /><testcase classname="imod.tests.test_select.test_select_layers" name="test_upper_active_layer_values" time="0.004" /><testcase classname="imod.tests.test_select.test_select_layers" name="test_upper_active_layer_not_an_ibound" time="0.003" /><testcase classname="imod.tests.test_select.test_select_points" name="test_in_bounds" time="0.013" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_indices__nonequidistant" time="0.010" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_indices__equidistant" time="0.002" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_indices__unstructured" time="0.002" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_values__unstructured" time="0.004" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_indices__uda_elevation" time="0.819" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_values__uda_elevation" time="0.004" /><testcase classname="imod.tests.test_select.test_select_points" name="test_set_values" time="0.008" /><testcase classname="imod.tests.test_select.test_select_points" name="test_set_values__error" time="0.002" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_values" time="0.005" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_values__index" time="0.006" /><testcase classname="imod.tests.test_select.test_select_points" name="test_get_values__scalar" time="0.005" /><testcase classname="imod.tests.test_util.test_util" name="test_public_api" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_compose" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_compose__pattern" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_species" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_short_date" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_nonstandard_date" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_only_year" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_underscore" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_dash" time="0.002" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_steady_state" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_underscore_in_name" time="0.002" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_pattern_underscore" time="0.002" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_pattern_dash" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_regexpattern" time="0.002" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_nodate" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_dateonly" time="0.002" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_datelayeronly" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_z_float" time="0.002" /><testcase classname="imod.tests.test_util.test_util_path" name="test_compose_year9999" time="0.001" /><testcase classname="imod.tests.test_util.test_util_path" name="test_decompose_dateonly_year9999" time="0.001" /><testcase classname="imod.tests.test_util.test_util_spatial" name="test_transform" time="0.005" /><testcase classname="imod.tests.test_util.test_util_spatial" name="test_is_divisor" time="0.002" /><testcase classname="imod.tests.test_util.test_util_spatial" name="test_empty" time="0.013" /><testcase classname="imod.tests.test_util.test_util_spatial" name="test_compliant_ugrid2d" time="0.010" /><testcase classname="imod.tests.test_util.test_util_spatial" name="test_mdal_compliant_roundtrip" time="0.027" /><testcase classname="imod.tests.test_util.test_util_spatial" name="test_to_ugrid2d" time="0.089" /><testcase classname="imod.tests.test_util.test_util_structured" name="test_where" time="0.009" /><testcase classname="imod.tests.test_util.test_util_structured" name="test_replace" time="0.025" /><testcase classname="imod.tests.test_util.test_util_time" name="test_datetime_conversion__withinbounds" time="0.001" /><testcase classname="imod.tests.test_util.test_util_time" name="test_datetime_conversion__outofbounds" time="0.001" /><testcase classname="imod.tests.test_util.test_util_time" name="test_datetime_conversion__withinbounds_cftime" time="0.002" /><testcase classname="imod.tests.test_util.test_util_time" name="test__check_year" time="0.001" /><testcase classname="imod.tests.test_util.test_util_time" name="test_to_datetime__string_to_datetime64" time="0.001" /><testcase classname="imod.tests.test_util.test_util_time" name="test_to_datetime__string_to_cftime" time="0.002" /><testcase classname="imod.tests.test_util.test_util_time" name="test_to_datetime__cftime_to_cftime" time="0.001" /><testcase classname="imod.tests.test_util.test_util_time" name="test_to_datetime__datetime64_to_datetime64" time="0.001" /><testcase classname="imod.tests.test_util.test_util_time" name="test_forcing__month_day" time="0.002" /><testcase classname="imod.tests.test_util.test_util_time" name="test_forcing_partial__month_day" time="0.002" /><testcase classname="imod.tests.test_util.test_util_time" name="test_forcing__day_day" time="0.001" /><testcase classname="imod.tests.test_util.test_util_time" name="test_forcing_partial__day_day" time="0.002" /><testcase classname="imod.tests.test_util.test_util_time" name="test_forcing__irregular_day" time="0.002" /><testcase classname="imod.tests.test_visualize.test_visualize_common" name="test_cmapnorm_from_colorslevels_cmap" time="0.002" /><testcase classname="imod.tests.test_visualize.test_visualize_common" name="test_cmapnorm_from_colorslevels_colorslevels" time="0.001" /><testcase classname="imod.tests.test_visualize.test_visualize_common" name="test_cmapnorm_from_colorslevels_colornameslevels" time="0.001" /><testcase classname="imod.tests.test_visualize.test_visualize_common" name="test_cmapnorm_from_colorslevels_justonelevel" time="0.001" /><testcase classname="imod.tests.test_visualize.test_visualize_common" name="test_cmapnorm_from_colorslevels_unorderedlevels" time="0.001" /><testcase classname="imod.tests.test_visualize.test_visualize_common" name="test_cmapnorm_from_colorslevels_nooflevels" time="0.002" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[True-True-True]" time="0.705" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[True-True-False]" time="0.044" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[True-False-True]" time="0.048" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[True-False-False]" time="0.046" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[False-True-True]" time="0.042" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[False-True-False]" time="0.047" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[False-False-True]" time="0.044" /><testcase classname="imod.tests.test_visualize.test_visualize_cross_sections" name="test_plot_cross_section[False-False-False]" time="0.044" /><testcase classname="imod.tests.test_visualize.test_visualize_pyvista" name="test_grid3_plane" time="0.028" /><testcase classname="imod.tests.test_visualize.test_visualize_pyvista" name="test_grid3d_z" time="0.014" /><testcase classname="imod.tests.test_visualize.test_visualize_pyvista" name="test_grid3d_z3d" time="0.014" /><testcase classname="imod.tests.test_visualize.test_visualize_pyvista" name="test_grid_animation_3d" time="0.001"><skipped type="pytest.skip" message="CI isn't cooperating">d:\dev\imod_python-gh\imod-python\imod\tests\test_visualize\test_visualize_pyvista.py:81: CI isn't cooperating</skipped></testcase><testcase classname="imod.tests.test_visualize.test_visualize_pyvista" name="test_static_grid_animation_3d" time="0.001"><skipped type="pytest.skip" message="CI isn't cooperating">d:\dev\imod_python-gh\imod-python\imod\tests\test_visualize\test_visualize_pyvista.py:94: CI isn't cooperating</skipped></testcase><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_read_legend[,]" time="0.008" /><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_read_legend[ ]" time="0.008" /><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_read_legend[\t]" time="0.008" /><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_plot_map" time="0.038" /><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_plot_map_fig_ax_provided" time="0.040" /><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_plot_map_fig_provided" time="0.055" /><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_plot_map_ax_provided" time="0.019" /><testcase classname="imod.tests.test_visualize.test_visualize_spatial" name="test_plot_map_basemap" time="6.327" /><testcase classname="imod.tests.test_visualize.test_visualize_waterbalance" name="test_waterbalance_barchart" time="0.282" /><testcase classname="imod.tests.test_wq.test_wq_adv" name="test_render__DF" time="0.003" /><testcase classname="imod.tests.test_wq.test_wq_adv" name="test_render__TVD" time="0.001" /><testcase classname="imod.tests.test_wq.test_wq_adv" name="test_render__ModifiedMOC" time="0.002" /><testcase classname="imod.tests.test_wq.test_wq_bas" name="test_thickness" time="0.016" /><testcase classname="imod.tests.test_wq.test_wq_bas" name="test_render" time="0.018" /><testcase classname="imod.tests.test_wq.test_wq_bas" name="test_render_dis__scalartopbot" time="0.028" /><testcase classname="imod.tests.test_wq.test_wq_bas" name="test_render_dis__arraytopbot" time="0.022" /><testcase classname="imod.tests.test_wq.test_wq_bas" name="test_render_dis__nonequidistant" time="0.016" /><testcase classname="imod.tests.test_wq.test_wq_btn" name="test_btn_render_arrays" time="0.015" /><testcase classname="imod.tests.test_wq.test_wq_btn" name="test_btn_render_constants" time="0.015" /><testcase classname="imod.tests.test_wq.test_wq_chd" name="test_render" time="0.010" /><testcase classname="imod.tests.test_wq.test_wq_chd" name="test_render__stress_repeats[head_start]" time="0.027" /><testcase classname="imod.tests.test_wq.test_wq_chd" name="test_render__stress_repeats[head_end]" time="0.020" /><testcase classname="imod.tests.test_wq.test_wq_dis" name="test_render_dis" time="0.016" /><testcase classname="imod.tests.test_wq.test_wq_dis" name="test_render_dis__notime" time="0.014" /><testcase classname="imod.tests.test_wq.test_wq_dis" name="test_render_btn" time="0.008" /><testcase classname="imod.tests.test_wq.test_wq_drn" name="test_render" time="0.009" /><testcase classname="imod.tests.test_wq.test_wq_drn" name="test_render_with_time" time="0.022" /><testcase classname="imod.tests.test_wq.test_wq_drn" name="test_render_with_stress_repeats__elevation" time="0.033" /><testcase classname="imod.tests.test_wq.test_wq_drn" name="test_compress_discontinuous_layers" time="0.010" /><testcase classname="imod.tests.test_wq.test_wq_drn" name="test_render__stress_repeats[conductance]" time="0.019" /><testcase classname="imod.tests.test_wq.test_wq_drn" name="test_render__stress_repeats[elevation]" time="0.020" /><testcase classname="imod.tests.test_wq.test_wq_dsp" name="test_render_idf" time="0.012" /><testcase classname="imod.tests.test_wq.test_wq_dsp" name="test_render_constant" time="0.002" /><testcase classname="imod.tests.test_wq.test_wq_dsp" name="test_render_constant_per_layer" time="0.011" /><testcase classname="imod.tests.test_wq.test_wq_evt" name="test_render__highest_top" time="0.010" /><testcase classname="imod.tests.test_wq.test_wq_evt" name="test_render__layers" time="0.014" /><testcase classname="imod.tests.test_wq.test_wq_evt" name="test_render__highest_active" time="0.013" /><testcase classname="imod.tests.test_wq.test_wq_evt" name="test_render__stress_repeats[maximum_rate]" time="0.030" /><testcase classname="imod.tests.test_wq.test_wq_evt" name="test_render__stress_repeats[surface]" time="0.052" /><testcase classname="imod.tests.test_wq.test_wq_evt" name="test_render__stress_repeats[extinction_depth]" time="0.049" /><testcase classname="imod.tests.test_wq.test_wq_ghb" name="test_render" time="0.019" /><testcase classname="imod.tests.test_wq.test_wq_ghb" name="test_render__stress_repeats[head]" time="0.032" /><testcase classname="imod.tests.test_wq.test_wq_ghb" name="test_render__stress_repeats[conductance]" time="0.044" /><testcase classname="imod.tests.test_wq.test_wq_ghb" name="test_render__stress_repeats[concentration]" time="0.048" /><testcase classname="imod.tests.test_wq.test_wq_ghb" name="test_render__stress_repeats[density]" time="0.037" /><testcase classname="imod.tests.test_wq.test_wq_lpf" name="test_render" time="0.051" /><testcase classname="imod.tests.test_wq.test_wq_mal" name="test_render_mal__scalar" time="0.002" /><testcase classname="imod.tests.test_wq.test_wq_mal" name="test_render_mal__array" time="0.005" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_get_pkgkey" time="0.170" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_timediscretization" time="0.183" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_gen" time="0.190" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_pkg__gcg" time="0.154" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_pkg__evt" time="0.185" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_pkg__rch" time="0.156" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_dis" time="0.184" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_groups__ghb_riv_wel" time="0.176" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_groups__double_gbh" time="0.187" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_flowsolver" time="0.172" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_btn" time="0.199" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_ssm_rch_evt_mal_tvc" time="0.180" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_ssm_rch_constant" time="0.216" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_transportsolver" time="0.174" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render" time="0.219" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_cf" time="0.263" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_render_notime" time="0.207" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_mxsscount_incongruent_icbund" time="0.148" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_highest_active_recharge" time="0.160" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_write" time="1.205" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_write_pkgname_is_not_pkg_id" time="1.072" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_write__stress_repeats" time="1.112" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_write__error_stress_time_not_first" time="0.144" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_write_result_dir" time="0.940" /><testcase classname="imod.tests.test_wq.test_wq_model" name="test_write_result_dir_is_workdir" time="0.964" /><testcase classname="imod.tests.test_wq.test_wq_oc" name="test_render" time="0.004" /><testcase classname="imod.tests.test_wq.test_wq_pkggroup" name="test_render" time="0.023" /><testcase classname="imod.tests.test_wq.test_wq_pkggroup" name="test_render_error__concentration_twice" time="0.018" /><testcase classname="imod.tests.test_wq.test_wq_pkggroup" name="test_render__count_nolayer" time="0.015" /><testcase classname="imod.tests.test_wq.test_wq_rch" name="test_render__highest_top" time="0.006" /><testcase classname="imod.tests.test_wq.test_wq_rch" name="test_render__layers" time="0.007" /><testcase classname="imod.tests.test_wq.test_wq_rch" name="test_render__highest_active" time="0.006" /><testcase classname="imod.tests.test_wq.test_wq_rch" name="test_ssm_cellcount_scalar_highest_active" time="0.015" /><testcase classname="imod.tests.test_wq.test_wq_rch" name="test_render__stress_repeats[rate]" time="0.017" /><testcase classname="imod.tests.test_wq.test_wq_rch" name="test_render__stress_repeats[concentration]" time="0.020" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render" time="0.012" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render_multiple_scalar_concentration" time="0.027" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render_multiple_array_concentration" time="0.028" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_save_multiple_array_concentration" time="0.091" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render__stress_repeats[stage]" time="0.042" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render__stress_repeats[conductance]" time="0.022" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render__stress_repeats[bottom_elevation]" time="0.022" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render__stress_repeats[concentration]" time="0.034" /><testcase classname="imod.tests.test_wq.test_wq_riv" name="test_render__stress_repeats[density]" time="0.023" /><testcase classname="imod.tests.test_wq.test_wq_slv" name="test_pcg_render" time="0.003" /><testcase classname="imod.tests.test_wq.test_wq_slv" name="test_gcg_render" time="0.006" /><testcase classname="imod.tests.test_wq.test_wq_slv" name="test_compute_load_balance_weight" time="0.014" /><testcase classname="imod.tests.test_wq.test_wq_slv" name="test_pksf_render" time="0.013" /><testcase classname="imod.tests.test_wq.test_wq_slv" name="test_pksf_render_rcb" time="0.009" /><testcase classname="imod.tests.test_wq.test_wq_slv" name="test_pkst_render" time="0.005" /><testcase classname="imod.tests.test_wq.test_wq_slv" name="test_pkst_render_rcb" time="0.004" /><testcase classname="imod.tests.test_wq.test_wq_tvc" name="test_render_tvc__scalar" time="0.002" /><testcase classname="imod.tests.test_wq.test_wq_tvc" name="test_render_tvc__array" time="0.012" /><testcase classname="imod.tests.test_wq.test_wq_vdf" name="test_render" time="0.007" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_render" time="0.005" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_render__notime_nolayer" time="0.005" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_render__notime_layer" time="0.008" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_render__time_nolayer" time="0.007" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_render__time_layer" time="0.007" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_render_concentration" time="0.014" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_render_concentration_multiple_species" time="0.015" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_save" time="0.051" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_save_concentration" time="0.062" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_save_multiple_species" time="0.128" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_save__time_nolayer" time="0.042" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_save__notime_layer" time="0.029" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_save__notime_nolayer" time="0.024" /><testcase classname="imod.tests.test_wq.test_wq_wel" name="test_repeat_stress_error" time="0.026" /></testsuite></testsuites>