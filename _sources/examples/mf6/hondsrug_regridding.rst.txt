
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\mf6\hondsrug_regridding.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_mf6_hondsrug_regridding.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_mf6_hondsrug_regridding.py:


Regridding a regional model
===========================

This example shows how a model can be regridded using default regridding
methods. The example used is the Hondsrug model. It is regridded to a coarser
grid. The simulated heads before and after the regridding are shown for
comparison, and some statistics are plotted for the head distributions at the
end of the simulation. Histograms of the input arrays before and after
regridding are shown next.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: Python
   :dedent: 1










.. GENERATED FROM PYTHON SOURCE LINES 16-24

.. code-block:: Python

    import matplotlib.pyplot as plt
    import numpy as np
    import xarray as xr
    from example_models import create_hondsrug_simulation

    import imod
    from imod.typing import GridDataArray








.. GENERATED FROM PYTHON SOURCE LINES 25-28

Obtain the simulation, write it, run it, and plot some heads.
There is a separate example contained in :doc:`/examples/mf6/hondsrug`
that you should look at if you are interested in the model building

.. GENERATED FROM PYTHON SOURCE LINES 28-38

.. code-block:: Python

    gwf_simulation = create_hondsrug_simulation()

    original_modeldir = imod.util.temporary_directory() / "original"
    gwf_simulation.write(original_modeldir)
    gwf_simulation.run()
    hds_original = gwf_simulation.open_head()

    fig, ax = plt.subplots()
    hds_original.sel(layer=3).isel(time=6).plot(ax=ax)




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_001.png
   :alt: dx = 25.0, dy = -25.0, layer = 3, time = 2.191e+03
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    D:\buildAgent\work\b1e15a22da7c0d7f\imod-python\.pixi\envs\default\Lib\site-packages\xarray\core\groupby.py:534: FutureWarning: 'A' is deprecated and will be removed in a future version, please use 'YE' instead.
      index_grouper = pd.Grouper(
    D:\buildAgent\work\b1e15a22da7c0d7f\imod-python\examples\mf6\example_models.py:375: UserWarning: Converting non-nanosecond precision datetime values to nanosecond precision. This behavior can eventually be relaxed in xarray, as it is an artifact from pandas which is now beginning to support non-nanosecond precision values. This warning is caused by passing non-nanosecond np.datetime64 or np.timedelta64 values to the DataArray or Variable constructor; it can be silenced by converting the values to nanosecond precision ahead of time.
      rch_ss = rch_ss.assign_coords(time=starttime_steady)

    <matplotlib.collections.QuadMesh object at 0x000002692128E1D0>



.. GENERATED FROM PYTHON SOURCE LINES 39-40

Create the target grid we will regrid to.

.. GENERATED FROM PYTHON SOURCE LINES 40-62

.. code-block:: Python

    idomain = gwf_simulation["GWF_1"]["dis"]["idomain"]

    nlay = len(idomain.coords["layer"].values)
    nrow = 50
    ncol = 125
    shape = (nlay, nrow, ncol)

    xmin = idomain.coords["x"].min().values[()]
    xmax = idomain.coords["x"].max().values[()]
    ymin = idomain.coords["y"].min().values[()]
    ymax = idomain.coords["y"].max().values[()]

    delta_x = (xmax - xmin) / ncol
    delta_y = (ymax - ymin) / nrow
    dims = ("layer", "y", "x")
    new_x = np.arange(xmin, xmax, delta_x)
    new_y = np.arange(ymax, ymin, -delta_y)
    new_layer = idomain.coords["layer"].values
    coords = {"layer": new_layer, "y": new_y, "x": new_x, "dx": delta_x, "dy": delta_y}
    target_grid = xr.DataArray(np.ones(shape, dtype=int), coords=coords, dims=dims)









.. GENERATED FROM PYTHON SOURCE LINES 63-65

Regridding
==========

.. GENERATED FROM PYTHON SOURCE LINES 65-78

.. code-block:: Python


    # Regrid the simulation with the ``regrid_like`` method. Write, run, and plot the results.
    regridded_simulation = gwf_simulation.regrid_like(
        "hondsrug-regridded", target_grid, validate=False
    )

    regridded_modeldir = original_modeldir / ".." / "regridded"
    regridded_simulation.write(regridded_modeldir, validate=False)

    regridded_simulation.run()

    hds_regridded = regridded_simulation.open_head()








.. GENERATED FROM PYTHON SOURCE LINES 79-81

Results visualization
=====================

.. GENERATED FROM PYTHON SOURCE LINES 81-128

.. code-block:: Python

    fig, ax = plt.subplots()
    hds_regridded.sel(layer=3).isel(time=6).plot(ax=ax)


    def plot_histograms_side_by_side(
        array_original: GridDataArray, array_regridded: GridDataArray, title: str
    ):
        """This function creates a plot of normalized histograms of the 2 input
        DataArray. It plots a title above each histogram."""
        _, (ax0, ax1) = plt.subplots(1, 2, sharey=True, tight_layout=True)
        array_original.plot.hist(ax=ax0, bins=25, density=True)
        array_regridded.plot.hist(ax=ax1, bins=25, density=True)
        ax0.title.set_text(f"{title} (original)")
        ax1.title.set_text(f"{title} (regridded)")


    def write_summary_statistics(
        array_original: GridDataArray, array_regridded: GridDataArray, title: str
    ):
        def convert_to_filtered_1d(grid: GridDataArray) -> np.ndarray:
            """This function receives an xarray DataArray and converts it to an 1d numpy
            array. All NaN's are filtered out."""
            grid_as_1d = grid.values.ravel()
            filter = ~np.isnan(grid_as_1d)
            grid_as_1d = grid_as_1d[filter]
            return grid_as_1d

        original = convert_to_filtered_1d(array_original)
        regridded = convert_to_filtered_1d(array_regridded)
        print(f"\nsummary statistics {title}")
        print("~~~~~~~~~~~~~~~~~~~~~~~~~~")
        print(
            f"mean (original) {original.mean()}                    mean (regridded) {regridded.mean()}"
        )
        print(
            f"min (original) {original.min()}                      min (regridded) {regridded.min()}"
        )
        print(
            f"max (original) {original.max()}                      max (regridded) {regridded.max()}"
        )
        print(
            f"variance (original) {original.var()}                 variance (regridded) {regridded.var()}"
        )


    write_summary_statistics(hds_original.isel(time=6), hds_regridded.isel(time=6), "head")




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_002.png
   :alt: dx = 99.8, dy = -99.5, layer = 3, time = 2.191e+03
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    summary statistics head
    ~~~~~~~~~~~~~~~~~~~~~~~~~~
    mean (original) 5.581319897749301                    mean (regridded) 5.279009526678086
    min (original) 0.04073443694382525                      min (regridded) 0.1824987266280732
    max (original) 17.30898058097886                      max (regridded) 17.60210733085749
    variance (original) 8.857501814710492                 variance (regridded) 8.826954940274549




.. GENERATED FROM PYTHON SOURCE LINES 129-136

Comparison with histograms
==========================

In the next segment we will compare the input and output of the models on different grids.
We advice to always check how your input is regridded. In this example we upscaled grid,
many input parameters are regridded with a ``mean`` method. This means that their input
range is reduced, which can be seen in tailings in the histograms becoming shorter.

.. GENERATED FROM PYTHON SOURCE LINES 136-141

.. code-block:: Python


    plot_histograms_side_by_side(
        hds_original.isel(time=6), hds_regridded.isel(time=6), "head"
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_003.png
   :alt: head (original), head (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 142-143

Compare constant head arrays.

.. GENERATED FROM PYTHON SOURCE LINES 143-149

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["chd"].dataset["head"],
        regridded_simulation["GWF_1"]["chd"].dataset["head"],
        "chd head",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_004.png
   :alt: chd head (original), chd head (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 150-151

Compare horizontal hydraulic conductivities.

.. GENERATED FROM PYTHON SOURCE LINES 151-156

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["npf"].dataset["k"],
        regridded_simulation["GWF_1"]["npf"].dataset["k"],
        "npf k",
    )



.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_005.png
   :alt: npf k (original), npf k (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 157-158

Compare vertical hydraulic conductivities.

.. GENERATED FROM PYTHON SOURCE LINES 158-163

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["npf"].dataset["k33"],
        regridded_simulation["GWF_1"]["npf"].dataset["k33"],
        "npf k33",
    )



.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_006.png
   :alt: npf k33 (original), npf k33 (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-165

Compare starting heads.

.. GENERATED FROM PYTHON SOURCE LINES 165-171

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["ic"].dataset["start"],
        regridded_simulation["GWF_1"]["ic"].dataset["start"],
        "ic start",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_007.png
   :alt: ic start (original), ic start (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 172-173

Compare river stages.

.. GENERATED FROM PYTHON SOURCE LINES 173-179

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["riv"].dataset["stage"],
        regridded_simulation["GWF_1"]["riv"].dataset["stage"],
        "riv stage",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_008.png
   :alt: riv stage (original), riv stage (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 180-181

Compare river bottom elevations.

.. GENERATED FROM PYTHON SOURCE LINES 181-187

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["riv"].dataset["bottom_elevation"],
        regridded_simulation["GWF_1"]["riv"].dataset["bottom_elevation"],
        "riv bottom elevation",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_009.png
   :alt: riv bottom elevation (original), riv bottom elevation (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 188-189

Compare riverbed conductance.

.. GENERATED FROM PYTHON SOURCE LINES 189-195

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["riv"].dataset["conductance"],
        regridded_simulation["GWF_1"]["riv"].dataset["conductance"],
        "riv conductance",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_010.png
   :alt: riv conductance (original), riv conductance (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 196-197

Compare recharge rates.

.. GENERATED FROM PYTHON SOURCE LINES 197-203

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["rch"].dataset["rate"],
        regridded_simulation["GWF_1"]["rch"].dataset["rate"],
        "rch rate",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_011.png
   :alt: rch rate (original), rch rate (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 204-205

Compare drainage elevations.

.. GENERATED FROM PYTHON SOURCE LINES 205-211

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["drn-pipe"].dataset["elevation"],
        regridded_simulation["GWF_1"]["drn-pipe"].dataset["elevation"],
        "drn-pipe elevation",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_012.png
   :alt: drn-pipe elevation (original), drn-pipe elevation (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 212-213

Compare drain conductances.

.. GENERATED FROM PYTHON SOURCE LINES 213-218

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF_1"]["drn-pipe"].dataset["conductance"],
        regridded_simulation["GWF_1"]["drn-pipe"].dataset["conductance"],
        "drn-pipe conductance",
    )



.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_013.png
   :alt: drn-pipe conductance (original), drn-pipe conductance (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_013.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 59.271 seconds)


.. _sphx_glr_download_examples_mf6_hondsrug_regridding.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: hondsrug_regridding.ipynb <hondsrug_regridding.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: hondsrug_regridding.py <hondsrug_regridding.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
