
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\mf6\hondsrug_regridding.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_mf6_hondsrug_regridding.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_mf6_hondsrug_regridding.py:


Regridding a regional model
===========================

This example shows how a model can be regridded using default regridding
methods. The example used is the Hondsrug model. It is regridded to a coarser
grid. The simulated heads before and after the regridding are shown for
comparison, and some statistics are plotted for the head distributions at the
end of the simulation. Histograms of the input arrays before and after
regridding are shown next.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: Python
   :dedent: 1










.. GENERATED FROM PYTHON SOURCE LINES 16-23

.. code-block:: Python

    import matplotlib.pyplot as plt
    import numpy as np
    import xarray as xr

    import imod
    from imod.typing import GridDataArray








.. GENERATED FROM PYTHON SOURCE LINES 24-27

Obtain the simulation, write it, run it, and plot some heads.
There is a separate example contained in :doc:`/examples/mf6/hondsrug`
that you should look at if you are interested in the model building

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: Python

    tmpdir = imod.util.temporary_directory()

    gwf_simulation = imod.data.hondsrug_simulation(tmpdir / "hondsrug_saved")








.. GENERATED FROM PYTHON SOURCE LINES 32-34

The model was written before the xt3d_option and rhs_option arguments were
added to iMOD Python. Set missing options to False.

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    gwf_simulation["GWF"]["npf"].set_xt3d_option(is_xt3d_used=False, is_rhs=False)








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Write simulation

.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: Python

    original_modeldir = tmpdir / "original"
    gwf_simulation.write(original_modeldir)








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Run and open heads

.. GENERATED FROM PYTHON SOURCE LINES 43-49

.. code-block:: Python

    gwf_simulation.run()
    hds_original = gwf_simulation.open_head()

    fig, ax = plt.subplots()
    hds_original.sel(layer=3).isel(time=6).plot(ax=ax)




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_001.png
   :alt: dx = 25.0, dy = -25.0, layer = 3, time = 2.191e+03
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.collections.QuadMesh object at 0x0000015AAC9CB210>



.. GENERATED FROM PYTHON SOURCE LINES 50-51

Create the target grid we will regrid to.

.. GENERATED FROM PYTHON SOURCE LINES 51-73

.. code-block:: Python

    idomain = gwf_simulation["GWF"]["dis"]["idomain"]

    nlay = len(idomain.coords["layer"].values)
    nrow = 50
    ncol = 125
    shape = (nlay, nrow, ncol)

    xmin = idomain.coords["x"].min().values[()]
    xmax = idomain.coords["x"].max().values[()]
    ymin = idomain.coords["y"].min().values[()]
    ymax = idomain.coords["y"].max().values[()]

    delta_x = (xmax - xmin) / ncol
    delta_y = (ymax - ymin) / nrow
    dims = ("layer", "y", "x")
    new_x = np.arange(xmin, xmax, delta_x)
    new_y = np.arange(ymax, ymin, -delta_y)
    new_layer = idomain.coords["layer"].values
    coords = {"layer": new_layer, "y": new_y, "x": new_x, "dx": delta_x, "dy": delta_y}
    target_grid = xr.DataArray(np.ones(shape, dtype=int), coords=coords, dims=dims)









.. GENERATED FROM PYTHON SOURCE LINES 74-76

Regridding
==========

.. GENERATED FROM PYTHON SOURCE LINES 76-89

.. code-block:: Python


    # Regrid the simulation with the ``regrid_like`` method. Write, run, and plot the results.
    regridded_simulation = gwf_simulation.regrid_like(
        "hondsrug-regridded", target_grid, validate=False
    )

    regridded_modeldir = tmpdir / "regridded"
    regridded_simulation.write(regridded_modeldir, validate=False)

    regridded_simulation.run()

    hds_regridded = regridded_simulation.open_head()








.. GENERATED FROM PYTHON SOURCE LINES 90-92

Results visualization
=====================

.. GENERATED FROM PYTHON SOURCE LINES 92-139

.. code-block:: Python

    fig, ax = plt.subplots()
    hds_regridded.sel(layer=3).isel(time=6).plot(ax=ax)


    def plot_histograms_side_by_side(
        array_original: GridDataArray, array_regridded: GridDataArray, title: str
    ):
        """This function creates a plot of normalized histograms of the 2 input
        DataArray. It plots a title above each histogram."""
        _, (ax0, ax1) = plt.subplots(1, 2, sharey=True, tight_layout=True)
        array_original.plot.hist(ax=ax0, bins=25, density=True)
        array_regridded.plot.hist(ax=ax1, bins=25, density=True)
        ax0.title.set_text(f"{title} (original)")
        ax1.title.set_text(f"{title} (regridded)")


    def write_summary_statistics(
        array_original: GridDataArray, array_regridded: GridDataArray, title: str
    ):
        def convert_to_filtered_1d(grid: GridDataArray) -> np.ndarray:
            """This function receives an xarray DataArray and converts it to an 1d numpy
            array. All NaN's are filtered out."""
            grid_as_1d = grid.values.ravel()
            filter = ~np.isnan(grid_as_1d)
            grid_as_1d = grid_as_1d[filter]
            return grid_as_1d

        original = convert_to_filtered_1d(array_original)
        regridded = convert_to_filtered_1d(array_regridded)
        print(f"\nsummary statistics {title}")
        print("~~~~~~~~~~~~~~~~~~~~~~~~~~")
        print(
            f"mean (original) {original.mean()}                    mean (regridded) {regridded.mean()}"
        )
        print(
            f"min (original) {original.min()}                      min (regridded) {regridded.min()}"
        )
        print(
            f"max (original) {original.max()}                      max (regridded) {regridded.max()}"
        )
        print(
            f"variance (original) {original.var()}                 variance (regridded) {regridded.var()}"
        )


    write_summary_statistics(hds_original.isel(time=6), hds_regridded.isel(time=6), "head")




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_002.png
   :alt: dx = 99.8, dy = -99.5, layer = 3, time = 2.191e+03
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    summary statistics head
    ~~~~~~~~~~~~~~~~~~~~~~~~~~
    mean (original) 5.581319897749301                    mean (regridded) 4.404148626603712
    min (original) 0.04073443694382525                      min (regridded) 0.17061075128112985
    max (original) 17.30898058097886                      max (regridded) 12.600521120032152
    variance (original) 8.857501814710492                 variance (regridded) 4.650317522208325




.. GENERATED FROM PYTHON SOURCE LINES 140-147

Comparison with histograms
==========================

In the next segment we will compare the input and output of the models on different grids.
We advice to always check how your input is regridded. In this example we upscaled grid,
many input parameters are regridded with a ``mean`` method. This means that their input
range is reduced, which can be seen in tailings in the histograms becoming shorter.

.. GENERATED FROM PYTHON SOURCE LINES 147-152

.. code-block:: Python


    plot_histograms_side_by_side(
        hds_original.isel(time=6), hds_regridded.isel(time=6), "head"
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_003.png
   :alt: head (original), head (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 153-154

Compare constant head arrays.

.. GENERATED FROM PYTHON SOURCE LINES 154-160

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["chd"].dataset["head"],
        regridded_simulation["GWF"]["chd"].dataset["head"],
        "chd head",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_004.png
   :alt: chd head (original), chd head (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 161-162

Compare horizontal hydraulic conductivities.

.. GENERATED FROM PYTHON SOURCE LINES 162-167

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["npf"].dataset["k"],
        regridded_simulation["GWF"]["npf"].dataset["k"],
        "npf k",
    )



.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_005.png
   :alt: npf k (original), npf k (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 168-169

Compare vertical hydraulic conductivities.

.. GENERATED FROM PYTHON SOURCE LINES 169-174

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["npf"].dataset["k33"],
        regridded_simulation["GWF"]["npf"].dataset["k33"],
        "npf k33",
    )



.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_006.png
   :alt: npf k33 (original), npf k33 (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 175-176

Compare starting heads.

.. GENERATED FROM PYTHON SOURCE LINES 176-182

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["ic"].dataset["start"],
        regridded_simulation["GWF"]["ic"].dataset["start"],
        "ic start",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_007.png
   :alt: ic start (original), ic start (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 183-184

Compare river stages.

.. GENERATED FROM PYTHON SOURCE LINES 184-190

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["riv"].dataset["stage"],
        regridded_simulation["GWF"]["riv"].dataset["stage"],
        "riv stage",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_008.png
   :alt: riv stage (original), riv stage (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 191-192

Compare river bottom elevations.

.. GENERATED FROM PYTHON SOURCE LINES 192-198

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["riv"].dataset["bottom_elevation"],
        regridded_simulation["GWF"]["riv"].dataset["bottom_elevation"],
        "riv bottom elevation",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_009.png
   :alt: riv bottom elevation (original), riv bottom elevation (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 199-200

Compare riverbed conductance.

.. GENERATED FROM PYTHON SOURCE LINES 200-206

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["riv"].dataset["conductance"],
        regridded_simulation["GWF"]["riv"].dataset["conductance"],
        "riv conductance",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_010.png
   :alt: riv conductance (original), riv conductance (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 207-208

Compare recharge rates.

.. GENERATED FROM PYTHON SOURCE LINES 208-214

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["rch"].dataset["rate"],
        regridded_simulation["GWF"]["rch"].dataset["rate"],
        "rch rate",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_011.png
   :alt: rch rate (original), rch rate (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 215-216

Compare drainage elevations.

.. GENERATED FROM PYTHON SOURCE LINES 216-222

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["drn-pipe"].dataset["elevation"],
        regridded_simulation["GWF"]["drn-pipe"].dataset["elevation"],
        "drn-pipe elevation",
    )




.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_012.png
   :alt: drn-pipe elevation (original), drn-pipe elevation (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 223-224

Compare drain conductances.

.. GENERATED FROM PYTHON SOURCE LINES 224-229

.. code-block:: Python

    plot_histograms_side_by_side(
        gwf_simulation["GWF"]["drn-pipe"].dataset["conductance"],
        regridded_simulation["GWF"]["drn-pipe"].dataset["conductance"],
        "drn-pipe conductance",
    )



.. image-sg:: /examples/mf6/images/sphx_glr_hondsrug_regridding_013.png
   :alt: drn-pipe conductance (original), drn-pipe conductance (regridded)
   :srcset: /examples/mf6/images/sphx_glr_hondsrug_regridding_013.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 56.881 seconds)


.. _sphx_glr_download_examples_mf6_hondsrug_regridding.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: hondsrug_regridding.ipynb <hondsrug_regridding.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: hondsrug_regridding.py <hondsrug_regridding.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
