
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\imodflow\ImodflowProjectfile.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_imodflow_ImodflowProjectfile.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_imodflow_ImodflowProjectfile.py:


Model Creation
==============
In this example, we'll create an iMODFLOW model
from scratch with complex boundary conditions
and horizontal barriers.

There are two surface water systems:
the outer two edges of the grid feature ditches
with a rising stage, whereas the central ditch
has a periodic boundary conditions with a
summer and winter stage.

The model will be written as a projectfile
with a set of IDFs containing all the grid information
and a .tim file containing the time discretization.

.. GENERATED FROM PYTHON SOURCE LINES 20-23

We'll start with the usual imports, supplied
with geopandas and shapely to specify vector data
for the `hfb` package.

.. GENERATED FROM PYTHON SOURCE LINES 23-33

.. code-block:: Python


    import geopandas as gpd
    import numpy as np
    import pandas as pd
    import xarray as xr
    from shapely.geometry import LineString

    import imod
    import imod.flow as flow








.. GENERATED FROM PYTHON SOURCE LINES 34-41

Discretization
--------------

We'll start off by creating a model discretization.
The model consists of a 3 by 9 by 9 three-dimensional grid.

We'll specify the grid first.

.. GENERATED FROM PYTHON SOURCE LINES 41-52

.. code-block:: Python

    shape = nlay, nrow, ncol = 3, 9, 9

    dx = 100.0
    dy = -100.0
    dz = np.array([5, 30, 100])
    xmin = 0.0
    xmax = dx * ncol
    ymin = 0.0
    ymax = abs(dy) * nrow
    dims = ("layer", "y", "x")








.. GENERATED FROM PYTHON SOURCE LINES 53-55

Next, we'll create the coordinates
which set the grid dimensions.

.. GENERATED FROM PYTHON SOURCE LINES 55-61

.. code-block:: Python


    layer = np.arange(1, nlay + 1)
    y = np.arange(ymax, ymin, dy) + 0.5 * dy
    x = np.arange(xmin, xmax, dx) + 0.5 * dx
    coords = {"layer": layer, "y": y, "x": x}








.. GENERATED FROM PYTHON SOURCE LINES 62-63

The vertical grid discretization (tops and bottoms) are set with a 1D DataArray.

.. GENERATED FROM PYTHON SOURCE LINES 63-70

.. code-block:: Python


    surface = 0.0
    interfaces = np.insert((surface - np.cumsum(dz)), 0, surface)

    bottom = xr.DataArray(interfaces[1:], coords={"layer": layer}, dims="layer")
    top = xr.DataArray(interfaces[:-1], coords={"layer": layer}, dims="layer")








.. GENERATED FROM PYTHON SOURCE LINES 71-73

We'll have to create a time discretization as well.
Create 1 year of monthly timesteps

.. GENERATED FROM PYTHON SOURCE LINES 73-75

.. code-block:: Python

    times = pd.date_range(start="1/1/2018", end="12/1/2018", freq="MS")








.. GENERATED FROM PYTHON SOURCE LINES 76-78

We'll create our first 3 dimensional grid here,
the `ibound` grid, which sets where active cells are `(ibound = 1.0)`

.. GENERATED FROM PYTHON SOURCE LINES 78-81

.. code-block:: Python

    ibound = xr.DataArray(np.ones(shape), coords=coords, dims=dims)
    ibound






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (layer: 3, y: 9, x: 9)&gt;
    array([[[1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.]],

           [[1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.]],

           [[1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.]]])
    Coordinates:
      * layer    (layer) int32 1 2 3
      * y        (y) float64 850.0 750.0 650.0 550.0 450.0 350.0 250.0 150.0 50.0
      * x        (x) float64 50.0 150.0 250.0 350.0 450.0 550.0 650.0 750.0 850.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>layer</span>: 3</li><li><span class='xr-has-index'>y</span>: 9</li><li><span class='xr-has-index'>x</span>: 9</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-6dc5899b-c4df-4a70-8b23-99f6206cf3c7' class='xr-array-in' type='checkbox' checked><label for='section-6dc5899b-c4df-4a70-8b23-99f6206cf3c7' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 ... 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0</span></div><div class='xr-array-data'><pre>array([[[1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.]],

           [[1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.]],

           [[1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1., 1., 1., 1., 1.]]])</pre></div></div></li><li class='xr-section-item'><input id='section-daed3f0e-10a1-4418-b29c-384f731d2784' class='xr-section-summary-in' type='checkbox'  checked><label for='section-daed3f0e-10a1-4418-b29c-384f731d2784' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>layer</span></div><div class='xr-var-dims'>(layer)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>1 2 3</div><input id='attrs-c6d4b135-07b4-4d75-9173-70d1283e1a5f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c6d4b135-07b4-4d75-9173-70d1283e1a5f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3b14e63d-474f-44be-889e-5ce06cb42ba6' class='xr-var-data-in' type='checkbox'><label for='data-3b14e63d-474f-44be-889e-5ce06cb42ba6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 2, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>850.0 750.0 650.0 ... 150.0 50.0</div><input id='attrs-95b5d21d-ffb3-4a5b-8042-220897d8ab66' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-95b5d21d-ffb3-4a5b-8042-220897d8ab66' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-afd2fb11-3e22-40dd-88b4-9c08e4758733' class='xr-var-data-in' type='checkbox'><label for='data-afd2fb11-3e22-40dd-88b4-9c08e4758733' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([850., 750., 650., 550., 450., 350., 250., 150.,  50.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>50.0 150.0 250.0 ... 750.0 850.0</div><input id='attrs-53f7e9d3-13a9-4098-a5c9-752b85c1b736' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-53f7e9d3-13a9-4098-a5c9-752b85c1b736' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5bfc979c-c9a0-4fd2-9992-8c6d277a320b' class='xr-var-data-in' type='checkbox'><label for='data-5bfc979c-c9a0-4fd2-9992-8c6d277a320b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 50., 150., 250., 350., 450., 550., 650., 750., 850.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-8e19f7c4-7964-4e1a-a6be-bc203225d6e0' class='xr-section-summary-in' type='checkbox'  ><label for='section-8e19f7c4-7964-4e1a-a6be-bc203225d6e0' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>layer</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-0ee77b80-d590-4043-a021-92fecabefbff' class='xr-index-data-in' type='checkbox'/><label for='index-0ee77b80-d590-4043-a021-92fecabefbff' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Int64Index([1, 2, 3], dtype=&#x27;int64&#x27;, name=&#x27;layer&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-ef2b8fb0-b48e-4f8d-a51a-6a393d0be85d' class='xr-index-data-in' type='checkbox'/><label for='index-ef2b8fb0-b48e-4f8d-a51a-6a393d0be85d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([850.0, 750.0, 650.0, 550.0, 450.0, 350.0, 250.0, 150.0, 50.0], dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-fa10153d-55bf-4130-8758-7e5290da4f84' class='xr-index-data-in' type='checkbox'/><label for='index-fa10153d-55bf-4130-8758-7e5290da4f84' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([50.0, 150.0, 250.0, 350.0, 450.0, 550.0, 650.0, 750.0, 850.0], dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-37b7d595-c732-4bda-85e9-88451c203244' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-37b7d595-c732-4bda-85e9-88451c203244' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 82-87

Hydrogeology
------------

We'll create a very simple hydrogeology,
by specifying kh, kva, and sto as constants

.. GENERATED FROM PYTHON SOURCE LINES 87-92

.. code-block:: Python


    kh = 10.0
    kva = 1.0
    sto = 0.001








.. GENERATED FROM PYTHON SOURCE LINES 93-100

Initial conditions
------------------

We do not put much effort in the creation of the initial conditions
in this example, instead we copy the ibounds.
This is a 3D grid filled with the value 1, and we can use it as a
inital condition as well.

.. GENERATED FROM PYTHON SOURCE LINES 100-102

.. code-block:: Python

    starting_head = ibound.copy()








.. GENERATED FROM PYTHON SOURCE LINES 103-117

Boundary conditions
-------------------

We will put some more effort in creating some complex
boundary conditions. We'll create both two outer ditches
with a rising stage, as well as a central ditch with periodic
(summer-winter) stage.

Rising outer ditches
~~~~~~~~~~~~~~~~~~~~

First, we'll create rising trend,
by creating a 1D array ones with the same size as the time dimension,
and computing the cumulative sum over it.

.. GENERATED FROM PYTHON SOURCE LINES 117-123

.. code-block:: Python

    trend = np.ones(times[:-1].shape)
    trend = np.cumsum(trend)
    trend_da = xr.DataArray(trend, coords={"time": times[:-1]}, dims=["time"])

    trend_da






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (time: 11)&gt;
    array([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11.])
    Coordinates:
      * time     (time) datetime64[ns] 2018-01-01 2018-02-01 ... 2018-11-01</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 11</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-87812bfb-8bda-4543-b283-35b49621c31e' class='xr-array-in' type='checkbox' checked><label for='section-87812bfb-8bda-4543-b283-35b49621c31e' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0</span></div><div class='xr-array-data'><pre>array([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11.])</pre></div></div></li><li class='xr-section-item'><input id='section-9186cc7f-2973-4560-bfac-318ecb86d38f' class='xr-section-summary-in' type='checkbox'  checked><label for='section-9186cc7f-2973-4560-bfac-318ecb86d38f' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2018-01-01 ... 2018-11-01</div><input id='attrs-feafa891-5bd6-4ef9-85e5-b040e8adc17c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-feafa891-5bd6-4ef9-85e5-b040e8adc17c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bc54344c-f915-4494-b960-b1fddc196432' class='xr-var-data-in' type='checkbox'><label for='data-bc54344c-f915-4494-b960-b1fddc196432' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2018-01-01T00:00:00.000000000&#x27;, &#x27;2018-02-01T00:00:00.000000000&#x27;,
           &#x27;2018-03-01T00:00:00.000000000&#x27;, &#x27;2018-04-01T00:00:00.000000000&#x27;,
           &#x27;2018-05-01T00:00:00.000000000&#x27;, &#x27;2018-06-01T00:00:00.000000000&#x27;,
           &#x27;2018-07-01T00:00:00.000000000&#x27;, &#x27;2018-08-01T00:00:00.000000000&#x27;,
           &#x27;2018-09-01T00:00:00.000000000&#x27;, &#x27;2018-10-01T00:00:00.000000000&#x27;,
           &#x27;2018-11-01T00:00:00.000000000&#x27;], dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c55fb2c2-5e98-4d76-9647-9a334f264b7d' class='xr-section-summary-in' type='checkbox'  ><label for='section-c55fb2c2-5e98-4d76-9647-9a334f264b7d' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-892fe1a6-8c66-4b63-89c2-92dd673933bc' class='xr-index-data-in' type='checkbox'/><label for='index-892fe1a6-8c66-4b63-89c2-92dd673933bc' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2018-01-01&#x27;, &#x27;2018-02-01&#x27;, &#x27;2018-03-01&#x27;, &#x27;2018-04-01&#x27;,
                   &#x27;2018-05-01&#x27;, &#x27;2018-06-01&#x27;, &#x27;2018-07-01&#x27;, &#x27;2018-08-01&#x27;,
                   &#x27;2018-09-01&#x27;, &#x27;2018-10-01&#x27;, &#x27;2018-11-01&#x27;],
                  dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;time&#x27;, freq=&#x27;MS&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-305d3177-f18c-4ba1-a6f8-484d4bd1a309' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-305d3177-f18c-4ba1-a6f8-484d4bd1a309' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 124-125

Next, we assign values only to edges of model x domain.

.. GENERATED FROM PYTHON SOURCE LINES 125-130

.. code-block:: Python


    is_x_edge = starting_head.x.isin([x[0], x[-1]])
    head_edge = starting_head.where(is_x_edge)
    head_edge






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (layer: 3, y: 9, x: 9)&gt;
    array([[[ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.]],

           [[ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.]],

           [[ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.]]])
    Coordinates:
      * layer    (layer) int32 1 2 3
      * y        (y) float64 850.0 750.0 650.0 550.0 450.0 350.0 250.0 150.0 50.0
      * x        (x) float64 50.0 150.0 250.0 350.0 450.0 550.0 650.0 750.0 850.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>layer</span>: 3</li><li><span class='xr-has-index'>y</span>: 9</li><li><span class='xr-has-index'>x</span>: 9</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-d1a0cc65-a9da-45fb-91f7-fe08821369c3' class='xr-array-in' type='checkbox' checked><label for='section-d1a0cc65-a9da-45fb-91f7-fe08821369c3' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>1.0 nan nan nan nan nan nan nan ... nan nan nan nan nan nan nan 1.0</span></div><div class='xr-array-data'><pre>array([[[ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.]],

           [[ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.]],

           [[ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.],
            [ 1., nan, nan, nan, nan, nan, nan, nan,  1.]]])</pre></div></div></li><li class='xr-section-item'><input id='section-80734775-5ca5-4973-b3b1-9a4650f40cad' class='xr-section-summary-in' type='checkbox'  checked><label for='section-80734775-5ca5-4973-b3b1-9a4650f40cad' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>layer</span></div><div class='xr-var-dims'>(layer)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>1 2 3</div><input id='attrs-c78d457c-652c-4b98-ba54-8202296ff81e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c78d457c-652c-4b98-ba54-8202296ff81e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d7b2d3c8-bd46-4962-b8ed-81dec4d0c3d5' class='xr-var-data-in' type='checkbox'><label for='data-d7b2d3c8-bd46-4962-b8ed-81dec4d0c3d5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 2, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>850.0 750.0 650.0 ... 150.0 50.0</div><input id='attrs-29be3559-6e7f-4665-bb5d-ad1ec7091204' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-29be3559-6e7f-4665-bb5d-ad1ec7091204' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-17b5265a-6bb8-4086-ab10-5692be2b0cf4' class='xr-var-data-in' type='checkbox'><label for='data-17b5265a-6bb8-4086-ab10-5692be2b0cf4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([850., 750., 650., 550., 450., 350., 250., 150.,  50.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>50.0 150.0 250.0 ... 750.0 850.0</div><input id='attrs-588004bf-c09a-4870-9fcc-09a573607d14' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-588004bf-c09a-4870-9fcc-09a573607d14' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-20d482b2-445e-454a-a2c6-9e68690faf23' class='xr-var-data-in' type='checkbox'><label for='data-20d482b2-445e-454a-a2c6-9e68690faf23' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 50., 150., 250., 350., 450., 550., 650., 750., 850.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-9a7afc66-f053-4a79-b3d9-53b26060215c' class='xr-section-summary-in' type='checkbox'  ><label for='section-9a7afc66-f053-4a79-b3d9-53b26060215c' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>layer</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-a4d77817-7c45-463a-910a-c31c6ef990a0' class='xr-index-data-in' type='checkbox'/><label for='index-a4d77817-7c45-463a-910a-c31c6ef990a0' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Int64Index([1, 2, 3], dtype=&#x27;int64&#x27;, name=&#x27;layer&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-d9a89f63-6cf5-4e96-81a0-098aea08f65b' class='xr-index-data-in' type='checkbox'/><label for='index-d9a89f63-6cf5-4e96-81a0-098aea08f65b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([850.0, 750.0, 650.0, 550.0, 450.0, 350.0, 250.0, 150.0, 50.0], dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-c0ddb832-83db-4ee5-ac5b-8fd967d304df' class='xr-index-data-in' type='checkbox'/><label for='index-c0ddb832-83db-4ee5-ac5b-8fd967d304df' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([50.0, 150.0, 250.0, 350.0, 450.0, 550.0, 650.0, 750.0, 850.0], dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-cee888df-cfda-474d-b291-4dec8b4ef22f' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-cee888df-cfda-474d-b291-4dec8b4ef22f' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-137

Now let's multiply our
1D DataArray with dimension ``time``, with the static 3D grid
with dimension ``layer, y, x``,
which xarray automatically broadcasts to a 4D array,
with dimensions ``time, layer, y, x``
This finishes our

.. GENERATED FROM PYTHON SOURCE LINES 137-141

.. code-block:: Python


    head_edge_rising = trend_da * head_edge
    head_edge_rising






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (time: 11, layer: 3, y: 9, x: 9)&gt;
    array([[[[ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             ...,
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.]],

            [[ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             ...,
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.]],

            [[ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             ...,
    ...
             ...,
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.]],

            [[11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             ...,
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.]],

            [[11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             ...,
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.]]]])
    Coordinates:
      * time     (time) datetime64[ns] 2018-01-01 2018-02-01 ... 2018-11-01
      * layer    (layer) int32 1 2 3
      * y        (y) float64 850.0 750.0 650.0 550.0 450.0 350.0 250.0 150.0 50.0
      * x        (x) float64 50.0 150.0 250.0 350.0 450.0 550.0 650.0 750.0 850.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 11</li><li><span class='xr-has-index'>layer</span>: 3</li><li><span class='xr-has-index'>y</span>: 9</li><li><span class='xr-has-index'>x</span>: 9</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-e3ee9597-abd4-417d-b7a8-d795028bdbb9' class='xr-array-in' type='checkbox' checked><label for='section-e3ee9597-abd4-417d-b7a8-d795028bdbb9' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>1.0 nan nan nan nan nan nan nan ... nan nan nan nan nan nan nan 11.0</span></div><div class='xr-array-data'><pre>array([[[[ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             ...,
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.]],

            [[ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             ...,
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.]],

            [[ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             [ 1., nan, nan, ..., nan, nan,  1.],
             ...,
    ...
             ...,
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.]],

            [[11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             ...,
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.]],

            [[11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             ...,
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.],
             [11., nan, nan, ..., nan, nan, 11.]]]])</pre></div></div></li><li class='xr-section-item'><input id='section-0f7453da-b44b-4f74-a776-b0e0fd05804d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-0f7453da-b44b-4f74-a776-b0e0fd05804d' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2018-01-01 ... 2018-11-01</div><input id='attrs-6a3e71b7-4e81-4574-90f4-f9654286c91a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6a3e71b7-4e81-4574-90f4-f9654286c91a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d0836f7b-7210-48ba-81d4-34b6f9f55cef' class='xr-var-data-in' type='checkbox'><label for='data-d0836f7b-7210-48ba-81d4-34b6f9f55cef' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2018-01-01T00:00:00.000000000&#x27;, &#x27;2018-02-01T00:00:00.000000000&#x27;,
           &#x27;2018-03-01T00:00:00.000000000&#x27;, &#x27;2018-04-01T00:00:00.000000000&#x27;,
           &#x27;2018-05-01T00:00:00.000000000&#x27;, &#x27;2018-06-01T00:00:00.000000000&#x27;,
           &#x27;2018-07-01T00:00:00.000000000&#x27;, &#x27;2018-08-01T00:00:00.000000000&#x27;,
           &#x27;2018-09-01T00:00:00.000000000&#x27;, &#x27;2018-10-01T00:00:00.000000000&#x27;,
           &#x27;2018-11-01T00:00:00.000000000&#x27;], dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>layer</span></div><div class='xr-var-dims'>(layer)</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>1 2 3</div><input id='attrs-2bce97ad-8a5f-47bb-bb97-5b7725241b5a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2bce97ad-8a5f-47bb-bb97-5b7725241b5a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-adbf0a0a-67e2-45a6-9184-76d3a17fe29d' class='xr-var-data-in' type='checkbox'><label for='data-adbf0a0a-67e2-45a6-9184-76d3a17fe29d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 2, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>850.0 750.0 650.0 ... 150.0 50.0</div><input id='attrs-e48cbd11-356f-4cbe-830a-390e6fbca3eb' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e48cbd11-356f-4cbe-830a-390e6fbca3eb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6fb48a84-c1ba-4a5e-ae91-3bb69558d2a3' class='xr-var-data-in' type='checkbox'><label for='data-6fb48a84-c1ba-4a5e-ae91-3bb69558d2a3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([850., 750., 650., 550., 450., 350., 250., 150.,  50.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>50.0 150.0 250.0 ... 750.0 850.0</div><input id='attrs-cafca6e4-b421-4410-a146-b25d26b82bcc' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-cafca6e4-b421-4410-a146-b25d26b82bcc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-eae0897d-a9c9-4a45-8d85-d698b88aa34f' class='xr-var-data-in' type='checkbox'><label for='data-eae0897d-a9c9-4a45-8d85-d698b88aa34f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 50., 150., 250., 350., 450., 550., 650., 750., 850.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-dde265dc-3f45-4f1b-8ad9-84f1449dc2a4' class='xr-section-summary-in' type='checkbox'  ><label for='section-dde265dc-3f45-4f1b-8ad9-84f1449dc2a4' class='xr-section-summary' >Indexes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-2f824f00-751a-4c86-aa46-5185df609add' class='xr-index-data-in' type='checkbox'/><label for='index-2f824f00-751a-4c86-aa46-5185df609add' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2018-01-01&#x27;, &#x27;2018-02-01&#x27;, &#x27;2018-03-01&#x27;, &#x27;2018-04-01&#x27;,
                   &#x27;2018-05-01&#x27;, &#x27;2018-06-01&#x27;, &#x27;2018-07-01&#x27;, &#x27;2018-08-01&#x27;,
                   &#x27;2018-09-01&#x27;, &#x27;2018-10-01&#x27;, &#x27;2018-11-01&#x27;],
                  dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;time&#x27;, freq=&#x27;MS&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>layer</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-3a2f25b8-2d1c-4c3f-9383-6c754317e60b' class='xr-index-data-in' type='checkbox'/><label for='index-3a2f25b8-2d1c-4c3f-9383-6c754317e60b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Int64Index([1, 2, 3], dtype=&#x27;int64&#x27;, name=&#x27;layer&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-410182f0-bd7e-4bfc-b9ef-ff0438e63fa8' class='xr-index-data-in' type='checkbox'/><label for='index-410182f0-bd7e-4bfc-b9ef-ff0438e63fa8' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([850.0, 750.0, 650.0, 550.0, 450.0, 350.0, 250.0, 150.0, 50.0], dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-adbc9950-0564-4650-b044-1f6fb4a2132f' class='xr-index-data-in' type='checkbox'/><label for='index-adbc9950-0564-4650-b044-1f6fb4a2132f' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([50.0, 150.0, 250.0, 350.0, 450.0, 550.0, 650.0, 750.0, 850.0], dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-74231ccd-d744-4f80-818c-218e0bca6181' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-74231ccd-d744-4f80-818c-218e0bca6181' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 142-149

Periodic central ditch
~~~~~~~~~~~~~~~~~~~~~~

We'll take only the central column of the grid with
(``where``), the rest will be set to ``np.nan``,
and from this we'll select only the upper layer,
as the ditch will be located only in the upper layer.

.. GENERATED FROM PYTHON SOURCE LINES 149-153

.. code-block:: Python


    is_x_central = starting_head.x == x[4]
    head_central = starting_head.where(is_x_central).sel(layer=1)








.. GENERATED FROM PYTHON SOURCE LINES 154-162

Create period times, we let these times start before
the model starts.
This is necessary because `iMODFLOW` only forward fills periods.
Otherwise, in this case there wouldn't be a
periodic boundary condition until april.

We will do this by selecting the months april and october,
and then subtracting a year

.. GENERATED FROM PYTHON SOURCE LINES 162-164

.. code-block:: Python

    period_times = times[[3, 9]] - np.timedelta64(365, "D")








.. GENERATED FROM PYTHON SOURCE LINES 165-166

We are creating a summer and winter level.

.. GENERATED FROM PYTHON SOURCE LINES 166-171

.. code-block:: Python

    periods_da = xr.DataArray([4, 10], coords={"time": period_times}, dims=["time"])
    head_periodic = periods_da * head_central

    head_periodic






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (time: 2, y: 9, x: 9)&gt;
    array([[[nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan]],

           [[nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan]]])
    Coordinates:
      * time     (time) datetime64[ns] 2017-04-01 2017-10-01
        layer    int32 1
      * y        (y) float64 850.0 750.0 650.0 550.0 450.0 350.0 250.0 150.0 50.0
      * x        (x) float64 50.0 150.0 250.0 350.0 450.0 550.0 650.0 750.0 850.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 2</li><li><span class='xr-has-index'>y</span>: 9</li><li><span class='xr-has-index'>x</span>: 9</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-e3e1d3f6-5134-422b-8f2c-ea0564deeb17' class='xr-array-in' type='checkbox' checked><label for='section-e3e1d3f6-5134-422b-8f2c-ea0564deeb17' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>nan nan nan nan 4.0 nan nan nan ... nan nan nan 10.0 nan nan nan nan</span></div><div class='xr-array-data'><pre>array([[[nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan],
            [nan, nan, nan, nan,  4., nan, nan, nan, nan]],

           [[nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan],
            [nan, nan, nan, nan, 10., nan, nan, nan, nan]]])</pre></div></div></li><li class='xr-section-item'><input id='section-6650bba0-e7fd-43fd-a343-fdb5cb8af61d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-6650bba0-e7fd-43fd-a343-fdb5cb8af61d' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2017-04-01 2017-10-01</div><input id='attrs-eb6cecdd-eb84-41c9-9e43-432823664af0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-eb6cecdd-eb84-41c9-9e43-432823664af0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-06e9a3e8-29bd-4e02-a9a6-8135bcec38d7' class='xr-var-data-in' type='checkbox'><label for='data-06e9a3e8-29bd-4e02-a9a6-8135bcec38d7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2017-04-01T00:00:00.000000000&#x27;, &#x27;2017-10-01T00:00:00.000000000&#x27;],
          dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>layer</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>1</div><input id='attrs-0d6276ab-930a-482c-a39c-7e0b2ea7136c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0d6276ab-930a-482c-a39c-7e0b2ea7136c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-414e6e34-9b75-4322-b9b2-fd5100b216ca' class='xr-var-data-in' type='checkbox'><label for='data-414e6e34-9b75-4322-b9b2-fd5100b216ca' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array(1)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>850.0 750.0 650.0 ... 150.0 50.0</div><input id='attrs-ad6699c9-d532-43fc-aae8-5f2e96e7f9cc' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ad6699c9-d532-43fc-aae8-5f2e96e7f9cc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-86ed5f53-64ce-4803-ab23-4d7d189c05e9' class='xr-var-data-in' type='checkbox'><label for='data-86ed5f53-64ce-4803-ab23-4d7d189c05e9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([850., 750., 650., 550., 450., 350., 250., 150.,  50.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>50.0 150.0 250.0 ... 750.0 850.0</div><input id='attrs-16dd18bc-e4e0-4078-b9b3-89319a030fd4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-16dd18bc-e4e0-4078-b9b3-89319a030fd4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b0d89707-8ad2-4c4a-bb9a-247ad263482f' class='xr-var-data-in' type='checkbox'><label for='data-b0d89707-8ad2-4c4a-bb9a-247ad263482f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 50., 150., 250., 350., 450., 550., 650., 750., 850.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-094f471a-cf37-47af-879c-a3e7dcc1426c' class='xr-section-summary-in' type='checkbox'  ><label for='section-094f471a-cf37-47af-879c-a3e7dcc1426c' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-23c5f8c7-1eeb-453e-ab36-ce596b9a0955' class='xr-index-data-in' type='checkbox'/><label for='index-23c5f8c7-1eeb-453e-ab36-ce596b9a0955' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2017-04-01&#x27;, &#x27;2017-10-01&#x27;], dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;time&#x27;, freq=None))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-e7566f65-eb40-4b57-b571-b60fe9374532' class='xr-index-data-in' type='checkbox'/><label for='index-e7566f65-eb40-4b57-b571-b60fe9374532' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([850.0, 750.0, 650.0, 550.0, 450.0, 350.0, 250.0, 150.0, 50.0], dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-58d092c1-93e7-4604-ba2a-829bf2da7c30' class='xr-index-data-in' type='checkbox'/><label for='index-58d092c1-93e7-4604-ba2a-829bf2da7c30' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([50.0, 150.0, 250.0, 350.0, 450.0, 550.0, 650.0, 750.0, 850.0], dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7fff891b-8699-490e-9deb-dcfb4363e98c' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-7fff891b-8699-490e-9deb-dcfb4363e98c' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 172-174

Create dictionary to tell `iMOD`
which period name corresponds to which date.

.. GENERATED FROM PYTHON SOURCE LINES 174-179

.. code-block:: Python

    timemap = {
        period_times[0]: "summer",
        period_times[1]: "winter",
    }








.. GENERATED FROM PYTHON SOURCE LINES 180-187

Wells
~~~~~

Wells are specified as a pandas dataframe.
We create a diagonal line of wells through the domain.

Because we can.

.. GENERATED FROM PYTHON SOURCE LINES 187-198

.. code-block:: Python


    wel_df = pd.DataFrame()
    wel_df["id_name"] = np.arange(len(x)).astype(str)
    wel_df["x"] = x
    wel_df["y"] = y
    wel_df["rate"] = dx * dy * -1 * 0.5
    wel_df["time"] = np.tile(times[:-1], 2)[: len(x)]
    wel_df["layer"] = 2

    wel_df






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>id_name</th>
          <th>x</th>
          <th>y</th>
          <th>rate</th>
          <th>time</th>
          <th>layer</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>50.0</td>
          <td>850.0</td>
          <td>5000.0</td>
          <td>2018-01-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1</td>
          <td>150.0</td>
          <td>750.0</td>
          <td>5000.0</td>
          <td>2018-02-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2</td>
          <td>250.0</td>
          <td>650.0</td>
          <td>5000.0</td>
          <td>2018-03-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>3</th>
          <td>3</td>
          <td>350.0</td>
          <td>550.0</td>
          <td>5000.0</td>
          <td>2018-04-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>4</th>
          <td>4</td>
          <td>450.0</td>
          <td>450.0</td>
          <td>5000.0</td>
          <td>2018-05-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>5</th>
          <td>5</td>
          <td>550.0</td>
          <td>350.0</td>
          <td>5000.0</td>
          <td>2018-06-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>6</th>
          <td>6</td>
          <td>650.0</td>
          <td>250.0</td>
          <td>5000.0</td>
          <td>2018-07-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>7</th>
          <td>7</td>
          <td>750.0</td>
          <td>150.0</td>
          <td>5000.0</td>
          <td>2018-08-01</td>
          <td>2</td>
        </tr>
        <tr>
          <th>8</th>
          <td>8</td>
          <td>850.0</td>
          <td>50.0</td>
          <td>5000.0</td>
          <td>2018-09-01</td>
          <td>2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 199-203

Horizontal Flow Barrier
-----------------------

Create barriers between ditches in layer 1 and 2 (but not 3).

.. GENERATED FROM PYTHON SOURCE LINES 203-207

.. code-block:: Python


    line1 = LineString([(x[2], ymin), (x[2], ymax)])
    line2 = LineString([(x[7], ymin), (x[7], ymax)])








.. GENERATED FROM PYTHON SOURCE LINES 208-209

We'll have to repeat each line for each layer

.. GENERATED FROM PYTHON SOURCE LINES 209-212

.. code-block:: Python

    lines = np.array([line1, line2, line1, line2], dtype="object")
    hfb_layers = np.array([1, 1, 2, 2])








.. GENERATED FROM PYTHON SOURCE LINES 213-214

We can specify names for our own bookkeeping

.. GENERATED FROM PYTHON SOURCE LINES 214-225

.. code-block:: Python

    id_name = ["left_upper", "right_upper", "left_lower", "right_lower"]

    # The hfb has to specified as a geopandas `GeoDataFrame
    # <https://geopandas.org/en/stable/docs/reference/api/geopandas.GeoDataFrame.html>`_

    hfb_gdf = gpd.GeoDataFrame(
        geometry=lines, data=dict(id_name=id_name, layer=hfb_layers, resistance=100.0)
    )

    hfb_gdf






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>id_name</th>
          <th>layer</th>
          <th>resistance</th>
          <th>geometry</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>left_upper</td>
          <td>1</td>
          <td>100.0</td>
          <td>LINESTRING (250.000 0.000, 250.000 900.000)</td>
        </tr>
        <tr>
          <th>1</th>
          <td>right_upper</td>
          <td>1</td>
          <td>100.0</td>
          <td>LINESTRING (750.000 0.000, 750.000 900.000)</td>
        </tr>
        <tr>
          <th>2</th>
          <td>left_lower</td>
          <td>2</td>
          <td>100.0</td>
          <td>LINESTRING (250.000 0.000, 250.000 900.000)</td>
        </tr>
        <tr>
          <th>3</th>
          <td>right_lower</td>
          <td>2</td>
          <td>100.0</td>
          <td>LINESTRING (750.000 0.000, 750.000 900.000)</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 226-230

Build
-----

Finally, we build the model.

.. GENERATED FROM PYTHON SOURCE LINES 230-246

.. code-block:: Python


    m = flow.ImodflowModel("my_first_imodflow_model")
    m["pcg"] = flow.PreconditionedConjugateGradientSolver()

    m["bnd"] = flow.Boundary(ibound)
    m["top"] = flow.Top(top)
    m["bottom"] = flow.Bottom(bottom)

    m["khv"] = flow.HorizontalHydraulicConductivity(kh)
    m["kva"] = flow.VerticalAnisotropy(kva)
    m["sto"] = flow.StorageCoefficient(sto)

    m["shd"] = flow.StartingHead(starting_head)

    m["chd"] = flow.ConstantHead(head=head_edge_rising)








.. GENERATED FROM PYTHON SOURCE LINES 247-249

Create periodic boundary condition
and specify it as a periodic stress package.

.. GENERATED FROM PYTHON SOURCE LINES 249-252

.. code-block:: Python

    m["ghb"] = flow.GeneralHeadBoundary(head=head_periodic, conductance=10.0)
    m["ghb"].periodic_stress(timemap)








.. GENERATED FROM PYTHON SOURCE LINES 253-254

We can specify a second stress package as follows:

.. GENERATED FROM PYTHON SOURCE LINES 254-262

.. code-block:: Python

    m["ghb2"] = flow.GeneralHeadBoundary(head=head_periodic + 10.0, conductance=1.0)
    # You also need to specify periodic stresses for second system.
    m["ghb2"].periodic_stress(timemap)

    m["wel"] = flow.Well(**wel_df)

    m["hfb"] = flow.HorizontalFlowBarrier(**hfb_gdf)








.. GENERATED FROM PYTHON SOURCE LINES 263-264

Specify output control; -1 specifies to save the output of interest for all layers.

.. GENERATED FROM PYTHON SOURCE LINES 264-267

.. code-block:: Python


    m["oc"] = flow.OutputControl(save_head=-1, save_flux=-1)








.. GENERATED FROM PYTHON SOURCE LINES 268-269

imod-python wants you to provide the model endtime to your time_discretization!

.. GENERATED FROM PYTHON SOURCE LINES 269-271

.. code-block:: Python

    m.create_time_discretization(additional_times=times[-1])








.. GENERATED FROM PYTHON SOURCE LINES 272-275

Now we write the model
Writes both .IDFs as well as projectfile, an inifile,
and a .tim file that contains the time discretization.

.. GENERATED FROM PYTHON SOURCE LINES 275-279

.. code-block:: Python


    modeldir = imod.util.temporary_directory()
    m.write(directory=modeldir)








.. GENERATED FROM PYTHON SOURCE LINES 280-302

Run
---

You can run the model using the comand prompt and the iMOD executables.
This is part of the iMOD v5 release, which can be downloaded here:
https://oss.deltares.nl/web/imod/download-imod5 .
iMOD only works on Windows.

To run your model, open up a command prompt
and run the following commands:

.. code-block:: batch

   cd c:\path\to\modeldir
   c:\path\to\imod\folder\iMOD_v5_3_X64R.EXE config_run.ini
   c:\path\to\imod\folder\iMODFLOW_V5_3_METASWAP_SVN1977_X64R.EXE my_first_imodflow_model.nam

.. note::

   iMODFLOW requires you to change directory into the model directory
   before calling its executable. Otherwise the program will throw an error.



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.545 seconds)


.. _sphx_glr_download_examples_imodflow_ImodflowProjectfile.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ImodflowProjectfile.ipynb <ImodflowProjectfile.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ImodflowProjectfile.py <ImodflowProjectfile.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
